bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  ||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  ||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK  &  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  &  Token.BLOCK;	  return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK;	  return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  result  =  Token.BLOCK  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result  =  Token.BLOCK  |  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  |  Token.BLOCK;	  return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
10	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  +  1;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BLOCK  +  1;	  return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK);  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK);	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  Token.BLOCK:  return  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  return  Token.BLOCK;	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;	  case    Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  1;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  -  1;	  case    Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
19	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;	  case    Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BOOLEAN;	  case    Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  1;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  +  1;	  case    Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  case  Token.BLOCK:  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  case  Token.BLOCK:  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token  ==  Token.BLOCK)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
24	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.BLOCK))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
25	[BUG]  [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.BLOCK)  {  return  Token.BLOCK;  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
26	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token  ==  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
27	[BUG]  [BUGGY]  if(token  ==  Token.FUNCTION)  {  return  Token.FUNCTION;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token  ==  Token.FUNCTION)  {  return  Token.FUNCTION;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.FUNCTION)  {  return  Token.FUNCTION;  }	  if(token    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
28	[BUG]  [BUGGY]  result  =  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result  =  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK;	  if(token    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
29	[BUG]  [BUGGY]  result  =  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result  =  Token.BLOCK  +  1;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  +  1;	  return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
30	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }	  return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
31	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  Token.BLOCK:  return  Token.BLOCK  +  1;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  return  Token.BLOCK  +  1;	  return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  +  1;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  +  1;	  return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
33	[BUG]  [BUGGY]  if(Token.BLOCK!=  null)  {  return  Token.BLOCK  +  1;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  null)  {  return  Token.BLOCK  +  1;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  null)  {  return  Token.BLOCK  +  1;  }	  return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
34	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK  &  Token.CATCH;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  &  Token.CATCH;	  return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
35	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;	  return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
36	[BUG]  [BUGGY]  result  =  Token.BLOCK  |  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result  =  Token.BLOCK  |  Token.CATCH;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  |  Token.CATCH;	  return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
37	[BUG]  [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
38	[BUG]  [BUGGY]  result.equals(Token.BLOCK))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result.equals(Token.BLOCK))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  if(token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  if(token.equals(Token.NAME))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.NAME))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.NAME))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
42	[BUG]  [BUGGY]  result.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
43	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK.equals(token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
44	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  Token.BLOCK:  token.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK.equals(token)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token)||  token.equals( " "))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK.equals(token)||  token.equals( " "))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token)||  token.equals( " "))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
47	[BUG]  [BUGGY]  ||  token.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  ||  token.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
48	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.NAME;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK  &  Token.NAME;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  &  Token.NAME;	  return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
49	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.NAME  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK?  Token.NAME  :  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.NAME  :  Token.BLOCK;	  return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.NAME;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.NAME;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.NAME;	  return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
51	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.NAME;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.NAME;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  Token.NAME;	  return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
52	[BUG]  [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
53	[BUG]  [BUGGY]  if(token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
54	[BUG]  [BUGGY]  result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
55	[BUG]  [BUGGY]  result.equals(Token.BLOCK))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result.equals(Token.BLOCK))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK))  {  return  result;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
56	[BUG]  [BUGGY]  if(token.equals(Token.SET))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.SET))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.SET))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
57	[BUG]  [BUGGY]  if(token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
58	[BUG]  [BUGGY]  if(Token.NAME!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.NAME!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NAME!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
59	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  ||  Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
60	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK  ==  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.NAME)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
61	[BUG]  [BUGGY]  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
62	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
63	[BUG]  [BUGGY]  result  =  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result  =  Token.BLOCK  -  1;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  -  1;	  return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
64	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }	  return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
65	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }	  return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
66	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  -  1;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  -  1;	  return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
67	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  ||  Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
68	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
69	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EMPTY)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.EMPTY)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.EMPTY)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
70	[BUG]  [BUGGY]  if(token!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
71	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
72	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
73	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
74	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.NUMBER)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
75	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
76	[BUG]  [BUGGY]  if(Token.NUMBER!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.NUMBER!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NUMBER!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
77	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.FUNCTION)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
78	[BUG]  [BUGGY]  result:  return  Token.BLOCK  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result:  return  Token.BLOCK  |  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  |  Token.BLOCK;	  result:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
79	[BUG]  [BUGGY]  result:  return  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result:  return  Token.EXPR_RESULT;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.EXPR_RESULT;	  result:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
80	[BUG]  [BUGGY]  result:  return  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result:  return  Token.BLOCK  -  1;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  -  1;	  result:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
81	[BUG]  [BUGGY]  result:  return  Token.BLOCK  +  token;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result:  return  Token.BLOCK  +  token;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  +  token;	  result:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
82	[BUG]  [BUGGY]  result:  return  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result:  return  Token.BLOCK  +  1;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  +  1;	  result:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
83	[BUG]  [BUGGY]  result:  return  Token.BLOCK  |  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result:  return  Token.BLOCK  |  Token.CATCH;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  |  Token.CATCH;	  result:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
84	[BUG]  [BUGGY]  ||(token  ==  Token.BLOCK  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  ||(token  ==  Token.BLOCK  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||(token  ==  Token.BLOCK  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
85	[BUG]  [BUGGY]  case  javascript.rhino.head.Token.BLOCK:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  case  javascript.rhino.head.Token.BLOCK:  return  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  javascript.rhino.head.Token.BLOCK:  return  Token.BLOCK;	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
86	[BUG]  [BUGGY]  case  java.rhino.head.Token.BLOCK:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  case  java.rhino.head.Token.BLOCK:  return  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  java.rhino.head.Token.BLOCK:  return  Token.BLOCK;	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
87	[BUG]  [BUGGY]  case  javascript.rhino.head.Token.BLOCK:  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  case  javascript.rhino.head.Token.BLOCK:  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  javascript.rhino.head.Token.BLOCK:	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
88	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.NAME  |  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK  |  Token.NAME  |  1;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.NAME  |  1;	  return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
89	[BUG]  [BUGGY]  return  Token.BLOCK  -  Token.NAME;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK  -  Token.NAME;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  -  Token.NAME;	  return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
90	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
91	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
92	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
93	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
94	[BUG]  [BUGGY]  if(token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
95	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
96	[BUG]  [BUGGY]  return  Token.BLOCK  -  2;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK  -  2;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  -  2;	  return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
97	[BUG]  [BUGGY]  return  Token.BLOCK  /  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK  /  1;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  /  1;	  return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
98	[BUG]  [BUGGY]  result:  return  Token.BLOCK  |  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result:  return  Token.BLOCK  |  Token.EXPR_RESULT;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  |  Token.EXPR_RESULT;	  result:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
99	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_TYPE)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.EXPR_TYPE)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.EXPR_TYPE)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
100	[BUG]  [BUGGY]  return  Token.BLOCK  -  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK  -  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  -  Token.BLOCK;	  return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
101	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  -  1;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BLOCK  -  1;	  return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
102	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.BLOCK;	  return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
103	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
104	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
105	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  ||  Token.BLOCK!=  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.BLOCK;	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
106	[BUG]  [BUGGY]  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
107	[BUG]  [BUGGY]  ||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  ||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
108	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token)||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK.equals(token)||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token)||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
109	[BUG]  [BUGGY]  return  Token.BLOCK  -  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK  -  Token.CATCH;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  -  Token.CATCH;	  return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
110	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BOOLEAN;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  return  Token.BLOCK  |  Token.BOOLEAN;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BOOLEAN;	  return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
111	[BUG]  [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
112	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
113	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
114	[BUG]  [BUGGY]  if(token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
115	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_DEF;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_DEF;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK_DEF;	  case    Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
116	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
117	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
118	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.EXPR_RESULT;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  &&  Token.EXPR_RESULT;	  case    Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
119	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.CATCH;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.CATCH;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  &&  Token.CATCH;	  case    Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
120	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.CATCH;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.CATCH;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  Token.CATCH;	  case    Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
121	[BUG]  [BUGGY]  result:  return  Token.BLOCK  &&  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result:  return  Token.BLOCK  &&  Token.EXPR_RESULT;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  &&  Token.EXPR_RESULT;	  result:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
122	[BUG]  [BUGGY]  if(Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
123	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
124	[BUG]  [BUGGY]  result:  return  Token.BLOCK  |  Token.NAME;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result:  return  Token.BLOCK  |  Token.NAME;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  |  Token.NAME;	  return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
125	[BUG]  [BUGGY]  result  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  result  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
126	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
127	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
128	[BUG]  [BUGGY]  if(token.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
129	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK;	  return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
130	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
131	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
132	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK  |  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK  |  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK  |  Token.BLOCK;  }	  return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
133	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.EXPR_RESULT  ==  Token.BLOCK;	  if(Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
134	[BUG]  [BUGGY]  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK;	  if(Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
135	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token  ==  Token.BLOCK  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
136	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK);  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK);	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
137	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
138	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }	  return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
139	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK  +  1;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK  +  1;	  return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
140	[BUG]  [BUGGY]  if(Token.BLOCK!=  BLOCK)  {  return  Token.BLOCK  +  1;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(Token.BLOCK!=  BLOCK)  {  return  Token.BLOCK  +  1;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  BLOCK)  {  return  Token.BLOCK  +  1;  }	  return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
141	[BUG]  [BUGGY]  if(token.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
142	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
143	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
144	[BUG]  [BUGGY]  case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.BLOCK;  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.BLOCK;	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
145	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  ||  Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
146	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:    [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [BUGGY]    case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
