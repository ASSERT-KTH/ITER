bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK;  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK;	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
2	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  if(token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
3	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
4	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  if(token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
5	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  if(Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
6	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  if(token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]    [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	  	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
8	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK;  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BLOCK;	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
9	[BUG]  [BUGGY]  return  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  return  Token.BLOCK  -  1;  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  -  1;	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
10	[BUG]  [BUGGY]  return  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  return  Token.BLOCK  +  1;  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  +  1;	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
11	[BUG]  [BUGGY]  result:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  result:  return  Token.BLOCK;  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK;	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
12	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.CATCH;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  return  Token.BLOCK  |  Token.CATCH;  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.CATCH;	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
13	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.NAME;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  return  Token.BLOCK  |  Token.NAME;  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.NAME;	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
14	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  if(token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
15	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
16	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
17	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
18	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
