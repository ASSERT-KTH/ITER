bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child3);  [CE]  ')'  expected  [FE]    AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child3);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child3);	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(templateNode);  	non-compiled	[CE]  ')'  expected	5	None	replace
2	[BUG]  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child);  [CE]  ')'  expected  [FE]      AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child);	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(templateNode);  	non-compiled	[CE]  ')'  expected	5	None	replace
3	[BUG]  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child1);  [CE]  ')'  expected  [FE]        AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child1);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child1);	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(templateNode);  	non-compiled	[CE]  ')'  expected	5	None	replace
4	[BUG]  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child2);  [CE]  ')'  expected  [FE]          AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child2);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child2);	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(templateNode);  	non-compiled	[CE]  ')'  expected	5	None	replace
5	[BUG]  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(parent);  [CE]  ')'  expected  [FE]            AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(parent);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(parent);	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(templateNode);  	non-compiled	[CE]  ')'  expected	5	None	replace
6	[BUG]  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(newNode);  [CE]  ')'  expected  [FE]              AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(newNode);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(newNode);	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(templateNode);  	non-compiled	[CE]  ')'  expected	5	None	replace
7	[BUG]  [BUGGY]    [CE]  ')'  expected  [FE]                AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {  [BUGGY]    [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	  	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(templateNode);  	non-compiled	[CE]  ')'  expected	5	None	replace
8	[BUG]  [BUGGY]  return  new  Node(child1,  child2,  child3).clonePropsFrom(type);  [CE]  ')'  expected  [FE]    AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {  [BUGGY]  return  new  Node(child1,  child2,  child3).clonePropsFrom(type);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(child1,  child2,  child3).clonePropsFrom(type);	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(templateNode);  	non-compiled	[CE]  ')'  expected	5	None	replace
