bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePathFrom(child);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePathFrom(child);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child1,  child2,  child3).clonePathFrom(child);	  return    new    Node(type,    child1,    child2,    child3).clonePropsFrom(child);    	non-compiled	[CE]  ')'  expected	2	None	replace
2	[BUG]  [BUGGY]  return  new  Node(child1,  child2,  child3).clonePropsFrom(type,  child3);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(child1,  child2,  child3).clonePropsFrom(type,  child3);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(child1,  child2,  child3).clonePropsFrom(type,  child3);	  return    new    Node(child1,    child2,    child3).clonePropsFrom(type);    	non-compiled	[CE]  ')'  expected	8	None	replace
3	[BUG]  [BUGGY]  return  new  Node(child1,  child2,  child3).clonePropsFrom(type,  type);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(child1,  child2,  child3).clonePropsFrom(type,  type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(child1,  child2,  child3).clonePropsFrom(type,  type);	  return    new    Node(child1,    child2,    child3).clonePropsFrom(type);    	non-compiled	[CE]  ')'  expected	8	None	replace
4	[BUG]  [BUGGY]  return  new  Node(child1,  child2,  child3).clonePropsFrom(type,  child1);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(child1,  child2,  child3).clonePropsFrom(type,  child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(child1,  child2,  child3).clonePropsFrom(type,  child1);	  return    new    Node(child1,    child2,    child3).clonePropsFrom(type);    	non-compiled	[CE]  ')'  expected	8	None	replace
5	[BUG]  [BUGGY]  return  new  Node(child1,  child2,  child3).clonePropsFrom(type,  parent);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(child1,  child2,  child3).clonePropsFrom(type,  parent);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(child1,  child2,  child3).clonePropsFrom(type,  parent);	  return    new    Node(child1,    child2,    child3).clonePropsFrom(type);    	non-compiled	[CE]  ')'  expected	8	None	replace
6	[BUG]  [BUGGY]  return  new  Node(child3,  child1,  child2,  child3).clonePropsFrom(type);  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(child3,  child1,  child2,  child3).clonePropsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(child3,  child1,  child2,  child3).clonePropsFrom(type);	  return    new    Node(child1,    child2,    child3).clonePropsFrom(type);    	non-compiled	[CE]  ')'  expected	8	None	replace
7	[BUG]  [BUGGY]  return  newNode(type,  child1,  child2,  child3);  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  newNode(type,  child1,  child2,  child3);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  newNode(type,  child1,  child2,  child3);	      	non-compiled	[CE]  ')'  expected	7	None	replace
8	[BUG]  [BUGGY]  newNode(type,  child1,  child2,  child3);  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  newNode(type,  child1,  child2,  child3);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	newNode(type,  child1,  child2,  child3);	      	non-compiled	[CE]  ')'  expected	7	None	replace
9	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(type,  child1,  child2,  child3));  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(type,  child1,  child2,  child3));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	NodeTraversal.traverse(compiler,  new  TransformDispatcher(type,  child1,  child2,  child3));	      	non-compiled	[CE]  ')'  expected	7	None	replace
10	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  child1,  child2,  child3));  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  child1,  child2,  child3));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	NodeTraversal.traverse(compiler,  newNode(type,  child1,  child2,  child3));	      	non-compiled	[CE]  ')'  expected	7	None	replace
11	[BUG]  [BUGGY]  return  NodeUtil.newNode(type,  child1,  child2,  child3);  [CE]  ')'  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  NodeUtil.newNode(type,  child1,  child2,  child3);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  NodeUtil.newNode(type,  child1,  child2,  child3);	      	non-compiled	[CE]  ')'  expected	7	None	replace
12	[BUG]  [BUGGY]  return  Node.newString(type,  child1,  child2,  child3);  [CE]  ')'  expected  [FE]                              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  Node.newString(type,  child1,  child2,  child3);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  Node.newString(type,  child1,  child2,  child3);	      	non-compiled	[CE]  ')'  expected	7	None	replace
13	[BUG]  [BUGGY]  return  newNode(type,  child1,  child2,  child3,  null);  [CE]  ')'  expected  [FE]                                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  newNode(type,  child1,  child2,  child3,  null);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  newNode(type,  child1,  child2,  child3,  null);	      	non-compiled	[CE]  ')'  expected	7	None	replace
14	[BUG]  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child3,  newNode);  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child3,  newNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child3,  newNode);	  return    new    Node(type,    child1,    child2,    child3).clonePropsFrom(newNode);    	non-compiled	[CE]  ')'  expected	6	None	replace
15	[BUG]  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(parent,  child3);  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(parent,  child3);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(parent,  child3);	  return    new    Node(type,    child1,    child2,    child3).clonePropsFrom(parent);    	non-compiled	[CE]  ')'  expected	5	None	replace
16	[BUG]  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child3,  parent);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child3,  parent);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child3,  parent);	  return    new    Node(type,    child1,    child2,    child3).clonePropsFrom(child2);    	non-compiled	[CE]  ')'  expected	4	None	replace
17	[BUG]  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePathFrom(child3);  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePathFrom(child3);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child1,  child2,  child3).clonePathFrom(child3);	  return    new    Node(type,    child1,    child2,    child3).clonePropsFrom(child2);    	non-compiled	[CE]  ')'  expected	4	None	replace
18	[BUG]  [BUGGY]  return  new  Node(type,  child2,  child3).clonePropsFrom(child1);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(type,  child2,  child3).clonePropsFrom(child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child2,  child3).clonePropsFrom(child1);	  return    new    Node(type,    child1,    child2,    child3).clonePropsFrom(child1);    	non-compiled	[CE]  ')'  expected	3	None	replace
19	[BUG]  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child3,  child1);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child3,  child1);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child3,  child1);	  return    new    Node(type,    child1,    child2,    child3).clonePropsFrom(child3);    	non-compiled	[CE]  ')'  expected	1	None	replace
20	[BUG]  [BUGGY]  return  new  Node(newNode,  child1,  child2,  child3).clonePropsFrom(type);  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(newNode,  child1,  child2,  child3).clonePropsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(newNode,  child1,  child2,  child3).clonePropsFrom(type);	  return    new    Node(type,    child1,    child2,    child3).clonePropsFrom(newNode);    	non-compiled	[CE]  ')'  expected	6	None	replace
21	[BUG]  [BUGGY]  return  new  Node(child2,  child3).clonePropsFrom(type);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(child2,  child3).clonePropsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(child2,  child3).clonePropsFrom(type);	  return    new    Node(child1,    child2,    child3).clonePropsFrom(type);    	non-compiled	[CE]  ')'  expected	8	None	replace
22	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  child1,  child2),  newNode);  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  child1,  child2),  newNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	NodeTraversal.traverse(compiler,  newNode(type,  child1,  child2),  newNode);	      	non-compiled	[CE]  ')'  expected	7	None	replace
23	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  child1),  child2,  child3);  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  child1),  child2,  child3);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	NodeTraversal.traverse(compiler,  newNode(type,  child1),  child2,  child3);	      	non-compiled	[CE]  ')'  expected	7	None	replace
24	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  child1,  child2,  child3);  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  child1,  child2,  child3);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	NodeTraversal.traverse(compiler,  newNode(type),  child1,  child2,  child3);	      	non-compiled	[CE]  ')'  expected	7	None	replace
25	[BUG]  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child4);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child4);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(child4);	  return    new    Node(type,    child1,    child2,    child3).clonePropsFrom(child3);    	non-compiled	[CE]  ')'  expected	1	None	replace
26	[BUG]  [BUGGY]  return  new  Node(type,  child2,  child3).clonePropsFrom(newNode);  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(type,  child2,  child3).clonePropsFrom(newNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child2,  child3).clonePropsFrom(newNode);	  return    new    Node(type,    child1,    child2,    child3).clonePropsFrom(newNode);    	non-compiled	[CE]  ')'  expected	6	None	replace
27	[BUG]  [BUGGY]  return  new  Node(child1,  child2,  child3).clonePropsFrom(newNode);  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(child1,  child2,  child3).clonePropsFrom(newNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(child1,  child2,  child3).clonePropsFrom(newNode);	  return    new    Node(type,    child1,    child2,    child3).clonePropsFrom(newNode);    	non-compiled	[CE]  ')'  expected	6	None	replace
28	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  child1),  newNode);  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  child1),  newNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	NodeTraversal.traverse(compiler,  newNode(type,  child1),  newNode);	      	non-compiled	[CE]  ')'  expected	7	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkState(child1.getType()  ==  Token.NAME);  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  Preconditions.checkState(child1.getType()  ==  Token.NAME);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	Preconditions.checkState(child1.getType()  ==  Token.NAME);	      	non-compiled	[CE]  ')'  expected	7	None	replace
30	[BUG]  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(type);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child1,  child2,  child3).clonePropsFrom(type);	  return    new    Node(child1,    child2,    child3).clonePropsFrom(type);    	non-compiled	[CE]  ')'  expected	8	None	replace
31	[BUG]  [BUGGY]  return  new  Node(child3,  child1).clonePropsFrom(type);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(child3,  child1).clonePropsFrom(type);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(child3,  child1).clonePropsFrom(type);	  return    new    Node(child1,    child2,    child3).clonePropsFrom(type);    	non-compiled	[CE]  ')'  expected	8	None	replace
32	[BUG]  [BUGGY]  return  new  Node(type,  child1,  child2,  child3).removePropsFrom(child3);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(type,  child1,  child2,  child3).removePropsFrom(child3);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child1,  child2,  child3).removePropsFrom(child3);	  return    new    Node(type,    child1,    child2,    child3).clonePropsFrom(child3);    	non-compiled	[CE]  ')'  expected	1	None	replace
33	[BUG]  [BUGGY]  return  new  Node(type,  child2,  child3).clonePropsFrom(child3);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  newNode(int  type,  Node  child1,  Node  child2,  Node  child3)  {    [BUGGY]  return  new  Node(type,  child2,  child3).clonePropsFrom(child3);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  Node  child1  Node  child2  Node  child3  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  child1  child2  child3  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	return  new  Node(type,  child2,  child3).clonePropsFrom(child3);	  return    new    Node(type,    child1,    child2,    child3).clonePropsFrom(child3);    	non-compiled	[CE]  ')'  expected	1	None	replace
