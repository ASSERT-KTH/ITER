bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.clone();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  null  :  irNode.clone();	  return    irNode.clone();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
2	[BUG]  [BUGGY]  return  irNode.processNameAsString(transformDispatcher,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(transformDispatcher,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(transformDispatcher,  null);	  return    transformDispatcher.processNameAsString(irNode,    null);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
3	[BUG]  [BUGGY]  return  transformerDispatcher.processNameAsString(irNode,  jsDocInfo);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformerDispatcher.processNameAsString(irNode,  jsDocInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformerDispatcher.processNameAsString(irNode,  jsDocInfo);	  return    transformDispatcher.processNameAsString(irNode,    null);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
4	[BUG]  [BUGGY]  return  irNode.processNameAsString(node,  null);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(node,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(node,  null);	  return    transformDispatcher.processNameAsString(irNode,    null);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
5	[BUG]  [BUGGY]  return  irNode.processNameAsString(transformDispatcher,  node);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(transformDispatcher,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(transformDispatcher,  node);	  return    transformDispatcher.processNameAsString(irNode,    node);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
6	[BUG]  [BUGGY]  return  node.processNameAsString(irNode,  transformDispatcher);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  node.processNameAsString(irNode,  transformDispatcher);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  node.processNameAsString(irNode,  transformDispatcher);	  return    transformDispatcher.processNameAsString(irNode,    node);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
7	[BUG]  [BUGGY]  return  irNode.processNameAsString(node);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(node);	  return    transformDispatcher.processNameAsString(irNode,    node);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
8	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  node,  jsDocInfo);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  node,  jsDocInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(irNode,  node,  jsDocInfo);	  return    transformDispatcher.processNameAsString(irNode,    node);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
9	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(node,  irNode);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformDispatcher.processNameAsString(node,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(node,  irNode);	  return    transformDispatcher.processNameAsString(irNode,    node);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
10	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.toString()  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.toString()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.toString()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.toString()    :    null;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
11	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  node;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  node;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  node;	  return    irNode.getType()    ==    Token.NAME?    irNode.toString()    :    null;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
12	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  ||  irNode.toString().equals( "name ")?  irNode.toString()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  ||  irNode.toString().equals( "name ")?  irNode.toString()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME  ||  irNode.toString().equals( "name ")?  irNode.toString()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.toString()    :    null;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
13	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.toString()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.toString()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.toString()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.toString()    :    null;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
14	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  ||  irNode.toString().equals( "name "):  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  ||  irNode.toString().equals( "name "):  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME  ||  irNode.toString().equals( "name "):  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.toString()    :    null;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
15	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.BLOCK;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.BLOCK;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.BLOCK;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.BLOCK;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
16	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getLastChild().getType()  ==  Token.BLOCK;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getLastChild().getType()  ==  Token.BLOCK;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getLastChild().getType()  ==  Token.BLOCK;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.BLOCK;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
17	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.BLOCK;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.BLOCK;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.BLOCK;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.BLOCK;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
18	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()!=  Token.BLOCK;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()!=  Token.BLOCK;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()!=  Token.BLOCK;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.BLOCK;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
19	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild().getType()  ==  Token.BLOCK;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild().getType()  ==  Token.BLOCK;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild().getType()  ==  Token.BLOCK;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.BLOCK;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
20	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()!=  Token.BLOCK;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()!=  Token.BLOCK;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()!=  Token.BLOCK;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.BLOCK;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
21	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()  ==  Token.EXPR_RESULT;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()  ==  Token.EXPR_RESULT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
22	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getType()  ==  Token.EXPR_RESULT;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  &&  irNode.getType()  ==  Token.EXPR_RESULT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
23	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.EXPR_RESULT;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.EXPR_RESULT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.EXPR_RESULT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
24	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()!=  Token.EXPR_RESULT;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()!=  Token.EXPR_RESULT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()!=  Token.EXPR_RESULT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
25	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getType()  ==  Token.EXPR_RESULT;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getType()  ==  Token.EXPR_RESULT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
26	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  Token.EXPR_RESULT;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  Token.EXPR_RESULT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  Token.EXPR_RESULT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
27	[BUG]  [BUGGY]  return  irNode.processNameAsString(jsDocInfo);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(jsDocInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(jsDocInfo);	  return    transformDispatcher.processNameAsString(irNode,    jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
28	[BUG]  [BUGGY]  return  irNode.processNameAsString(jsDocInfo,  transformDispatcher);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(jsDocInfo,  transformDispatcher);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(jsDocInfo,  transformDispatcher);	  return    transformDispatcher.processNameAsString(irNode,    jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
29	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  jsDocInfo,  false);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  jsDocInfo,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(irNode,  jsDocInfo,  false);	  return    transformDispatcher.processNameAsString(irNode,    jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
30	[BUG]  [BUGGY]  return  jsDocInfo.processNameAsString(irNode,  transformDispatcher);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  jsDocInfo.processNameAsString(irNode,  transformDispatcher);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  jsDocInfo.processNameAsString(irNode,  transformDispatcher);	  return    transformDispatcher.processNameAsString(irNode,    jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
31	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  jsDocInfo,  true);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  jsDocInfo,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(irNode,  jsDocInfo,  true);	  return    transformDispatcher.processNameAsString(irNode,    jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
32	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  jsDocInfo,  node);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  jsDocInfo,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(irNode,  jsDocInfo,  node);	  return    transformDispatcher.processNameAsString(irNode,    jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
33	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.FUNCTION?  irNode.getJSDocInfo()  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.FUNCTION?  irNode.getJSDocInfo()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.FUNCTION?  irNode.getJSDocInfo()  :  null;	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getJSDocInfo()    :    null;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
34	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getJSDocInfo()  :  node;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getJSDocInfo()  :  node;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getJSDocInfo()  :  node;	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getJSDocInfo()    :    null;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
35	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.toString()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.toString()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.toString()  :  null;	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getJSDocInfo()    :    null;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
36	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION  ||  irNode.getJSDocInfo().getJSDocInfo().getJSDocInfo().getJSDocInfo().get  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION  ||  irNode.getJSDocInfo().getJSDocInfo().getJSDocInfo().getJSDocInfo().get  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.FUNCTION  ||  irNode.getJSDocInfo().getJSDocInfo().getJSDocInfo().getJSDocInfo().get	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getJSDocInfo()    :    null;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
37	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getJSDocInfo()  :  Node.newString(Token.NAME);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getJSDocInfo()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getJSDocInfo()  :  Node.newString(Token.NAME);	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getJSDocInfo()    :    null;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
38	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  Node.newString( "name "));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  Node.newString( "name "));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  Node.newString( "name "));	  return    irNode.getType()    ==    Token.NAME?    irNode.getType()    :    Node.newString(   "name   "));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
39	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getType()  :  Node.newString( "name "));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getType()  :  Node.newString( "name "));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getType()  :  Node.newString( "name "));	  return    irNode.getType()    ==    Token.NAME?    irNode.getType()    :    Node.newString(   "name   "));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
40	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getType()  :  Node.newString( "nameAsString "));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getType()  :  Node.newString( "nameAsString "));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getType()  :  Node.newString( "nameAsString "));	  return    irNode.getType()    ==    Token.NAME?    irNode.getType()    :    Node.newString(   "name   "));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
41	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getType()  :  Node.newString( "sourceName "));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getType()  :  Node.newString( "sourceName "));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getType()  :  Node.newString( "sourceName "));	  return    irNode.getType()    ==    Token.NAME?    irNode.getType()    :    Node.newString(   "name   "));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
42	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getType()  :  Node.newString( "Name "));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getType()  :  Node.newString( "Name "));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getType()  :  Node.newString( "Name "));	  return    irNode.getType()    ==    Token.NAME?    irNode.getType()    :    Node.newString(   "name   "));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
43	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild()!=  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild()!=    null;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
44	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getLastChild()!=  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getLastChild()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getLastChild()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild()!=    null;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
45	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getFirstChild()!=  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getFirstChild()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  &&  irNode.getFirstChild()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild()!=    null;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
46	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild()!=    null;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
47	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getNext()!=  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getNext()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getNext()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild()!=    null;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
48	[BUG]  [BUGGY]  return  irNode.processNameAsString(node,  true);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(node,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(node,  true);	  return    transformDispatcher.processNameAsString(node,    true);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
49	[BUG]  [BUGGY]  return  transformerDispatcher.processNameAsString(node,  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformerDispatcher.processNameAsString(node,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformerDispatcher.processNameAsString(node,  false);	  return    transformDispatcher.processNameAsString(node,    true);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
50	[BUG]  [BUGGY]  return  jsDocInfo.processNameAsString(node,  true);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  jsDocInfo.processNameAsString(node,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  jsDocInfo.processNameAsString(node,  true);	  return    transformDispatcher.processNameAsString(node,    true);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
51	[BUG]  [BUGGY]  return  transformerDispatcher.processNameAsString(irNode,  true);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformerDispatcher.processNameAsString(irNode,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformerDispatcher.processNameAsString(irNode,  true);	  return    transformDispatcher.processNameAsString(node,    true);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
52	[BUG]  [BUGGY]  return  irNode.toString()  + ",_ "  +  irNode.toString();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.toString()  + ",_ "  +  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.toString()  + ",_ "  +  irNode.toString();	  return    irNode.toString()    +   "_   "    +    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
53	[BUG]  [BUGGY]  return  irNode.toString()  + "._ "  +  irNode.toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.toString()  + "._ "  +  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.toString()  + "._ "  +  irNode.toString();	  return    irNode.toString()    +   "_   "    +    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
54	[BUG]  [BUGGY]  return  irNode.toString()  + "_ ",  irNode.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.toString()  + "_ ",  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.toString()  + "_ ",  irNode.toString();	  return    irNode.toString()    +   "_   "    +    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
55	[BUG]  [BUGGY]  return  irNode.toString()  + "_ "  +  jsDocInfo.toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.toString()  + "_ "  +  jsDocInfo.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.toString()  + "_ "  +  jsDocInfo.toString();	  return    irNode.toString()    +   "_   "    +    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
56	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()  ==  Token.NAME;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()  ==  Token.NAME;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()  ==  Token.NAME;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.NAME;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
57	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getType()  ==  Token.NAME;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getType()  ==  Token.NAME;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  &&  irNode.getType()  ==  Token.NAME;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.NAME;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
58	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.NAME;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.NAME;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.NAME;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.NAME;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
59	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()!=  Token.NAME;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()!=  Token.NAME;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()!=  Token.NAME;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.NAME;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
60	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getType()  ==  Token.NAME;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getType()  ==  Token.NAME;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getType()  ==  Token.NAME;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.NAME;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
61	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  Token.NAME;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  Token.NAME;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  Token.NAME;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.NAME;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
62	[BUG]  [BUGGY]  return  irNode.getLineno()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getLineno()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getLineno()  +  1;	  return    irNode.getLineno();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
63	[BUG]  [BUGGY]  return  irNode.getLineno()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getLineno()  -  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getLineno()  -  1;	  return    irNode.getLineno();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
64	[BUG]  [BUGGY]  return  irNode.getCharno();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getCharno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getCharno();	  return    irNode.getLineno();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
65	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  &&  irNode.getJSDocInfo();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  &&  irNode.getJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.SCRIPT  &&  irNode.getJSDocInfo();	  return    irNode.getType()    ==    Token.SCRIPT    ||    irNode.getJSDocInfo();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
66	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.SCRIPT  ||  irNode.getJSDocInfo();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.SCRIPT  ||  irNode.getJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.SCRIPT  ||  irNode.getJSDocInfo();	  return    irNode.getType()    ==    Token.SCRIPT    ||    irNode.getJSDocInfo();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
67	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocInfo();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocInfo();	  return    irNode.getType()    ==    Token.SCRIPT    ||    irNode.getJSDocInfo();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
68	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.setJSDocInfo(jsDocInfo);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.setJSDocInfo(jsDocInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.setJSDocInfo(jsDocInfo);	  return    irNode.getType()    ==    Token.SCRIPT    ||    irNode.getJSDocInfo();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
69	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.SCRIPT  &&  irNode.getJSDocInfo();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.SCRIPT  &&  irNode.getJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.SCRIPT  &&  irNode.getJSDocInfo();	  return    irNode.getType()    ==    Token.SCRIPT    ||    irNode.getJSDocInfo();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
70	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.getSimpleName();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.getSimpleName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.getSimpleName();	  return    irNode.getType()    ==    Token.SCRIPT    ||    irNode.getJSDocInfo();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
71	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
72	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLastChild()  :  irNode.getFirstChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLastChild()  :  irNode.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getLastChild()  :  irNode.getFirstChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
73	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
74	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
75	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
76	[BUG]  [BUGGY]  return  irNode.processNameAsString(node,  false);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(node,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(node,  false);	  return    transformDispatcher.processNameAsString(node,    false);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
77	[BUG]  [BUGGY]  return  transformerDispatcher.processNameAsString(node,  true);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformerDispatcher.processNameAsString(node,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformerDispatcher.processNameAsString(node,  true);	  return    transformDispatcher.processNameAsString(node,    false);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
78	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(node,  false,  irNode);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformDispatcher.processNameAsString(node,  false,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(node,  false,  irNode);	  return    transformDispatcher.processNameAsString(node,    false);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
79	[BUG]  [BUGGY]  return  transformerDispatcher.processNameAsString(irNode,  false);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformerDispatcher.processNameAsString(irNode,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformerDispatcher.processNameAsString(irNode,  false);	  return    transformDispatcher.processNameAsString(node,    false);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
80	[BUG]  [BUGGY]  return  jsDocInfo.processNameAsString(node,  false);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  jsDocInfo.processNameAsString(node,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  jsDocInfo.processNameAsString(node,  false);	  return    transformDispatcher.processNameAsString(node,    false);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
81	[BUG]  [BUGGY]  return  irNode.getNamespaceURI();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getNamespaceURI();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getNamespaceURI();	  return    irNode.getLocalName();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
82	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.getString()  :  NodeUtil.EMPTY;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.getString()  :  NodeUtil.EMPTY;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING?  irNode.getString()  :  NodeUtil.EMPTY;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    NodeUtil.EMPTY;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
83	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getString()  :  NodeUtil.EMPTY;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getString()  :  NodeUtil.EMPTY;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getString()  :  NodeUtil.EMPTY;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    NodeUtil.EMPTY;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
84	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLineno()  :  NodeUtil.EMPTY;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLineno()  :  NodeUtil.EMPTY;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getLineno()  :  NodeUtil.EMPTY;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    NodeUtil.EMPTY;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
85	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLocalName()  :  NodeUtil.EMPTY;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLocalName()  :  NodeUtil.EMPTY;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getLocalName()  :  NodeUtil.EMPTY;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    NodeUtil.EMPTY;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
86	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  NodeUtil.EMPTY;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  NodeUtil.EMPTY;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  NodeUtil.EMPTY;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    NodeUtil.EMPTY;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
87	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.getJSDocInfo()  :  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.getJSDocInfo()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING?  irNode.getJSDocInfo()  :  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.getJSDocInfo()    :    null;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
88	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getJSDocInfo()  :  node;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getJSDocInfo()  :  node;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getJSDocInfo()  :  node;	  return    irNode.getType()    ==    Token.STRING?    irNode.getJSDocInfo()    :    null;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
89	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getJSDocInfo()  :  new  StringBuilder();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getJSDocInfo()  :  new  StringBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getJSDocInfo()  :  new  StringBuilder();	  return    irNode.getType()    ==    Token.STRING?    irNode.getJSDocInfo()    :    null;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
90	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.NAME;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.NAME;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.NAME;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.NAME;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
91	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getLastChild().getType()  ==  Token.NAME;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getLastChild().getType()  ==  Token.NAME;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getLastChild().getType()  ==  Token.NAME;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.NAME;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
92	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.NAME;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.NAME;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.NAME;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.NAME;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
93	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()!=  Token.NAME;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()!=  Token.NAME;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()!=  Token.NAME;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.NAME;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
94	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()!=  Token.NAME;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()!=  Token.NAME;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()!=  Token.NAME;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.NAME;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
95	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild().getType()  ==  Token.NAME;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild().getType()  ==  Token.NAME;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild().getType()  ==  Token.NAME;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.NAME;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
96	[BUG]  [BUGGY]  irNode.setSourceFile(sourceFile);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  irNode.setSourceFile(sourceFile);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	irNode.setSourceFile(sourceFile);	  irNode.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
97	[BUG]  [BUGGY]  irNode.setStaticSourceFile(node);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  irNode.setStaticSourceFile(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	irNode.setStaticSourceFile(node);	  irNode.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
98	[BUG]  [BUGGY]  irNode.setSourceFile(new  File(irNode,  node));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  irNode.setSourceFile(new  File(irNode,  node));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	irNode.setSourceFile(new  File(irNode,  node));	  irNode.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
99	[BUG]  [BUGGY]  irNode.setSourceFile(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  irNode.setSourceFile(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	irNode.setSourceFile(fileOverviewInfo);	  irNode.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
100	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getString();	  return    irNode.getString()    +    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
101	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  irNode.getString();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  irNode.getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  irNode.getString();	  return    irNode.getString()    +    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
102	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getString()  :  irNode.getString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getString()  :  irNode.getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getString()  :  irNode.getString();	  return    irNode.getString()    +    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
103	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  irNode.getString()  :  irNode.getString();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  irNode.getString()  :  irNode.getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.GETPROP?  irNode.getString()  :  irNode.getString();	  return    irNode.getString()    +    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
104	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getString()  :  irNode.getString();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getString()  :  irNode.getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.VAR?  irNode.getString()  :  irNode.getString();	  return    irNode.getString()    +    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
105	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getLocalName();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getLocalName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getLocalName();	  return    irNode.getString()    +    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
106	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getLastChild();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
107	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
108	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  node.getLastChild();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
109	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
110	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getFirstChild();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
111	[BUG]  [BUGGY]  irNode.setStaticSourceFile(jsDocInfo);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  irNode.setStaticSourceFile(jsDocInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	irNode.setStaticSourceFile(jsDocInfo);	  irNode.setSourceFile(jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
112	[BUG]  [BUGGY]  irNode.setFileOverviewInfo(jsDocInfo);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  irNode.setFileOverviewInfo(jsDocInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	irNode.setFileOverviewInfo(jsDocInfo);	  irNode.setSourceFile(jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
113	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.THIS;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.THIS;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.THIS;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.THIS;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
114	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getLastChild().getType()  ==  Token.THIS;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getLastChild().getType()  ==  Token.THIS;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getLastChild().getType()  ==  Token.THIS;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.THIS;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
115	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.THIS;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.THIS;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.THIS;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.THIS;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
116	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()!=  Token.THIS;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()!=  Token.THIS;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()!=  Token.THIS;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.THIS;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
117	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()!=  Token.THIS;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()!=  Token.THIS;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()!=  Token.THIS;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.THIS;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
118	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild().getType()  ==  Token.THIS;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild().getType()  ==  Token.THIS;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild().getType()  ==  Token.THIS;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.THIS;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
119	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceFile()  :  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceFile()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getSourceFile()  :  null;	  return    irNode.getSourceFile();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
120	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getSourceFile()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getSourceFile()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getSourceFile()  :  null;	  return    irNode.getSourceFile();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
121	[BUG]  [BUGGY]  return  irNode.getSourcePath();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getSourcePath();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getSourcePath();	  return    irNode.getSourceFile();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
122	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getSourceFile()  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getSourceFile()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getSourceFile()  :  null;	  return    irNode.getSourceFile();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
123	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getSourceName()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getSourceName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getSourceName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getSourceName()    :    null;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
124	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSimpleName()  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSimpleName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getSimpleName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getSourceName()    :    null;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
125	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLineno()  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLineno()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLineno()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getSourceName()    :    null;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
126	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  null  :  irNode.toString();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  null  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  null  :  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    null    :    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
127	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.NAME?  null  :  irNode.toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.NAME?  null  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.NAME?  null  :  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    null    :    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
128	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getString().equals( "name ")?  null  :  irNode.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getString().equals( "name ")?  null  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getString().equals( "name ")?  null  :  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    null    :    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
129	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  new  String(irNode.getString()):  irNode.toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  new  String(irNode.getString()):  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  new  String(irNode.getString()):  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    null    :    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
130	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getString().equals( "null ")?  null  :  irNode.toString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getString().equals( "null ")?  null  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getString().equals( "null ")?  null  :  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    null    :    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
131	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getString()  :  irNode.cloneTree();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getString()  :  irNode.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getString()  :  irNode.cloneTree();	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    irNode.cloneTree();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
132	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    irNode.cloneTree();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
133	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getString()  :  irNode.cloneTree();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getString()  :  irNode.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getString()  :  irNode.cloneTree();	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    irNode.cloneTree();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
134	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.clonePosition();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.clonePosition();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.clonePosition();	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    irNode.cloneTree();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
135	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()  ==  Token.SCRIPT;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()  ==  Token.SCRIPT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()  ==  Token.SCRIPT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.SCRIPT;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
136	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getType()  ==  Token.SCRIPT;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getType()  ==  Token.SCRIPT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  &&  irNode.getType()  ==  Token.SCRIPT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.SCRIPT;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
137	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.SCRIPT;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.SCRIPT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.SCRIPT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.SCRIPT;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
138	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getType()  ==  Token.SCRIPT;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getType()  ==  Token.SCRIPT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getType()  ==  Token.SCRIPT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.SCRIPT;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
139	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()!=  Token.SCRIPT;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()!=  Token.SCRIPT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()!=  Token.SCRIPT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.SCRIPT;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
140	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getType()  :  Token.SCRIPT;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getType()  :  Token.SCRIPT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getType()  :  Token.SCRIPT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.SCRIPT;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
141	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
142	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
143	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getFirstChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
144	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
145	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "# ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "# ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "# ";	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :       "   ";    	non-compiled	[CE]  <identifier>  expected	74	None	replace
146	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "null ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "null ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "null ";	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :       "   ";    	non-compiled	[CE]  <identifier>  expected	74	None	replace
147	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "n ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "n ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "n ";	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :       "   ";    	non-compiled	[CE]  <identifier>  expected	74	None	replace
148	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "  <  unknown> ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "  <  unknown> ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "  <  unknown> ";	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :       "   ";    	non-compiled	[CE]  <identifier>  expected	74	None	replace
149	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "* ";  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "* ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "* ";	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :       "   ";    	non-compiled	[CE]  <identifier>  expected	74	None	replace
150	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "  <   ";  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "  <   ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "  <   ";	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :       "   ";    	non-compiled	[CE]  <identifier>  expected	74	None	replace
151	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NodeUtil.newString(node);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NodeUtil.newString(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NodeUtil.newString(node);	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    node;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
152	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NodeUtil.newString(irNode);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NodeUtil.newString(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NodeUtil.newString(irNode);	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    node;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
153	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  name;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  name;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  name;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    node;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
154	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NodeUtil.toString(irNode);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NodeUtil.toString(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NodeUtil.toString(irNode);	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    node;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
155	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.getString()  :  node;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.getString()  :  node;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING?  irNode.getString()  :  node;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    node;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
156	[BUG]  [BUGGY]  return  irNode.processNameAsString(irNode,  transformDispatcher);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(irNode,  transformDispatcher);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(irNode,  transformDispatcher);	  return    transformDispatcher.processNameAsString(irNode,    irNode);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
157	[BUG]  [BUGGY]  return  irNode.processNameAsString(irNode);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(irNode);	  return    transformDispatcher.processNameAsString(irNode,    irNode);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
158	[BUG]  [BUGGY]  return  transformerDispatcher.processNameAsString(irNode,  irNode);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformerDispatcher.processNameAsString(irNode,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformerDispatcher.processNameAsString(irNode,  irNode);	  return    transformDispatcher.processNameAsString(irNode,    irNode);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
159	[BUG]  [BUGGY]  return  jsDocInfo.processNameAsString(irNode,  irNode);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  jsDocInfo.processNameAsString(irNode,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  jsDocInfo.processNameAsString(irNode,  irNode);	  return    transformDispatcher.processNameAsString(irNode,    irNode);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
160	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getNext();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getNext();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getNext();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
161	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getParent();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getNext();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
162	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  irNode.getNext();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  irNode.getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  irNode.getNext();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getNext();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
163	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getString();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getString();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getNext();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
164	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getString();	  return    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
165	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getString()!=  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getString()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getString()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getString()!=    null;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
166	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getString()!=  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getString()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  &&  irNode.getString()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getString()!=    null;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
167	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getString()!=    null;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
168	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getLocalName()!=  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getLocalName()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getLocalName()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getString()!=    null;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
169	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getCharacterIndex()!=  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getCharacterIndex()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getCharacterIndex()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getString()!=    null;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
170	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.FUNCTION;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
171	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getLastChild().getType()  ==  Token.FUNCTION;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getLastChild().getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getLastChild().getType()  ==  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
172	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.FUNCTION;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
173	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()!=  Token.FUNCTION;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()!=  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()!=  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
174	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()!=  Token.FUNCTION;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()!=  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getFirstChild().getType()!=  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
175	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild().getType()  ==  Token.FUNCTION;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild().getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild().getType()  ==  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
176	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo()!=  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getJSDocInfo()!=    null;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
177	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getJSDocInfo()!=  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getJSDocInfo()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  &&  irNode.getJSDocInfo()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getJSDocInfo()!=    null;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
178	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocInfo()  ==  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocInfo()  ==  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocInfo()  ==  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getJSDocInfo()!=    null;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
179	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getJSDocInfo()!=  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getJSDocInfo()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getJSDocInfo()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getJSDocInfo()!=    null;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
180	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo()  >=  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo()  >=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo()  >=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getJSDocInfo()!=    null;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
181	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getType()  :  Node.newString(Token.NAME);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getType()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getType()  :  Node.newString(Token.NAME);	  return    irNode.getParent();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
182	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  Node.newString(Token.NAME);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  Node.newString(Token.NAME);	  return    irNode.getParent();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
183	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node;	  return    irNode.getParent();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
184	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getJSDocInfo()  :  node;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getJSDocInfo()  :  node;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getJSDocInfo()  :  node;	  return    irNode.getType()    ==    Token.NAME?    irNode.getJSDocInfo()    :    node;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
185	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  name;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  name;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  name;	  return    irNode.getType()    ==    Token.NAME?    irNode.getJSDocInfo()    :    node;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
186	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  node.toString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  node.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  node.toString();	  return    irNode.getType()    ==    Token.NAME?    irNode.getJSDocInfo()    :    node;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
187	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getString()  :  node.cloneTree();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getString()  :  node.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getString()  :  node.cloneTree();	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node.cloneTree();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
188	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.cloneTree();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.cloneTree();	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node.cloneTree();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
189	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getString()  :  irNode.cloneTree();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getString()  :  irNode.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getString()  :  irNode.cloneTree();	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node.cloneTree();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
190	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getFirstChild().getLocalName()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getFirstChild().getLocalName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getFirstChild().getLocalName()  :  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.getLocalName()    :    null;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
191	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.getLocalName()  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.getLocalName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING?  irNode.getLocalName()  :  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.getLocalName()    :    null;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
192	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getJSType()!=  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getJSType()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getJSType()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getJSType()!=    null;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
193	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getJSType()!=  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getJSType()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  &&  irNode.getJSType()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getJSType()!=    null;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
194	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSType()  ==  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSType()  ==  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSType()  ==  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getJSType()!=    null;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
195	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getJSType()  ==  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getJSType()  ==  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getJSType()  ==  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getJSType()!=    null;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
196	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getJSType()!=  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getJSType()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getJSType()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getJSType()!=    null;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
197	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getJSType()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getJSType()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getJSType()  :  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getJSType()!=    null;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
198	[BUG]  [BUGGY]  return  irNode.getType()  >=  Token.NAME?  irNode.getJSDocInfo()  :  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  >=  Token.NAME?  irNode.getJSDocInfo()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  >=  Token.NAME?  irNode.getJSDocInfo()  :  null;	  return    irNode.getType()!=    Token.NAME?    irNode.getJSDocInfo()    :    null;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
199	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getSimpleName()  :  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getSimpleName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getSimpleName()  :  null;	  return    irNode.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
200	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  null  :  irNode.getSimpleName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  null  :  irNode.getSimpleName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  null  :  irNode.getSimpleName();	  return    irNode.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
201	[BUG]  [BUGGY]  return  irNode.getSimpleName()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getSimpleName()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getSimpleName()  +  1;	  return    irNode.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
202	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild().getLocalName()  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild().getLocalName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild().getLocalName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getLocalName()    :    null;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
203	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getLocalName()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getLocalName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getLocalName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getLocalName()    :    null;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
204	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  Node.newString(Token.NAME);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  Node.newString(Token.NAME);	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
205	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  Node.newString(Token.NAME);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  Node.newString(Token.NAME);	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
206	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  Node.newString(Token.NAME);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  Node.newString(Token.NAME);	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
207	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  Node.newString(Token.NAME);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  Node.newString(Token.NAME);	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
208	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getLastChild()  :  Node.newString(Token.NAME);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getLastChild()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getLastChild()  :  Node.newString(Token.NAME);	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
209	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  node.getSourceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  node.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  node.getSourceName();	  return    irNode.getType()    ==    Token.NAME?    irNode.getSourceName()    :    node.getSourceName();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
210	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getSourceName()  :  node.getSourceName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getSourceName()  :  node.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getSourceName()  :  node.getSourceName();	  return    irNode.getType()    ==    Token.NAME?    irNode.getSourceName()    :    node.getSourceName();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
211	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getSourceName()  :  node.getSourceName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getSourceName()  :  node.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getSourceName()  :  node.getSourceName();	  return    irNode.getType()    ==    Token.NAME?    irNode.getSourceName()    :    node.getSourceName();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
212	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  node.getSourceName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  node.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  node.getSourceName();	  return    irNode.getType()    ==    Token.NAME?    irNode.getSourceName()    :    node.getSourceName();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
213	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSimpleName()  :  node.getSourceName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSimpleName()  :  node.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getSimpleName()  :  node.getSourceName();	  return    irNode.getType()    ==    Token.NAME?    irNode.getSourceName()    :    node.getSourceName();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
214	[BUG]  [BUGGY]  return  irNode.processNameAsString(transformDispatcher,  false);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(transformDispatcher,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(transformDispatcher,  false);	  return    transformDispatcher.processNameAsString(irNode,    false);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
215	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  false,  irNode);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  false,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(irNode,  false,  irNode);	  return    transformDispatcher.processNameAsString(irNode,    false);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
216	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  false,  jsDocInfo);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  false,  jsDocInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(irNode,  false,  jsDocInfo);	  return    transformDispatcher.processNameAsString(irNode,    false);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
217	[BUG]  [BUGGY]  return  irNode.processNameAsString(relativeDispatcher,  false);  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(relativeDispatcher,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(relativeDispatcher,  false);	  return    transformDispatcher.processNameAsString(irNode,    false);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
218	[BUG]  [BUGGY]  return  irNode.toString()  + ",: "  +  irNode.toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.toString()  + ",: "  +  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.toString()  + ",: "  +  irNode.toString();	  return    irNode.toString()    +   ":   "    +    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
219	[BUG]  [BUGGY]  return  irNode.toString()  + ".: "  +  irNode.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.toString()  + ".: "  +  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.toString()  + ".: "  +  irNode.toString();	  return    irNode.toString()    +   ":   "    +    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
220	[BUG]  [BUGGY]  return  irNode.toString()  + ",   "  +  irNode.toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.toString()  + ",   "  +  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.toString()  + ",   "  +  irNode.toString();	  return    irNode.toString()    +   ":   "    +    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
221	[BUG]  [BUGGY]  return  irNode.toString()  + ": "  +  jsDocInfo.toString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.toString()  + ": "  +  jsDocInfo.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.toString()  + ": "  +  jsDocInfo.toString();	  return    irNode.toString()    +   ":   "    +    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
222	[BUG]  [BUGGY]  return  irNode.getName()  + ": "  +  irNode.toString();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getName()  + ": "  +  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getName()  + ": "  +  irNode.toString();	  return    irNode.toString()    +   ":   "    +    irNode.toString();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
223	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  irNode.toString();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLocalName()    :    irNode.toString();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
224	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild().getLocalName()  :  irNode.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild().getLocalName()  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild().getLocalName()  :  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLocalName()    :    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
225	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  irNode.toString();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLocalName()    :    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
226	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getLocalName()  :  irNode.toString();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getLocalName()  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getLocalName()  :  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLocalName()    :    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
227	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getString()  :  node.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getString()  :  node.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getString()  :  node.toString();	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node.toString();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
228	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.toString();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node.toString();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
229	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  node.toString();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  node.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  node.toString();	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node.toString();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
230	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  NodeUtil.newString(node.toString());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  NodeUtil.newString(node.toString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  NodeUtil.newString(node.toString());	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node.toString();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
231	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getString()  :  irNode.toString();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getString()  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getString()  :  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node.toString();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
232	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  node.toString();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  node.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  node.toString();	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node.toString();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
233	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLineno()  :  irNode.getSource();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLineno()  :  irNode.getSource();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getLineno()  :  irNode.getSource();	  return    irNode.getSource();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
234	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()  ==  Token.GETPROP;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()  ==  Token.GETPROP;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()  ==  Token.GETPROP;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
235	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getType()  ==  Token.GETPROP;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getType()  ==  Token.GETPROP;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  &&  irNode.getType()  ==  Token.GETPROP;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
236	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.GETPROP;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.GETPROP;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.GETPROP;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
237	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()!=  Token.GETPROP;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()!=  Token.GETPROP;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()!=  Token.GETPROP;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
238	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getType()  ==  Token.GETPROP;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getType()  ==  Token.GETPROP;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getType()  ==  Token.GETPROP;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
239	[BUG]  [BUGGY]  return  irNode.getType()  >=  Token.STRING  &&  irNode.getType()  ==  Token.GETPROP;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  >=  Token.STRING  &&  irNode.getType()  ==  Token.GETPROP;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  >=  Token.STRING  &&  irNode.getType()  ==  Token.GETPROP;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
240	[BUG]  [BUGGY]  return  irNode.getType()  >=  Token.STRING;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  >=  Token.STRING;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  >=  Token.STRING;	  return    irNode.getType()!=    Token.STRING;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
241	[BUG]  [BUGGY]  return  irNode.getType()  >>  Token.STRING;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  >>  Token.STRING;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  >>  Token.STRING;	  return    irNode.getType()!=    Token.STRING;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
242	[BUG]  [BUGGY]  return  irNode.getType()  [Delete]  Token.STRING;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  [Delete]  Token.STRING;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  [Delete]  Token.STRING;	  return    irNode.getType()!=    Token.STRING;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
243	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.STRING;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.STRING;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.STRING;	  return    irNode.getType()!=    Token.STRING;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
244	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  NodeUtil.newString(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  NodeUtil.newString(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  NodeUtil.newString(irNode);	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
245	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  NodeUtil.newString(node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  NodeUtil.newString(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  NodeUtil.newString(node);	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
246	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  name;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  name;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  name;	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
247	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  node;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  node;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  node;	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
248	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getString()  :  node;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getString()  :  node;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getString()  :  node;	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
249	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.getSourceName()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.getSourceName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING?  irNode.getSourceName()  :  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.getSourceName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
250	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLineno()  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLineno()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getLineno()  :  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.getSourceName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
251	[BUG]  [BUGGY]  return  irNode.getKey();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getKey();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getKey();	  return    irNode.getValue();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
252	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getValue();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getValue();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getValue();	  return    irNode.getValue();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
253	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  node.getValue();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  node.getValue();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  node.getValue();	  return    irNode.getValue();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
254	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getQualifiedName()  :  null;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getQualifiedName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getQualifiedName()  :  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
255	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.getName()  :  null;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.getName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING?  irNode.getName()  :  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
256	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getQualifiedName()  :  null;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getQualifiedName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getQualifiedName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
257	[BUG]  [BUGGY]  return  irNode.getType()  >=  Token.STRING?  irNode.getString()  :  null;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  >=  Token.STRING?  irNode.getString()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  >=  Token.STRING?  irNode.getString()  :  null;	  return    irNode.getType()!=    Token.STRING?    irNode.getString()    :    null;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
258	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.toString();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  null  :  irNode.toString();	  return    irNode.getType()    ==    Token.STRING?    null    :    irNode.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
259	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING?  null  :  irNode.cloneTree();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING?  null  :  irNode.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING?  null  :  irNode.cloneTree();	  return    irNode.getType()    ==    Token.STRING?    null    :    irNode.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
260	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.removeChild(irNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.removeChild(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  null  :  irNode.removeChild(irNode);	  return    irNode.getType()    ==    Token.STRING?    null    :    irNode.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
261	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.rootNode.cloneTree();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.rootNode.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  null  :  irNode.rootNode.cloneTree();	  return    irNode.getType()    ==    Token.STRING?    null    :    irNode.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
262	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.getString();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  null  :  irNode.getString();	  return    irNode.getType()    ==    Token.STRING?    null    :    irNode.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
263	[BUG]  [BUGGY]  return  irNode.getType()  >=  Token.NAME?  irNode.getString()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  >=  Token.NAME?  irNode.getString()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  >=  Token.NAME?  irNode.getString()  :  null;	  return    irNode.getType()!=    Token.NAME?    irNode.getString()    :    null;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
264	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  irNode.getSourceString();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  irNode.getSourceString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  irNode.getSourceString();	  return    irNode.getSourceString();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
265	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  irNode.getSourceString();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  irNode.getSourceString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  irNode.getSourceString();	  return    irNode.getSourceString();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
266	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
267	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
268	[BUG]  [BUGGY]  return  irNode.processNameAsString(transformDispatcher,  true);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(transformDispatcher,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(transformDispatcher,  true);	  return    transformDispatcher.processNameAsString(irNode,    true);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
269	[BUG]  [BUGGY]  return  jsDocInfo.processNameAsString(irNode,  true);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  jsDocInfo.processNameAsString(irNode,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  jsDocInfo.processNameAsString(irNode,  true);	  return    transformDispatcher.processNameAsString(irNode,    true);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
270	[BUG]  [BUGGY]  return  irNode.processNameAsString(relativeDispatcher,  true);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(relativeDispatcher,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(relativeDispatcher,  true);	  return    transformDispatcher.processNameAsString(irNode,    true);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
271	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()  ==  Token.FUNCTION;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()  ==  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
272	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getType()  ==  Token.FUNCTION;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  &&  irNode.getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  &&  irNode.getType()  ==  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
273	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.FUNCTION;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()!=  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
274	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()!=  Token.FUNCTION;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()!=  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getType()!=  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
275	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getType()  ==  Token.FUNCTION;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getType()  ==  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
276	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  Token.FUNCTION;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
277	[BUG]  [BUGGY]  irNode.setSourceName(jsDocInfo);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  irNode.setSourceName(jsDocInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	irNode.setSourceName(jsDocInfo);	  irNode.setJSDocInfo(jsDocInfo);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
278	[BUG]  [BUGGY]  irNode.setSourceFile(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  irNode.setSourceFile(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	irNode.setSourceFile(rootNodeJsDocBuilder);	  irNode.setJSDocInfo(jsDocInfo);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
279	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.toString()  :  null;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.toString()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING?  irNode.toString()  :  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.toString()    :    null;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
280	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  node;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  node;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  node;	  return    irNode.getType()    ==    Token.STRING?    irNode.toString()    :    null;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
281	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.toString()  :  null;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.toString()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.toString()  :  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.toString()    :    null;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
282	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.toString():  null;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.toString():  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.toString():  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.toString()    :    null;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
283	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  NodeUtil.newString(irNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  NodeUtil.newString(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  NodeUtil.newString(irNode);	  return    irNode.getType()    ==    Token.STRING?    irNode.toString()    :    null;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
284	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
285	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getTree()  :  null;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getTree()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getTree()  :  null;	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
286	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getTree()  :  null;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getTree()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getTree()  :  null;	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
287	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getTree()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getTree()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getTree()  :  null;	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
288	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild()!=  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild()!=  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild()!=  irNode.getLastChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
289	[BUG]  [BUGGY]  return  node.getType()!=  Token.STRING?  irNode.getString()  :  null;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  node.getType()!=  Token.STRING?  irNode.getString()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  node.getType()!=  Token.STRING?  irNode.getString()  :  null;	  return    irNode.getType()!=    Token.STRING?    irNode.getString()    :    null;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
290	[BUG]  [BUGGY]  Return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  null;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  Return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	Return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  null;	  return    irNode.getType()!=    Token.STRING?    irNode.getString()    :    null;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
291	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  Token.SCRIPT;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  Token.SCRIPT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  Token.SCRIPT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.SCRIPT;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
292	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  Token.SCRIPT;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  Token.SCRIPT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  Token.SCRIPT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.SCRIPT;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
293	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getSourceName()!=  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getSourceName()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getSourceName()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getString()!=    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
294	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getFirstChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
295	[BUG]  [BUGGY]  return  irNode.processNameAsString(transformDispatcher,  jsDocInfo);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(transformDispatcher,  jsDocInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(transformDispatcher,  jsDocInfo);	  return    transformDispatcher.processNameAsString(irNode,    jsDocInfo);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
296	[BUG]  [BUGGY]  return  irDispatcher.processNameAsString(irNode,  jsDocInfo);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irDispatcher.processNameAsString(irNode,  jsDocInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irDispatcher.processNameAsString(irNode,  jsDocInfo);	  return    transformDispatcher.processNameAsString(irNode,    jsDocInfo);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
297	[BUG]  [BUGGY]  return  irDispatcher.processNameAsString(irNode,  false);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irDispatcher.processNameAsString(irNode,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irDispatcher.processNameAsString(irNode,  false);	  return    transformDispatcher.processNameAsString(irNode,    false);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
298	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  false,  null);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  false,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(irNode,  false,  null);	  return    transformDispatcher.processNameAsString(irNode,    false);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
299	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getSourceName()  :  node;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getSourceName()  :  node;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getSourceName()  :  node;	  return    irNode.getType()    ==    Token.STRING?    irNode.getSourceName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
300	[BUG]  [BUGGY]  return  irNode.getSourceFileName();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getSourceFileName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getSourceFileName();	  return    irNode.getSourceFile();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
301	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  null  :  irNode.substring(1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  null  :  irNode.substring(1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  null  :  irNode.substring(1);	  return    irNode.getType()    ==    Token.NAME?    null    :    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
302	[BUG]  [BUGGY]  return  irNode.toString()  ==  null?  null  :  irNode.toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.toString()  ==  null?  null  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.toString()  ==  null?  null  :  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    null    :    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
303	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  null  :  irNode.removeFirstChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  null  :  irNode.removeFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  null  :  irNode.removeFirstChild();	  return    irNode.getType()    ==    Token.NAME?    null    :    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
304	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  Token.EXPR_RESULT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  Token.EXPR_RESULT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
305	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getName()  :  null;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
306	[BUG]  [BUGGY]  return  irNode.getType()  >=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.NAME;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  >=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.NAME;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  >=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.NAME;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
307	[BUG]  [BUGGY]  return  irNode.processNameAsString(transformDispatcher,  irNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(transformDispatcher,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(transformDispatcher,  irNode);	  return    transformDispatcher.processNameAsString(irNode,    irNode);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
308	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  Node.newString(Token.NAME,  name);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  Node.newString(Token.NAME,  name);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  Node.newString(Token.NAME,  name);	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
309	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  NodeUtil.newString(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  NodeUtil.newString(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  NodeUtil.newString(irNode);	  return    irNode.getType()    ==    Token.NAME?    irNode.toString()    :    null;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
310	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  String.valueOf(irNode.toString());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  String.valueOf(irNode.toString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  String.valueOf(irNode.toString());	  return    irNode.getType()    ==    Token.NAME?    irNode.toString()    :    null;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
311	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  String.valueOf(irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  String.valueOf(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  String.valueOf(irNode);	  return    irNode.getType()    ==    Token.NAME?    irNode.toString()    :    null;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
312	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.GETELEM;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.GETELEM;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.GETELEM;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
313	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  Token.GETPROP;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  Token.GETPROP;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  Token.GETPROP;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
314	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild()  ==  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild()  ==  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild()  ==  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild()!=    null;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
315	[BUG]  [BUGGY]  return  jsDocInfo.getString();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  jsDocInfo.getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  jsDocInfo.getString();	  return    irNode.getString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
316	[BUG]  [BUGGY]  returns  irNode.getString();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  returns  irNode.getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	returns  irNode.getString();	  return    irNode.getString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
317	[BUG]  [BUGGY]  return  jsDocInfo.getString()  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  jsDocInfo.getString()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  jsDocInfo.getString()  +  1;	  return    irNode.getString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
318	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  NodeUtil.newString(irNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  NodeUtil.newString(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  NodeUtil.newString(irNode);	  return    irNode.getType()    ==    Token.NAME?    irNode.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
319	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLocalName()  :  node;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLocalName()  :  node;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getLocalName()  :  node;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    node;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
320	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  Token.NAME;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  Token.NAME;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()  ==  Token.NAME;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
321	[BUG]  [BUGGY]  return  node!=  null?  null  :  transformDispatcher.processNameAsString(irNode,  node);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  node!=  null?  null  :  transformDispatcher.processNameAsString(irNode,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  node!=  null?  null  :  transformDispatcher.processNameAsString(irNode,  node);	  return    transformDispatcher.processNameAsString(irNode,    node);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
322	[BUG]  [BUGGY]  return  node  ==  null?  null  :  transformDispatcher.processNameAsString(irNode,  node);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  node  ==  null?  null  :  transformDispatcher.processNameAsString(irNode,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  node  ==  null?  null  :  transformDispatcher.processNameAsString(irNode,  node);	  return    transformDispatcher.processNameAsString(irNode,    node);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
323	[BUG]  [BUGGY]  return  irNode.getSourceReference();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getSourceReference();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getSourceReference();	  return    irNode.getSourceString();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
324	[BUG]  [BUGGY]  return  irNode!=  null?  null  :  transformDispatcher.processNameAsString(node,  true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode!=  null?  null  :  transformDispatcher.processNameAsString(node,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode!=  null?  null  :  transformDispatcher.processNameAsString(node,  true);	  return    transformDispatcher.processNameAsString(node,    true);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
325	[BUG]  [BUGGY]  return  irNode!=  null?  null  :  transformDispatcher.processNameAsString(irNode,  true);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode!=  null?  null  :  transformDispatcher.processNameAsString(irNode,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode!=  null?  null  :  transformDispatcher.processNameAsString(irNode,  true);	  return    transformDispatcher.processNameAsString(node,    true);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
326	[BUG]  [BUGGY]  return  node.getType()!=  Token.NAME?  irNode.getJSDocInfo()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  node.getType()!=  Token.NAME?  irNode.getJSDocInfo()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  node.getType()!=  Token.NAME?  irNode.getJSDocInfo()  :  null;	  return    irNode.getType()!=    Token.NAME?    irNode.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
327	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSType()  ==  Token.FUNCTION;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSType()  ==  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
328	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  Token.FUNCTION;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
329	[BUG]  [BUGGY]  return  irNode.getType()  >=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  >=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.BLOCK;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  >=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.BLOCK;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
330	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getImmediateParentNode()  :  irNode.toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getImmediateParentNode()  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getImmediateParentNode()  :  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLocalName()    :    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
331	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getSourceName()  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getSourceName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getSourceName()  :  null;	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getJSDocInfo()    :    null;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
332	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getJSDocInfo()  :  NodeUtil.newString(irNode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getJSDocInfo()  :  NodeUtil.newString(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getJSDocInfo()  :  NodeUtil.newString(irNode);	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getJSDocInfo()    :    null;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
333	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  String.valueOf(irNode.toString());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  String.valueOf(irNode.toString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  String.valueOf(irNode.toString());	  return    irNode.getType()    ==    Token.STRING?    irNode.toString()    :    null;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
334	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  new  String(irNode.toString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  new  String(irNode.toString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  new  String(irNode.toString());	  return    irNode.getType()    ==    Token.STRING?    irNode.toString()    :    null;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
335	[BUG]  [BUGGY]  return  irNode  ==  null?  null  :  transformDispatcher.processNameAsString(irNode,  true);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode  ==  null?  null  :  transformDispatcher.processNameAsString(irNode,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode  ==  null?  null  :  transformDispatcher.processNameAsString(irNode,  true);	  return    transformDispatcher.processNameAsString(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
336	[BUG]  [BUGGY]  return  irDispatcher.processNameAsString(irNode,  true);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irDispatcher.processNameAsString(irNode,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irDispatcher.processNameAsString(irNode,  true);	  return    transformDispatcher.processNameAsString(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
337	[BUG]  [BUGGY]  return  irNode.toString()  + ":n "  +  irNode.toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.toString()  + ":n "  +  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.toString()  + ":n "  +  irNode.toString();	  return    irNode.toString()    +   ":   "    +    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
338	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getImmediateParentNode()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getImmediateParentNode()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getImmediateParentNode()  :  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.getLocalName()    :    null;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
339	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getURI()  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getURI()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getURI()  :  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.getLocalName()    :    null;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
340	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "node ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "node ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "node ";	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :       "   ";    	non-compiled	[CE]  <identifier>  expected	74	None	replace
341	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "[] ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "[] ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  : "[] ";	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :       "   ";    	non-compiled	[CE]  <identifier>  expected	74	None	replace
342	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.hasJSDocInfo();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.hasJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.hasJSDocInfo();	  return    irNode.getType()    ==    Token.SCRIPT    ||    irNode.getJSDocInfo();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
343	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  node.getJSDocInfo();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  node.getJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.SCRIPT  ||  node.getJSDocInfo();	  return    irNode.getType()    ==    Token.SCRIPT    ||    irNode.getJSDocInfo();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
344	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
345	[BUG]  [BUGGY]  return  irNode.getType()  >=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.THIS;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  >=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.THIS;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  >=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.THIS;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.THIS;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
346	[BUG]  [BUGGY]  irNode.setSourceFile(new  File(irNode));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  irNode.setSourceFile(new  File(irNode));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	irNode.setSourceFile(new  File(irNode));	  irNode.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
347	[BUG]  [BUGGY]  return  irNode.getName()!=  null?  null  :  irNode.getType()!=  Token.STRING;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getName()!=  null?  null  :  irNode.getType()!=  Token.STRING;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getName()!=  null?  null  :  irNode.getType()!=  Token.STRING;	  return    irNode.getType()!=    Token.STRING;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
348	[BUG]  [BUGGY]  return  irNode.getName()!=  null?  null  :  irNode.getType()  >>  Token.STRING;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getName()!=  null?  null  :  irNode.getType()  >>  Token.STRING;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getName()!=  null?  null  :  irNode.getType()  >>  Token.STRING;	  return    irNode.getType()!=    Token.STRING;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
349	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild().getString().equals( "name ")?  irNode.getLastChild()  :  irNode.getLastChil  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild().getString().equals( "name ")?  irNode.getLastChild()  :  irNode.getLastChil  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild().getString().equals( "name ")?  irNode.getLastChild()  :  irNode.getLastChil	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
350	[BUG]  [BUGGY]  return  irNode.getType()  >=  Token.STRING  &&  irNode.getJSType()!=  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  >=  Token.STRING  &&  irNode.getJSType()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  >=  Token.STRING  &&  irNode.getJSType()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getJSType()!=    null;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
351	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getSourceName()  :  irNode.getSourceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getSourceName()  :  irNode.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getSourceName()  :  irNode.getSourceName();	  return    irNode.getType()    ==    Token.NAME?    irNode.getSourceName()    :    node.getSourceName();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
352	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getSourceName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getSourceName();	  return    irNode.getType()    ==    Token.NAME?    irNode.getSourceName()    :    node.getSourceName();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
353	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NodeUtil.EMPTY_OBJECT;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NodeUtil.EMPTY_OBJECT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NodeUtil.EMPTY_OBJECT;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    NodeUtil.EMPTY;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
354	[BUG]  [BUGGY]  return  irNode.toString()  + "_n "  +  irNode.toString();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.toString()  + "_n "  +  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.toString()  + "_n "  +  irNode.toString();	  return    irNode.toString()    +   "_   "    +    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
355	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getImmediateParentNode()  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getImmediateParentNode()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getImmediateParentNode()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getLocalName()    :    null;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
356	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocName()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getLocalName()    :    null;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
357	[BUG]  [BUGGY]  return  irNode.getType()  >=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.FUNCTION;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  >=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  >=  Token.STRING  &&  irNode.getFirstChild().getType()  ==  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
358	[BUG]  [BUGGY]  return  irNode!=  null?  null  :  transformDispatcher.processNameAsString(node,  false);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode!=  null?  null  :  transformDispatcher.processNameAsString(node,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode!=  null?  null  :  transformDispatcher.processNameAsString(node,  false);	  return    transformDispatcher.processNameAsString(node,    false);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
359	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  node;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  node;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  node;	  return    irNode.getType()    ==    Token.NAME?    irNode.getSourceName()    :    null;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
360	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getJSDocInfo()  ==  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getJSDocInfo()  ==  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getJSDocInfo()  ==  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getJSDocInfo()!=    null;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
361	[BUG]  [BUGGY]  return  irNode.getType()  >=  Token.STRING  &&  irNode.getJSDocInfo()!=  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  >=  Token.STRING  &&  irNode.getJSDocInfo()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  >=  Token.STRING  &&  irNode.getJSDocInfo()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getJSDocInfo()!=    null;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
362	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  Node.newString( "name "));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  Node.newString( "name "));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  Node.newString( "name "));	  return    irNode.getType()    ==    Token.NAME?    irNode.getType()    :    Node.newString(   "name   "));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
363	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  Node.newString( "name "));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  Node.newString( "name "));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  Node.newString( "name "));	  return    irNode.getType()    ==    Token.NAME?    irNode.getType()    :    Node.newString(   "name   "));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
364	[BUG]  [BUGGY]  return  node.processNameAsString(irNode,  true);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  node.processNameAsString(irNode,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  node.processNameAsString(irNode,  true);	  return    transformDispatcher.processNameAsString(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
365	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.removeChild(irNode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.removeChild(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.removeChild(irNode);	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    irNode.cloneTree();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
366	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  null;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
367	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFileName()  :  null;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFileName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFileName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
368	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  irNode.getParent();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  irNode.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  irNode.getParent();	  return    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
369	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  Node.newString( "name "));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  Node.newString( "name "));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  Node.newString( "name "));	  return    irNode.getType()    ==    Token.NAME?    irNode.getType()    :    Node.newString(   "name   "));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
370	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.cloneTree()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.cloneTree()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.cloneTree()  :  null;	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
371	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  node.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  node.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  node.toString();	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node.toString();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
372	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  NodeUtil.toString(node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  NodeUtil.toString(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  NodeUtil.toString(node);	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node.toString();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
373	[BUG]  [BUGGY]  return  irNode.removeFirstChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.removeFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.removeFirstChild();	  return    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
374	[BUG]  [BUGGY]  return  irNode.removeChild(irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.removeChild(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.removeChild(irNode);	  return    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
375	[BUG]  [BUGGY]  return  irNode.getfirstChild();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getfirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getfirstChild();	  return    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
376	[BUG]  [BUGGY]  return  irNode.getLastChild().getString();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getLastChild().getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getLastChild().getString();	  return    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
377	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.removeChild(irNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.removeChild(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.removeChild(irNode);	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
378	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.removeFirstChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.removeFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.removeFirstChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
379	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.removeLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.removeLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.removeLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
380	[BUG]  [BUGGY]  irNode.setLineno(jsDocInfo);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  irNode.setLineno(jsDocInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	irNode.setLineno(jsDocInfo);	  irNode.setJSDocInfo(jsDocInfo);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
381	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
382	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  new  String(irNode.toString());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  new  String(irNode.toString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  new  String(irNode.toString());	  return    irNode.getType()    ==    Token.NAME?    irNode.toString()    :    null;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
383	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  this;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  this;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  this;	  return    irNode.getType()    ==    Token.NAME?    irNode.toString()    :    null;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
384	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.removeFirstChild();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.removeFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  null  :  irNode.removeFirstChild();	  return    irNode.getType()    ==    Token.STRING?    null    :    irNode.cloneTree();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
385	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getFirstChild()  :  NodeUtil.EMPTY;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getFirstChild()  :  NodeUtil.EMPTY;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getFirstChild()  :  NodeUtil.EMPTY;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    NodeUtil.EMPTY;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
386	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLastChild()  :  NodeUtil.EMPTY;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLastChild()  :  NodeUtil.EMPTY;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getLastChild()  :  NodeUtil.EMPTY;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    NodeUtil.EMPTY;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
387	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getParent()  ==  Token.NAME;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getParent()  ==  Token.NAME;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getParent()  ==  Token.NAME;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.NAME;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
388	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  String.valueOf(irNode.getString());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  String.valueOf(irNode.getString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  String.valueOf(irNode.getString());	  return    irNode.getString()    +    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
389	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.CATCH?  irNode.getString()  :  irNode.getString();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.CATCH?  irNode.getString()  :  irNode.getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.CATCH?  irNode.getString()  :  irNode.getString();	  return    irNode.getString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
390	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  String.valueOf(irNode.getLastChild());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  String.valueOf(irNode.getLastChild());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  String.valueOf(irNode.getLastChild());	  return    irNode.getString()    +    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
391	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  String.valueOf(irNode.getLocalPart());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  String.valueOf(irNode.getLocalPart());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  String.valueOf(irNode.getLocalPart());	  return    irNode.getString()    +    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
392	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getString();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getString();	  return    irNode.getString()    +    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
393	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getParent()  ==  Token.FUNCTION;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getParent()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getParent()  ==  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
394	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getFirstChild()  :  null;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getFirstChild()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getFirstChild()  :  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.getLocalName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
395	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLineno()  :  node.getSourceName();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLineno()  :  node.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLineno()  :  node.getSourceName();	  return    irNode.getType()    ==    Token.NAME?    irNode.getSourceName()    :    node.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
396	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getQualifiedName()  :  node.getSourceName();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getQualifiedName()  :  node.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getQualifiedName()  :  node.getSourceName();	  return    irNode.getType()    ==    Token.NAME?    irNode.getSourceName()    :    node.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
397	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node  :  irNode.toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  node  :  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    null    :    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
398	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  this  :  irNode.toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  this  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  this  :  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    null    :    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
399	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  Token.GETPROP;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  Token.GETPROP;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()  ==  Token.GETPROP;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
400	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(jsDocInfo,  irNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformDispatcher.processNameAsString(jsDocInfo,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(jsDocInfo,  irNode);	  return    transformDispatcher.processNameAsString(irNode,    jsDocInfo);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
401	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  NodeUtil.isExpressionNode(irNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  NodeUtil.isExpressionNode(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  NodeUtil.isExpressionNode(irNode);	  return    irNode.getType()    ==    Token.NAME?    irNode.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
402	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.THIS;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.THIS;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.THIS;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.THIS;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
403	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.NAME;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.NAME;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.NAME;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
404	[BUG]  [BUGGY]  return(transformDispatcher!=  null  &&  transformDispatcher.processNameAsString(irNode,  false));  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return(transformDispatcher!=  null  &&  transformDispatcher.processNameAsString(irNode,  false));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return(transformDispatcher!=  null  &&  transformDispatcher.processNameAsString(irNode,  false));	  return    transformDispatcher.processNameAsString(irNode,    false);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
405	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getParent()  ==  Token.SCRIPT;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getParent()  ==  Token.SCRIPT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getParent()  ==  Token.SCRIPT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.SCRIPT;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
406	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  Node.newString(Token.NAME,  value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  Node.newString(Token.NAME,  value);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  Node.newString(Token.NAME,  value);	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
407	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  Node.newString(Token.NAME,  message);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  Node.newString(Token.NAME,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  Node.newString(Token.NAME,  message);	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
408	[BUG]  [BUGGY]  return  irNode.processNameAsString(transformTokenType(irNode));  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.processNameAsString(transformTokenType(irNode));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.processNameAsString(transformTokenType(irNode));	  return    transformDispatcher.processNameAsString(irNode,    irNode);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
409	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.BLOCK;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.BLOCK;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild().getType()    ==    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
410	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.removeFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.removeFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.removeFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
411	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild()  <=  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild()  <=  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild()  <=  irNode.getLastChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
412	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(jsDocInfo,  true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  transformDispatcher.processNameAsString(jsDocInfo,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(jsDocInfo,  true);	  return    transformDispatcher.processNameAsString(node,    true);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
413	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.FUNCTION;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.FUNCTION;	  return    irNode.getType()!=    Token.STRING;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
414	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.STRING;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.STRING;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.STRING;	  return    irNode.getType()!=    Token.STRING;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
415	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NODE;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NODE;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NODE;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    node;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
416	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  NODE;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  NODE;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  NODE;	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    node;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
417	[BUG]  [BUGGY]  irNode.setSourceFile(new  File(node));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  irNode.setSourceFile(new  File(node));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	irNode.setSourceFile(new  File(node));	  irNode.setSourceFile(node);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
418	[BUG]  [BUGGY]  irNode.setFileName(node);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  irNode.setFileName(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	irNode.setFileName(node);	  irNode.setSourceFile(node);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
419	[BUG]  [BUGGY]  return  irNode.getFileName();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getFileName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getFileName();	  return    irNode.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
420	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.getFirstChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.getFirstChild();	  return    irNode.getType()    ==    Token.SCRIPT    ||    irNode.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
421	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.hasChildren();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.hasChildren();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.hasChildren();	  return    irNode.getType()    ==    Token.SCRIPT    ||    irNode.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
422	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.removeJSDocInfo();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.removeJSDocInfo();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.removeJSDocInfo();	  return    irNode.getType()    ==    Token.SCRIPT    ||    irNode.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
423	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.getChildCount();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.getChildCount();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.getChildCount();	  return    irNode.getType()    ==    Token.SCRIPT    ||    irNode.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
424	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getParent()  ==  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getParent()  ==  Token.EXPR_RESULT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getParent()  ==  Token.EXPR_RESULT;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
425	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getJSDocInfo()  :  NodeUtil.createString(irNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getJSDocInfo()  :  NodeUtil.createString(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getJSDocInfo()  :  NodeUtil.createString(irNode);	  return    irNode.getType()    ==    Token.STRING?    irNode.getJSDocInfo()    :    null;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
426	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getString()!=  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getString()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getString()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getString()!=    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
427	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocName()!=  null;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocName()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocName()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getString()!=    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
428	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  Collections.EMPTY_LIST;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  Collections.EMPTY_LIST;	  return    irNode.getType()    ==    Token.STRING?    irNode.toString()    :    null;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
429	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  this;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  this;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  this;	  return    irNode.getType()    ==    Token.STRING?    irNode.toString()    :    null;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
430	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.removeFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.removeFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.removeFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
431	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  <=  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  <=  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  <=  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
432	[BUG]  [BUGGY]  return  irNode.toString()  + ".   "  +  irNode.toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.toString()  + ".   "  +  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.toString()  + ".   "  +  irNode.toString();	  return    irNode.toString()    +   ":   "    +    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
433	[BUG]  [BUGGY]  return  irNode.toString()  + ": "  +  irNode.getName();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.toString()  + ": "  +  irNode.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.toString()  + ": "  +  irNode.getName();	  return    irNode.toString()    +   ":   "    +    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
434	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.toString();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLocalName()    :    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
435	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild()!=  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);      [BUGGY]  return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild()!=  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING  ||  irNode.getFirstChild()!=  null;	  return    irNode.getType()    ==    Token.STRING    ||    irNode.getFirstChild()!=    null;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
