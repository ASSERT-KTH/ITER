bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getSourceName()  :  null;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getSourceName()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getSourceName()  :  null;	  return    irNode.getSourceName();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
2	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  null;	  return    irNode.getSourceName();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
3	[BUG]  [BUGGY]  return  irNode.getLocalName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getLocalName();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getLocalName();	  return    irNode.getSourceName();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
4	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  node.getSourceName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  node.getSourceName();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  node.getSourceName();	  return    irNode.getSourceName();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
5	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.getString()  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()!=  Token.STRING?  irNode.getString()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING?  irNode.getString()  :  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    null;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
6	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLocalName()  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLocalName()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getLocalName()  :  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    null;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
7	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  node;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  node;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  node;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    null;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
8	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getName()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getName()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getName()  :  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    null;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
9	[BUG]  [BUGGY]  return  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getLastChild();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getLastChild();	  return    irNode.getString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
10	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.cloneTree();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.cloneTree();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  null  :  irNode.cloneTree();	  return    irNode.cloneTree();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
11	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.cloneTree();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.cloneTree();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.cloneTree();	  return    irNode.cloneTree();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
12	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.cloneTree();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.cloneTree();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.cloneTree();	  return    irNode.cloneTree();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
13	[BUG]  [BUGGY]  return  irNode.clone();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.clone();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.clone();	  return    irNode.cloneTree();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
14	[BUG]  [BUGGY]  irNode.setJSDocInfo(jsDocInfo);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  irNode.setJSDocInfo(jsDocInfo);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	irNode.setJSDocInfo(jsDocInfo);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
15	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  jsDocInfo);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  jsDocInfo);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(irNode,  jsDocInfo);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
16	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  node);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(irNode,  node);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
17	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  irNode);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  irNode);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(irNode,  irNode);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
18	[BUG]  [BUGGY]  irNode.setSourceFile(jsDocInfo);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  irNode.setSourceFile(jsDocInfo);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	irNode.setSourceFile(jsDocInfo);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
19	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  true);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  true);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(irNode,  true);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
20	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  false);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  false);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(irNode,  false);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
21	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  null  :  irNode.toString();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  null  :  irNode.toString();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  null  :  irNode.toString();	  return    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
22	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  irNode.toString();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  irNode.toString();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  irNode.toString();	  return    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
23	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.toString();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.toString();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.toString();	  return    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
24	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.toString()  :  null;	  return    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
25	[BUG]  [BUGGY]  return  irNode.getParent();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getParent();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getParent();	  return    irNode.getNext();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getType()  :  Node.newString( "name "));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getType()  :  Node.newString( "name "));  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getType()  :  Node.newString( "name "));	  return    irNode.getNext();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
27	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  null;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  null;	  return    irNode.getJSDocInfo();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
28	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getJSDocInfo()  :  null;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getJSDocInfo()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getJSDocInfo()  :  null;	  return    irNode.getJSDocInfo();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
29	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getJSDocInfo()  :  null;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getJSDocInfo()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getJSDocInfo()  :  null;	  return    irNode.getJSDocInfo();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
30	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  node;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  node;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getJSDocInfo()  :  node;	  return    irNode.getJSDocInfo();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
31	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getJSDocInfo()  :  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getJSDocInfo()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getJSDocInfo()  :  null;	  return    irNode.getJSDocInfo();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
32	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.getJSDocInfo();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.getJSDocInfo();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.SCRIPT  ||  irNode.getJSDocInfo();	  return    irNode.getJSDocInfo();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
33	[BUG]  [BUGGY]  return  irNode.getSimpleName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getSimpleName();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getSimpleName();	  return    irNode.getName();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getString()  :  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getString()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getString()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
36	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
37	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node;	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
38	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.STRING;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()!=  Token.STRING;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()!=  Token.STRING;	  return    irNode.getType()    ==    Token.STRING;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
39	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.NAME;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.NAME;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.NAME;	  return    irNode.getType()    ==    Token.STRING;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
40	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.EXPR_RESULT;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.EXPR_RESULT;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.EXPR_RESULT;	  return    irNode.getType()    ==    Token.STRING;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
41	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.FUNCTION;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.FUNCTION;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
42	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.GETPROP;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.GETPROP;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.GETPROP;	  return    irNode.getType()    ==    Token.STRING;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
43	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.SCRIPT;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.SCRIPT;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getType()  ==  Token.SCRIPT;	  return    irNode.getType()    ==    Token.STRING;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
44	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
45	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
46	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
47	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getLastChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getLastChild();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getLastChild();	  return    irNode.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
48	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  transformDispatcher.processNameAsString(irNode,  null);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(irNode,  null);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
49	[BUG]  [BUGGY]  return  irNode.getSourceFile();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getSourceFile();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getSourceFile();	  return    irNode.getSourceName();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
50	[BUG]  [BUGGY]  return  irNode.getSource();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getSource();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getSource();	  return    irNode.getSourceName();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
51	[BUG]  [BUGGY]  return  irNode.getSourceString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getSourceString();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getSourceString();	  return    irNode.getSourceName();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
52	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.toString()  :  null;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    null;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
53	[BUG]  [BUGGY]  return  irNode.getTree();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getTree();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getTree();	  return    irNode.cloneTree();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
54	[BUG]  [BUGGY]  return  irNode.getString()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getString()  +  1;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getString()  +  1;	  return    irNode.getString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
55	[BUG]  [BUGGY]  return  irNode.getValue();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getValue();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getValue();	  return    irNode.getString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
56	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
57	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocInfo()!=  null;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocInfo()!=  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocInfo()!=  null;	  return    irNode.getType()    ==    Token.STRING;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
58	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSType()!=  null;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSType()!=  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getJSType()!=  null;	  return    irNode.getType()    ==    Token.STRING;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
59	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()!=  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()!=  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getString()!=  null;	  return    irNode.getType()    ==    Token.STRING;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
60	[BUG]  [BUGGY]  return  irNode.getLineno();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getLineno();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getLineno();	  return    irNode.getSourceName();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
61	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getNext();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getNext();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getNext();	  return    irNode.getNext();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
62	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  Node.newString(Token.NAME);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  Node.newString(Token.NAME);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  Node.newString(Token.NAME);	  return    irNode.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
63	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NodeUtil.EMPTY;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NodeUtil.EMPTY;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getString()  :  NodeUtil.EMPTY;	  return    irNode.getType()    ==    Token.STRING?    irNode.getString()    :    null;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
64	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.FUNCTION;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.FUNCTION;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.FUNCTION;	  return    irNode.getType()    ==    Token.STRING;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
65	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.NAME;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.NAME;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.NAME;	  return    irNode.getType()    ==    Token.STRING;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
66	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()!=  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()!=  null;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild()!=  null;	  return    irNode.getType()    ==    Token.STRING;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
67	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.THIS;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.THIS;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.THIS;	  return    irNode.getType()    ==    Token.STRING;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
68	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.BLOCK;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.BLOCK;  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.STRING  ||  irNode.getFirstChild().getType()  ==  Token.BLOCK;	  return    irNode.getType()    ==    Token.STRING;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
69	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(node,  true);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  transformDispatcher.processNameAsString(node,  true);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(node,  true);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
70	[BUG]  [BUGGY]  irNode.setSourceFile(node);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  irNode.setSourceFile(node);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	irNode.setSourceFile(node);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
71	[BUG]  [BUGGY]  return  transformDispatcher.processNameAsString(node,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  transformDispatcher.processNameAsString(node,  false);  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  transformDispatcher.processNameAsString(node,  false);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
72	[BUG]  [BUGGY]  return  irNode.toString()  + "_ "  +  irNode.toString();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.toString()  + "_ "  +  irNode.toString();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.toString()  + "_ "  +  irNode.toString();	  return    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
73	[BUG]  [BUGGY]  return  irNode.toString()  + ": "  +  irNode.toString();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.toString()  + ": "  +  irNode.toString();  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.toString()  + ": "  +  irNode.toString();	  return    irNode.toString();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
74	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :   " ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);    [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :   " ";  [BUGGY]    }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :   " ";	  return    irNode.getType()    ==    Token.NAME?    irNode.getString()    :    null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
