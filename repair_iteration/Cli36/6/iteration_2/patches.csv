bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  found(group.getName(),  true));  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group.getName(),  true));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group.getName(),  true));	  found(group.getName(),    false));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
2	[BUG]  [BUGGY]  found(group.getName(),  false,  group.isRequired()));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group.getName(),  false,  group.isRequired()));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group.getName(),  false,  group.isRequired()));	  found(group.getName(),    false));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
3	[BUG]  [BUGGY]  found(group.getName(),  false,  group.setRequired(false));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group.getName(),  false,  group.setRequired(false));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group.getName(),  false,  group.setRequired(false));	  found(group.getName(),    false));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
4	[BUG]  [BUGGY]  found(group.getName(),  false),  group.setRequired(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group.getName(),  false),  group.setRequired(false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group.getName(),  false),  group.setRequired(false);	  found(group.getName(),    false));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
5	[BUG]  [BUGGY]  group.setRequired(true,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.setRequired(true,  false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.setRequired(true,  false);	  group.setRequired(false,    false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
6	[BUG]  [BUGGY]  group.setRequired(true,  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.setRequired(true,  true);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.setRequired(true,  true);	  group.setRequired(false,    false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
7	[BUG]  [BUGGY]  group.setRequired(false,  false,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.setRequired(false,  false,  shortOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.setRequired(false,  false,  shortOpts);	  group.setRequired(false,    false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
8	[BUG]  [BUGGY]  Annotation  group  =(Annotation)this.longOpts.get(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  group  =(Annotation)this.longOpts.get(group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  group  =(Annotation)this.longOpts.get(group);	  Annotation    group    =(Annotation)longOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
9	[BUG]  [BUGGY]  Annotation  group  =(Annotation)groups.get(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  group  =(Annotation)groups.get(group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  group  =(Annotation)groups.get(group);	  Annotation    group    =(Annotation)longOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
10	[BUG]  [BUGGY]  requiredOpts.add(group.getOptionGroup(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  requiredOpts.add(group.getOptionGroup(),  longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	requiredOpts.add(group.getOptionGroup(),  longOpts);	  requiredOpts.add(group.getOptionGroup(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
11	[BUG]  [BUGGY]  For(Option  group  :  option.getOptionGroups())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  For(Option  group  :  option.getOptionGroups())  {  requiredOpts.add(group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	For(Option  group  :  option.getOptionGroups())  {  requiredOpts.add(group);  }	  For(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
12	[BUG]  [BUGGY]  For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(group);  }	  For(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
13	[BUG]  [BUGGY]  allowShortOpts(group.getOptionGroups())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptionGroups())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptionGroups())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
14	[BUG]  [BUGGY]  allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
15	[BUG]  [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired(),  shortOpts)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
16	[BUG]  [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  requiredOpts.add(group);  }  else  {  setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  requiredOpts.add(group);  }  else  {  setRequired(false);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired(),  shortOpts)  {  requiredOpts.add(group);  }  else  {  setRequired(false);  }	  allowShortOpts(group.isRequired())    {    requiredOpts.add(group);    }    else    {    setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
17	[BUG]  [BUGGY]  allowShortOpts(group.getOptions())  {  requiredOpts.add(group);  }  else  {  setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptions())  {  requiredOpts.add(group);  }  else  {  setRequired(false);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptions())  {  requiredOpts.add(group);  }  else  {  setRequired(false);  }	  allowShortOpts(group.isRequired())    {    requiredOpts.add(group);    }    else    {    setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
18	[BUG]  [BUGGY]  allowShortOpts(group.getRequired())  {  requiredOpts.add(group);  }  else  {  setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getRequired())  {  requiredOpts.add(group);  }  else  {  setRequired(false);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getRequired())  {  requiredOpts.add(group);  }  else  {  setRequired(false);  }	  allowShortOpts(group.isRequired())    {    requiredOpts.add(group);    }    else    {    setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
19	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)group.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)group.getShortOpts();  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =(OptionGroup)group.getShortOpts();	  optionGroups.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
20	[BUG]  [BUGGY]  Annotations.set(requiredOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotations.set(requiredOpts,  group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotations.set(requiredOpts,  group);	  if(group.isRequired())    {    requiredOpts.add(group);    }    else    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
21	[BUG]  [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  requiredOpts.add(group);  }  else  {  setRequired(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  requiredOpts.add(group);  }  else  {  setRequired(true);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired(),  shortOpts)  {  requiredOpts.add(group);  }  else  {  setRequired(true);  }	  allowShortOpts(group.isRequired())    {    requiredOpts.add(group);    }    else    {    setRequired(true);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
22	[BUG]  [BUGGY]  allowShortOpts(group.getOptions())  {  requiredOpts.add(group);  }  else  {  setRequired(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptions())  {  requiredOpts.add(group);  }  else  {  setRequired(true);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptions())  {  requiredOpts.add(group);  }  else  {  setRequired(true);  }	  allowShortOpts(group.isRequired())    {    requiredOpts.add(group);    }    else    {    setRequired(true);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
23	[BUG]  [BUGGY]  requiredOpts.add(group,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  requiredOpts.add(group,  null);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	requiredOpts.add(group,  null);	  requiredOpts.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
24	[BUG]  [BUGGY]  requiredOpts.add(null,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  requiredOpts.add(null,  group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	requiredOpts.add(null,  group);	  requiredOpts.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
25	[BUG]  [BUGGY]  AnnotationGroup  shortOpts  =  group.getShortOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  AnnotationGroup  shortOpts  =  group.getShortOpts(),  longOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	AnnotationGroup  shortOpts  =  group.getShortOpts(),  longOpts);	  AnnotationGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
26	[BUG]  [BUGGY]  AnnotationGroup  shortOpts  =  group.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  AnnotationGroup  shortOpts  =  group.getLongOpts();  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	AnnotationGroup  shortOpts  =  group.getLongOpts();	  AnnotationGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
27	[BUG]  [BUGGY]  AnnotationGroup  shortOpts  =  group.getShortOpts(),  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  AnnotationGroup  shortOpts  =  group.getShortOpts(),  longOpts;  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	AnnotationGroup  shortOpts  =  group.getShortOpts(),  longOpts;	  AnnotationGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
28	[BUG]  [BUGGY]  requiredOpts.add(group,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  requiredOpts.add(group,  false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	requiredOpts.add(group,  false);	  requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
29	[BUG]  [BUGGY]  shortOpts.add(group,  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group,  true);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group,  true);	  shortOpts.add(group,    false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
30	[BUG]  [BUGGY]  shortOpts.add(group,  false,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group,  false,  longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group,  false,  longOpts);	  shortOpts.add(group,    false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
31	[BUG]  [BUGGY]  shortOpts.add(longOpts,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(longOpts,  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(longOpts,  false);	  shortOpts.add(group,    false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
32	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getRequiredOpts(),  longOpts,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getRequiredOpts(),  longOpts,  requiredOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getRequiredOpts(),  longOpts,  requiredOpts);	  OptionGroup    shortOpts    =    group.getRequiredOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
33	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getRequiredOpts(),  this.longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getRequiredOpts(),  this.longOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getRequiredOpts(),  this.longOpts);	  OptionGroup    shortOpts    =    group.getRequiredOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
34	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getRequiredOpts(),  longOpts,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getRequiredOpts(),  longOpts,  false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getRequiredOpts(),  longOpts,  false);	  OptionGroup    shortOpts    =    group.getRequiredOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
35	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  this.longOpts.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  this.longOpts.getShortOpts();  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  this.longOpts.getShortOpts();	  List    <    Option>    shortOpts    =    longOpts.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
36	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  optionGroups.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  optionGroups.getShortOpts();  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  optionGroups.getShortOpts();	  List    <    Option>    shortOpts    =    longOpts.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
37	[BUG]  [BUGGY]  group.add(new  OptionGroup(longOpts,  shortOpts,  false));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(new  OptionGroup(longOpts,  shortOpts,  false));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(new  OptionGroup(longOpts,  shortOpts,  false));	  group.add(new    OptionGroup(longOpts,    shortOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
38	[BUG]  [BUGGY]  group.add(new  OptionGroup(longOpts,  shortOpts,  0));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(new  OptionGroup(longOpts,  shortOpts,  0));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(new  OptionGroup(longOpts,  shortOpts,  0));	  group.add(new    OptionGroup(longOpts,    shortOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
39	[BUG]  [BUGGY]  group.add(new  OptionGroup(longOpts,  shortOpts,  null));  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(new  OptionGroup(longOpts,  shortOpts,  null));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(new  OptionGroup(longOpts,  shortOpts,  null));	  group.add(new    OptionGroup(longOpts,    shortOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
40	[BUG]  [BUGGY]  group.add(new  OptionGroup(longOpts,  shortOpts,  requiredOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(new  OptionGroup(longOpts,  shortOpts,  requiredOpts));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(new  OptionGroup(longOpts,  shortOpts,  requiredOpts));	  group.add(new    OptionGroup(longOpts,    shortOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
41	[BUG]  [BUGGY]  shortOpts.add(group.getShortOpt(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group.getShortOpt(),  longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group.getShortOpt(),  longOpts);	  shortOpts.add(group.getShortOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
42	[BUG]  [BUGGY]  shortOpts.add(group.getShortOpt(),  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group.getShortOpt(),  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group.getShortOpt(),  false);	  shortOpts.add(group.getShortOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
43	[BUG]  [BUGGY]  shortOpts.add(group.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group.getLongOpt());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group.getLongOpt());	  shortOpts.add(group.getShortOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
44	[BUG]  [BUGGY]  shortOpts.add(group.getShortOpt(),  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group.getShortOpt(),  true);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group.getShortOpt(),  true);	  shortOpts.add(group.getShortOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
45	[BUG]  [BUGGY]  Annotation  group  =(Annotation)this.group.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  group  =(Annotation)this.group.getValue();  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  group  =(Annotation)this.group.getValue();	  Annotation    group    =(Annotation)group.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
46	[BUG]  [BUGGY]  Annotation  group  =(Annotation)group.getObject();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  group  =(Annotation)group.getObject();  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  group  =(Annotation)group.getObject();	  Annotation    group    =(Annotation)group.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
47	[BUG]  [BUGGY]  Annotation  group  =(Annotation)group.getKey();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  group  =(Annotation)group.getKey();  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  group  =(Annotation)group.getKey();	  Annotation    group    =(Annotation)group.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
48	[BUG]  [BUGGY]  allowShortOpts(group.getOptions())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptions())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptions())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
49	[BUG]  [BUGGY]  allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
50	[BUG]  [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired(),  shortOpts)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
51	[BUG]  [BUGGY]  requiredOpts.add(group.getOptionGroup(),  true,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  requiredOpts.add(group.getOptionGroup(),  true,  shortOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	requiredOpts.add(group.getOptionGroup(),  true,  shortOpts);	  requiredOpts.add(group.getOptionGroup(),    true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
52	[BUG]  [BUGGY]  RequiredOpts.add(group.getOptionGroup(),  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  RequiredOpts.add(group.getOptionGroup(),  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	RequiredOpts.add(group.getOptionGroup(),  false);	  requiredOpts.add(group.getOptionGroup(),    true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
53	[BUG]  [BUGGY]  requiredOpts.add(group.getOptionGroup(),  true,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  requiredOpts.add(group.getOptionGroup(),  true,  longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	requiredOpts.add(group.getOptionGroup(),  true,  longOpts);	  requiredOpts.add(group.getOptionGroup(),    true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
54	[BUG]  [BUGGY]  shortOpts.addAll(group.getShortOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.addAll(group.getShortOpts());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.addAll(group.getShortOpts());	  shortOpts.add(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
55	[BUG]  [BUGGY]  shortOpts.addAll(group.getOptions());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.addAll(group.getOptions());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.addAll(group.getOptions());	  shortOpts.add(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
56	[BUG]  [BUGGY]  shortOpts.add(group.getName(),  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group.getName(),  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group.getName(),  false);	  shortOpts.add(group.getName());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
57	[BUG]  [BUGGY]  shortOpts.add(group.getName(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group.getName(),  longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group.getName(),  longOpts);	  shortOpts.add(group.getName());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
58	[BUG]  [BUGGY]  shortOpts.add(group.getName(),  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group.getName(),  this);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group.getName(),  this);	  shortOpts.add(group.getName());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
59	[BUG]  [BUGGY]  longOpts.add(group.getName());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  longOpts.add(group.getName());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	longOpts.add(group.getName());	  shortOpts.add(group.getName());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
60	[BUG]  [BUGGY]  allowShortOpts(group.getRequired(),  shortOpts)  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getRequired(),  shortOpts)  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getRequired(),  shortOpts)  {  requiredOpts.add(false);  }	  allowShortOpts(group.getRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
61	[BUG]  [BUGGY]  allowShortOpts(group.getRequired(),  false)  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getRequired(),  false)  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getRequired(),  false)  {  requiredOpts.add(false);  }	  allowShortOpts(group.getRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
62	[BUG]  [BUGGY]  allowShortOpts(group.getRequired())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getRequired())  {  requiredOpts.add(true);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getRequired())  {  requiredOpts.add(true);  }	  allowShortOpts(group.getRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
63	[BUG]  [BUGGY]  found(group.getOption(),  option.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group.getOption(),  option.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group.getOption(),  option.getOptions())  {  requiredOpts.add(false);  }	  found(option.getOption(),    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
64	[BUG]  [BUGGY]  found(group.getOption(),  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group.getOption(),  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group.getOption(),  group.getOptions())  {  requiredOpts.add(false);  }	  found(option.getOption(),    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
65	[BUG]  [BUGGY]  allowShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    optionGroup.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
66	[BUG]  [BUGGY]  try  ==  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  ==  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  ==  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    optionGroup.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
67	[BUG]  [BUGGY]  allowShortOpts(group.getOptions(),  false))  {  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptions(),  false))  {  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptions(),  false))  {  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    optionGroup.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
68	[BUG]  [BUGGY]  allowShortOpts(group.getOptions(),  true)  {  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptions(),  true)  {  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptions(),  true)  {  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    optionGroup.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
69	[BUG]  [BUGGY]  group.setRequired(true,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.setRequired(true,  null);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.setRequired(true,  null);	  group.setRequired(false,    null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
70	[BUG]  [BUGGY]  group.setRequired(false,  null,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.setRequired(false,  null,  shortOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.setRequired(false,  null,  shortOpts);	  group.setRequired(false,    null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
71	[BUG]  [BUGGY]  group.setRequired(false,  null,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.setRequired(false,  null,  requiredOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.setRequired(false,  null,  requiredOpts);	  group.setRequired(false,    null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
72	[BUG]  [BUGGY]  found(group.getOptions(),  option.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group.getOptions(),  option.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group.getOptions(),  option.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	  found(option.getOptions(),    group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
73	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	  found(option.getOptions(),    group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
74	[BUG]  [BUGGY]  found(group.getOptions(),  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group.getOptions(),  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group.getOptions(),  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	  found(option.getOptions(),    group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
75	[BUG]  [BUGGY]  group.setRequired(false,  true,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.setRequired(false,  true,  shortOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.setRequired(false,  true,  shortOpts);	  group.setRequired(false,    true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
76	[BUG]  [BUGGY]  try  {  requiredOpts.add(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  requiredOpts.add(group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  requiredOpts.add(group);	  try    ==    requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
77	[BUG]  [BUGGY]  try  {  requiredOpts.add(null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  requiredOpts.add(null);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  requiredOpts.add(null);	  try    ==    requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
78	[BUG]  [BUGGY]  try  {  requiredOpts.add(group,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  requiredOpts.add(group,  false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  requiredOpts.add(group,  false);	  try    ==    requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
79	[BUG]  [BUGGY]  try  {  requiredOpts.add(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  requiredOpts.add(true);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  requiredOpts.add(true);	  try    ==    requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
80	[BUG]  [BUGGY]  optionGroups.put(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  optionGroups.put(group,  shortOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	optionGroups.put(group,  shortOpts);	  optionGroups.put(group,    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
81	[BUG]  [BUGGY]  optionGroups.put(group,  new  OptionGroup(group));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  optionGroups.put(group,  new  OptionGroup(group));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	optionGroups.put(group,  new  OptionGroup(group));	  optionGroups.put(group,    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
82	[BUG]  [BUGGY]  optionGroups.put(group,  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  optionGroups.put(group,  this);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	optionGroups.put(group,  this);	  optionGroups.put(group,    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
83	[BUG]  [BUGGY]  found(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(true);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(true);	  found(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
84	[BUG]  [BUGGY]  found(false,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(false,  group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(false,  group);	  found(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
85	[BUG]  [BUGGY]  found(false,  group.getOptions());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(false,  group.getOptions());  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(false,  group.getOptions());	  found(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
86	[BUG]  [BUGGY]  found(false,  group.getShortOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(false,  group.getShortOpts());  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(false,  group.getShortOpts());	  found(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
87	[BUG]  [BUGGY]  Annotation  requiredOpts  =  group.getRequired(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  requiredOpts  =  group.getRequired(),  shortOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  requiredOpts  =  group.getRequired(),  shortOpts);	  Annotation    requiredOpts    =    group.getRequired();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
88	[BUG]  [BUGGY]  Annotation  requiredOpts  =  group.getRequired(),  shortOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  requiredOpts  =  group.getRequired(),  shortOpts;  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  requiredOpts  =  group.getRequired(),  shortOpts;	  Annotation    requiredOpts    =    group.getRequired();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
89	[BUG]  [BUGGY]  Annotation  requiredOpts  =  group.getRequired(),  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  requiredOpts  =  group.getRequired(),  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  requiredOpts  =  group.getRequired(),  false);	  Annotation    requiredOpts    =    group.getRequired();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
90	[BUG]  [BUGGY]  allowRequired(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowRequired(true);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowRequired(true);	  allowRequired(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
91	[BUG]  [BUGGY]  enableRequired(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  enableRequired(true);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	enableRequired(true);	  allowRequired(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
92	[BUG]  [BUGGY]  allowRequired(false,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowRequired(false,  group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowRequired(false,  group);	  allowRequired(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
93	[BUG]  [BUGGY]  found(group.getOptions(),  option.isRequired())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group.getOptions(),  option.isRequired())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group.getOptions(),  option.isRequired())  {  requiredOpts.add(false);  }	  found(option.getOptions(),    group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
94	[BUG]  [BUGGY]  found(group.getOptions(),  group.isRequired())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group.getOptions(),  group.isRequired())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group.getOptions(),  group.isRequired())  {  requiredOpts.add(false);  }	  found(option.getOptions(),    group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
95	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getLeastRequiredOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getLeastRequiredOpts(),  longOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getLeastRequiredOpts(),  longOpts);	  OptionGroup    shortOpts    =    group.getLeastRequiredOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
96	[BUG]  [BUGGY]  found(group,  null.isRequired()))  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group,  null.isRequired()))  {  requiredOpts.add(null);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group,  null.isRequired()))  {  requiredOpts.add(null);  }	  found(null,    group.isRequired()))    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
97	[BUG]  [BUGGY]  found(group,  group.isRequired()))  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group,  group.isRequired()))  {  requiredOpts.add(null);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group,  group.isRequired()))  {  requiredOpts.add(null);  }	  found(null,    group.isRequired()))    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
98	[BUG]  [BUGGY]  found(null,  group.isRequired(),  false))  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(null,  group.isRequired(),  false))  {  requiredOpts.add(null);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(null,  group.isRequired(),  false))  {  requiredOpts.add(null);  }	  found(null,    group.isRequired()))    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
99	[BUG]  [BUGGY]  found(true)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(true)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(true)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	  found(false)    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
100	[BUG]  [BUGGY]  found()  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found()  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found()  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	  found(false)    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
101	[BUG]  [BUGGY]  allowShortOpts(group.getOptions(),  shortOpts)  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptions(),  shortOpts)  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptions(),  shortOpts)  {  requiredOpts.add(false);  }	  allowShortOpts(group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	101	None	replace
102	[BUG]  [BUGGY]  allowShortOpts(group.getOptions())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptions())  {  requiredOpts.add(true);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptions())  {  requiredOpts.add(true);  }	  allowShortOpts(group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	101	None	replace
103	[BUG]  [BUGGY]  requiredOpts.add(group.getOptionGroup(),  false,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  requiredOpts.add(group.getOptionGroup(),  false,  shortOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	requiredOpts.add(group.getOptionGroup(),  false,  shortOpts);	  requiredOpts.add(group.getOptionGroup(),    false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
104	[BUG]  [BUGGY]  requiredOpts.add(group.getOptionGroup(),  false,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  requiredOpts.add(group.getOptionGroup(),  false,  longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	requiredOpts.add(group.getOptionGroup(),  false,  longOpts);	  requiredOpts.add(group.getOptionGroup(),    false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
105	[BUG]  [BUGGY]  requiredOpts.add(group.getOptionGroup(),  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  requiredOpts.add(group.getOptionGroup(),  null);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	requiredOpts.add(group.getOptionGroup(),  null);	  requiredOpts.add(group.getOptionGroup(),    false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
106	[BUG]  [BUGGY]  found(true)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(true)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(true)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  found(false)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	108	None	replace
107	[BUG]  [BUGGY]  found()  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found()  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found()  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  found(false)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	108	None	replace
108	[BUG]  [BUGGY]  allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
109	[BUG]  [BUGGY]  allowShortOpts(group.getOptionGroups())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptionGroups())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptionGroups())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
110	[BUG]  [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired(),  shortOpts)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
111	[BUG]  [BUGGY]  forceRequired())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  forceRequired())  {  requiredOpts.add(true);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	forceRequired())  {  requiredOpts.add(true);  }	  forceRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
112	[BUG]  [BUGGY]  forceRequired())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  forceRequired())  {  requiredOpts.add(null);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	forceRequired())  {  requiredOpts.add(null);  }	  forceRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
113	[BUG]  [BUGGY]  force(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  force(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	force(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  group);  }	  force(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
114	[BUG]  [BUGGY]  requiredOpts.add(group.getOptionGroup(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  requiredOpts.add(group.getOptionGroup(),  shortOpts,  longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	requiredOpts.add(group.getOptionGroup(),  shortOpts,  longOpts);	  requiredOpts.add(group.getOptionGroup(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
115	[BUG]  [BUGGY]  requiredOpts.add(group.getOptionGroup(),  shortOpts,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  requiredOpts.add(group.getOptionGroup(),  shortOpts,  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	requiredOpts.add(group.getOptionGroup(),  shortOpts,  false);	  requiredOpts.add(group.getOptionGroup(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
116	[BUG]  [BUGGY]  enableShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  enableShortOpts();  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	enableShortOpts();	  allowShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
117	[BUG]  [BUGGY]  Annotation  group  =(Annotation)requiredOpts.get(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  group  =(Annotation)requiredOpts.get(group,  shortOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  group  =(Annotation)requiredOpts.get(group,  shortOpts);	  Annotation    group    =(Annotation)requiredOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
118	[BUG]  [BUGGY]  Annotation  group  =(Annotation)requiredOpts.get(group.optionGroup);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  group  =(Annotation)requiredOpts.get(group.optionGroup);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  group  =(Annotation)requiredOpts.get(group.optionGroup);	  Annotation    group    =(Annotation)requiredOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
119	[BUG]  [BUGGY]  Annotation  group  =(Annotation)requiredOpts.get(group.id);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  group  =(Annotation)requiredOpts.get(group.id);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  group  =(Annotation)requiredOpts.get(group.id);	  Annotation    group    =(Annotation)requiredOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
120	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	For(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
121	[BUG]  [BUGGY]  For(Option  group  :  option.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  For(Option  group  :  option.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	For(Option  group  :  option.getOptions())  {  requiredOpts.add(false);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
122	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	For(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
123	[BUG]  [BUGGY]  allowShortOpts(group.getOptions())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptions())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptions())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
124	[BUG]  [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired(),  shortOpts)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
125	[BUG]  [BUGGY]  allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
126	[BUG]  [BUGGY]  group.add(requiredOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(requiredOpts,  group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(requiredOpts,  group);	  group.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
127	[BUG]  [BUGGY]  group.add(new  OptionGroup(group));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(new  OptionGroup(group));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(new  OptionGroup(group));	  group.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
128	[BUG]  [BUGGY]  cast(group.getOptions(),  false)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  cast(group.getOptions(),  false)  {  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	cast(group.getOptions(),  false)  {	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
129	[BUG]  [BUGGY]  cast(group.getOptions(),  false));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  cast(group.getOptions(),  false));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	cast(group.getOptions(),  false));	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
130	[BUG]  [BUGGY]  cast(group.getOptions(),  true)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  cast(group.getOptions(),  true)  {  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	cast(group.getOptions(),  true)  {	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
131	[BUG]  [BUGGY]  OptionGroup  group  =  group.getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  group  =  group.getOptions();  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  group  =  group.getOptions();	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
132	[BUG]  [BUGGY]  group.add(longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(longOpts,  shortOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(longOpts,  shortOpts);	  group.add(requiredOpts,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
133	[BUG]  [BUGGY]  group.add(longOpts,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(longOpts,  requiredOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(longOpts,  requiredOpts);	  group.add(requiredOpts,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
134	[BUG]  [BUGGY]  group.add(requiredOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(requiredOpts,  longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(requiredOpts,  longOpts);	  group.add(requiredOpts,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
135	[BUG]  [BUGGY]  group.add(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(group,  shortOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(group,  shortOpts);	  group.add(requiredOpts,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
136	[BUG]  [BUGGY]  foundOpts.add(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  foundOpts.add(group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	foundOpts.add(group);	  foundOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
137	[BUG]  [BUGGY]  foundOpts.add(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  foundOpts.add(true);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	foundOpts.add(true);	  foundOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
138	[BUG]  [BUGGY]  foundOpts.add(false,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  foundOpts.add(false,  group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	foundOpts.add(false,  group);	  foundOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
139	[BUG]  [BUGGY]  allowShortOpts(group.getName(),  group.isRequired());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getName(),  group.isRequired());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getName(),  group.isRequired());	  allowShortOpts(group.isRequired());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
140	[BUG]  [BUGGY]  allowShortOpts(group.getRequired());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getRequired());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getRequired());	  allowShortOpts(group.isRequired());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
141	[BUG]  [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired(),  shortOpts);	  allowShortOpts(group.isRequired());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
142	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(false);	  List    <    Option>    shortOpts    =    group.getShortOpts(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
143	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(false,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(false,  group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(false,  group);	  List    <    Option>    shortOpts    =    group.getShortOpts(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
144	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(true,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(true,  longOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(true,  longOpts);	  List    <    Option>    shortOpts    =    group.getShortOpts(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
145	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(false,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(false,  longOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(false,  longOpts);	  List    <    Option>    shortOpts    =    group.getShortOpts(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
146	[BUG]  [BUGGY]  found(true,  group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(true,  group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(true,  group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	  found(false,    group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
147	[BUG]  [BUGGY]  uncovered(true,  group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  uncovered(true,  group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	uncovered(true,  group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	  found(false,    group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
148	[BUG]  [BUGGY]  group.add(group,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(group,  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(group,  false);	  group.add(requiredOpts,    false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
149	[BUG]  [BUGGY]  group.add(requiredOpts,  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(requiredOpts,  true);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(requiredOpts,  true);	  group.add(requiredOpts,    false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
150	[BUG]  [BUGGY]  group.add(requiredOpts,  false,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(requiredOpts,  false,  shortOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(requiredOpts,  false,  shortOpts);	  group.add(requiredOpts,    false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
151	[BUG]  [BUGGY]  group.add(longOpts,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(longOpts,  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(longOpts,  false);	  group.add(requiredOpts,    false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
152	[BUG]  [BUGGY]  For(Option  group  :  option.getOptions())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  For(Option  group  :  option.getOptions())  {  requiredOpts.add(group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	For(Option  group  :  option.getOptions())  {  requiredOpts.add(group);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
153	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getRequiredOpts(),  requiredOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getRequiredOpts(),  requiredOpts,  longOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getRequiredOpts(),  requiredOpts,  longOpts);	  OptionGroup    shortOpts    =    group.getRequiredOpts(),    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
154	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getRequiredOpts(),  lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getRequiredOpts(),  lengthOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getRequiredOpts(),  lengthOpts);	  OptionGroup    shortOpts    =    group.getRequiredOpts(),    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
155	[BUG]  [BUGGY]  found(group,  option.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group,  option.getOptions())  {  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group,  option.getOptions())  {	  found(option,    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
156	[BUG]  [BUGGY]  found(group,  group.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group,  group.getOptions())  {  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group,  group.getOptions())  {	  found(option,    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
157	[BUG]  [BUGGY]  found(group,  opt.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group,  opt.getOptions())  {  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group,  opt.getOptions())  {	  found(option,    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
158	[BUG]  [BUGGY]  found(group,  options.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group,  options.getOptions())  {  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group,  options.getOptions())  {	  found(option,    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
159	[BUG]  [BUGGY]  try  >>  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  >>  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  >>  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	  try    ==    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
160	[BUG]  [BUGGY]  try  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	  try    ==    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
161	[BUG]  [BUGGY]  allowRequired()  &&  group.isRequired())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowRequired()  &&  group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowRequired()  &&  group.isRequired())  {  requiredOpts.add(group);  }	  allowRequired())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
162	[BUG]  [BUGGY]  enableRequired())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  enableRequired())  {  requiredOpts.add(group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	enableRequired())  {  requiredOpts.add(group);  }	  allowRequired())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
163	[BUG]  [BUGGY]  allowRequired()  &&  requiredOpts.contains(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowRequired()  &&  requiredOpts.contains(group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowRequired()  &&  requiredOpts.contains(group);	  allowRequired())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
164	[BUG]  [BUGGY]  found(true,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(true,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(true,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  found(false,    group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	107	None	replace
165	[BUG]  [BUGGY]  uncovered(true,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  uncovered(true,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	uncovered(true,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  found(false,    group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	107	None	replace
166	[BUG]  [BUGGY]  allowShortOpts(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(longOpts);	  allowShortOpts(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
167	[BUG]  [BUGGY]  allowShortOpts(group,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group,  longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group,  longOpts);	  allowShortOpts(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
168	[BUG]  [BUGGY]  allowShortOpts(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group,  shortOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group,  shortOpts);	  allowShortOpts(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
169	[BUG]  [BUGGY]  allowShortOpts(longOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(longOpts,  group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(longOpts,  group);	  allowShortOpts(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
170	[BUG]  [BUGGY]  allowShortOpts(group.getOptions())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptions())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptions())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
171	[BUG]  [BUGGY]  allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
172	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getLargerOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getLargerOpts(),  longOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getLargerOpts(),  longOpts);	  OptionGroup    shortOpts    =    group.getLargerOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
173	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getLargerOpts(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getLargerOpts(true);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getLargerOpts(true);	  OptionGroup    shortOpts    =    group.getLargerOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
174	[BUG]  [BUGGY]  allowShortOpts(group.getOptions(),  true)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptions(),  true)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptions(),  true)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  allowShortOpts(group.getOptions(),    false)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	109	None	replace
175	[BUG]  [BUGGY]  enableShortOpts(group.getOptions(),  true)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  enableShortOpts(group.getOptions(),  true)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	enableShortOpts(group.getOptions(),  true)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  allowShortOpts(group.getOptions(),    false)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	109	None	replace
176	[BUG]  [BUGGY]  force(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  force(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	force(Option  option  :  group.getOptions())  {  requiredOpts.add(group);	  force(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
177	[BUG]  [BUGGY]  force(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  force(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  shortOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	force(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  shortOpts);	  force(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
178	[BUG]  [BUGGY]  found(group.isRequired())&&  shortOpts.contains(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group.isRequired())&&  shortOpts.contains(group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group.isRequired())&&  shortOpts.contains(group);	  found(group.isRequired())&&    requiredOpts.contains(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
179	[BUG]  [BUGGY]  found(group.isRequired(),  shortOpts)&&  requiredOpts.contains(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group.isRequired(),  shortOpts)&&  requiredOpts.contains(group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group.isRequired(),  shortOpts)&&  requiredOpts.contains(group);	  found(group.isRequired())&&    requiredOpts.contains(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
180	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts);	  OptionGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
181	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts;  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts;	  OptionGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
182	[BUG]  [BUGGY]  shortOpts.add(group,  LongOpts.NEVER,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group,  LongOpts.NEVER,  longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group,  LongOpts.NEVER,  longOpts);	  shortOpts.add(group,    LongOpts.NEVER);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
183	[BUG]  [BUGGY]  shortOpts.add(group,  LongOpts.NEVER,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group,  LongOpts.NEVER,  0);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group,  LongOpts.NEVER,  0);	  shortOpts.add(group,    LongOpts.NEVER);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
184	[BUG]  [BUGGY]  shortOpts.add(longOpts,  LongOpts.NEVER);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(longOpts,  LongOpts.NEVER);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(longOpts,  LongOpts.NEVER);	  shortOpts.add(group,    LongOpts.NEVER);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
185	[BUG]  [BUGGY]  shortOpts.add(group,  LongOpts.NEVER,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group,  LongOpts.NEVER,  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group,  LongOpts.NEVER,  false);	  shortOpts.add(group,    LongOpts.NEVER);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
186	[BUG]  [BUGGY]  force(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  force(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	force(Option  option  :  group.getOptions())  {  requiredOpts.add(true);	  force(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
187	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getLongOpts(false);	  List    <    Option>    shortOpts    =    group.getLongOpts(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
188	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(false,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(false,  group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getLongOpts(false,  group);	  List    <    Option>    shortOpts    =    group.getLongOpts(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
189	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(true,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(true,  longOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getLongOpts(true,  longOpts);	  List    <    Option>    shortOpts    =    group.getLongOpts(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
190	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(true,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(true,  false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getLongOpts(true,  false);	  List    <    Option>    shortOpts    =    group.getLongOpts(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
191	[BUG]  [BUGGY]  allowShortOpts(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(true);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(true);	  allowShortOpts(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
192	[BUG]  [BUGGY]  allowShortOpts(false,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(false,  group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(false,  group);	  allowShortOpts(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
193	[BUG]  [BUGGY]  enableShortOpts(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  enableShortOpts(true);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	enableShortOpts(true);	  allowShortOpts(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
194	[BUG]  [BUGGY]  allowShortOpts(group.getOptions(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptions(),  shortOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptions(),  shortOpts);	  allowShortOpts(group.getOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
195	[BUG]  [BUGGY]  allowShortOpts(group.getOptions(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptions(),  longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptions(),  longOpts);	  allowShortOpts(group.getOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
196	[BUG]  [BUGGY]  allowShortOpts(group.getOptions(),  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptions(),  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptions(),  false);	  allowShortOpts(group.getOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
197	[BUG]  [BUGGY]  allowShortOpts(longOpts.getOptions());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(longOpts.getOptions());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(longOpts.getOptions());	  allowShortOpts(group.getOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
198	[BUG]  [BUGGY]  force(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  force(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	force(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }	  force(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
199	[BUG]  [BUGGY]  allowShortOpts(group.getOptionGroups())  {  for(Option  option  :  group.getOptionGroups())  {  neededOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptionGroups())  {  for(Option  option  :  group.getOptionGroups())  {  neededOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptionGroups())  {  for(Option  option  :  group.getOptionGroups())  {  neededOpts.add(option);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    neededOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
200	[BUG]  [BUGGY]  allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptionGroups())  {  neededOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptionGroups())  {  neededOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getRequired())  {  for(Option  option  :  group.getOptionGroups())  {  neededOpts.add(option);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    neededOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
201	[BUG]  [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  for(Option  option  :  group.getOptionGroups())  {  neededOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  for(Option  option  :  group.getOptionGroups())  {  neededOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired(),  shortOpts)  {  for(Option  option  :  group.getOptionGroups())  {  neededOpts.add(option);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    neededOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
202	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  this.longOpts.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  this.longOpts.getLongOpts();  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  this.longOpts.getLongOpts();	  List    <    Option>    shortOpts    =    longOpts.getLongOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
203	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  optionGroups.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  optionGroups.getLongOpts();  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  optionGroups.getLongOpts();	  List    <    Option>    shortOpts    =    longOpts.getLongOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
204	[BUG]  [BUGGY]  forceOptions(group,  option.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  forceOptions(group,  option.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	forceOptions(group,  option.getOptions())  {  requiredOpts.add(false);  }	  forceOptions(option,    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
205	[BUG]  [BUGGY]  forceOptions(option,  group.getOptions(),  shortOpts)  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  forceOptions(option,  group.getOptions(),  shortOpts)  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	forceOptions(option,  group.getOptions(),  shortOpts)  {  requiredOpts.add(false);  }	  forceOptions(option,    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
206	[BUG]  [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  requiredOpts.add(group);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired(),  shortOpts)  {  requiredOpts.add(group);  }	  allowShortOpts(group.isRequired())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
207	[BUG]  [BUGGY]  allowShortOpts(group.getRequired())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getRequired())  {  requiredOpts.add(group);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getRequired())  {  requiredOpts.add(group);  }	  allowShortOpts(group.isRequired())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
208	[BUG]  [BUGGY]  allowShortOpts(group.getName())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getName())  {  requiredOpts.add(group);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getName())  {  requiredOpts.add(group);  }	  allowShortOpts(group.isRequired())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
209	[BUG]  [BUGGY]  optionGroups.add(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  optionGroups.add(group,  shortOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	optionGroups.add(group,  shortOpts);	  optionGroups.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
210	[BUG]  [BUGGY]  optionGroups.add(group,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  optionGroups.add(group,  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	optionGroups.add(group,  false);	  optionGroups.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
211	[BUG]  [BUGGY]  optionGroups.add(group,  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  optionGroups.add(group,  this);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	optionGroups.add(group,  this);	  optionGroups.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
212	[BUG]  [BUGGY]  allowRequired(true)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowRequired(true)  {  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowRequired(true)  {	  allowRequired(false)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
213	[BUG]  [BUGGY]  enableRequired(true)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  enableRequired(true)  {  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	enableRequired(true)  {	  allowRequired(false)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
214	[BUG]  [BUGGY]  allowRequired(false,  group.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowRequired(false,  group.getOptions())  {  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowRequired(false,  group.getOptions())  {	  allowRequired(false)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
215	[BUG]  [BUGGY]  cuplur.requiredOpts.add(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  cuplur.requiredOpts.add(group,  shortOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	cuplur.requiredOpts.add(group,  shortOpts);	  cuplur.requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
216	[BUG]  [BUGGY]  cuplur.requiredOpts.add(group.getName());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  cuplur.requiredOpts.add(group.getName());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	cuplur.requiredOpts.add(group.getName());	  cuplur.requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
217	[BUG]  [BUGGY]  cuplur.requiredOpts.add(longOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  cuplur.requiredOpts.add(longOpts,  group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	cuplur.requiredOpts.add(longOpts,  group);	  cuplur.requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
218	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  For(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	For(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
219	[BUG]  [BUGGY]  try  ==  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  ==  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  ==  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
220	[BUG]  [BUGGY]  allowShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
221	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  option.setRequired(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  For(Option  option  :  group.getOptions())  {  option.setRequired(true);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	For(Option  option  :  group.getOptions())  {  option.setRequired(true);  }	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
222	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  longOpts.getLongOpts(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  longOpts.getLongOpts(),  group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  longOpts.getLongOpts(),  group);	  List    <    Option>    shortOpts    =    group.getLongOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
223	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts,  requiredOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts,  requiredOpts);	  List    <    Option>    shortOpts    =    group.getLongOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
224	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts,  false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts,  false);	  List    <    Option>    shortOpts    =    group.getLongOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
225	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts,  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts,  optionGroups);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts,  optionGroups);	  List    <    Option>    shortOpts    =    group.getLongOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
226	[BUG]  [BUGGY]  found(group.getName(),  true)  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group.getName(),  true)  {  requiredOpts.add(group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group.getName(),  true)  {  requiredOpts.add(group);  }	  found(group.getName(),    false)    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
227	[BUG]  [BUGGY]  optionGroup.setRequired(false);  addOption(option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  optionGroup.setRequired(false);  addOption(option);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	optionGroup.setRequired(false);  addOption(option);	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    optionGroup.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
228	[BUG]  [BUGGY]  optionGroup.setRequired(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  optionGroup.setRequired(false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	optionGroup.setRequired(false);	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    optionGroup.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
229	[BUG]  [BUGGY]  shortOpts.add(group.getShortOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group.getShortOpts(),  longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group.getShortOpts(),  longOpts);	  shortOpts.add(group.getShortOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
230	[BUG]  [BUGGY]  shortOpts.add(group.getShortOpts(),  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group.getShortOpts(),  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group.getShortOpts(),  false);	  shortOpts.add(group.getShortOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
231	[BUG]  [BUGGY]  shortOpts.add(group.getShortOpts(),  group.getLongOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group.getShortOpts(),  group.getLongOpts());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group.getShortOpts(),  group.getLongOpts());	  shortOpts.add(group.getShortOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
232	[BUG]  [BUGGY]  longOpts.add(group.getShortOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  longOpts.add(group.getShortOpts());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	longOpts.add(group.getShortOpts());	  shortOpts.add(group.getShortOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
233	[BUG]  [BUGGY]  found(group,  null.isRequired());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group,  null.isRequired());  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group,  null.isRequired());	  found(null,    group.isRequired());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
234	[BUG]  [BUGGY]  found(group,  null,  group.isRequired());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group,  null,  group.isRequired());  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group,  null,  group.isRequired());	  found(null,    group.isRequired());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
235	[BUG]  [BUGGY]  found(group,  group.isRequired());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group,  group.isRequired());  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group,  group.isRequired());	  found(null,    group.isRequired());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
236	[BUG]  [BUGGY]  found(null,  group.getName(),  group.isRequired());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(null,  group.getName(),  group.isRequired());  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(null,  group.getName(),  group.isRequired());	  found(null,    group.isRequired());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
237	[BUG]  [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired(),  shortOpts)  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired(),  shortOpts)  {  requiredOpts.add(false);  }	  allowShortOpts(group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
238	[BUG]  [BUGGY]  allowShortOpts(group.isRequired(),  false)  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired(),  false)  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired(),  false)  {  requiredOpts.add(false);  }	  allowShortOpts(group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
239	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getLongOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getLongOpts(),  longOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getLongOpts(),  longOpts);	  OptionGroup    shortOpts    =    group.getLongOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
240	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getLongOpts()  -  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getLongOpts()  -  1;  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getLongOpts()  -  1;	  OptionGroup    shortOpts    =    group.getLongOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
241	[BUG]  [BUGGY]  shortOpts.add(longOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(longOpts,  group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(longOpts,  group);	  shortOpts.add(group,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
242	[BUG]  [BUGGY]  shortOpts.add(group,  longOpts,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group,  longOpts,  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group,  longOpts,  false);	  shortOpts.add(group,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
243	[BUG]  [BUGGY]  shortOpts.add(group,  longOpts,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group,  longOpts,  0);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group,  longOpts,  0);	  shortOpts.add(group,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
244	[BUG]  [BUGGY]  shortOpts.add(group,  group.longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group,  group.longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group,  group.longOpts);	  shortOpts.add(group,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
245	[BUG]  [BUGGY]  Annotation  shortOpts  =  group.getShortOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  shortOpts  =  group.getShortOpts(),  longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  shortOpts  =  group.getShortOpts(),  longOpts);	  Annotation    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
246	[BUG]  [BUGGY]  Annotation  shortOpts  =  group.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  shortOpts  =  group.getLongOpts();  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  shortOpts  =  group.getLongOpts();	  Annotation    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
247	[BUG]  [BUGGY]  Annotation  shortOpts  =  group.getShortOpts(),  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  shortOpts  =  group.getShortOpts(),  longOpts;  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  shortOpts  =  group.getShortOpts(),  longOpts;	  Annotation    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
248	[BUG]  [BUGGY]  found(true,  group.isRequired())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(true,  group.isRequired())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(true,  group.isRequired())  {  requiredOpts.add(option);  }	  found(false,    group.isRequired())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
249	[BUG]  [BUGGY]  found(false,  group.isRequired(),  shortOpts)  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(false,  group.isRequired(),  shortOpts)  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(false,  group.isRequired(),  shortOpts)  {  requiredOpts.add(option);  }	  found(false,    group.isRequired())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
250	[BUG]  [BUGGY]  found(false,  shortOpts.isRequired())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(false,  shortOpts.isRequired())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(false,  shortOpts.isRequired())  {  requiredOpts.add(option);  }	  found(false,    group.isRequired())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
251	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  longOpts.getShortOpts(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  longOpts.getShortOpts(),  group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  longOpts.getShortOpts(),  group);	  List    <    Option>    shortOpts    =    group.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
252	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts,  requiredOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts,  requiredOpts);	  List    <    Option>    shortOpts    =    group.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
253	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  requiredOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(),  requiredOpts);	  List    <    Option>    shortOpts    =    group.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
254	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts,  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts,  optionGroups);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts,  optionGroups);	  List    <    Option>    shortOpts    =    group.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
255	[BUG]  [BUGGY]  buckets.add(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  buckets.add(group,  shortOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	buckets.add(group,  shortOpts);	  buckets.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
256	[BUG]  [BUGGY]  buckets.add(group.getOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  buckets.add(group.getOpts());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	buckets.add(group.getOpts());	  buckets.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
257	[BUG]  [BUGGY]  buckets.add(group.getOptions());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  buckets.add(group.getOptions());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	buckets.add(group.getOptions());	  buckets.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
258	[BUG]  [BUGGY]  allowMutator(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowMutator(group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowMutator(group);	  allowMutator(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
259	[BUG]  [BUGGY]  allowMutator(group,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowMutator(group,  requiredOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowMutator(group,  requiredOpts);	  allowMutator(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
260	[BUG]  [BUGGY]  allowMutator(group.getRequiredOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowMutator(group.getRequiredOpts());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowMutator(group.getRequiredOpts());	  allowMutator(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
261	[BUG]  [BUGGY]  allowMutator(group.getOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowMutator(group.getOpts());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowMutator(group.getOpts());	  allowMutator(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
262	[BUG]  [BUGGY]  Annotation  shortOpts  =  longOpts.get(group.getName());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  shortOpts  =  longOpts.get(group.getName());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  shortOpts  =  longOpts.get(group.getName());	  Annotation    shortOpts    =    shortOpts.get(group.getName());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
263	[BUG]  [BUGGY]  Annotation  shortOpts  =  shortOpts.get(group.getName(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  shortOpts  =  shortOpts.get(group.getName(),  longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  shortOpts  =  shortOpts.get(group.getName(),  longOpts);	  Annotation    shortOpts    =    shortOpts.get(group.getName());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
264	[BUG]  [BUGGY]  Annotation  shortOpts  =  group.getShortOpts(group.getName());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  shortOpts  =  group.getShortOpts(group.getName());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  shortOpts  =  group.getShortOpts(group.getName());	  Annotation    shortOpts    =    shortOpts.get(group.getName());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
265	[BUG]  [BUGGY]  allowShortOpts(group.getOptions(),  true)  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptions(),  true)  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptions(),  true)  {  requiredOpts.add(false);  }	  allowShortOpts(group.getOptions(),    false)    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
266	[BUG]  [BUGGY]  allowShortOpts(group.getOptions(),  false)  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptions(),  false)  {  requiredOpts.add(true);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptions(),  false)  {  requiredOpts.add(true);  }	  allowShortOpts(group.getOptions(),    false)    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
267	[BUG]  [BUGGY]  enableShortOpts(group.getOptions(),  true)  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  enableShortOpts(group.getOptions(),  true)  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	enableShortOpts(group.getOptions(),  true)  {  requiredOpts.add(false);  }	  allowShortOpts(group.getOptions(),    false)    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
268	[BUG]  [BUGGY]  try  {  requiredOpts.add(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  requiredOpts.add(group,  shortOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  requiredOpts.add(group,  shortOpts);	  try    ==    requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
269	[BUG]  [BUGGY]  try  {  requiredOpts.add(longOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  requiredOpts.add(longOpts,  group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  requiredOpts.add(longOpts,  group);	  try    ==    requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
270	[BUG]  [BUGGY]  group.add(new  OptionGroup(requiredOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(new  OptionGroup(requiredOpts));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(new  OptionGroup(requiredOpts));	  group.add(new    OptionGroup(longOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
271	[BUG]  [BUGGY]  group.add(new  OptionGroup(longOpts,  lengthOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(new  OptionGroup(longOpts,  lengthOpts));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(new  OptionGroup(longOpts,  lengthOpts));	  group.add(new    OptionGroup(longOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
272	[BUG]  [BUGGY]  group.add(new  OptionGroup(shortOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(new  OptionGroup(shortOpts));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(new  OptionGroup(shortOpts));	  group.add(new    OptionGroup(longOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
273	[BUG]  [BUGGY]  requiredOpts.add(group.getOptionGroup(),  this,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  requiredOpts.add(group.getOptionGroup(),  this,  shortOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	requiredOpts.add(group.getOptionGroup(),  this,  shortOpts);	  requiredOpts.add(group.getOptionGroup(),    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
274	[BUG]  [BUGGY]  allowShortOpts(group.getOptions())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptions())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptions())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(true);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
275	[BUG]  [BUGGY]  shortOpts.add(group,  LongOpts.NEVER,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group,  LongOpts.NEVER,  group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group,  LongOpts.NEVER,  group);	  shortOpts.add(group,    LongOpts.NEVER);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
276	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  new  ShortOpts(group.getShortOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  ShortOpts  shortOpts  =  new  ShortOpts(group.getShortOpts());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	ShortOpts  shortOpts  =  new  ShortOpts(group.getShortOpts());	  shortOpts.add(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
277	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  new  ShortOpts(group.getLongOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  ShortOpts  shortOpts  =  new  ShortOpts(group.getLongOpts());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	ShortOpts  shortOpts  =  new  ShortOpts(group.getLongOpts());	  shortOpts.add(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
278	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getRequiredOpts(),  longOpts,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getRequiredOpts(),  longOpts,  null);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getRequiredOpts(),  longOpts,  null);	  OptionGroup    shortOpts    =    group.getRequiredOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
279	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(false, " ");  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(false, " ");  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(false, " ");	  List    <    Option>    shortOpts    =    group.getShortOpts(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
280	[BUG]  [BUGGY]  OptionGroup  group  =  group.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  group  =  group.getOptionGroup();  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  group  =  group.getOptionGroup();	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
281	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getLargerOpts(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getLargerOpts(false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getLargerOpts(false);	  OptionGroup    shortOpts    =    group.getLargerOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
282	[BUG]  [BUGGY]  uncovered(true)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  uncovered(true)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	uncovered(true)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  found(false)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	108	None	replace
283	[BUG]  [BUGGY]  try  {  requiredOpts.add(group,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  requiredOpts.add(group,  null);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  requiredOpts.add(group,  null);	  try    ==    requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
284	[BUG]  [BUGGY]  find(group,  group.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  find(group,  group.getOptions())  {  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	find(group,  group.getOptions())  {	  found(option,    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
285	[BUG]  [BUGGY]  uncovered(true,  group.isRequired())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  uncovered(true,  group.isRequired())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	uncovered(true,  group.isRequired())  {  requiredOpts.add(option);  }	  found(false,    group.isRequired())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
286	[BUG]  [BUGGY]  uncovered(true)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  uncovered(true)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	uncovered(true)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	  found(false)    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
287	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
288	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	For(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  group);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
289	[BUG]  [BUGGY]  force(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  force(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	force(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);	  force(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
290	[BUG]  [BUGGY]  allowRequiredOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowRequiredOpts();  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowRequiredOpts();	  allowShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
291	[BUG]  [BUGGY]  allowLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowLongOpts();  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowLongOpts();	  allowShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
292	[BUG]  [BUGGY]  forceRequired())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  forceRequired())  {  requiredOpts.add(group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	forceRequired())  {  requiredOpts.add(group);  }	  forceRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
293	[BUG]  [BUGGY]  allowShortOpts(group.isRequired())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired())  {  requiredOpts.add(true);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired())  {  requiredOpts.add(true);  }	  allowShortOpts(group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
294	[BUG]  [BUGGY]  try  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }	  try    ==    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
295	[BUG]  [BUGGY]  try  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  try    ==    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
296	[BUG]  [BUGGY]  try  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }	  try    ==    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
297	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }	  try    ==    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
298	[BUG]  [BUGGY]  found(group.getRequired())&&  requiredOpts.contains(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group.getRequired())&&  requiredOpts.contains(group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group.getRequired())&&  requiredOpts.contains(group);	  found(group.isRequired())&&    requiredOpts.contains(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
299	[BUG]  [BUGGY]  Annotation  requiredOpts  =  group.getRequiredOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  requiredOpts  =  group.getRequiredOpts();  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  requiredOpts  =  group.getRequiredOpts();	  Annotation    requiredOpts    =    group.getRequired();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
300	[BUG]  [BUGGY]  Annotation  requiredOpts  =  group.required();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  requiredOpts  =  group.required();  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  requiredOpts  =  group.required();	  Annotation    requiredOpts    =    group.getRequired();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
301	[BUG]  [BUGGY]  AnnotationGroup  shortOpts  =  group.getRequiredOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  AnnotationGroup  shortOpts  =  group.getRequiredOpts();  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	AnnotationGroup  shortOpts  =  group.getRequiredOpts();	  AnnotationGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
302	[BUG]  [BUGGY]  shortOpts.add(group,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group,  null);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group,  null);	  shortOpts.add(group,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
303	[BUG]  [BUGGY]  shortOpts.add(group,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group,  0);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group,  0);	  shortOpts.add(group,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
304	[BUG]  [BUGGY]  shortOpts.add(group,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group,  group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group,  group);	  shortOpts.add(group,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
305	[BUG]  [BUGGY]  buckets.add(group,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  buckets.add(group,  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	buckets.add(group,  false);	  buckets.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
306	[BUG]  [BUGGY]  buckets.add(group,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  buckets.add(group,  null);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	buckets.add(group,  null);	  buckets.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
307	[BUG]  [BUGGY]  buckets.add(group.getOptionGroup());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  buckets.add(group.getOptionGroup());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	buckets.add(group.getOptionGroup());	  buckets.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
308	[BUG]  [BUGGY]  forceOption(option,  group.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  forceOption(option,  group.getOptions())  {  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	forceOption(option,  group.getOptions())  {	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    optionGroup.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
309	[BUG]  [BUGGY]  Annotation  group  =(Annotation)this.requiredOpts.get(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  group  =(Annotation)this.requiredOpts.get(group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  group  =(Annotation)this.requiredOpts.get(group);	  Annotation    group    =(Annotation)requiredOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
310	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  shortOpts,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  shortOpts,  false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(),  shortOpts,  false);	  List    <    Option>    shortOpts    =    group.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
311	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts,  false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts,  false);	  List    <    Option>    shortOpts    =    group.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
312	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  this.longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  this.longOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(),  this.longOpts);	  List    <    Option>    shortOpts    =    group.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
313	[BUG]  [BUGGY]  Annotation  shortOpts  =  group.getRequiredOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  shortOpts  =  group.getRequiredOpts();  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  shortOpts  =  group.getRequiredOpts();	  Annotation    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
314	[BUG]  [BUGGY]  find(group.getName(),  true));  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  find(group.getName(),  true));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	find(group.getName(),  true));	  found(group.getName(),    false));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
315	[BUG]  [BUGGY]  found(group.getName(),  false,  group.isRequired());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group.getName(),  false,  group.isRequired());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group.getName(),  false,  group.isRequired());	  found(group.getName(),    false));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
316	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
317	[BUG]  [BUGGY]  force(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  force(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	force(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);	  force(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
318	[BUG]  [BUGGY]  force(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  force(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	force(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);	  force(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
319	[BUG]  [BUGGY]  allowShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  true);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  true);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
320	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
321	[BUG]  [BUGGY]  group.add(new  OptionGroup(longOpts,  false));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(new  OptionGroup(longOpts,  false));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(new  OptionGroup(longOpts,  false));	  group.add(new    OptionGroup(longOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
322	[BUG]  [BUGGY]  group.add(new  OptionGroup(longOpts,  null));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(new  OptionGroup(longOpts,  null));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(new  OptionGroup(longOpts,  null));	  group.add(new    OptionGroup(longOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
323	[BUG]  [BUGGY]  found(false,  group.isRequired());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(false,  group.isRequired());  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(false,  group.isRequired());	  found(null,    group.isRequired());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
324	[BUG]  [BUGGY]  found(null,  group.getOptions());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(null,  group.getOptions());  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(null,  group.getOptions());	  found(null,    group.isRequired());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
325	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)group.getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)group.getOptions();  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =(OptionGroup)group.getOptions();	  optionGroups.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
326	[BUG]  [BUGGY]  allowShortOpts(group,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group,  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group,  false);	  allowShortOpts(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
327	[BUG]  [BUGGY]  allowShortOpts(group.isRequired(),  false)  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired(),  false)  {  requiredOpts.add(group);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired(),  false)  {  requiredOpts.add(group);  }	  allowShortOpts(group.isRequired())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
328	[BUG]  [BUGGY]  Annotation  group  =(Annotation)group.getOption();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  group  =(Annotation)group.getOption();  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  group  =(Annotation)group.getOption();	  Annotation    group    =(Annotation)group.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
329	[BUG]  [BUGGY]  Annotation  group  =(Annotation)group.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  group  =(Annotation)group.clone();  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  group  =(Annotation)group.clone();	  Annotation    group    =(Annotation)group.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
330	[BUG]  [BUGGY]  foundOpts.add(group,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  foundOpts.add(group,  false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	foundOpts.add(group,  false);	  foundOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
331	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(),  shortOpts,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(),  shortOpts,  false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getLongOpts(),  shortOpts,  false);	  List    <    Option>    shortOpts    =    group.getLongOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
332	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts,  null);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts,  null);	  List    <    Option>    shortOpts    =    group.getLongOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
333	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  new  OptionGroup(group.getOptions());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  new  OptionGroup(group.getOptions());  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  new  OptionGroup(group.getOptions());	  optionGroups.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
334	[BUG]  [BUGGY]  force(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  force(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	force(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }	  force(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
335	[BUG]  [BUGGY]  allowRequired())  {  requiredOpts.add(group,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowRequired())  {  requiredOpts.add(group,  false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowRequired())  {  requiredOpts.add(group,  false);  }	  allowRequired())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
336	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getLeastRequiredOpts(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getLeastRequiredOpts(true);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getLeastRequiredOpts(true);	  OptionGroup    shortOpts    =    group.getLeastRequiredOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
337	[BUG]  [BUGGY]  force(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  force(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	force(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(group);  }	  force(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
338	[BUG]  [BUGGY]  shortOpts.add(group.getLongOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group.getLongOpts());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group.getLongOpts());	  shortOpts.add(group.getShortOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
339	[BUG]  [BUGGY]  shortOpts.add(group.getShortOpts(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group.getShortOpts(),  group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group.getShortOpts(),  group);	  shortOpts.add(group.getShortOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
340	[BUG]  [BUGGY]  optionGroups.put(group,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  optionGroups.put(group,  null);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	optionGroups.put(group,  null);	  optionGroups.put(group,    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
341	[BUG]  [BUGGY]  shortOpts.add(group.getName(),  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group.getName(),  true);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group.getName(),  true);	  shortOpts.add(group.getName());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
342	[BUG]  [BUGGY]  allowRequiredOpts(group.getOptions());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowRequiredOpts(group.getOptions());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowRequiredOpts(group.getOptions());	  allowShortOpts(group.getOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
343	[BUG]  [BUGGY]  group.addOption(this,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.addOption(this,  group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.addOption(this,  group);	  group.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
344	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroup(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroup(requiredOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getOptionGroup(requiredOpts);	  optionGroups.add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
345	[BUG]  [BUGGY]  allowShortOpts(group.isRequired(),  false)  {  requiredOpts.add(group);  }  else  {  setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired(),  false)  {  requiredOpts.add(group);  }  else  {  setRequired(false);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired(),  false)  {  requiredOpts.add(group);  }  else  {  setRequired(false);  }	  allowShortOpts(group.isRequired())    {    requiredOpts.add(group);    }    else    {    setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
346	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(false, " ");  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(false, " ");  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getLongOpts(false, " ");	  List    <    Option>    shortOpts    =    group.getLongOpts(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
347	[BUG]  [BUGGY]  found(false,  group.isRequired()))  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(false,  group.isRequired()))  {  requiredOpts.add(null);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(false,  group.isRequired()))  {  requiredOpts.add(null);  }	  found(null,    group.isRequired()))    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
348	[BUG]  [BUGGY]  found(group,  null).required())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group,  null).required())  {  requiredOpts.add(null);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group,  null).required())  {  requiredOpts.add(null);  }	  found(null,    group.isRequired()))    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
349	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getLongOpts(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getLongOpts(true);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getLongOpts(true);	  OptionGroup    shortOpts    =    group.getLongOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
350	[BUG]  [BUGGY]  requiredOpts.add(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  requiredOpts.add(true);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	requiredOpts.add(true);	  requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
351	[BUG]  [BUGGY]  RequiredOpts.add(group.getOptionGroup(),  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  RequiredOpts.add(group.getOptionGroup(),  true);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	RequiredOpts.add(group.getOptionGroup(),  true);	  requiredOpts.add(group.getOptionGroup(),    false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
352	[BUG]  [BUGGY]  forceOptions(group,  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  forceOptions(group,  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	forceOptions(group,  group.getOptions())  {  requiredOpts.add(false);  }	  forceOptions(option,    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
353	[BUG]  [BUGGY]  forceOption(group,  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  forceOption(group,  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	forceOption(group,  group.getOptions())  {  requiredOpts.add(false);  }	  forceOptions(option,    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
354	[BUG]  [BUGGY]  force(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  force(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	force(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  }	  force(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
355	[BUG]  [BUGGY]  force(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  force(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	force(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }	  force(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
356	[BUG]  [BUGGY]  allowShortOpts(group.isRequired(),  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired(),  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired(),  false);	  allowShortOpts(group.isRequired());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
357	[BUG]  [BUGGY]  Annotation  shortOpts  =  group.getShortOpts().get(group.getName());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  shortOpts  =  group.getShortOpts().get(group.getName());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  shortOpts  =  group.getShortOpts().get(group.getName());	  Annotation    shortOpts    =    shortOpts.get(group.getName());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
358	[BUG]  [BUGGY]  allowMutator(group.requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowMutator(group.requiredOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowMutator(group.requiredOpts);	  allowMutator(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
359	[BUG]  [BUGGY]  cuplur.requiredOpts.add(group,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  cuplur.requiredOpts.add(group,  false);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	cuplur.requiredOpts.add(group,  false);	  cuplur.requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
360	[BUG]  [BUGGY]  cuplur.requiredOpts.add(group,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  cuplur.requiredOpts.add(group,  0);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	cuplur.requiredOpts.add(group,  0);	  cuplur.requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
361	[BUG]  [BUGGY]  if(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  if(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	if(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  }	  [Delete]    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
362	[BUG]  [BUGGY]  optionGroups.add(group,  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  optionGroups.add(group,  true);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	optionGroups.add(group,  true);	  optionGroups.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
363	[BUG]  [BUGGY]  For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
364	[BUG]  [BUGGY]  For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  group);  }	  For(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
365	[BUG]  [BUGGY]  optionGroups.put(group,  group.getName());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  optionGroups.put(group,  group.getName());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	optionGroups.put(group,  group.getName());	  optionGroups.put(group,    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
366	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getLeastRequiredOpts(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getLeastRequiredOpts(false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getLeastRequiredOpts(false);	  OptionGroup    shortOpts    =    group.getLeastRequiredOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
367	[BUG]  [BUGGY]  forceRequired(false);  addOption(option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  forceRequired(false);  addOption(option);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	forceRequired(false);  addOption(option);	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    optionGroup.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
368	[BUG]  [BUGGY]  group.add(new  OptionGroup(optionGroups));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(new  OptionGroup(optionGroups));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(new  OptionGroup(optionGroups));	  group.add(new    OptionGroup(longOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
369	[BUG]  [BUGGY]  if(requiredOpts.contains(group))  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  if(requiredOpts.contains(group))  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	if(requiredOpts.contains(group))  {  requiredOpts.add(false);  }	  requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
370	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	if(requiredOpts!=  null)  {  requiredOpts.add(false);  }	  requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
371	[BUG]  [BUGGY]  if(requiredOpts.contains(group))  {  requiredOpts.add(false);  }  else  {  shortOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  if(requiredOpts.contains(group))  {  requiredOpts.add(false);  }  else  {  shortOpts.add(group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	if(requiredOpts.contains(group))  {  requiredOpts.add(false);  }  else  {  shortOpts.add(group);  }	  requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
372	[BUG]  [BUGGY]  try  {  requiredOpts.add(group,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  requiredOpts.add(group,  group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  requiredOpts.add(group,  group);	  try    ==    requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
373	[BUG]  [BUGGY]  try  {  requiredOpts.add(group.getName());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  requiredOpts.add(group.getName());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  requiredOpts.add(group.getName());	  try    ==    requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
374	[BUG]  [BUGGY]  optionGroups.add(group,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  optionGroups.add(group,  requiredOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	optionGroups.add(group,  requiredOpts);	  optionGroups.add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
375	[BUG]  [BUGGY]  found(false)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(false)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(false)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  group);  }	  found(false)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	108	None	replace
376	[BUG]  [BUGGY]  forceRequired())  {  requiredOpts.add(false,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  forceRequired())  {  requiredOpts.add(false,  group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	forceRequired())  {  requiredOpts.add(false,  group);  }	  forceRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
377	[BUG]  [BUGGY]  allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  neededOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  neededOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  neededOpts.add(option);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    neededOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
378	[BUG]  [BUGGY]  forceOptions(group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  forceOptions(group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	forceOptions(group.getOptions())  {  requiredOpts.add(false);  }	  forceOptions(option,    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
379	[BUG]  [BUGGY]  group.add(group.getName());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(group.getName());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(group.getName());	  group.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
380	[BUG]  [BUGGY]  shortOpts.add(group.getShortOpt(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group.getShortOpt(),  group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group.getShortOpt(),  group);	  shortOpts.add(group.getShortOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
381	[BUG]  [BUGGY]  shortOpts.add(group.getShortOpt(),  group.getName());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group.getShortOpt(),  group.getName());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group.getShortOpt(),  group.getName());	  shortOpts.add(group.getShortOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
382	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts);	  [Delete]    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
383	[BUG]  [BUGGY]  try  ==  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  ==  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  ==  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }	  try    ==    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
384	[BUG]  [BUGGY]  try  ==  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  ==  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  ==  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }	  try    ==    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
385	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getRequiredOpts(),  this.langOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getRequiredOpts(),  this.langOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getRequiredOpts(),  this.langOpts);	  OptionGroup    shortOpts    =    group.getRequiredOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
386	[BUG]  [BUGGY]  Annotation  shortOpts  =  shortOpts.get(group.getName(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  shortOpts  =  shortOpts.get(group.getName(),  group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  shortOpts  =  shortOpts.get(group.getName(),  group);	  Annotation    shortOpts    =    shortOpts.get(group.getName());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
387	[BUG]  [BUGGY]  if(requiredOpts.contains(group))  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  if(requiredOpts.contains(group))  {  requiredOpts.add(null);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	if(requiredOpts.contains(group))  {  requiredOpts.add(null);  }	  requiredOpts.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
388	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(null);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	if(requiredOpts!=  null)  {  requiredOpts.add(null);  }	  requiredOpts.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
389	[BUG]  [BUGGY]  shortOpts.add(group,  new  OptionGroup(longOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group,  new  OptionGroup(longOpts));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group,  new  OptionGroup(longOpts));	  shortOpts.add(group,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
390	[BUG]  [BUGGY]  shortOpts.add(group,  group.getLongOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group,  group.getLongOpts());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group,  group.getLongOpts());	  shortOpts.add(group,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
391	[BUG]  [BUGGY]  shortOpts.add(group.getName(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group.getName(),  group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group.getName(),  group);	  shortOpts.add(group.getName());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
392	[BUG]  [BUGGY]  force(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  force(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  group);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	force(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  group);  }	  force(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
393	[BUG]  [BUGGY]  allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
394	[BUG]  [BUGGY]  optionGroups.add(group,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  optionGroups.add(group,  group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	optionGroups.add(group,  group);	  optionGroups.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
395	[BUG]  [BUGGY]  try  {  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    optionGroup.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
396	[BUG]  [BUGGY]  try  {  }  catch(Throwable  t)  {  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  }  catch(Throwable  t)  {  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  }  catch(Throwable  t)  {  for(Option  option  :  group.getOptions())  {  optionGroup.setRequired(false);  }	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    optionGroup.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
397	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(false,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(false,  false);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getLongOpts(false,  false);	  List    <    Option>    shortOpts    =    group.getLongOpts(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
398	[BUG]  [BUGGY]  uncovered(group.getOption(),  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  uncovered(group.getOption(),  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	uncovered(group.getOption(),  group.getOptions())  {  requiredOpts.add(false);  }	  found(option.getOption(),    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
399	[BUG]  [BUGGY]  allowShortOpts(group.getOptionGroups());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getOptionGroups());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getOptionGroups());	  allowShortOpts(group.getOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
400	[BUG]  [BUGGY]  allowRequired(false,  group.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowRequired(false,  group.isRequired())  {  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowRequired(false,  group.isRequired())  {	  allowRequired(false)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
401	[BUG]  [BUGGY]  group.add(new  OptionGroup(shortOpts,  longOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  group.add(new  OptionGroup(shortOpts,  longOpts));  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	group.add(new  OptionGroup(shortOpts,  longOpts));	  group.add(new    OptionGroup(longOpts,    shortOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
402	[BUG]  [BUGGY]  shortOpts.add(group,  LongOpts.NEVER,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  shortOpts.add(group,  LongOpts.NEVER,  requiredOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	shortOpts.add(group,  LongOpts.NEVER,  requiredOpts);	  shortOpts.add(group,    LongOpts.NEVER);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
403	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(),  this.longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(),  this.longOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getLongOpts(),  this.longOpts);	  List    <    Option>    shortOpts    =    group.getLongOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
404	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts,  group.isRequired());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts,  group.isRequired());  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts,  group.isRequired());	  List    <    Option>    shortOpts    =    group.getLongOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
405	[BUG]  [BUGGY]  allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
406	[BUG]  [BUGGY]  try  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
407	[BUG]  [BUGGY]  tryFallThrough(group.getOptions())  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  tryFallThrough(group.getOptions())  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	tryFallThrough(group.getOptions())  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
408	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  group.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  ShortOpts  shortOpts  =  group.getShortOpts();  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	ShortOpts  shortOpts  =  group.getShortOpts();	  shortOpts.add(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
409	[BUG]  [BUGGY]  cuplur.requiredOpts.add(group,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  cuplur.requiredOpts.add(group,  requiredOpts);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	cuplur.requiredOpts.add(group,  requiredOpts);	  cuplur.requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
410	[BUG]  [BUGGY]  forceOptions(group.getOptions());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  forceOptions(group.getOptions());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	forceOptions(group.getOptions());	  if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
411	[BUG]  [BUGGY]  allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
412	[BUG]  [BUGGY]  allowShortOpts(group.getLongOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.getLongOpts());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.getLongOpts());	  allowShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
413	[BUG]  [BUGGY]  try  {  requiredOpts.add(false,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  try  {  requiredOpts.add(false,  group);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	try  {  requiredOpts.add(false,  group);	  try    ==    requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
414	[BUG]  [BUGGY]  allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
415	[BUG]  [BUGGY]  allowShortOpts(group.isRequired()  &&  group.getOptionGroups().contains(option))  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(group.isRequired()  &&  group.getOptionGroups().contains(option))  {  requiredOpts.add(option);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(group.isRequired()  &&  group.getOptionGroups().contains(option))  {  requiredOpts.add(option);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
416	[BUG]  [BUGGY]  Annotation  group  =(Annotation)this.optionGroups.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  group  =(Annotation)this.optionGroups.getValue();  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  group  =(Annotation)this.optionGroups.getValue();	  Annotation    group    =(Annotation)group.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
417	[BUG]  [BUGGY]  allowShortOpts(false,  group.isRequired());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowShortOpts(false,  group.isRequired());  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowShortOpts(false,  group.isRequired());	  allowShortOpts(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
418	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  shortOpts,  longOpts);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(),  shortOpts,  longOpts);	  List    <    Option>    shortOpts    =    group.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
419	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  optionGroups);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(),  optionGroups);	  List    <    Option>    shortOpts    =    group.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
420	[BUG]  [BUGGY]  allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	allowingShortOpts(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	  allowShortOpts(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(true);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
421	[BUG]  [BUGGY]  found(group.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  found(group.getOptions())  {  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	found(group.getOptions())  {	  found(option,    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
422	[BUG]  [BUGGY]  Annotation  group  =(Annotation)this.langOpts.get(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  Annotation  group  =(Annotation)this.langOpts.get(group);  [BUGGY]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	Annotation  group  =(Annotation)this.langOpts.get(group);	  Annotation    group    =(Annotation)longOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
423	[BUG]  [BUGGY]  optionGroups.add(group,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  optionGroups.add(group,  null);  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	optionGroups.add(group,  null);	  optionGroups.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
424	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getBooleanOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {      [BUGGY]  OptionGroup  shortOpts  =  group.getBooleanOpts();  [BUGGY]      requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	OptionGroup  shortOpts  =  group.getBooleanOpts();	  OptionGroup    shortOpts    =    group.getLongOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
