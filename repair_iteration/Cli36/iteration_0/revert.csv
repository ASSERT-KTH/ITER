projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71if(group.isRequired()){
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71if(!group.isRequired()){
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71if(group.isRequired()||group.isInitializingDeclaration()){
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71if(group.isRequired()||group.isUnknown()){
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java73requiredOpts.add(group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java73requiredOpts.remove(group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java73requiredOpts.clear();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java73requiredOpts.add(newOptionGroup(group));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java73
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java82
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java82option.setShortOpts(false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java82requiredOpts.add(option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java82option.setShortOpts(true);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java82requiredOpts.add(group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java82requiredOpts.remove(option.getKey());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java73group.setRequired(true);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java73group.setRequired(false);addOption(group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java73group.setRequired(false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java73group.setRequired(true);addOption(group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50returnnewLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50returnnewLinkedHashMap<String,Option>(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50returnShortOpts.valueOf(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50return(Map<String,Option>)shortOpts.clone();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatestaticfinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatestaticfinalList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76optionGroups.put(group.getKey(),group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76optionGroups.put(option.getKey(),group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76requiredOpts.add(group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76group.setRequired(true);addOption(group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76group.setKey(false);addOption(group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java82addOption(option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java82group.addOption(option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java82setOption(option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java82setRequired(false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58return(List<Object>)requiredOpts.toArray(newArrayList<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58return(List<Object>)requiredOpts.values();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58return(List<Object>)requiredOpts.toArray(newLinkedList<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58returnnewArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71if(group.isRequired()){for(Optionoption:group.getOptions()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71if(group.isRequired()){requiredOpts.add(group);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71if(group.isRequired()){for(Optionoption:group.getOptions()){requiredOpts.clear();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71group.setOptions(false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71if(group.isRequired()){for(Optionoption:group.getOptions()){requiredOpts.remove(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61returnnewHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61returnnewHashMap<String,OptionGroup>(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61returnoptionGroups.values();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53privatefinalMap<String,Option>longOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53privatestaticfinalMap<String,Option>longOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53privatefinalMap<String,Option>longOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53privatestaticfinalMap<String,Option>longOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84optionGroups.put(option.getKey(),group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84option.setShortOpts(false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84requiredOpts.add(option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84group.setRequired(false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84requiredOpts.add(group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84optionGroups.put(option.getKey(),option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84optionGroups.put(option.getKey(),this.optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84optionGroups.put(option.getKey(),newOption(group));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatefinalMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatestaticfinalMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatestaticMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61publicstaticfinalMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53returnLongOpts.valueOf(longOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53returnnewLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53returnLongOpts.valueOf(longOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53returnLongOpts.valueOf(longOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53returnnewLinkedHashMap<String,Option>(longOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java81option.setRequired(false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java81option.setRequired(true);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java81option.setRequired(false,true);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java81option.setRequired(false,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java81
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76for(Optionoption:group.getOptions()){
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76for(Optionoption:group.getKey()){
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76for(Optiongroup:option.getOptions()){
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76for(Optionoption:group.hasOptions()){
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java81requiredOpts.add(option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java81option.setKey(false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java81requiredOpts.add(option.getKey());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java81option.setRequired(false);addOption(option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java81option.setRequired(true);addOption(option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java73addOption(group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java73requiredOpts.put(group,newOption(group));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java73neededOpts.add(group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76if(group.isRequired()){for(Optionoption:group.getOptions()){addOption(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76addOption(group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76if(group.isRequired()){requiredOpts.remove(group);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76if(group.isRequired()){requiredOpts.add(group);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61protectedfinalMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61returnnewHashMap<String,OptionGroup>(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatefinalMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java82option.setRequired(false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java82option.setRequired(true);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java82if(group.isRequired()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84optionsGroups.put(option.getKey(),group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84optionGroups.put(option.getKey(),this);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84OptionGroups.put(option.getKey(),group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java81if(group.isRequired()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76for(Optionoption:group.options()){
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76for(Optionoption:group.isRequired()){
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53privatefinalMap<String,Option>longOpts=newLinkedList<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53privatefinalMap<String,Option>longOpts=newArrayList<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newLinkedList<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newArrayList<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalList<Object>requiredOpts=Lists.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalArrayList<Object>requiredOpts=Lists.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalList<Object>requiredOpts=newArrayList<Object>(size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java82setRequired(true);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84requiredOpts.add(option);addOption(option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84option.setRequired(false);addOption(option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71if(group.isRequired()||group.isShortOpt()){
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71if(group.isRequired()||group.isRequired()){
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53privatefinalMap<String,Option>longOpts=newLinkedHashMap<String,Option>();LongOpts.putAll(longOpts.values());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53privatefinalMap<String,Option>longOpts=newLinkedHashMap<String,Option>();LongOpts.putAll(longOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53privatefinalMap<String,Option>longOpts=newLinkedHashMap<String,Option>();LongOpts.putAll(longOpts.keySet());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53longOpts=LongOpt.valueOf(longOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71optionGroups.put(group.getKey(),group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71this.optionGroups.put(group.getKey(),group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71if(group.isRequired()){requiredOpts.remove(group);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71if(group.isRequired()){requiredOpts.put(group.getKey(),group);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>(shortOpts.values());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>(shortOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50returnMaps.<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50returnMaps.<String,Option>shortOpts.values();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84optionGroups.put(option.getKey(),newOptionGroup(group));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84optionGroups.put(option.getKey(),newOptionGroup(this,group));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61public.setOptionGroups(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61returnMaps.<String,OptionGroup>newHashMap();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61returnnewHashMap<String,OptionGroup>(optionGroups.values());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71if(group.isRequired()&&group.isRequired()){
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71if(group.isRequired()||group.isPrevious()){
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71group=(OptionGroup)group.getOptions();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71this.optionGroups.add(group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71this.optionGroups.put(group,newOption(group));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java71this.optionGroups.put(group,newOptionGroup(group));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java73optionGroups.put(group.getKey(),group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java73optionGroups.put(group.getOptions(),group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java73requiredOpts.addOption(group);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76for(Optionoption:selector.getOptions()){
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76for(Optionoption:candidate.getOptions()){
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalObjectList<Object>requiredOpts=Lists.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalObjectList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalObjectList<Object>requiredOpts=newArrayList<Object>(Arrays.asList(options));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53privatefinalMap<String,Option>longOpts=Long.valueOf(longOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53returnLongOpts.valueOf(longOpts.length());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java53privatefinalMap<String,Option>longOpts=Long.valueOf(longOpts.keySet());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java81if(!requiredOpts.contains(option)){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java81if(!option.hasArg()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84option.setRequired(false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java84option.setRequired(true);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java82if(!option.hasArg()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java82group.setRequired(true);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76group.setRequired(false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76group.setRequired(true);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java76group.setIsRequired(true);
