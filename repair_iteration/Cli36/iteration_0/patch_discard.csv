compilation error,71,replace,[CE] cannot find symbol,if (group.isRequired()) { ,if(group.isRequired() || group.isInitializingDeclaration()) {
compilation error,71,replace,[CE] cannot find symbol,if (group.isRequired()) { ,if(group.isRequired() || group.isUnknown()) {
compilation error,71,replace,[CE] illegal start of type,if (group.isRequired()) { , 
compilation error,73,replace,[CE] constructor OptionGroup in class OptionGroup cannot be applied to given types;,requiredOpts.add(group); ,requiredOpts.add(new OptionGroup(group));
compilation error,82,add,[CE] cannot find symbol,,  option.setShortOpts(false);
compilation error,82,add,[CE] cannot find symbol,,  option.setShortOpts(true);
compilation error,73,add,[CE] no suitable method found for addOption(OptionGroup),,  group.setRequired(false); addOption(group);
compilation error,73,add,[CE] no suitable method found for addOption(OptionGroup),,  group.setRequired(true); addOption(group);
compilation error,50,replace,[CE] cannot find symbol shortOpts,private final Map<String, Option> shortOpts = new LinkedHashMap<String, Option>(); , 
compilation error,50,add,[CE] illegal start of type,,  return new LinkedHashMap < String, Option>();
compilation error,50,add,[CE] illegal start of type,,  return new LinkedHashMap < String, Option>(shortOpts);
compilation error,50,add,[CE] illegal start of type,,  return ShortOpts.valueOf(shortOpts);
compilation error,50,add,[CE] illegal start of type,,  return(Map < String, Option>)shortOpts.clone();
compilation error,58,replace,[CE] cannot find symbol,private final List<Object> requiredOpts = new ArrayList<Object>(); ,private final List < Object> requiredOpts = new LinkedList < Object>();
compilation error,58,replace,[CE] cannot find symbol,private final List<Object> requiredOpts = new ArrayList<Object>(); ,private static final List < Object> requiredOpts = new LinkedList < Object>();
compilation error,58,replace,[CE] cannot find symbol requiredOpts,private final List<Object> requiredOpts = new ArrayList<Object>(); , 
compilation error,76,add,[CE] cannot find symbol,,  optionGroups.put(group.getKey(), group);
compilation error,76,add,[CE] cannot find symbol option,,  optionGroups.put(option.getKey(), group);
compilation error,76,add,[CE] no suitable method found for addOption(OptionGroup),,  group.setRequired(true); addOption(group);
compilation error,76,add,[CE] cannot find symbol,,  group.setKey(false); addOption(group);
increase failing tests,82,replace, [FE] ComparisonFailure testOptionComparatorInsertedOrder,addOption(option); ,group.addOption(option);
compilation error,82,replace,[CE] cannot find symbol,addOption(option); ,setOption(option);
compilation error,82,replace,[CE] cannot find symbol,addOption(option); ,setRequired(false);
compilation error,58,add,[CE] illegal start of type,,  return(List < Object>)requiredOpts.toArray(new ArrayList < Object>());
compilation error,58,add,[CE] <identifier> expected,,  requiredOpts = new ArrayList < Object>();
compilation error,58,add,[CE] illegal start of type,,  return(List < Object>)requiredOpts.values();
compilation error,58,add,[CE] illegal start of type,,  return(List < Object>)requiredOpts.toArray(new LinkedList < Object>());
compilation error,58,add,[CE] illegal start of type,,  return new ArrayList < Object>();
compilation error,71,add,[CE] ';' expected,,  if(group.isRequired()) { for(Option option : group.getOptions()) { requiredOpts.add(option); }
compilation error,71,add,[CE] ';' expected,,  if(group.isRequired()) { for(Option option : group.getOptions()) { requiredOpts.clear(); }
compilation error,71,add,[CE] cannot find symbol,,  group.setOptions(false);
compilation error,71,add,[CE] ';' expected,,  if(group.isRequired()) { for(Option option : group.getOptions()) { requiredOpts.remove(option); }
compilation error,61,add,[CE] illegal start of type,,  return new HashMap < String, OptionGroup>();
compilation error,61,add,[CE] illegal start of type,,  return new HashMap < String, OptionGroup>(optionGroups);
compilation error,61,add,[CE] illegal start of type,,  return optionGroups.values();
compilation error,53,replace,[CE] cannot find symbol longOpts,private final Map<String, Option> longOpts = new LinkedHashMap<String, Option>(); , 
compilation error,84,add,[CE] cannot find symbol,,  option.setShortOpts(false);
compilation error,84,replace,[CE] method put in interface Map<K,V> cannot be applied to given types;,optionGroups.put(option.getKey(), group); ,optionGroups.put(option.getKey(), option);
compilation error,84,replace,[CE] method put in interface Map<K,V> cannot be applied to given types;,optionGroups.put(option.getKey(), group); ,optionGroups.put(option.getKey(), this.optionGroups);
compilation error,84,replace,[CE] no suitable constructor found for Option(OptionGroup),optionGroups.put(option.getKey(), group); ,optionGroups.put(option.getKey(), new Option(group));
compilation error,53,add,[CE] illegal start of type,,  return LongOpts.valueOf(longOpts);
compilation error,53,add,[CE] illegal start of type,,  return new LinkedHashMap < String, Option>();
compilation error,53,add,[CE] illegal start of type,,  return LongOpts.valueOf(longOpts.size() - 1);
compilation error,53,add,[CE] illegal start of type,,  return LongOpts.valueOf(longOpts.size());
compilation error,53,add,[CE] illegal start of type,,  return new LinkedHashMap < String, Option>(longOpts);
compilation error,81,replace,[CE] method setRequired in class Option cannot be applied to given types;,option.setRequired(false); ,option.setRequired(false, true);
compilation error,81,replace,[CE] method setRequired in class Option cannot be applied to given types;,option.setRequired(false); ,option.setRequired(false, requiredOpts);
compilation error,76,replace,[CE] cannot find symbol,for (Option option : group.getOptions()) { ,for(Option option : group.getKey()) {
compilation error,76,replace,[CE] variable group is already defined in method addOptionGroup(OptionGroup),for (Option option : group.getOptions()) { ,for(Option group : option.getOptions()) {
compilation error,76,replace,[CE] cannot find symbol,for (Option option : group.getOptions()) { ,for(Option option : group.hasOptions()) {
compilation error,81,add,[CE] cannot find symbol,,  option.setKey(false);
compilation error,73,add,[CE] no suitable method found for addOption(OptionGroup),,  addOption(group);
compilation error,73,replace,[CE] no suitable constructor found for Option(OptionGroup),requiredOpts.add(group); ,requiredOpts.put(group, new Option(group));
compilation error,73,replace,[CE] cannot find symbol neededOpts,requiredOpts.add(group); ,neededOpts.add(group);
compilation error,76,add,[CE] ';' expected,,  if(group.isRequired()) { for(Option option : group.getOptions()) { addOption(option); }
compilation error,76,add,[CE] no suitable method found for addOption(OptionGroup),,  addOption(group);
compilation error,61,add,[CE] variable optionGroups is already defined in class Options,,  protected final Map < String, OptionGroup> optionGroups = new HashMap < String, OptionGroup>();
compilation error,61,add,[CE] illegal start of type,,  return new HashMap < String, OptionGroup>(optionGroups.size());
compilation error,61,add,[CE] variable optionGroups is already defined in class Options,,  private final Map < String, OptionGroup> optionGroups = new HashMap < String, OptionGroup>(optionGroups.size());
compilation error,84,replace,[CE] cannot find symbol optionsGroups,optionGroups.put(option.getKey(), group); ,optionsGroups.put(option.getKey(), group);
compilation error,84,replace,[CE] method put in interface Map<K,V> cannot be applied to given types;,optionGroups.put(option.getKey(), group); ,optionGroups.put(option.getKey(), this);
compilation error,84,replace,[CE] cannot find symbol OptionGroups,optionGroups.put(option.getKey(), group); ,OptionGroups.put(option.getKey(), group);
compilation error,76,replace,[CE] cannot find symbol,for (Option option : group.getOptions()) { ,for(Option option : group.options()) {
compilation error,76,replace,[CE] for-each not applicable to expression type,for (Option option : group.getOptions()) { ,for(Option option : group.isRequired()) {
compilation error,53,replace,[CE] cannot find symbol,private final Map<String, Option> longOpts = new LinkedHashMap<String, Option>(); ,private final Map < String, Option> longOpts = new LinkedList < String, Option>();
compilation error,53,replace,[CE] wrong number of type arguments; required 1,private final Map<String, Option> longOpts = new LinkedHashMap<String, Option>(); ,private final Map < String, Option> longOpts = new ArrayList < String, Option>();
compilation error,50,replace,[CE] cannot find symbol,private final Map<String, Option> shortOpts = new LinkedHashMap<String, Option>(); ,private final Map < String, Option> shortOpts = new LinkedList < String, Option>();
compilation error,50,replace,[CE] wrong number of type arguments; required 1,private final Map<String, Option> shortOpts = new LinkedHashMap<String, Option>(); ,private final Map < String, Option> shortOpts = new ArrayList < String, Option>();
compilation error,58,add,[CE] variable requiredOpts is already defined in class Options,,  private final ArrayList < Object> requiredOpts = new ArrayList < Object>();
compilation error,58,add,[CE] variable requiredOpts is already defined in class Options,,  private final List < Object> requiredOpts = Lists.newArrayList();
compilation error,58,add,[CE] variable requiredOpts is already defined in class Options,,  private final ArrayList < Object> requiredOpts = Lists.newArrayList();
compilation error,58,add,[CE] variable requiredOpts is already defined in class Options,,  private final List < Object> requiredOpts = new ArrayList < Object>(size());
compilation error,82,replace,[CE] cannot find symbol,addOption(option); ,setRequired(true);
compilation error,71,replace,[CE] cannot find symbol,if (group.isRequired()) { ,if(group.isRequired() || group.isShortOpt()) {
compilation error,53,add,[CE] <identifier> expected,,  private final Map < String, Option> longOpts = new LinkedHashMap < String, Option>(); LongOpts.putAll(longOpts.values());
compilation error,53,add,[CE] <identifier> expected,,  private final Map < String, Option> longOpts = new LinkedHashMap < String, Option>(); LongOpts.putAll(longOpts);
compilation error,53,add,[CE] <identifier> expected,,  private final Map < String, Option> longOpts = new LinkedHashMap < String, Option>(); LongOpts.putAll(longOpts.keySet());
compilation error,53,add,[CE] <identifier> expected,,  longOpts = LongOpt.valueOf(longOpts.size());
compilation error,71,add,[CE] cannot find symbol,,  optionGroups.put(group.getKey(), group);
compilation error,71,add,[CE] cannot find symbol,,  this.optionGroups.put(group.getKey(), group);
compilation error,71,add,[CE] cannot find symbol,,  if(group.isRequired()) { requiredOpts.put(group.getKey(), group); }
compilation error,50,add,[CE] variable shortOpts is already defined in class Options,,  private final Map < String, Option> shortOpts = new LinkedHashMap < String, Option>(shortOpts.values());
compilation error,50,add,[CE] variable shortOpts is already defined in class Options,,  private final Map < String, Option> shortOpts = new LinkedHashMap < String, Option>(shortOpts.size());
compilation error,50,add,[CE] illegal start of type,,  return Maps. < String, Option>shortOpts = new LinkedHashMap < String, Option>();
compilation error,50,add,[CE] variable shortOpts is already defined in class Options,,  private final Map < String, Option> shortOpts = new LinkedHashMap < String, Option>(shortOpts);
compilation error,50,add,[CE] illegal start of type,,  return Maps. < String, Option>shortOpts.values();
compilation error,84,replace,[CE] constructor OptionGroup in class OptionGroup cannot be applied to given types;,optionGroups.put(option.getKey(), group); ,optionGroups.put(option.getKey(), new OptionGroup(group));
compilation error,84,replace,[CE] constructor OptionGroup in class OptionGroup cannot be applied to given types;,optionGroups.put(option.getKey(), group); ,optionGroups.put(option.getKey(), new OptionGroup(this, group));
compilation error,61,add,[CE] illegal start of type,,  public.setOptionGroups(optionGroups);
compilation error,61,add,[CE] illegal start of type,,  return Maps. < String, OptionGroup>newHashMap();
compilation error,61,add,[CE] illegal start of type,,  return new HashMap < String, OptionGroup>(optionGroups.values());
compilation error,71,replace,[CE] cannot find symbol,if (group.isRequired()) { ,if(group.isRequired() || group.isPrevious()) {
increase failing tests,71,add, [FE] ClassCastException testOptionComparatorInsertedOrder,,  group =(OptionGroup)group.getOptions();
compilation error,71,add,[CE] cannot find symbol,,  this.optionGroups.add(group);
compilation error,71,add,[CE] no suitable constructor found for Option(OptionGroup),,  this.optionGroups.put(group, new Option(group));
compilation error,71,add,[CE] constructor OptionGroup in class OptionGroup cannot be applied to given types;,,  this.optionGroups.put(group, new OptionGroup(group));
compilation error,73,add,[CE] cannot find symbol,,  optionGroups.put(group.getKey(), group);
compilation error,73,add,[CE] method put in interface Map<K,V> cannot be applied to given types;,,  optionGroups.put(group.getOptions(), group);
compilation error,73,replace,[CE] cannot find symbol,requiredOpts.add(group); ,requiredOpts.addOption(group);
compilation error,76,replace,[CE] cannot find symbol selector,for (Option option : group.getOptions()) { ,for(Option option : selector.getOptions()) {
compilation error,76,replace,[CE] cannot find symbol candidate,for (Option option : group.getOptions()) { ,for(Option option : candidate.getOptions()) {
compilation error,58,add,[CE] cannot find symbol,,  private final ObjectList < Object> requiredOpts = Lists.newArrayList();
compilation error,58,add,[CE] cannot find symbol,,  private final ObjectList < Object> requiredOpts = new ArrayList < Object>();
compilation error,58,add,[CE] cannot find symbol,,  private final ObjectList < Object> requiredOpts = new ArrayList < Object>(Arrays.asList(options));
compilation error,53,add,[CE] variable longOpts is already defined in class Options,,  private final Map < String, Option> longOpts = Long.valueOf(longOpts.size());
compilation error,53,add,[CE] illegal start of type,,  return LongOpts.valueOf(longOpts.length());
compilation error,53,add,[CE] variable longOpts is already defined in class Options,,  private final Map < String, Option> longOpts = Long.valueOf(longOpts.keySet());
compilation error,76,add,[CE] cannot find symbol,,  group.setIsRequired(true);
