projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58protectedfinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=newArrayList<Object>(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(newArrayList<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatestaticfinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Set<Object>requiredOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Set<Object>requiredOpts=Sets.newHashSet(requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,requiredOpts.length);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(type,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(requiredOpts,newComparable<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58protectedfinalArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58protectedfinalList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalSet<Object>requiredOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collection<Object>requiredOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList(requiredOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=Lists.newArrayList(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList(requiredOpts.size()-2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(newArrayList<Object>(),requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(newArrayList<Object>(),type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(this.requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(Arrays.asList(requiredOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(RequiredOpts.EMPTY);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatestaticfinalArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58staticfinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatestaticfinalList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=Lists.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=Lists.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=Lists.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=newArrayList<Object>(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=newArrayList<Object>(requiredOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=newArrayList<Object>(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=newArrayList<Object>(requiredOpts.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(this.requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(type,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalSet<Object>requiredOpts=Sets.newHashSet(requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Set<Object>requiredOpts=Sets.newHashSet(requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Sets.newHashSet(requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Set<Object>requiredOpts=Sets.newHashSet(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration;returntype.requires(declaration.getMethod());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration;returntype.requires(declaration.getMethodType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration;returntype.requires(declaration.getType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58if(type==null){methoddeclaration=newComparableFailure();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.<Object>requiredOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,this.type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58publicstaticfinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=newArrayList<Object>(type.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList(type.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList(this.requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58protectedstaticfinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58if(type==null){thrownewIllegalArgumentException("Methodmethoddeclarationmustnotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58if(type==null){thrownewIllegalArgumentException("Methodmethoddeclarationcannotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58if(type==null){thrownewIllegalArgumentException("Methodmethoddeclarationmustnotbenull.");}else{returntype.toString();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58if(type==null){thrownewIllegalArgumentException("Methodmethoddeclarationcannotbenull.");}else{returntype.toString();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(newLinkedList<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,this.requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(requiredOpts,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58publicfinalArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=Lists.newArrayList(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayListWithType(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=newArrayList<Object>(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("method",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("declaration",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("requires",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("type",type);
