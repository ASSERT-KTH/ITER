bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Arrays.sort(this.type,  this.requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this.type,  this.requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this.type,  this.requiredOpts);	  Arrays.sort(this.requiredOpts,    this.type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
2	[BUG]  [BUGGY]  Arrays.sort(this.requiredOpts,  this.type,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this.requiredOpts,  this.type,  requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this.requiredOpts,  this.type,  requiredOpts);	  Arrays.sort(this.requiredOpts,    this.type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
3	[BUG]  [BUGGY]  Arrays.sort(this.requiredOpts,  this.type,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this.requiredOpts,  this.type,  type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this.requiredOpts,  this.type,  type);	  Arrays.sort(this.requiredOpts,    this.type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
4	[BUG]  [BUGGY]  Set  <  Object>  requiredOpts  =  Sets.newHashSet(type,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  Set  <  Object>  requiredOpts  =  Sets.newHashSet(type,  requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Set  <  Object>  requiredOpts  =  Sets.newHashSet(type,  requiredOpts);	  Set    <    Object>    requiredOpts    =    Sets.newHashSet(requiredOpts,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
5	[BUG]  [BUGGY]  Collection  <  Object>  requiredOpts  =  Sets.newHashSet(type,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  Collection  <  Object>  requiredOpts  =  Sets.newHashSet(type,  requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collection  <  Object>  requiredOpts  =  Sets.newHashSet(type,  requiredOpts);	  Set    <    Object>    requiredOpts    =    Sets.newHashSet(requiredOpts,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
6	[BUG]  [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Sets.newHashSet(requiredOpts,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Sets.newHashSet(requiredOpts,  type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	ArrayList  <  Object>  requiredOpts  =  Sets.newHashSet(requiredOpts,  type);	  Set    <    Object>    requiredOpts    =    Sets.newHashSet(requiredOpts,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
7	[BUG]  [BUGGY]  final  Set  <  Object>  requiredOpts  =  Sets.newHashSet(type,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  final  Set  <  Object>  requiredOpts  =  Sets.newHashSet(type,  requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  Set  <  Object>  requiredOpts  =  Sets.newHashSet(type,  requiredOpts);	  Set    <    Object>    requiredOpts    =    Sets.newHashSet(requiredOpts,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
8	[BUG]  [BUGGY]  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(RequiredOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(RequiredOpts.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(RequiredOpts.size());	  ArrayList    <    Object>    requiredOpts    =    new    ArrayList    <    Object>(requiredOpts.size()    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
9	[BUG]  [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  Lists.newLinkedList();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  Lists.newLinkedList();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  ArrayList  <  Object>  requiredOpts  =  Lists.newLinkedList();	  final    ArrayList    <    Object>    requiredOpts    =    Lists.newArrayList();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
10	[BUG]  [BUGGY]  this.requiredOpts.add(new  LinkedList  <  Object>(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.add(new  LinkedList  <  Object>(),  requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.add(new  LinkedList  <  Object>(),  requiredOpts);	  this.requiredOpts.add(new    LinkedList    <    Object>());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
11	[BUG]  [BUGGY]  this.requiredOpts.addAll(new  ArrayList  <  Object>());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(new  ArrayList  <  Object>());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(new  ArrayList  <  Object>());	  this.requiredOpts.add(new    LinkedList    <    Object>());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
12	[BUG]  [BUGGY]  this.requiredOpts.addAll(this.requiredOpts,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(this.requiredOpts,  requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(this.requiredOpts,  requiredOpts);	  this.requiredOpts.addAll(requiredOpts,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
13	[BUG]  [BUGGY]  this.requiredOpts.addAll(requiredOpts,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(requiredOpts,  type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(requiredOpts,  type);	  this.requiredOpts.addAll(requiredOpts,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
14	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( "Method  method  declaration  must  not  be  null. ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( "Method  method  declaration  must  not  be  null. ");  }  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	parent  ==  null)  {  throw  new  IllegalArgumentException( "Method  method  declaration  must  not  be  null. ");  }	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    must    not    be    null.   ");    }    else    {    return    type.toString();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
15	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( "Method  method  declaration  must  not  be  null. ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingException( "Method  method  declaration  must  not  be  null. ");  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	aughtExceptionHandler.handleMissingException( "Method  method  declaration  must  not  be  null. ");	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    must    not    be    null.   ");    }    else    {    return    type.toString();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
16	[BUG]  [BUGGY]  protected  final  LinkedList  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  protected  final  LinkedList  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	protected  final  LinkedList  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();	  protected    final    List    <    Object>    requiredOpts    =    new    LinkedList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
17	[BUG]  [BUGGY]  final  List  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  final  List  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  List  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();	  final    List    <    Object>    requiredOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
18	[BUG]  [BUGGY]  List  <  Object>  requiredOpts  =  Lists.newArrayList(requiredOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  List  <  Object>  requiredOpts  =  Lists.newArrayList(requiredOpts.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	List  <  Object>  requiredOpts  =  Lists.newArrayList(requiredOpts.size());	  ArrayList    <    Object>    requiredOpts    =    Lists.newArrayList(requiredOpts.size()    -    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
19	[BUG]  [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayListWithType(type,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayListWithType(type,  type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	ArrayList  <  Object>  requiredOpts  =  Lists.newArrayListWithType(type,  type);	  ArrayList    <    Object>    requiredOpts    =    Lists.newArrayListWithType(type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
20	[BUG]  [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayListWithType(type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayListWithType(type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayListWithType(type);	  ArrayList    <    Object>    requiredOpts    =    Lists.newArrayListWithType(type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
21	[BUG]  [BUGGY]  final  List  <  Object>  requiredOpts  =  Sets.newHashSet();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  final  List  <  Object>  requiredOpts  =  Sets.newHashSet();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  List  <  Object>  requiredOpts  =  Sets.newHashSet();	  final    Set    <    Object>    requiredOpts    =    Sets.newHashSet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
22	[BUG]  [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  Sets.newHashSet();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  Sets.newHashSet();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  ArrayList  <  Object>  requiredOpts  =  Sets.newHashSet();	  final    Set    <    Object>    requiredOpts    =    Sets.newHashSet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
23	[BUG]  [BUGGY]  final  Collection  <  Object>  requiredOpts  =  Sets.newHashSet();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  final  Collection  <  Object>  requiredOpts  =  Sets.newHashSet();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  Collection  <  Object>  requiredOpts  =  Sets.newHashSet();	  final    Set    <    Object>    requiredOpts    =    Sets.newHashSet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
24	[BUG]  [BUGGY]  static  final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  static  final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	static  final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();	  private    static    final    ArrayList    <    Object>    requiredOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
25	[BUG]  [BUGGY]  final  Method  declaration;  return  type.requires(declaration.getMethodType());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  final  Method  declaration;  return  type.requires(declaration.getMethodType());  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  Method  declaration;  return  type.requires(declaration.getMethodType());	  Method    declaration;    return    type.requires(declaration.getMethodType());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
26	[BUG]  [BUGGY]  Method  declaration;  return  type.requires(declaration.getReturnType());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration;  return  type.requires(declaration.getReturnType());  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration;  return  type.requires(declaration.getReturnType());	  Method    declaration;    return    type.requires(declaration.getMethodType());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
27	[BUG]  [BUGGY]  Method  declaration;  return  type.requires(declaration.getRawType());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration;  return  type.requires(declaration.getRawType());  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration;  return  type.requires(declaration.getRawType());	  Method    declaration;    return    type.requires(declaration.getMethodType());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
28	[BUG]  [BUGGY]  Collections.sort(type,  new  Comparable  <  Object>());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.sort(type,  new  Comparable  <  Object>());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.sort(type,  new  Comparable  <  Object>());	  Collections.sort(type,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
29	[BUG]  [BUGGY]  Collections.sort(type,  requiredOpts,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.sort(type,  requiredOpts,  type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.sort(type,  requiredOpts,  type);	  Collections.sort(type,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
30	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "type ",  type,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "type ",  type,  false);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "type ",  type,  false);	  Method    declaration    =    getDeclaredMethod(   "type   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
31	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "type ",  type,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "type ",  type,  null);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "type ",  type,  null);	  Method    declaration    =    getDeclaredMethod(   "type   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
32	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "type ",  type,  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "type ",  type,  this);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "type ",  type,  this);	  Method    declaration    =    getDeclaredMethod(   "type   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
33	[BUG]  [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(type.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(type.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(type.size());	  ArrayList    <    Object>    requiredOpts    =    new    ArrayList    <    Object>(type.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
34	[BUG]  [BUGGY]  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(type.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(type.size()  -  1);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(type.size()  -  1);	  ArrayList    <    Object>    requiredOpts    =    new    ArrayList    <    Object>(type.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
35	[BUG]  [BUGGY]  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(type.size()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(type.size()  +  1);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(type.size()  +  1);	  ArrayList    <    Object>    requiredOpts    =    new    ArrayList    <    Object>(type.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
36	[BUG]  [BUGGY]  List  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(type.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  List  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(type.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	List  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(type.size());	  ArrayList    <    Object>    requiredOpts    =    new    ArrayList    <    Object>(type.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
37	[BUG]  [BUGGY]  Collections.sort(this.requiredOpts,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.sort(this.requiredOpts,  requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.sort(this.requiredOpts,  requiredOpts);	  Collections.sort(this.requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
38	[BUG]  [BUGGY]  Collections.sort(this.requiredOpts,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.sort(this.requiredOpts,  type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.sort(this.requiredOpts,  type);	  Collections.sort(this.requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
39	[BUG]  [BUGGY]  Collections.sort(this.requiredOpts,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.sort(this.requiredOpts,  0);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.sort(this.requiredOpts,  0);	  Collections.sort(this.requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
40	[BUG]  [BUGGY]  Collections.sort(this.requiredOpts,  this.type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.sort(this.requiredOpts,  this.type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.sort(this.requiredOpts,  this.type);	  Collections.sort(this.requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
41	[BUG]  [BUGGY]  Arrays.sort(this.requiredOpts,  this.requiredOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this.requiredOpts,  this.requiredOpts.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this.requiredOpts,  this.requiredOpts.size());	  Arrays.sort(this.requiredOpts,    requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
42	[BUG]  [BUGGY]  Arrays.sort(this.requiredOpts,  requiredOpts.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this.requiredOpts,  requiredOpts.size()  -  1);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this.requiredOpts,  requiredOpts.size()  -  1);	  Arrays.sort(this.requiredOpts,    requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
43	[BUG]  [BUGGY]  Arrays.sort(this.requiredOpts,  requiredOpts.size()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this.requiredOpts,  requiredOpts.size()  -  2);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this.requiredOpts,  requiredOpts.size()  -  2);	  Arrays.sort(this.requiredOpts,    requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
44	[BUG]  [BUGGY]  final  List  <  Object>  requiredOpts  =  Lists.newLinkedList();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  final  List  <  Object>  requiredOpts  =  Lists.newLinkedList();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  List  <  Object>  requiredOpts  =  Lists.newLinkedList();	  final    List    <    Object>    requiredOpts    =    Lists.newArrayList();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
45	[BUG]  [BUGGY]  private  final  List  <  Object>  requiredOpts  =  Lists.newArrayList();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  private  final  List  <  Object>  requiredOpts  =  Lists.newArrayList();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	private  final  List  <  Object>  requiredOpts  =  Lists.newArrayList();	  final    List    <    Object>    requiredOpts    =    Lists.newArrayList();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
46	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( "Method  method  declaration  cannot  be  null.   ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( "Method  method  declaration  cannot  be  null.   ");  }  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	parent  ==  null)  {  throw  new  IllegalArgumentException( "Method  method  declaration  cannot  be  null.   ");  }	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    cannot    be    null.   ");    }    else    {    return    type.toString();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
47	[BUG]  [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,  requiredOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,  requiredOpts.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,  requiredOpts.size());	  this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
48	[BUG]  [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,  requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,  requiredOpts);	  this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
49	[BUG]  [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,  requiredOpts.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,  requiredOpts.length);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,  requiredOpts.length);	  this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
50	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "method, ",  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "method, ",  type);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "method, ",  type);	  Method    declaration    =    getDeclaredMethod(   "method   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
51	[BUG]  [BUGGY]  Arrays.sort(requiredOpts,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(requiredOpts,  requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(requiredOpts,  requiredOpts);	  Arrays.sort(requiredOpts,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
52	[BUG]  [BUGGY]  Arrays.sort(requiredOpts,  type,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(requiredOpts,  type,  null);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(requiredOpts,  type,  null);	  Arrays.sort(requiredOpts,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
53	[BUG]  [BUGGY]  static  final  List  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  static  final  List  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	static  final  List  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();	  static    final    List    <    Object>    requiredOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
54	[BUG]  [BUGGY]  static  final  Set  <  Object>  requiredOpts  =  new  HashSet  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  static  final  Set  <  Object>  requiredOpts  =  new  HashSet  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	static  final  Set  <  Object>  requiredOpts  =  new  HashSet  <  Object>();	  static    final    List    <    Object>    requiredOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
55	[BUG]  [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(requiredOpts.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(requiredOpts.size()  -  1);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(requiredOpts.size()  -  1);	  final    ArrayList    <    Object>    requiredOpts    =    new    ArrayList    <    Object>(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
56	[BUG]  [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(requiredOpts.size()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(requiredOpts.size()  +  1);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(requiredOpts.size()  +  1);	  final    ArrayList    <    Object>    requiredOpts    =    new    ArrayList    <    Object>(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
57	[BUG]  [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY,  requiredOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY,  requiredOpts.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(RequiredOpts.EMPTY,  requiredOpts.size());	  this.requiredOpts.addAll(RequiredOpts.EMPTY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
58	[BUG]  [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY,  requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(RequiredOpts.EMPTY,  requiredOpts);	  this.requiredOpts.addAll(RequiredOpts.EMPTY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
59	[BUG]  [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY,  requiredOpts.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY,  requiredOpts.length);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(RequiredOpts.EMPTY,  requiredOpts.length);	  this.requiredOpts.addAll(RequiredOpts.EMPTY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
60	[BUG]  [BUGGY]  aughtException( "Method  method  declaration  cannot  be  null. ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  aughtException( "Method  method  declaration  cannot  be  null. ");  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	aughtException( "Method  method  declaration  cannot  be  null. ");	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    cannot    be    null.   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
61	[BUG]  [BUGGY]  aughtExceptionHandler.handleException( "Method  method  declaration  cannot  be  null. ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleException( "Method  method  declaration  cannot  be  null. ");  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	aughtExceptionHandler.handleException( "Method  method  declaration  cannot  be  null. ");	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    cannot    be    null.   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
62	[BUG]  [BUGGY]  this.requiredOpts.addAll(this.requiredOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(this.requiredOpts.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(this.requiredOpts.size());	  this.requiredOpts.addAll(this.requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
63	[BUG]  [BUGGY]  this.requiredOpts.addAll(Arrays.asList(this.requiredOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(Arrays.asList(this.requiredOpts));  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(Arrays.asList(this.requiredOpts));	  this.requiredOpts.addAll(this.requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
64	[BUG]  [BUGGY]  final  Method  declaration;  return  type.requires(declaration.getMethod());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  final  Method  declaration;  return  type.requires(declaration.getMethod());  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  Method  declaration;  return  type.requires(declaration.getMethod());	  Method    declaration;    return    type.requires(declaration.getMethod());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
65	[BUG]  [BUGGY]  Method  declaration;  return  type.requires(declaration.getRawClass());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration;  return  type.requires(declaration.getRawClass());  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration;  return  type.requires(declaration.getRawClass());	  Method    declaration;    return    type.requires(declaration.getMethod());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
66	[BUG]  [BUGGY]  final  List  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(requiredOpts.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  final  List  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(requiredOpts.size()  -  1);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  List  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(requiredOpts.size()  -  1);	  final    List    <    Object>    requiredOpts    =    new    ArrayList    <    Object>(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
67	[BUG]  [BUGGY]  final  List  <  Object>  requiredOpts  =  Sets.newHashSet(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  final  List  <  Object>  requiredOpts  =  Sets.newHashSet(requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  List  <  Object>  requiredOpts  =  Sets.newHashSet(requiredOpts);	  final    Set    <    Object>    requiredOpts    =    Sets.newHashSet(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
68	[BUG]  [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  Sets.newHashSet(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  Sets.newHashSet(requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  ArrayList  <  Object>  requiredOpts  =  Sets.newHashSet(requiredOpts);	  final    Set    <    Object>    requiredOpts    =    Sets.newHashSet(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
69	[BUG]  [BUGGY]  final  Set  <  Object>  requiredOpts  =  Sets.newHashSet(type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  final  Set  <  Object>  requiredOpts  =  Sets.newHashSet(type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  Set  <  Object>  requiredOpts  =  Sets.newHashSet(type);	  final    Set    <    Object>    requiredOpts    =    Sets.newHashSet(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
70	[BUG]  [BUGGY]  this.requiredOpts.add(new  ArrayList  <  Object>(),  requiredOpts,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.add(new  ArrayList  <  Object>(),  requiredOpts,  type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.add(new  ArrayList  <  Object>(),  requiredOpts,  type);	  this.requiredOpts.add(new    ArrayList    <    Object>(),    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
71	[BUG]  [BUGGY]  this.requiredOpts.add(new  ArrayList  <  Object>(),  types);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.add(new  ArrayList  <  Object>(),  types);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.add(new  ArrayList  <  Object>(),  types);	  this.requiredOpts.add(new    ArrayList    <    Object>(),    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
72	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "requires ",  type,  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "requires ",  type,  this);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "requires ",  type,  this);	  Method    declaration    =    getDeclaredMethod(   "requires   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
73	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "requires ",  type,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "requires ",  type,  false);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "requires ",  type,  false);	  Method    declaration    =    getDeclaredMethod(   "requires   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
74	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "requires ",  type,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "requires ",  type,  null);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "requires ",  type,  null);	  Method    declaration    =    getDeclaredMethod(   "requires   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
75	[BUG]  [BUGGY]  Arrays.sort(this.requiredOpts,  this.requiredOpts.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this.requiredOpts,  this.requiredOpts.length);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this.requiredOpts,  this.requiredOpts.length);	  Arrays.sort(this.requiredOpts,    requiredOpts.length);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
76	[BUG]  [BUGGY]  Arrays.sort(this.requiredOpts,  requiredOpts.length  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this.requiredOpts,  requiredOpts.length  +  1);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this.requiredOpts,  requiredOpts.length  +  1);	  Arrays.sort(this.requiredOpts,    requiredOpts.length);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
77	[BUG]  [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Sets.newHashSet(type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Sets.newHashSet(type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	ArrayList  <  Object>  requiredOpts  =  Sets.newHashSet(type);	  ArrayList    <    Object>    requiredOpts    =    Sets.newHashSet(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
78	[BUG]  [BUGGY]  List  <  Object>  requiredOpts  =  Sets.newHashSet(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  List  <  Object>  requiredOpts  =  Sets.newHashSet(requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	List  <  Object>  requiredOpts  =  Sets.newHashSet(requiredOpts);	  ArrayList    <    Object>    requiredOpts    =    Sets.newHashSet(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
79	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaration ",  type,  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaration ",  type,  this);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "declaration ",  type,  this);	  Method    declaration    =    getDeclaredMethod(   "declaration   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
80	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaration ",  type,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaration ",  type,  false);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "declaration ",  type,  false);	  Method    declaration    =    getDeclaredMethod(   "declaration   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
81	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaration ",  type,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaration ",  type,  null);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "declaration ",  type,  null);	  Method    declaration    =    getDeclaredMethod(   "declaration   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
82	[BUG]  [BUGGY]  this.requiredOpts.add(new  ArrayList  <  Object>(),  type,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.add(new  ArrayList  <  Object>(),  type,  requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.add(new  ArrayList  <  Object>(),  type,  requiredOpts);	  this.requiredOpts.add(new    ArrayList    <    Object>(),    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
83	[BUG]  [BUGGY]  this.requiredOpts.add(new  ArrayList  <  Object>(),  type,  expectedOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.add(new  ArrayList  <  Object>(),  type,  expectedOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.add(new  ArrayList  <  Object>(),  type,  expectedOpts);	  this.requiredOpts.add(new    ArrayList    <    Object>(),    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
84	[BUG]  [BUGGY]  this.requiredOpts.add(new  ArrayList  <  Object>(),  type,  parameters);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.add(new  ArrayList  <  Object>(),  type,  parameters);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.add(new  ArrayList  <  Object>(),  type,  parameters);	  this.requiredOpts.add(new    ArrayList    <    Object>(),    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
85	[BUG]  [BUGGY]  protected  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  protected  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	protected  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();	  protected    final    ArrayList    <    Object>    requiredOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
86	[BUG]  [BUGGY]  Collection  <  Object>  requiredOpts  =  Sets.newArrayList();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  Collection  <  Object>  requiredOpts  =  Sets.newArrayList();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collection  <  Object>  requiredOpts  =  Sets.newArrayList();	  Collection    <    Object>    requiredOpts    =    Sets.newHashSet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
87	[BUG]  [BUGGY]  public  static  final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  public  static  final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	public  static  final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();	  public    static    final    List    <    Object>    requiredOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
88	[BUG]  [BUGGY]  public  static  final  List  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  public  static  final  List  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	public  static  final  List  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();	  public    static    final    List    <    Object>    requiredOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
89	[BUG]  [BUGGY]  public  static  final  Set  <  Object>  requiredOpts  =  new  HashSet  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  public  static  final  Set  <  Object>  requiredOpts  =  new  HashSet  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	public  static  final  Set  <  Object>  requiredOpts  =  new  HashSet  <  Object>();	  public    static    final    List    <    Object>    requiredOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
90	[BUG]  [BUGGY]  Arrays.sort(this.requiredOpts,  new  Comparable  <  Object>());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this.requiredOpts,  new  Comparable  <  Object>());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this.requiredOpts,  new  Comparable  <  Object>());	  Arrays.sort(requiredOpts,    new    Comparable    <    Object>());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
91	[BUG]  [BUGGY]  Arrays.sort(type,  new  Comparable  <  Object>());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(type,  new  Comparable  <  Object>());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(type,  new  Comparable  <  Object>());	  Arrays.sort(requiredOpts,    new    Comparable    <    Object>());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
92	[BUG]  [BUGGY]  Arrays.sort(this,  requiredOpts,  new  Comparable  <  Object>());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this,  requiredOpts,  new  Comparable  <  Object>());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this,  requiredOpts,  new  Comparable  <  Object>());	  Arrays.sort(requiredOpts,    new    Comparable    <    Object>());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
93	[BUG]  [BUGGY]  Collections.sort(requiredOpts,  type,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.sort(requiredOpts,  type,  null);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.sort(requiredOpts,  type,  null);	  Collections.sort(requiredOpts,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
94	[BUG]  [BUGGY]  Collections.sort(requiredOpts,  type,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.sort(requiredOpts,  type,  false);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.sort(requiredOpts,  type,  false);	  Collections.sort(requiredOpts,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
95	[BUG]  [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(requiredOpts.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(requiredOpts.size()  -  1);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(requiredOpts.size()  -  1);	  final    ArrayList    <    Object>    requiredOpts    =    Lists.newArrayList(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
96	[BUG]  [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(requiredOpts.size()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(requiredOpts.size()  -  2);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(requiredOpts.size()  -  2);	  final    ArrayList    <    Object>    requiredOpts    =    Lists.newArrayList(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
97	[BUG]  [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]        [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size());	  final    ArrayList    <    Object>    requiredOpts    =    Lists.newArrayList(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
98	[BUG]  [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Sets.newArrayList();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Sets.newArrayList();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	ArrayList  <  Object>  requiredOpts  =  Sets.newArrayList();	  ArrayList    <    Object>    requiredOpts    =    Sets.newHashSet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
99	[BUG]  [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size()  -  1);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size()  -  1);	  ArrayList    <    Object>    requiredOpts    =    Lists.newArrayList(this.requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
100	[BUG]  [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size()  -  2);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size()  -  2);	  ArrayList    <    Object>    requiredOpts    =    Lists.newArrayList(this.requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
101	[BUG]  [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]        [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size()  +  1);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size()  +  1);	  ArrayList    <    Object>    requiredOpts    =    Lists.newArrayList(this.requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
102	[BUG]  [BUGGY]  Arrays.sort(type,  Collections.  <  Object>emptyList());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(type,  Collections.  <  Object>emptyList());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(type,  Collections.  <  Object>emptyList());	  Arrays.sort(type,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
103	[BUG]  [BUGGY]  Arrays.sort(type,  requiredOpts,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(type,  requiredOpts,  type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(type,  requiredOpts,  type);	  Arrays.sort(type,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
104	[BUG]  [BUGGY]  Arrays.sort(this.requiredOpts,  this.requiredOpts,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this.requiredOpts,  this.requiredOpts,  requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this.requiredOpts,  this.requiredOpts,  requiredOpts);	  Arrays.sort(this.requiredOpts,    this.requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
105	[BUG]  [BUGGY]  Arrays.sort(this.requiredOpts,  this.requiredOpts,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this.requiredOpts,  this.requiredOpts,  type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this.requiredOpts,  this.requiredOpts,  type);	  Arrays.sort(this.requiredOpts,    this.requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
106	[BUG]  [BUGGY]  public  final  List  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  public  final  List  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	public  final  List  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();	  public    final    ArrayList    <    Object>    requiredOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
107	[BUG]  [BUGGY]  public  abstract  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  public  abstract  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	public  abstract  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();	  public    final    ArrayList    <    Object>    requiredOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
108	[BUG]  [BUGGY]  final  List  <  Object>  requiredOpts  =  Lists.newArrayList(requiredOpts.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  final  List  <  Object>  requiredOpts  =  Lists.newArrayList(requiredOpts.size()  -  1);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  List  <  Object>  requiredOpts  =  Lists.newArrayList(requiredOpts.size()  -  1);	  final    List    <    Object>    requiredOpts    =    Lists.newArrayList(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
109	[BUG]  [BUGGY]  final  List  <  Object>  requiredOpts  =  Lists.newArrayList(type.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  final  List  <  Object>  requiredOpts  =  Lists.newArrayList(type.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  List  <  Object>  requiredOpts  =  Lists.newArrayList(type.size());	  final    List    <    Object>    requiredOpts    =    Lists.newArrayList(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
110	[BUG]  [BUGGY]  final  List  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  final  List  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  List  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size());	  final    List    <    Object>    requiredOpts    =    Lists.newArrayList(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
111	[BUG]  [BUGGY]  final  Method  declaration;  return  type.requires(declaration.getType());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  final  Method  declaration;  return  type.requires(declaration.getType());  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  Method  declaration;  return  type.requires(declaration.getType());	  Method    declaration;    return    type.requires(declaration.getType());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
112	[BUG]  [BUGGY]  Method  declaration;  return  type.requires(declaration.getType(),  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration;  return  type.requires(declaration.getType(),  type);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration;  return  type.requires(declaration.getType(),  type);	  Method    declaration;    return    type.requires(declaration.getType());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
113	[BUG]  [BUGGY]  Arrays.sort(typeOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(typeOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(typeOpts);	  Arrays.sort(type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
114	[BUG]  [BUGGY]  Set  <  Object>  requiredOpts  =  new  HashSet  <  Object>(requiredOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  Set  <  Object>  requiredOpts  =  new  HashSet  <  Object>(requiredOpts.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Set  <  Object>  requiredOpts  =  new  HashSet  <  Object>(requiredOpts.size());	  List    <    Object>    requiredOpts    =    new    ArrayList    <    Object>(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
115	[BUG]  [BUGGY]  List  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(requiredOpts.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  List  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(requiredOpts.size()  -  1);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	List  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(requiredOpts.size()  -  1);	  List    <    Object>    requiredOpts    =    new    ArrayList    <    Object>(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
116	[BUG]  [BUGGY]  List  <  Object>  requiredOpts  =  Sets.newArrayList();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  List  <  Object>  requiredOpts  =  Sets.newArrayList();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	List  <  Object>  requiredOpts  =  Sets.newArrayList();	  List    <    Object>    requiredOpts    =    Sets.newHashSet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
117	[BUG]  [BUGGY]  Set  <  Object>  requiredOpts  =  Sets.newHashSet(type,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  Set  <  Object>  requiredOpts  =  Sets.newHashSet(type,  type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Set  <  Object>  requiredOpts  =  Sets.newHashSet(type,  type);	  Set    <    Object>    requiredOpts    =    Sets.newHashSet(type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
118	[BUG]  [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(type.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(type.size()  -  1);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(type.size()  -  1);	  ArrayList    <    Object>    requiredOpts    =    Lists.newArrayList(type.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
119	[BUG]  [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(type.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(type.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(type.size());	  ArrayList    <    Object>    requiredOpts    =    Lists.newArrayList(type.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
120	[BUG]  [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(type.size()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(type.size()  +  1);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList(type.size()  +  1);	  ArrayList    <    Object>    requiredOpts    =    Lists.newArrayList(type.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
121	[BUG]  [BUGGY]  List  <  Object>  requiredOpts  =  Lists.newArrayList(type.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]        [BUGGY]  List  <  Object>  requiredOpts  =  Lists.newArrayList(type.size()  -  1);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	List  <  Object>  requiredOpts  =  Lists.newArrayList(type.size()  -  1);	  ArrayList    <    Object>    requiredOpts    =    Lists.newArrayList(type.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
122	[BUG]  [BUGGY]  this.requiredOpts.addAll(Arrays.asList(requiredOpts),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(Arrays.asList(requiredOpts),  requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(Arrays.asList(requiredOpts),  requiredOpts);	  this.requiredOpts.addAll(Arrays.asList(requiredOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
123	[BUG]  [BUGGY]  this.requiredOpts.addAll(Arrays.asList(requiredOpts,  type));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(Arrays.asList(requiredOpts,  type));  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(Arrays.asList(requiredOpts,  type));	  this.requiredOpts.addAll(Arrays.asList(requiredOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
124	[BUG]  [BUGGY]  List  <  Object>  requiredOpts  =  Lists.newLinkedList();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  List  <  Object>  requiredOpts  =  Lists.newLinkedList();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	List  <  Object>  requiredOpts  =  Lists.newLinkedList();	  List    <    Object>    requiredOpts    =    Lists.newArrayList();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
125	[BUG]  [BUGGY]  method  declaration  =  new  ComparableFailure();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  method  declaration  =  new  ComparableFailure();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	method  declaration  =  new  ComparableFailure();	  if(type    ==    null)    {    method    declaration    =    new    ComparableFailure();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
126	[BUG]  [BUGGY]  Method  declaration  =  new  Method(type.toString());  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  new  Method(type.toString());  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  new  Method(type.toString());	  if(type    ==    null)    {    method    declaration    =    new    ComparableFailure();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
127	[BUG]  [BUGGY]  Method  declaration  =  new  Method(type.required);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  new  Method(type.required);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  new  Method(type.required);	  if(type    ==    null)    {    method    declaration    =    new    ComparableFailure();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
128	[BUG]  [BUGGY]  aughtException( "Method  method  declaration  must  not  be  null. ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  aughtException( "Method  method  declaration  must  not  be  null. ");  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	aughtException( "Method  method  declaration  must  not  be  null. ");	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    must    not    be    null.   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
129	[BUG]  [BUGGY]  aughtExceptionHandler.handleException( "Method  method  declaration  must  not  be  null. ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleException( "Method  method  declaration  must  not  be  null. ");  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	aughtExceptionHandler.handleException( "Method  method  declaration  must  not  be  null. ");	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    must    not    be    null.   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
130	[BUG]  [BUGGY]  protected  static  final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  protected  static  final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	protected  static  final  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();	  protected    static    final    List    <    Object>    requiredOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
131	[BUG]  [BUGGY]  protected  static  final  List  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  protected  static  final  List  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	protected  static  final  List  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();	  protected    static    final    List    <    Object>    requiredOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
132	[BUG]  [BUGGY]  Arrays.sort(type,  this.requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(type,  this.requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(type,  this.requiredOpts);	  Arrays.sort(this.requiredOpts,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
133	[BUG]  [BUGGY]  Arrays.sort(this.requiredOpts,  type,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this.requiredOpts,  type,  requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this.requiredOpts,  type,  requiredOpts);	  Arrays.sort(this.requiredOpts,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
134	[BUG]  [BUGGY]  Arrays.sort(this.requiredOpts,  requiredOpts,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this.requiredOpts,  requiredOpts,  type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this.requiredOpts,  requiredOpts,  type);	  Arrays.sort(this.requiredOpts,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
135	[BUG]  [BUGGY]  Collections.  <  Object>  requiredOpts  =  Sets.newArrayList();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.  <  Object>  requiredOpts  =  Sets.newArrayList();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.  <  Object>  requiredOpts  =  Sets.newArrayList();	  Collections.    <    Object>    requiredOpts    =    Sets.newHashSet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
136	[BUG]  [BUGGY]  Collections.  <  Object>  requiredOpts  =  Sets.newLinkedHashSet();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.  <  Object>  requiredOpts  =  Sets.newLinkedHashSet();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.  <  Object>  requiredOpts  =  Sets.newLinkedHashSet();	  Collections.    <    Object>    requiredOpts    =    Sets.newHashSet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
137	[BUG]  [BUGGY]  Collections.  <  Object>  requiredOpts  =  Lists.newArrayList();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.  <  Object>  requiredOpts  =  Lists.newArrayList();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.  <  Object>  requiredOpts  =  Lists.newArrayList();	  Collections.    <    Object>    requiredOpts    =    Sets.newHashSet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
138	[BUG]  [BUGGY]  method  =  new  ComparableFailure();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  method  =  new  ComparableFailure();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	method  =  new  ComparableFailure();	  if(type    ==    null)    {    method    declaration    =    new    ComparableFailure();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
139	[BUG]  [BUGGY]  method  declaration  =  new  ComparableFailure(type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]        [BUGGY]  method  declaration  =  new  ComparableFailure(type);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	method  declaration  =  new  ComparableFailure(type);	  if(type    ==    null)    {    method    declaration    =    new    ComparableFailure();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
140	[BUG]  [BUGGY]  Collections.  <  Object>  requiredOpts  =  Sets.newHashSet(required);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.  <  Object>  requiredOpts  =  Sets.newHashSet(required);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.  <  Object>  requiredOpts  =  Sets.newHashSet(required);	  Collections.    <    Object>    requiredOpts    =    Sets.newHashSet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
141	[BUG]  [BUGGY]  Arrays.sort(requiredOpts,  this.requiredOpts.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(requiredOpts,  this.requiredOpts.length);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(requiredOpts,  this.requiredOpts.length);	  Arrays.sort(this.requiredOpts,    requiredOpts.length);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
142	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "type ",  typeName);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "type ",  typeName);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "type ",  typeName);	  Method    declaration    =    getDeclaredMethod(   "type   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
143	[BUG]  [BUGGY]  Collections.sort(types);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.sort(types);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.sort(types);	  Collections.sort(type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
144	[BUG]  [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Sets.newLinkedList();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Sets.newLinkedList();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	ArrayList  <  Object>  requiredOpts  =  Sets.newLinkedList();	  ArrayList    <    Object>    requiredOpts    =    Sets.newHashSet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
145	[BUG]  [BUGGY]  this.requiredOpts.add(this.requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.add(this.requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.add(this.requiredOpts);	  this.requiredOpts.addAll(this.requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
146	[BUG]  [BUGGY]  aught(null)  {  throw  new  IllegalArgumentException( "Method  method  declaration  cannot  be  null. ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  aught(null)  {  throw  new  IllegalArgumentException( "Method  method  declaration  cannot  be  null. ");  }  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	aught(null)  {  throw  new  IllegalArgumentException( "Method  method  declaration  cannot  be  null. ");  }	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    cannot    be    null.   ");    }    else    {    return    type.toString();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
147	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaration ", "type ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaration ", "type ");  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "declaration ", "type ");	  Method    declaration    =    getDeclaredMethod(   "method   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
148	[BUG]  [BUGGY]  [Delete]  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  [Delete]  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	[Delete]	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    must    not    be    null.   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
149	[BUG]  [BUGGY]  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  }  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	}	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    must    not    be    null.   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
150	[BUG]  [BUGGY]  >>  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  >>  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	>>	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    must    not    be    null.   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
151	[BUG]  [BUGGY]  Arrays.sort(params,  requiredOpts,  new  Comparable  <  Object>());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(params,  requiredOpts,  new  Comparable  <  Object>());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(params,  requiredOpts,  new  Comparable  <  Object>());	  Arrays.sort(requiredOpts,    new    Comparable    <    Object>());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
152	[BUG]  [BUGGY]  if(type!=  null)  {  Method  declaration;  return  type.requires(declaration.getMethodType());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  if(type!=  null)  {  Method  declaration;  return  type.requires(declaration.getMethodType());  }  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	if(type!=  null)  {  Method  declaration;  return  type.requires(declaration.getMethodType());  }	  Method    declaration;    return    type.requires(declaration.getMethodType());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
153	[BUG]  [BUGGY]  Method  declaration;  return  type.requires(declaration.getDeclarationType());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration;  return  type.requires(declaration.getDeclarationType());  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration;  return  type.requires(declaration.getDeclarationType());	  Method    declaration;    return    type.requires(declaration.getMethodType());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
154	[BUG]  [BUGGY]  protected  final  ArrayList  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  protected  final  ArrayList  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	protected  final  ArrayList  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();	  protected    final    ArrayList    <    Object>    requiredOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
155	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "declarations ",  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "declarations ",  type);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "declarations ",  type);	  Method    declaration    =    getDeclaredMethod(   "requires   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
156	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "requires, ",  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "requires, ",  type);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "requires, ",  type);	  Method    declaration    =    getDeclaredMethod(   "requires   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
157	[BUG]  [BUGGY]  Arrays.sort(requiredOpts,  this.requiredOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(requiredOpts,  this.requiredOpts.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(requiredOpts,  this.requiredOpts.size());	  Arrays.sort(this.requiredOpts,    requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
158	[BUG]  [BUGGY]  Preconditions.checkArgument(type.requires(declaration.getType()));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  Preconditions.checkArgument(type.requires(declaration.getType()));  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Preconditions.checkArgument(type.requires(declaration.getType()));	  Method    declaration;    return    type.requires(declaration.getType());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
159	[BUG]  [BUGGY]  Method  declaration;  return  type.requires(declaration.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration;  return  type.requires(declaration.getValue());  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration;  return  type.requires(declaration.getValue());	  Method    declaration;    return    type.requires(declaration.getType());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
160	[BUG]  [BUGGY]  if(type!=  null)  {  Method  declaration;  return  type.requires(declaration.getMethod());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  if(type!=  null)  {  Method  declaration;  return  type.requires(declaration.getMethod());  }  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	if(type!=  null)  {  Method  declaration;  return  type.requires(declaration.getMethod());  }	  Method    declaration;    return    type.requires(declaration.getMethod());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
161	[BUG]  [BUGGY]  Method  declaration;  return  type.requires(declaration.getDeclaration());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration;  return  type.requires(declaration.getDeclaration());  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration;  return  type.requires(declaration.getDeclaration());	  Method    declaration;    return    type.requires(declaration.getMethod());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
162	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( "Method  method  declaration  must  be  null. ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingException( "Method  method  declaration  must  be  null. ");  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	aughtExceptionHandler.handleMissingException( "Method  method  declaration  must  be  null. ");	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    must    not    be    null.   ");    }    else    {    return    type.toString();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
163	[BUG]  [BUGGY]  final  List  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(type.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  final  List  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(type.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  List  <  Object>  requiredOpts  =  new  ArrayList  <  Object>(type.size());	  final    List    <    Object>    requiredOpts    =    new    ArrayList    <    Object>(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
164	[BUG]  [BUGGY]  final  List  <  Object>  requiredOpts  =  Lists.newArrayListWithType(type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  final  List  <  Object>  requiredOpts  =  Lists.newArrayListWithType(type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  List  <  Object>  requiredOpts  =  Lists.newArrayListWithType(type);	  final    List    <    Object>    requiredOpts    =    Lists.newArrayList();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
165	[BUG]  [BUGGY]  Arrays.sort(types);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(types);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(types);	  Arrays.sort(type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
166	[BUG]  [BUGGY]  List  <  Object>  requiredOpts  =  Lists.newArrayListWithType(type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  List  <  Object>  requiredOpts  =  Lists.newArrayListWithType(type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	List  <  Object>  requiredOpts  =  Lists.newArrayListWithType(type);	  ArrayList    <    Object>    requiredOpts    =    Lists.newArrayListWithType(type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
167	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaration, ",  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaration, ",  type);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "declaration, ",  type);	  Method    declaration    =    getDeclaredMethod(   "declaration   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
168	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaration ",  null,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaration ",  null,  type);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "declaration ",  null,  type);	  Method    declaration    =    getDeclaredMethod(   "declaration   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
169	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( ".declaration ",  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( ".declaration ",  type);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( ".declaration ",  type);	  Method    declaration    =    getDeclaredMethod(   "declaration   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
170	[BUG]  [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,  requiredOpts.values());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,  requiredOpts.values());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,  requiredOpts.values());	  this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
171	[BUG]  [BUGGY]  this.requiredOpts.add(new  Object[]  {  }  );  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.add(new  Object[]  {  }  );  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.add(new  Object[]  {  }  );	  this.requiredOpts.add(new    LinkedList    <    Object>());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
172	[BUG]  [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY_ARRAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY_ARRAY);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(RequiredOpts.EMPTY_ARRAY);	  this.requiredOpts.addAll(RequiredOpts.EMPTY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
173	[BUG]  [BUGGY]  this.requiredOpts.addAll(requiredOpts,  Arrays.asList(requiredOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(requiredOpts,  Arrays.asList(requiredOpts));  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(requiredOpts,  Arrays.asList(requiredOpts));	  this.requiredOpts.addAll(requiredOpts,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
174	[BUG]  [BUGGY]  final  Set  <  Object>  requiredOpts  =  new  HashSet  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  final  Set  <  Object>  requiredOpts  =  new  HashSet  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  Set  <  Object>  requiredOpts  =  new  HashSet  <  Object>();	  final    List    <    Object>    requiredOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
175	[BUG]  [BUGGY]  Arrays.sort(this.requiredOpts,  this.type,  requiredOpts.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this.requiredOpts,  this.type,  requiredOpts.length);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this.requiredOpts,  this.type,  requiredOpts.length);	  Arrays.sort(this.requiredOpts,    this.type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
176	[BUG]  [BUGGY]  Collection  <  Object>  requiredOpts  =  Sets.newLinkedHashSet();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  Collection  <  Object>  requiredOpts  =  Sets.newLinkedHashSet();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collection  <  Object>  requiredOpts  =  Sets.newLinkedHashSet();	  Collection    <    Object>    requiredOpts    =    Sets.newHashSet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
177	[BUG]  [BUGGY]  Collections.sort(type,  new  ArrayList  <  Object>());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.sort(type,  new  ArrayList  <  Object>());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.sort(type,  new  ArrayList  <  Object>());	  Collections.sort(type,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
178	[BUG]  [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Sets.newHashSet(this.requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  ArrayList  <  Object>  requiredOpts  =  Sets.newHashSet(this.requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	ArrayList  <  Object>  requiredOpts  =  Sets.newHashSet(this.requiredOpts);	  ArrayList    <    Object>    requiredOpts    =    Sets.newHashSet(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
179	[BUG]  [BUGGY]  Set  <  Object>  requiredOpts  =  Sets.newHashSet(type,  required);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  Set  <  Object>  requiredOpts  =  Sets.newHashSet(type,  required);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Set  <  Object>  requiredOpts  =  Sets.newHashSet(type,  required);	  Set    <    Object>    requiredOpts    =    Sets.newHashSet(requiredOpts,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
180	[BUG]  [BUGGY]  final  Set  <  Object>  requiredOpts  =  Sets.newHashSet(requiredOpts,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  final  Set  <  Object>  requiredOpts  =  Sets.newHashSet(requiredOpts,  type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	final  Set  <  Object>  requiredOpts  =  Sets.newHashSet(requiredOpts,  type);	  Set    <    Object>    requiredOpts    =    Sets.newHashSet(requiredOpts,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
181	[BUG]  [BUGGY]  this.requiredOpts.add(Arrays.asList(requiredOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.add(Arrays.asList(requiredOpts));  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.add(Arrays.asList(requiredOpts));	  this.requiredOpts.addAll(Arrays.asList(requiredOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
182	[BUG]  [BUGGY]  this.requiredOpts.addAll(Arrays.asList(this.requiredOpts),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(Arrays.asList(this.requiredOpts),  requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(Arrays.asList(this.requiredOpts),  requiredOpts);	  this.requiredOpts.addAll(Arrays.asList(requiredOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
183	[BUG]  [BUGGY]  this.requiredOpts.add(new  Comparable  <  Object>());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.add(new  Comparable  <  Object>());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.add(new  Comparable  <  Object>());	  this.requiredOpts.add(new    LinkedList    <    Object>());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
184	[BUG]  [BUGGY]  List  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  List  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	List  <  Object>  requiredOpts  =  Lists.newArrayList(this.requiredOpts.size());	  ArrayList    <    Object>    requiredOpts    =    Lists.newArrayList(this.requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
185	[BUG]  [BUGGY]  return  type.requires(declaration.getType());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  return  type.requires(declaration.getType());  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	return  type.requires(declaration.getType());	  Method    declaration;    return    type.requires(declaration.getType());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
186	[BUG]  [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,  type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,  type);	  this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
187	[BUG]  [BUGGY]  parent  <  0  ||  type  ==  null)  {  throw  new  IllegalArgumentException( "Method  method  declaration  cannot  be  null. ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  parent  <  0  ||  type  ==  null)  {  throw  new  IllegalArgumentException( "Method  method  declaration  cannot  be  null. ");  }  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	parent  <  0  ||  type  ==  null)  {  throw  new  IllegalArgumentException( "Method  method  declaration  cannot  be  null. ");  }	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    cannot    be    null.   ");    }    else    {    return    type.toString();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
188	[BUG]  [BUGGY]  Set  <  Object>  requiredOpts  =  Lists.newHashSet();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  Set  <  Object>  requiredOpts  =  Lists.newHashSet();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Set  <  Object>  requiredOpts  =  Lists.newHashSet();	  List    <    Object>    requiredOpts    =    Lists.newArrayList();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
189	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaredmethod ",  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaredmethod ",  type);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "declaredmethod ",  type);	  Method    declaration    =    getDeclaredMethod(   "method   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
190	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "declared-method ",  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "declared-method ",  type);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "declared-method ",  type);	  Method    declaration    =    getDeclaredMethod(   "method   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
191	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaredType ",  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaredType ",  type);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "declaredType ",  type);	  Method    declaration    =    getDeclaredMethod(   "type   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
192	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "declared ",  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "declared ",  type);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "declared ",  type);	  Method    declaration    =    getDeclaredMethod(   "type   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
193	[BUG]  [BUGGY]  Arrays.sort(this.requiredOpts,  this.type,  new  Comparable  <  Object>());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this.requiredOpts,  this.type,  new  Comparable  <  Object>());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this.requiredOpts,  this.type,  new  Comparable  <  Object>());	  Arrays.sort(this.requiredOpts,    this.type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
194	[BUG]  [BUGGY]  List  <  Object>  requiredOpts  =  Lists.newArrayList(type.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  List  <  Object>  requiredOpts  =  Lists.newArrayList(type.size());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	List  <  Object>  requiredOpts  =  Lists.newArrayList(type.size());	  ArrayList    <    Object>    requiredOpts    =    Lists.newArrayList(type.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
195	[BUG]  [BUGGY]  Collections.sort(this.requiredOpts,  this.requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.sort(this.requiredOpts,  this.requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.sort(this.requiredOpts,  this.requiredOpts);	  Collections.sort(this.requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
196	[BUG]  [BUGGY]  Arrays.sort(requiredOpts,  type,  new  Comparable  <  Object>());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(requiredOpts,  type,  new  Comparable  <  Object>());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(requiredOpts,  type,  new  Comparable  <  Object>());	  Arrays.sort(requiredOpts,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
197	[BUG]  [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaration.requires ",  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  Method  declaration  =  getDeclaredMethod( "declaration.requires ",  type);  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Method  declaration  =  getDeclaredMethod( "declaration.requires ",  type);	  Method    declaration    =    getDeclaredMethod(   "requires   ",    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
198	[BUG]  [BUGGY]  aughtException( "Method  method  declaration  must  not  be  null. ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  aughtException( "Method  method  declaration  must  not  be  null. ");  }  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	aughtException( "Method  method  declaration  must  not  be  null. ");  }	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    must    not    be    null.   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
199	[BUG]  [BUGGY]  aught(null,  type)  {  throw  new  IllegalArgumentException( "Method  method  declaration  cannot  be  null. ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  aught(null,  type)  {  throw  new  IllegalArgumentException( "Method  method  declaration  cannot  be  null. ");  }  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	aught(null,  type)  {  throw  new  IllegalArgumentException( "Method  method  declaration  cannot  be  null. ");  }	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    cannot    be    null.   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
200	[BUG]  [BUGGY]  aught(null,  type)  {  throw  new  IllegalArgumentException( "Method  method  declaration  cannot  be  null.. ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  aught(null,  type)  {  throw  new  IllegalArgumentException( "Method  method  declaration  cannot  be  null.. ");  }  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	aught(null,  type)  {  throw  new  IllegalArgumentException( "Method  method  declaration  cannot  be  null.. ");  }	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    cannot    be    null.   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
201	[BUG]  [BUGGY]  Collections.sort(requiredOpts,  type,  new  Comparable  <  Object>());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.sort(requiredOpts,  type,  new  Comparable  <  Object>());  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.sort(requiredOpts,  type,  new  Comparable  <  Object>());	  Collections.sort(requiredOpts,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
202	[BUG]  [BUGGY]  Collections.sort(requiredOpts,  type,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.sort(requiredOpts,  type,  requiredOpts);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.sort(requiredOpts,  type,  requiredOpts);	  Collections.sort(requiredOpts,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
203	[BUG]  [BUGGY]  protected  abstract  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  protected  abstract  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	protected  abstract  ArrayList  <  Object>  requiredOpts  =  new  ArrayList  <  Object>();	  protected    final    ArrayList    <    Object>    requiredOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
204	[BUG]  [BUGGY]  private  static  final  LinkedList  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  private  static  final  LinkedList  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	private  static  final  LinkedList  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();	  private    static    final    List    <    Object>    requiredOpts    =    new    LinkedList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
205	[BUG]  [BUGGY]  static  final  LinkedList  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  static  final  LinkedList  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	static  final  LinkedList  <  Object>  requiredOpts  =  new  LinkedList  <  Object>();	  static    final    List    <    Object>    requiredOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
206	[BUG]  [BUGGY]  Arrays.sort(this.requiredOpts,  this.requiredOpts.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  Arrays.sort(this.requiredOpts,  this.requiredOpts.size()  -  1);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Arrays.sort(this.requiredOpts,  this.requiredOpts.size()  -  1);	  Arrays.sort(this.requiredOpts,    requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
207	[BUG]  [BUGGY]  Collections.sort(required,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  Collections.sort(required,  type);  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	Collections.sort(required,  type);	  Collections.sort(type,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
208	[BUG]  [BUGGY]  private  final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  private  final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList();  [BUGGY]      private  final  List<Object>  requiredOpts  =  new  ArrayList<Object>();  [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	private  final  ArrayList  <  Object>  requiredOpts  =  Lists.newArrayList();	  final    ArrayList    <    Object>    requiredOpts    =    Lists.newArrayList();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
209	[BUG]  [BUGGY]  ||  type  ==  null)  {  throw  new  IllegalArgumentException( "Method  method  declaration  must  not  be  null. ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]        [BUGGY]  ||  type  ==  null)  {  throw  new  IllegalArgumentException( "Method  method  declaration  must  not  be  null. ");  }  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	||  type  ==  null)  {  throw  new  IllegalArgumentException( "Method  method  declaration  must  not  be  null. ");  }	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    must    not    be    null.   ");    }    else    {    return    type.toString();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
210	[BUG]  [BUGGY]  ||(type  ==  null  &&  type.toString().equals( " ")))  {  throw  new  IllegalArgumentException( "Method  method  declaration  must  not  be  null. ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]        [BUGGY]  ||(type  ==  null  &&  type.toString().equals( " ")))  {  throw  new  IllegalArgumentException( "Method  method  declaration  must  not  be  null. ");  }  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	||(type  ==  null  &&  type.toString().equals( " ")))  {  throw  new  IllegalArgumentException( "Method  method  declaration  must  not  be  null. ");  }	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    must    not    be    null.   ");    }    else    {    return    type.toString();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
211	[BUG]  [BUGGY]  ||(type  ==  null  &&  type.toString().length()  >  0))  {  throw  new  IllegalArgumentException( "Method  method  declaration  must  not  be  null. ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]        [BUGGY]  ||(type  ==  null  &&  type.toString().length()  >  0))  {  throw  new  IllegalArgumentException( "Method  method  declaration  must  not  be  null. ");  }  [BUGGY]        [CLASS]  Options  [VARIABLES]  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	||(type  ==  null  &&  type.toString().length()  >  0))  {  throw  new  IllegalArgumentException( "Method  method  declaration  must  not  be  null. ");  }	  if(type    ==    null)    {    throw    new    IllegalArgumentException(   "Method    method    declaration    must    not    be    null.   ");    }    else    {    return    type.toString();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
