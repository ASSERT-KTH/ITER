projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58protectedfinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=newArrayList<Object>(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(newArrayList<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatestaticfinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Set<Object>requiredOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Set<Object>requiredOpts=Sets.newHashSet(requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,requiredOpts.length);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(type,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(requiredOpts,newComparable<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58protectedfinalArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58protectedfinalList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalSet<Object>requiredOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collection<Object>requiredOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList(requiredOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=Lists.newArrayList(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList(requiredOpts.size()-2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(newArrayList<Object>(),requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(newArrayList<Object>(),type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(this.requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(Arrays.asList(requiredOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(RequiredOpts.EMPTY);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatestaticfinalArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58staticfinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatestaticfinalList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=Lists.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=Lists.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=Lists.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=newArrayList<Object>(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=newArrayList<Object>(requiredOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=newArrayList<Object>(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=newArrayList<Object>(requiredOpts.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(this.requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(type,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalSet<Object>requiredOpts=Sets.newHashSet(requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Set<Object>requiredOpts=Sets.newHashSet(requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Sets.newHashSet(requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Set<Object>requiredOpts=Sets.newHashSet(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration;returntype.requires(declaration.getMethod());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration;returntype.requires(declaration.getMethodType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration;returntype.requires(declaration.getType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58if(type==null){methoddeclaration=newComparableFailure();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.<Object>requiredOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,this.type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58publicstaticfinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=newArrayList<Object>(type.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList(type.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList(this.requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58protectedstaticfinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58if(type==null){thrownewIllegalArgumentException("Methodmethoddeclarationmustnotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58if(type==null){thrownewIllegalArgumentException("Methodmethoddeclarationcannotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58if(type==null){thrownewIllegalArgumentException("Methodmethoddeclarationmustnotbenull.");}else{returntype.toString();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58if(type==null){thrownewIllegalArgumentException("Methodmethoddeclarationcannotbenull.");}else{returntype.toString();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(newLinkedList<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,this.requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(requiredOpts,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58publicfinalArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=Lists.newArrayList(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayListWithType(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=newArrayList<Object>(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("method",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("declaration",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("requires",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("type",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.type,this.requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,this.type,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,this.type,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Set<Object>requiredOpts=Sets.newHashSet(type,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collection<Object>requiredOpts=Sets.newHashSet(type,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Sets.newHashSet(requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalSet<Object>requiredOpts=Sets.newHashSet(type,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=newArrayList<Object>(RequiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=Lists.newLinkedList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(newLinkedList<Object>(),requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(newArrayList<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(this.requiredOpts,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58parent==null){thrownewIllegalArgumentException("Methodmethoddeclarationmustnotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58aughtExceptionHandler.handleMissingException("Methodmethoddeclarationmustnotbenull.");
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58protectedfinalLinkedList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=Lists.newArrayList(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayListWithType(type,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=Lists.newArrayListWithType(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalCollection<Object>requiredOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58staticfinalArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalMethoddeclaration;returntype.requires(declaration.getMethodType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration;returntype.requires(declaration.getReturnType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration;returntype.requires(declaration.getRawType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(type,newComparable<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(type,requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("type",type,false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("type",type,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("type",type,this);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=newArrayList<Object>(type.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=newArrayList<Object>(type.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=newArrayList<Object>(type.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=newArrayList<Object>(type.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(this.requiredOpts,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(this.requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(this.requiredOpts,0);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(this.requiredOpts,this.type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,this.requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,requiredOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,requiredOpts.size()-2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=Lists.newLinkedList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalList<Object>requiredOpts=Lists.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58parent==null){thrownewIllegalArgumentException("Methodmethoddeclarationcannotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,requiredOpts.length);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("method,",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(requiredOpts,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(requiredOpts,type,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58staticfinalList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58staticfinalSet<Object>requiredOpts=newHashSet<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=newArrayList<Object>(requiredOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=newArrayList<Object>(requiredOpts.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(RequiredOpts.EMPTY,requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(RequiredOpts.EMPTY,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(RequiredOpts.EMPTY,requiredOpts.length);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58aughtException("Methodmethoddeclarationcannotbenull.");
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58aughtExceptionHandler.handleException("Methodmethoddeclarationcannotbenull.");
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(this.requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(Arrays.asList(this.requiredOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalMethoddeclaration;returntype.requires(declaration.getMethod());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration;returntype.requires(declaration.getRawClass());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=newArrayList<Object>(requiredOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=Sets.newHashSet(requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=Sets.newHashSet(requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalSet<Object>requiredOpts=Sets.newHashSet(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(newArrayList<Object>(),requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(newArrayList<Object>(),types);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("requires",type,this);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("requires",type,false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("requires",type,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,this.requiredOpts.length);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,requiredOpts.length+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Sets.newHashSet(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=Sets.newHashSet(requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("declaration",type,this);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("declaration",type,false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("declaration",type,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(newArrayList<Object>(),type,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(newArrayList<Object>(),type,expectedOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(newArrayList<Object>(),type,parameters);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58protectedArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collection<Object>requiredOpts=Sets.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58publicstaticfinalArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58publicstaticfinalList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58publicstaticfinalSet<Object>requiredOpts=newHashSet<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,newComparable<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(type,newComparable<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this,requiredOpts,newComparable<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(requiredOpts,type,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(requiredOpts,type,false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=Lists.newArrayList(requiredOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=Lists.newArrayList(requiredOpts.size()-2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=Lists.newArrayList(this.requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Sets.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList(this.requiredOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList(this.requiredOpts.size()-2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList(this.requiredOpts.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(type,Collections.<Object>emptyList());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(type,requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,this.requiredOpts,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,this.requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58publicfinalList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58publicabstractArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=Lists.newArrayList(requiredOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=Lists.newArrayList(type.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=Lists.newArrayList(this.requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalMethoddeclaration;returntype.requires(declaration.getType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration;returntype.requires(declaration.getType(),type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(typeOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Set<Object>requiredOpts=newHashSet<Object>(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=newArrayList<Object>(requiredOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=Sets.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Set<Object>requiredOpts=Sets.newHashSet(type,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList(type.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalArrayList<Object>requiredOpts=Lists.newArrayList(type.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Lists.newArrayList(type.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=Lists.newArrayList(type.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(Arrays.asList(requiredOpts),requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(Arrays.asList(requiredOpts,type));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=Lists.newLinkedList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58methoddeclaration=newComparableFailure();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=newMethod(type.toString());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=newMethod(type.required);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58aughtException("Methodmethoddeclarationmustnotbenull.");
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58aughtExceptionHandler.handleException("Methodmethoddeclarationmustnotbenull.");
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58protectedstaticfinalArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58protectedstaticfinalList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(type,this.requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,type,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.<Object>requiredOpts=Sets.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.<Object>requiredOpts=Sets.newLinkedHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.<Object>requiredOpts=Lists.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58method=newComparableFailure();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58methoddeclaration=newComparableFailure(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.<Object>requiredOpts=Sets.newHashSet(required);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(requiredOpts,this.requiredOpts.length);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("type",typeName);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(types);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Sets.newLinkedList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(this.requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58aught(null){thrownewIllegalArgumentException("Methodmethoddeclarationcannotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("declaration","type");
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58[Delete]
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58>>
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(params,requiredOpts,newComparable<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58if(type!=null){Methoddeclaration;returntype.requires(declaration.getMethodType());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration;returntype.requires(declaration.getDeclarationType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58protectedfinalArrayList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("declarations",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("requires,",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(requiredOpts,this.requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Preconditions.checkArgument(type.requires(declaration.getType()));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration;returntype.requires(declaration.getValue());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58if(type!=null){Methoddeclaration;returntype.requires(declaration.getMethod());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration;returntype.requires(declaration.getDeclaration());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58aughtExceptionHandler.handleMissingException("Methodmethoddeclarationmustbenull.");
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=newArrayList<Object>(type.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalList<Object>requiredOpts=Lists.newArrayListWithType(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(types);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=Lists.newArrayListWithType(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("declaration,",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("declaration",null,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod(".declaration",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,requiredOpts.values());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(newObject[]{});
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(RequiredOpts.EMPTY_ARRAY);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(requiredOpts,Arrays.asList(requiredOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalSet<Object>requiredOpts=newHashSet<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,this.type,requiredOpts.length);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collection<Object>requiredOpts=Sets.newLinkedHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(type,newArrayList<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58ArrayList<Object>requiredOpts=Sets.newHashSet(this.requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Set<Object>requiredOpts=Sets.newHashSet(type,required);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58finalSet<Object>requiredOpts=Sets.newHashSet(requiredOpts,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(Arrays.asList(requiredOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(Arrays.asList(this.requiredOpts),requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.add(newComparable<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=Lists.newArrayList(this.requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58returntype.requires(declaration.getType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58this.requiredOpts.addAll(RequiredOpts.EMPTY_LIST,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58parent<0||type==null){thrownewIllegalArgumentException("Methodmethoddeclarationcannotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Set<Object>requiredOpts=Lists.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("declaredmethod",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("declared-method",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("declaredType",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("declared",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,this.type,newComparable<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58List<Object>requiredOpts=Lists.newArrayList(type.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(this.requiredOpts,this.requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(requiredOpts,type,newComparable<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Methoddeclaration=getDeclaredMethod("declaration.requires",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58aughtException("Methodmethoddeclarationmustnotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58aught(null,type){thrownewIllegalArgumentException("Methodmethoddeclarationcannotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58aught(null,type){thrownewIllegalArgumentException("Methodmethoddeclarationcannotbenull..");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(requiredOpts,type,newComparable<Object>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(requiredOpts,type,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58protectedabstractArrayList<Object>requiredOpts=newArrayList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatestaticfinalLinkedList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58staticfinalLinkedList<Object>requiredOpts=newLinkedList<Object>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Arrays.sort(this.requiredOpts,this.requiredOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58Collections.sort(required,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58privatefinalArrayList<Object>requiredOpts=Lists.newArrayList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58||type==null){thrownewIllegalArgumentException("Methodmethoddeclarationmustnotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58||(type==null&&type.toString().equals(""))){thrownewIllegalArgumentException("Methodmethoddeclarationmustnotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java58||(type==null&&type.toString().length()>0)){thrownewIllegalArgumentException("Methodmethoddeclarationmustnotbenull.");}
