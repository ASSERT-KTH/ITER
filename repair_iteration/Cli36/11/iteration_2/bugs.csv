bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(OptionGroup  group  :  shortOpts)  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(OptionGroup  group  :  shortOpts)  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  shortOpts)  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    this.longOpts)    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
2	[BUG]  [BUGGY]  for(Option  group  :  shortOpts)  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(Option  group  :  shortOpts)  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  shortOpts)  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    this.longOpts)    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
3	[BUG]  [BUGGY]  for(OptionGroup  group  :  this.shortOpts)  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(OptionGroup  group  :  this.shortOpts)  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  this.shortOpts)  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    this.longOpts)    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
4	[BUG]  [BUGGY]  longOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  longOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);	      OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
5	[BUG]  [BUGGY]  if(longOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(longOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(longOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }	      OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
6	[BUG]  [BUGGY]  shortOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  shortOpts.put(option.getKey(),  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	shortOpts.put(option.getKey(),  shortOpts);	      OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
7	[BUG]  [BUGGY]  this.shortOpts.put(option.getShortOpt(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  this.shortOpts.put(option.getShortOpt(),  shortOpts);  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getShortOpt(),  shortOpts);	  this.shortOpts.put(option.getShortOpt(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
8	[BUG]  [BUGGY]  this.shortOpts.put(option.getShortOpt(),  group,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  this.shortOpts.put(option.getShortOpt(),  group,  longOpts);  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getShortOpt(),  group,  longOpts);	  this.shortOpts.put(option.getShortOpt(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
9	[BUG]  [BUGGY]  this.shortOpts.put(option.getShortOpt(),  group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  this.shortOpts.put(option.getShortOpt(),  group,  shortOpts);  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getShortOpt(),  group,  shortOpts);	  this.shortOpts.put(option.getShortOpt(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
10	[BUG]  [BUGGY]  for(Option  option  :  options.keySet())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(Option  option  :  options.keySet())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  options.keySet())  {  option.setRequired(true);  addOption(option);  }	  for(Option    option    :    options.keySet())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
11	[BUG]  [BUGGY]  for(Option  option  :  group.keySet())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(Option  option  :  group.keySet())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  group.keySet())  {  option.setRequired(false);  addOption(option);  }	  for(Option    option    :    options.keySet())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
12	[BUG]  [BUGGY]  for(Option  option  :  groups.keySet())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(Option  option  :  groups.keySet())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  groups.keySet())  {  option.setRequired(false);  addOption(option);  }	  for(Option    option    :    options.keySet())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
13	[BUG]  [BUGGY]  this.shortOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  this.shortOpts.put(option.getKey(),  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getKey(),  shortOpts);	      this.shortOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
14	[BUG]  [BUGGY]  this.shortOpts.put(option.getKey(),  group,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  this.shortOpts.put(option.getKey(),  group,  longOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getKey(),  group,  longOpts);	      this.shortOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
15	[BUG]  [BUGGY]  this.shortOpts.put(option.getKey(),  group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  this.shortOpts.put(option.getKey(),  group,  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getKey(),  group,  shortOpts);	      this.shortOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
16	[BUG]  [BUGGY]  for(Option  group  :  options.keySet())  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(Option  group  :  options.keySet())  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  options.keySet())  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    options.keySet())    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
17	[BUG]  [BUGGY]  for(OptionGroup  group  :  option.keySet())  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(OptionGroup  group  :  option.keySet())  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  option.keySet())  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    options.keySet())    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
18	[BUG]  [BUGGY]  for(OptionGroup  group  :  options.values())  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(OptionGroup  group  :  options.values())  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  options.values())  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    options.keySet())    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
19	[BUG]  [BUGGY]  if(longOpts!=  null)  {  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(longOpts!=  null)  {  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(longOpts!=  null)  {  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }	      OptionGroup    shortOpts    =(OptionGroup)optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
20	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);	      OptionGroup    shortOpts    =(OptionGroup)optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
21	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey(),  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey(),  shortOpts);	      OptionGroup    shortOpts    =(OptionGroup)optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
22	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts.  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts.  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts.	      if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1),    shortOpts.    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
23	[BUG]  [BUGGY]  if(group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts	      if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1),    shortOpts.    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
24	[BUG]  [BUGGY]  if(group.getShortOpts()  ==  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts.  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group.getShortOpts()  ==  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts.  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.getShortOpts()  ==  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts.	      if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1),    shortOpts.    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
25	[BUG]  [BUGGY]  longOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  longOpts.put(option.getKey(),  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts.put(option.getKey(),  shortOpts);	      OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    longOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
26	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  optionGroups.get(option.getKey(),  group);  longOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  OptionGroup  shortOpts  =  optionGroups.get(option.getKey(),  group);  longOpts.put(option.getKey(),  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  optionGroups.get(option.getKey(),  group);  longOpts.put(option.getKey(),  shortOpts);	      OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    longOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
27	[BUG]  [BUGGY]  LongOpts  shortOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  LongOpts  shortOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	LongOpts  shortOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);	      OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    longOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
28	[BUG]  [BUGGY]  shortOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  shortOpts.put(option.getKey(),  group);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	shortOpts.put(option.getKey(),  group);	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
29	[BUG]  [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
30	[BUG]  [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  longOpts);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  shortOpts.put(option.getKey(),  longOpts);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
31	[BUG]  [BUGGY]  if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
32	[BUG]  [BUGGY]  if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
33	[BUG]  [BUGGY]  if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
34	[BUG]  [BUGGY]  if(group!=  null)  {  if(longOpts  ==  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  if(longOpts  ==  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  if(longOpts  ==  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
35	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  optionGroups.put(option.getKey(),  group,  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	optionGroups.put(option.getKey(),  group,  shortOpts);	      optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
36	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  optionGroups.put(option.getKey(),  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	optionGroups.put(option.getKey(),  shortOpts);	      optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
37	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(Option  option  :  options.values())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  options.values())  {  option.setRequired(true);  addOption(option);  }	  for(Option    option    :    options.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
38	[BUG]  [BUGGY]  for(Option  option  :  group.values())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(Option  option  :  group.values())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  group.values())  {  option.setRequired(false);  addOption(option);  }	  for(Option    option    :    options.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
39	[BUG]  [BUGGY]  for(Option  option  :  this.options.values())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(Option  option  :  this.options.values())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  this.options.values())  {  option.setRequired(false);  addOption(option);  }	  for(Option    option    :    options.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
40	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }	      if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
41	[BUG]  [BUGGY]  group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }	      if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
42	[BUG]  [BUGGY]  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }	      if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
43	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }	      if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
44	[BUG]  [BUGGY]  group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }	      if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
45	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  neededOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  neededOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  group.getShortOpts())  {  neededOpts.put(option.getKey(),  shortOpts);  }	      if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
46	[BUG]  [BUGGY]  this.longOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  this.longOpts.put(option.getKey(),  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(option.getKey(),  shortOpts);	      this.longOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
47	[BUG]  [BUGGY]  this.longOpts.put(group.getKey(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  this.longOpts.put(group.getKey(),  option);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(group.getKey(),  option);	      this.longOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
48	[BUG]  [BUGGY]  this.longOpts.put(option.getKey(),  group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  this.longOpts.put(option.getKey(),  group,  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(option.getKey(),  group,  shortOpts);	      this.longOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
49	[BUG]  [BUGGY]  this.longOpts.put(option.getValue(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  this.longOpts.put(option.getValue(),  group);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(option.getValue(),  group);	      this.longOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
50	[BUG]  [BUGGY]  if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
51	[BUG]  [BUGGY]  if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
52	[BUG]  [BUGGY]  if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
53	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
54	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
55	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
56	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOption(option);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
57	[BUG]  [BUGGY]  group  =  optionGroups.get(option.getKey(),  shortOpts);  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  group  =  optionGroups.get(option.getKey(),  shortOpts);  requiredOpts.put(option.getKey(),  group);  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group  =  optionGroups.get(option.getKey(),  shortOpts);  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    optionGroups.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
58	[BUG]  [BUGGY]  OptionGroup  group  =  optionGroups.get(option.getKey(),  shortOpts);  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  OptionGroup  group  =  optionGroups.get(option.getKey(),  shortOpts);  requiredOpts.put(option.getKey(),  group);  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  optionGroups.get(option.getKey(),  shortOpts);  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    optionGroups.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
59	[BUG]  [BUGGY]  if(longOpts!=  null)  {  OptionGroup  group  =  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(longOpts!=  null)  {  OptionGroup  group  =  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(longOpts!=  null)  {  OptionGroup  group  =  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  }	  OptionGroup    group    =    optionGroups.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
60	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  OptionGroup  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    optionGroups.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
61	[BUG]  [BUGGY]  for(Option  group  :  options.keySet())  {  optionGroups.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(Option  group  :  options.keySet())  {  optionGroups.put(group.getKey(),  group);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  options.keySet())  {  optionGroups.put(group.getKey(),  group);  }	  for(OptionGroup    group    :    options.keySet())    {    optionGroups.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
62	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
63	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
64	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
65	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.values())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(Option  option  :  shortOpts.values())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  shortOpts.values())  {  option.setRequired(false);  addOption(option);  }	      if(longOpts!=    null)    {    for(Option    option    :    longOpts.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
66	[BUG]  [BUGGY]  for(Option  option  :  longOpts.values())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(Option  option  :  longOpts.values())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  longOpts.values())  {  option.setRequired(false);  addOption(option);  }	      if(longOpts!=    null)    {    for(Option    option    :    longOpts.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
67	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.values())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(Option  option  :  shortOpts.values())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  shortOpts.values())  {  option.setRequired(true);  addOption(option);  }	      if(longOpts!=    null)    {    for(Option    option    :    longOpts.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
68	[BUG]  [BUGGY]  for(Option  option  :  longOpts.values())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(Option  option  :  longOpts.values())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  longOpts.values())  {  option.setRequired(true);  addOption(option);  }	      if(longOpts!=    null)    {    for(Option    option    :    longOpts.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
69	[BUG]  [BUGGY]  if(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
70	[BUG]  [BUGGY]  group.put(option.getKey(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  group.put(option.getKey(),  longOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.put(option.getKey(),  longOpts);	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
71	[BUG]  [BUGGY]  Option  option  =  options.values();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  Option  option  =  options.values();  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  option  =  options.values();	  for(Option    option    :    options.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
72	[BUG]  [BUGGY]  for(OptionGroup  group  :  options.values())  {  optionGroups.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(OptionGroup  group  :  options.values())  {  optionGroups.put(group.getKey(),  group);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  options.values())  {  optionGroups.put(group.getKey(),  group);  }	  for(OptionGroup    group    :    options.keySet())    {    optionGroups.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
73	[BUG]  [BUGGY]  Option  option  =  options.keySet();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  Option  option  =  options.keySet();  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  option  =  options.keySet();	  for(Option    option    :    options.keySet())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
74	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpties())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpties())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  group.getShortOpties())  {  requiredOpts.put(option.getKey(),  shortOpts);  }	      if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
75	[BUG]  [BUGGY]  this.shortOpts.put(option.getKey(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  this.shortOpts.put(option.getKey(),  longOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getKey(),  longOpts);	      this.shortOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
76	[BUG]  [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
77	[BUG]  [BUGGY]  if(group!=  null)  {  longOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  longOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  longOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
78	[BUG]  [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt(),  group);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
79	[BUG]  [BUGGY]  if(longOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(longOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(longOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);  }	      OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    longOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
80	[BUG]  [BUGGY]  longOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  longOpts.put(option.getKey(),  group);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts.put(option.getKey(),  group);	      OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    longOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
81	[BUG]  [BUGGY]  Option  longOpts  =  longOpts.values();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  Option  longOpts  =  longOpts.values();  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  longOpts  =  longOpts.values();	      if(longOpts!=    null)    {    for(Option    option    :    longOpts.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
82	[BUG]  [BUGGY]  this.shortOpts.put(option.getShortOpt(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  this.shortOpts.put(option.getShortOpt(),  longOpts);  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getShortOpt(),  longOpts);	  this.shortOpts.put(option.getShortOpt(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
83	[BUG]  [BUGGY]  this.longOpts.put(option.getShortOpt(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  this.longOpts.put(option.getShortOpt(),  group);  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(option.getShortOpt(),  group);	  this.shortOpts.put(option.getShortOpt(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
84	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  OptionGroup  group  =  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(requiredOpts!=  null)  {  OptionGroup  group  =  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(requiredOpts!=  null)  {  OptionGroup  group  =  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  }	  OptionGroup    group    =    optionGroups.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
85	[BUG]  [BUGGY]  OptionGroup  group  =  options.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  OptionGroup  group  =  options.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  options.get(option.getKey());  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    optionGroups.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
86	[BUG]  [BUGGY]  longOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  longOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  group);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  group);	      OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
87	[BUG]  [BUGGY]  for(OptionGroup  group  :  longOpts)  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(OptionGroup  group  :  longOpts)  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  longOpts)  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    this.longOpts)    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
88	[BUG]  [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
89	[BUG]  [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  option);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  option);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  shortOpts.put(option.getKey(),  option);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
90	[BUG]  [BUGGY]  if(group.getShortOpts()!=  null)  {  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group.getShortOpts()!=  null)  {  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.getShortOpts()!=  null)  {  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }	      if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
91	[BUG]  [BUGGY]  longOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  longOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);	      OptionGroup    shortOpts    =(OptionGroup)optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
92	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey());  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey());	      OptionGroup    shortOpts    =(OptionGroup)optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
93	[BUG]  [BUGGY]  group.setShortOpts(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  group.setShortOpts(requiredOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.setShortOpts(requiredOpts);	      if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
94	[BUG]  [BUGGY]  group.getShortOpts().add(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  group.getShortOpts().add(requiredOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getShortOpts().add(requiredOpts);	      if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
95	[BUG]  [BUGGY]  while(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  while(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
96	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  option.getShortOpts();	      if(longOpts!=    null)    {    for(Option    option    :    longOpts.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
97	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  OptionGroup  shortOpts  =  option.getLongOpts();  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  option.getLongOpts();	      if(longOpts!=    null)    {    for(Option    option    :    longOpts.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
98	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.values();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  OptionGroup  shortOpts  =  option.values();  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  option.values();	      if(longOpts!=    null)    {    for(Option    option    :    longOpts.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
99	[BUG]  [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
100	[BUG]  [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  member);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  member);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  shortOpts.put(option.getKey(),  member);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
101	[BUG]  [BUGGY]  for(OptionGroup  group  :  option.keySet())  {  optionGroups.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  for(OptionGroup  group  :  option.keySet())  {  optionGroups.put(group.getKey(),  group);  }  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  option.keySet())  {  optionGroups.put(group.getKey(),  group);  }	  for(OptionGroup    group    :    options.keySet())    {    optionGroups.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
102	[BUG]  [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  ShortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  ShortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  ShortOpts.put(option.getShortOpt(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
103	[BUG]  [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
104	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  OptionGroup  group  =  option.getOptionGroup();  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getOptionGroup();	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
105	[BUG]  [BUGGY]  OptionGroup  group  =  option.getKey();  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  OptionGroup  group  =  option.getKey();  requiredOpts.put(option.getKey(),  group);  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getKey();  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    optionGroups.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
106	[BUG]  [BUGGY]  OptionGroup  group  =  shortOpts.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  OptionGroup  group  =  shortOpts.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  shortOpts.get(option.getKey());  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    optionGroups.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
107	[BUG]  [BUGGY]  OptionGroup  group  =  option.getShortOpts();  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  OptionGroup  group  =  option.getShortOpts();  requiredOpts.put(option.getKey(),  group);  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getShortOpts();  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    optionGroups.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
108	[BUG]  [BUGGY]  optionGroups.put(option.getValue(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  optionGroups.put(option.getValue(),  group);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	optionGroups.put(option.getValue(),  group);	      optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
109	[BUG]  [BUGGY]  options.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  options.put(option.getKey(),  group);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	options.put(option.getKey(),  group);	      optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
110	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group);  [BUGGY]      return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getOptionGroup(group);	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
111	[BUG]  [BUGGY]  if(group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  if(group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)	      if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1),    shortOpts.    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
112	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);    [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  group.getShortOpts();	      if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
