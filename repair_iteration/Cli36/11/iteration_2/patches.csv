bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(Option  group  :  options.values())  {  optionGroups.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  group  :  options.values())  {  optionGroups.put(group.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  options.values())  {  optionGroups.put(group.getKey(),  group);  }	  for(Option    group    :    options.keySet())    {    optionGroups.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
2	[BUG]  [BUGGY]  for(Option  group  :  option.keySet())  {  optionGroups.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  group  :  option.keySet())  {  optionGroups.put(group.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  option.keySet())  {  optionGroups.put(group.getKey(),  group);  }	  for(Option    group    :    options.keySet())    {    optionGroups.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
3	[BUG]  [BUGGY]  for(Option  option  :  this.options.values())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  this.options.values())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  this.options.values())  {  option.setRequired(true);  addOption(option);  }	  for(Option    option    :    this.options.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
4	[BUG]  [BUGGY]  for(Option  option  :  this.options.keySet())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  this.options.keySet())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  this.options.keySet())  {  option.setRequired(false);  addOption(option);  }	  for(Option    option    :    this.options.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
5	[BUG]  [BUGGY]  for(Option  option  :  this.options.values())  {  option.setRequired(false);  addOption(option,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  this.options.values())  {  option.setRequired(false);  addOption(option,  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  this.options.values())  {  option.setRequired(false);  addOption(option,  group);  }	  for(Option    option    :    this.options.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
6	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey(),  group);  shortOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey(),  group);  shortOpts.put(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey(),  group);  shortOpts.put(option.getKey(),  shortOpts);	  OptionGroup    shortOpts    =(OptionGroup)longOpts.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
7	[BUG]  [BUGGY]  if(longOpts!=  null)  {  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(longOpts!=  null)  {  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(longOpts!=  null)  {  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }	  OptionGroup    shortOpts    =(OptionGroup)longOpts.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
8	[BUG]  [BUGGY]  longOpts  =(OptionGroup)longOpts.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts  =(OptionGroup)longOpts.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =(OptionGroup)longOpts.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);	  OptionGroup    shortOpts    =(OptionGroup)longOpts.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
9	[BUG]  [BUGGY]  for(Option  group  :  options.values())  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  group  :  options.values())  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  options.values())  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    options.values())    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
10	[BUG]  [BUGGY]  for(OptionGroup  group  :  option.values())  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  group  :  option.values())  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  option.values())  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    options.values())    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
11	[BUG]  [BUGGY]  for(Option  group  :  option.values())  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  group  :  option.values())  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  option.values())  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    options.values())    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
12	[BUG]  [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  member);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  member);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  shortOpts.put(option.getKey(),  member);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    member);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
13	[BUG]  [BUGGY]  while(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  member);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  member);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  member);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    member);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
14	[BUG]  [BUGGY]  while(shortOpts!=  null)  {  longOpts.put(option.getKey(),  member);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(shortOpts!=  null)  {  longOpts.put(option.getKey(),  member);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(shortOpts!=  null)  {  longOpts.put(option.getKey(),  member);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    member);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
15	[BUG]  [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  member);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  member);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  shortOpts.put(option.getKey(),  member);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    member);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
16	[BUG]  [BUGGY]  shortOpts.put(option.getKey(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  shortOpts.put(option.getKey(),  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	shortOpts.put(option.getKey(),  longOpts);	  shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
17	[BUG]  [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
18	[BUG]  [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
19	[BUG]  [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt()  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt()	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
20	[BUG]  [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  shortOpts.put(option.getKey(),  group);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
21	[BUG]  [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  ShortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  ShortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  ShortOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    ShortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
22	[BUG]  [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  ShortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  ShortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  ShortOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    ShortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
23	[BUG]  [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  ShortOpts.put(option.getShortOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  ShortOpts.put(option.getShortOpt()  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  ShortOpts.put(option.getShortOpt()	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    ShortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
24	[BUG]  [BUGGY]  if(group!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }	  if(longOpts!=    null)    {    OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
25	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  optionGroups.get(option.getKey(),  shortOpts);  shortOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  optionGroups.get(option.getKey(),  shortOpts);  shortOpts.put(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  optionGroups.get(option.getKey(),  shortOpts);  shortOpts.put(option.getKey(),  shortOpts);	  if(longOpts!=    null)    {    OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
26	[BUG]  [BUGGY]  while(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
27	[BUG]  [BUGGY]  while(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
28	[BUG]  [BUGGY]  while(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
29	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpt();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  option.getShortOpt();	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
30	[BUG]  [BUGGY]  group.getShortOpts().add(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getShortOpts().add(longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getShortOpts().add(longOpts);	  group.getShortOpts().add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
31	[BUG]  [BUGGY]  group.getShortOpts().add(option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getShortOpts().add(option);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getShortOpts().add(option);	  group.getShortOpts().add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
32	[BUG]  [BUGGY]  group.getShortOpts().add(requiredOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getShortOpts().add(requiredOpts,  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getShortOpts().add(requiredOpts,  shortOpts);	  group.getShortOpts().add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
33	[BUG]  [BUGGY]  group.getShortOpts().add(requiredOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getShortOpts().add(requiredOpts,  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getShortOpts().add(requiredOpts,  longOpts);	  group.getShortOpts().add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
34	[BUG]  [BUGGY]  group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
35	[BUG]  [BUGGY]  this.shortOpts.put(option.getShortOpt(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.shortOpts.put(option.getShortOpt(),  shortOpts,  longOpts);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getShortOpt(),  shortOpts,  longOpts);	  this.shortOpts.put(option.getShortOpt(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
36	[BUG]  [BUGGY]  for(Option  group  :  option.keySet())  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  group  :  option.keySet())  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  option.keySet())  {  optionGroups.put(option.getKey(),  group);  }	  for(Option    group    :    options.keySet())    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
37	[BUG]  [BUGGY]  for(Option  group  :  options.keySet())  {  optionalGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  group  :  options.keySet())  {  optionalGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  options.keySet())  {  optionalGroups.put(option.getKey(),  group);  }	  for(Option    group    :    options.keySet())    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
38	[BUG]  [BUGGY]  this.shortOpts.put(option.getKey(),  shortOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.shortOpts.put(option.getKey(),  shortOpts,  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getKey(),  shortOpts,  group);	  this.shortOpts.put(option.getKey(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
39	[BUG]  [BUGGY]  this.shortOpts.put(option.getKey(),  group,  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.shortOpts.put(option.getKey(),  group,  shortOpts,  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getKey(),  group,  shortOpts,  longOpts);	  this.shortOpts.put(option.getKey(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
40	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOption(option);  }	  for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
41	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }	  for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
42	[BUG]  [BUGGY]  OptionGroup  group  =  longOpts.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  longOpts.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  longOpts.get(option.getKey());  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    shortOpts.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
43	[BUG]  [BUGGY]  OptionGroup  group  =  shortOpts.get(option.getKey(),  longOpts);  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  shortOpts.get(option.getKey(),  longOpts);  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  shortOpts.get(option.getKey(),  longOpts);  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    shortOpts.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
44	[BUG]  [BUGGY]  group  =  longOpts.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group  =  longOpts.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group  =  longOpts.get(option.getKey());  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    shortOpts.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
45	[BUG]  [BUGGY]  OptionGroup  group  =  shortOpts.get(option.getKey(),  group);  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  shortOpts.get(option.getKey(),  group);  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  shortOpts.get(option.getKey(),  group);  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    shortOpts.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
46	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  longOpts)  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpts  :  longOpts)  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  longOpts)  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    longOpts)    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
47	[BUG]  [BUGGY]  for(OptionGroup  group  :  shortOpts)  {  options.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  group  :  shortOpts)  {  options.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  shortOpts)  {  options.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    longOpts)    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
48	[BUG]  [BUGGY]  for(Option  option  :  group.keySet())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  group.keySet())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  group.keySet())  {  option.setRequired(true);  addOption(option);  }	  for(Option    option    :    group.keySet())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
49	[BUG]  [BUGGY]  for(Option  option  :  this.groups.keySet())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  this.groups.keySet())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  this.groups.keySet())  {  option.setRequired(false);  addOption(option);  }	  for(Option    option    :    group.keySet())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
50	[BUG]  [BUGGY]  for(OptionGroup  shortOpt  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts.  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpt  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts.  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpt  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts.	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1),    shortOpts.    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
51	[BUG]  [BUGGY]  for(Option  group  :  longOpts.getShortOpts())  {  requiredOpts.put(group.get(group.size()  -  1),  shortOpts.  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  group  :  longOpts.getShortOpts())  {  requiredOpts.put(group.get(group.size()  -  1),  shortOpts.  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  longOpts.getShortOpts())  {  requiredOpts.put(group.get(group.size()  -  1),  shortOpts.	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1),    shortOpts.    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
52	[BUG]  [BUGGY]  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts.  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts.  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts.	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1),    shortOpts.    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
53	[BUG]  [BUGGY]  for(OptionGroup  group  :  option.getGroups())  {  optionGroups.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  group  :  option.getGroups())  {  optionGroups.put(group.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  option.getGroups())  {  optionGroups.put(group.getKey(),  group);  }	  for(OptionGroup    group    :    option.keySet())    {    optionGroups.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	101	None	replace
54	[BUG]  [BUGGY]  LongOpts  shortOpts  =  optionGroups.get(option.getKey(),  group);  longOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  LongOpts  shortOpts  =  optionGroups.get(option.getKey(),  group);  longOpts.put(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	LongOpts  shortOpts  =  optionGroups.get(option.getKey(),  group);  longOpts.put(option.getKey(),  shortOpts);	  OptionGroup    shortOpts    =    optionGroups.get(option.getKey(),    group);    longOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
55	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  optionGroups.get(group.getKey(),  group);  longOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  optionGroups.get(group.getKey(),  group);  longOpts.put(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  optionGroups.get(group.getKey(),  group);  longOpts.put(option.getKey(),  shortOpts);	  OptionGroup    shortOpts    =    optionGroups.get(option.getKey(),    group);    longOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
56	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts);	  OptionGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	112	None	replace
57	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  group.getLongOpts();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  group.getLongOpts();	  OptionGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	112	None	replace
58	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  option.getShortOpts())  {  neededOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpts  :  option.getShortOpts())  {  neededOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  option.getShortOpts())  {  neededOpts.put(option.getKey(),  shortOpts);  }	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    neededOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
59	[BUG]  [BUGGY]  for(Option  group  :  shortOpts.getShortOpts())  {  neededOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  group  :  shortOpts.getShortOpts())  {  neededOpts.put(option.getKey(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  shortOpts.getShortOpts())  {  neededOpts.put(option.getKey(),  group);  }	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    neededOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
60	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  group.getLongOpts())  {  neededOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpts  :  group.getLongOpts())  {  neededOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  group.getLongOpts())  {  neededOpts.put(option.getKey(),  shortOpts);  }	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    neededOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
61	[BUG]  [BUGGY]  group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
62	[BUG]  [BUGGY]  group!=  null)  {  if(longOpts  ==  null)  {  shortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  if(longOpts  ==  null)  {  shortOpts.put(option.getKey(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  if(longOpts  ==  null)  {  shortOpts.put(option.getKey(),  group);  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
63	[BUG]  [BUGGY]  Groups.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Groups.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Groups.put(option.getKey(),  group);	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
64	[BUG]  [BUGGY]  longOpts  =(OptionGroup)optionGroups.get(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts  =(OptionGroup)optionGroups.get(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =(OptionGroup)optionGroups.get(option.getKey(),  shortOpts);	  longOpts    =(OptionGroup)optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
65	[BUG]  [BUGGY]  longOpts  =(OptionGroup)optionGroups.get(option.getKey(),  group);  shortOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts  =(OptionGroup)optionGroups.get(option.getKey(),  group);  shortOpts.put(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =(OptionGroup)optionGroups.get(option.getKey(),  group);  shortOpts.put(option.getKey(),  shortOpts);	  longOpts    =(OptionGroup)optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
66	[BUG]  [BUGGY]  longOpts  =(OptionGroup)group.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts  =(OptionGroup)group.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =(OptionGroup)group.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);	  longOpts    =(OptionGroup)optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
67	[BUG]  [BUGGY]  group.getShortOpts()  ==  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getShortOpts()  ==  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getShortOpts()  ==  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }	  group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
68	[BUG]  [BUGGY]  group.getShortOpts()!=  null)  {  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getShortOpts()!=  null)  {  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getShortOpts()!=  null)  {  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }	  group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
69	[BUG]  [BUGGY]  group.getOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }	  group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
70	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getLongOpts(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  option.getLongOpts(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  option.getLongOpts(),  group);	  OptionGroup    shortOpts    =    option.getLongOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
71	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  options.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  options.getLongOpts();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  options.getLongOpts();	  OptionGroup    shortOpts    =    option.getLongOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
72	[BUG]  [BUGGY]  Option  option  =  options.keySet(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Option  option  =  options.keySet(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  option  =  options.keySet(),  group);	  Option    option    =    options.keySet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
73	[BUG]  [BUGGY]  Option  option  =  options.keySet(),  group;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Option  option  =  options.keySet(),  group;  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  option  =  options.keySet(),  group;	  Option    option    =    options.keySet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
74	[BUG]  [BUGGY]  this.shortOpts.put(option.getKey(),  longOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.shortOpts.put(option.getKey(),  longOpts,  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getKey(),  longOpts,  group);	  this.shortOpts.put(option.getKey(),    group,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
75	[BUG]  [BUGGY]  this.shortOpts.put(option.getKey(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.shortOpts.put(option.getKey(),  shortOpts,  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getKey(),  shortOpts,  longOpts);	  this.shortOpts.put(option.getKey(),    group,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
76	[BUG]  [BUGGY]  while(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }	  while(shortOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
77	[BUG]  [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }	  while(shortOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
78	[BUG]  [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  shortOpts.put(option.getKey(),  shortOpts);  }	  while(shortOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
79	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  optionGroups.put(option.getKey(),  shortOpts,  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	optionGroups.put(option.getKey(),  shortOpts,  longOpts);	  optionGroups.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
80	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  optionGroups.put(option.getKey(),  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	optionGroups.put(option.getKey(),  longOpts);	  optionGroups.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
81	[BUG]  [BUGGY]  this.longOpts.put(option.getKey(),  shortOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.longOpts.put(option.getKey(),  shortOpts,  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(option.getKey(),  shortOpts,  group);	  this.longOpts.put(option.getKey(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
82	[BUG]  [BUGGY]  this.longOpts.put(option.getKey(),  group,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.longOpts.put(option.getKey(),  group,  requiredOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(option.getKey(),  group,  requiredOpts);	  this.longOpts.put(option.getKey(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
83	[BUG]  [BUGGY]  this.longOpts.put(option.getKey(),  group,  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.longOpts.put(option.getKey(),  group,  shortOpts,  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(option.getKey(),  group,  shortOpts,  longOpts);	  this.longOpts.put(option.getKey(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
84	[BUG]  [BUGGY]  this.shortOpts.put(option.getShortOpt(),  longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.shortOpts.put(option.getShortOpt(),  longOpts,  shortOpts);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getShortOpt(),  longOpts,  shortOpts);	  this.shortOpts.put(option.getShortOpt(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
85	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.longOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  option.longOpts();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  option.longOpts();	  OptionGroup    shortOpts    =    option.values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
86	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  options.values();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  options.values();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  options.values();	  OptionGroup    shortOpts    =    option.values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
87	[BUG]  [BUGGY]  options.put(option.getKey(),  group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  options.put(option.getKey(),  group,  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	options.put(option.getKey(),  group,  shortOpts);	  options.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	109	None	replace
88	[BUG]  [BUGGY]  options.put(option.getKey(),  group,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  options.put(option.getKey(),  group,  requiredOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	options.put(option.getKey(),  group,  requiredOpts);	  options.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	109	None	replace
89	[BUG]  [BUGGY]  group.setShortOpts(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.setShortOpts(longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.setShortOpts(longOpts);	  group.setShortOpts(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
90	[BUG]  [BUGGY]  group.setShortOpts(lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.setShortOpts(lengthOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.setShortOpts(lengthOpts);	  group.setShortOpts(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
91	[BUG]  [BUGGY]  group.setShortOpts(lenOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.setShortOpts(lenOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.setShortOpts(lenOpts);	  group.setShortOpts(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
92	[BUG]  [BUGGY]  group.setShortOpts(longOpts,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.setShortOpts(longOpts,  requiredOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.setShortOpts(longOpts,  requiredOpts);	  group.setShortOpts(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
93	[BUG]  [BUGGY]  for(Option  group  :  longOpts)  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  group  :  longOpts)  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  longOpts)  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    shortOpts)    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
94	[BUG]  [BUGGY]  for(OptionGroup  group  :  shortOpts.values())  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  group  :  shortOpts.values())  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  shortOpts.values())  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    shortOpts)    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
95	[BUG]  [BUGGY]  for(OptionGroup  group  :  shortOpts.keySet())  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  group  :  shortOpts.keySet())  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  shortOpts.keySet())  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    shortOpts)    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
96	[BUG]  [BUGGY]  if(group!=  null)  {  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group!=  null)  {  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }	  if(longOpts!=    null)    {    OptionGroup    shortOpts    =(OptionGroup)optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
97	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.values())  {  option.setRequired(true);  addOption(option,  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  shortOpts.values())  {  option.setRequired(true);  addOption(option,  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  shortOpts.values())  {  option.setRequired(true);  addOption(option,  shortOpts);  }	  for(Option    option    :    longOpts.values())    {    option.setRequired(true);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
98	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey(),  group);	  OptionGroup    shortOpts    =(OptionGroup)longOpts.get(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
99	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getShortOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getShortOpt());  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getShortOpt());	  OptionGroup    shortOpts    =(OptionGroup)longOpts.get(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
100	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getValue());  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getValue());	  OptionGroup    shortOpts    =(OptionGroup)longOpts.get(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
101	[BUG]  [BUGGY]  group.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.put(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.put(option.getKey(),  shortOpts);	  group.put(option.getKey(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
102	[BUG]  [BUGGY]  group.put(option.getValue(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.put(option.getValue(),  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.put(option.getValue(),  longOpts);	  group.put(option.getKey(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
103	[BUG]  [BUGGY]  group.put(option.getShortOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.put(option.getShortOpts(),  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.put(option.getShortOpts(),  longOpts);	  group.put(option.getKey(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
104	[BUG]  [BUGGY]  group.put(option.getKey(),  ShortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.put(option.getKey(),  ShortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.put(option.getKey(),  ShortOpts);	  group.put(option.getKey(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
105	[BUG]  [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    pair);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
106	[BUG]  [BUGGY]  shortOpts.put(option.getKey(),  pair);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  shortOpts.put(option.getKey(),  pair);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	shortOpts.put(option.getKey(),  pair);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    pair);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
107	[BUG]  [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  pair);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  pair);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  shortOpts.put(option.getKey(),  pair);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    pair);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
108	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  pair);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  optionGroups.put(option.getKey(),  pair);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	optionGroups.put(option.getKey(),  pair);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    pair);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
109	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  option.getLongOpt();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  option.getLongOpt();	  if(group!=    null)    {    if(longOpts    ==    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
110	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  option.getShortOpties())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpts  :  option.getShortOpties())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  option.getShortOpties())  {  requiredOpts.put(option.getKey(),  shortOpts);  }	  for(OptionGroup    shortOpts    :    group.getShortOpties())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
111	[BUG]  [BUGGY]  for(Option  group  :  shortOpts.getShortOpties())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  group  :  shortOpts.getShortOpties())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  shortOpts.getShortOpties())  {  requiredOpts.put(option.getKey(),  group);  }	  for(OptionGroup    shortOpts    :    group.getShortOpties())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
112	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  group.getLongOpties())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpts  :  group.getLongOpties())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  group.getLongOpties())  {  requiredOpts.put(option.getKey(),  shortOpts);  }	  for(OptionGroup    shortOpts    :    group.getShortOpties())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
113	[BUG]  [BUGGY]  group.getShortOpts()  ==  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getShortOpts()  ==  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getShortOpts()  ==  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }	  group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
114	[BUG]  [BUGGY]  group.getLongOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getLongOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getLongOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }	  group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
115	[BUG]  [BUGGY]  group.getOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }	  group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
116	[BUG]  [BUGGY]  Option  longOpts  =  shortOpts.values();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Option  longOpts  =  shortOpts.values();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  longOpts  =  shortOpts.values();	  Option    longOpts    =    longOpts.values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
117	[BUG]  [BUGGY]  Option  shortOpts  =  longOpts.values();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Option  shortOpts  =  longOpts.values();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  shortOpts  =  longOpts.values();	  Option    longOpts    =    longOpts.values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
118	[BUG]  [BUGGY]  Option  longOpts  =  optionGroups.values();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Option  longOpts  =  optionGroups.values();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  longOpts  =  optionGroups.values();	  Option    longOpts    =    longOpts.values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
119	[BUG]  [BUGGY]  this.longOpts.put(option.getShortOpt(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.longOpts.put(option.getShortOpt(),  shortOpts);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(option.getShortOpt(),  shortOpts);	  this.longOpts.put(option.getShortOpt(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
120	[BUG]  [BUGGY]  this.longOpts.put(option.getShortOpt(),  group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.longOpts.put(option.getShortOpt(),  group,  shortOpts);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(option.getShortOpt(),  group,  shortOpts);	  this.longOpts.put(option.getShortOpt(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
121	[BUG]  [BUGGY]  this.longOpts.put(group.getShortOpt(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.longOpts.put(group.getShortOpt(),  option);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(group.getShortOpt(),  option);	  this.longOpts.put(option.getShortOpt(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
122	[BUG]  [BUGGY]  for(Option  group  :  shortOpts.values())  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  group  :  shortOpts.values())  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  shortOpts.values())  {  optionGroups.put(option.getKey(),  group);  }	  for(Option    group    :    shortOpts)    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
123	[BUG]  [BUGGY]  for(Option  group  :  shortOpts.keySet())  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  group  :  shortOpts.keySet())  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  shortOpts.keySet())  {  optionGroups.put(option.getKey(),  group);  }	  for(Option    group    :    shortOpts)    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
124	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  shortOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  optionGroups.put(option.getKey(),  shortOpts,  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	optionGroups.put(option.getKey(),  shortOpts,  group);	  optionGroups.put(option.getKey(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
125	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  group,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  optionGroups.put(option.getKey(),  group,  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	optionGroups.put(option.getKey(),  group,  longOpts);	  optionGroups.put(option.getKey(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
126	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  group,  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  optionGroups.put(option.getKey(),  group,  shortOpts,  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	optionGroups.put(option.getKey(),  group,  shortOpts,  longOpts);	  optionGroups.put(option.getKey(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
127	[BUG]  [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  shortOpts.put(option.getKey(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
128	[BUG]  [BUGGY]  group  =  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group  =  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group  =  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);	  if(longOpts!=    null)    {    OptionGroup    group    =    optionGroups.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
129	[BUG]  [BUGGY]  if(group!=  null)  {  OptionGroup  group  =  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group!=  null)  {  OptionGroup  group  =  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  OptionGroup  group  =  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  }	  if(longOpts!=    null)    {    OptionGroup    group    =    optionGroups.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
130	[BUG]  [BUGGY]  OptionGroup  group  =  options.get(option.getKey(),  shortOpts);  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  options.get(option.getKey(),  shortOpts);  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  options.get(option.getKey(),  shortOpts);  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    options.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
131	[BUG]  [BUGGY]  group  =  options.get(option.getKey(),  shortOpts);  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group  =  options.get(option.getKey(),  shortOpts);  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group  =  options.get(option.getKey(),  shortOpts);  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    options.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
132	[BUG]  [BUGGY]  OptionGroup  group  =  options.get(option.getShortOpts());  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  options.get(option.getShortOpts());  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  options.get(option.getShortOpts());  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    options.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
133	[BUG]  [BUGGY]  option  =  options.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  option  =  options.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	option  =  options.get(option.getKey());  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    options.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
134	[BUG]  [BUGGY]  group  =  optionGroups.get(option.getKey(),  longOpts);  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group  =  optionGroups.get(option.getKey(),  longOpts);  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group  =  optionGroups.get(option.getKey(),  longOpts);  requiredOpts.put(option.getKey(),  group);	  group    =    optionGroups.get(option.getKey(),    shortOpts);    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
135	[BUG]  [BUGGY]  group  =  optionGroups.get(option.getKey(),  shortOpts,  longOpts);  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group  =  optionGroups.get(option.getKey(),  shortOpts,  longOpts);  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group  =  optionGroups.get(option.getKey(),  shortOpts,  longOpts);  requiredOpts.put(option.getKey(),  group);	  group    =    optionGroups.get(option.getKey(),    shortOpts);    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
136	[BUG]  [BUGGY]  group  =  optionGroups.get(option.getKey(),  shortOpts,  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group  =  optionGroups.get(option.getKey(),  shortOpts,  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group  =  optionGroups.get(option.getKey(),  shortOpts,  requiredOpts.put(option.getKey(),  group);	  group    =    optionGroups.get(option.getKey(),    shortOpts);    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
137	[BUG]  [BUGGY]  this.longOpts.put(group.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.longOpts.put(group.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(group.getKey(),  shortOpts);	  this.longOpts.put(group.getKey(),    option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
138	[BUG]  [BUGGY]  this.longOpts.put(group.getKey(),  shortOpts,  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.longOpts.put(group.getKey(),  shortOpts,  option);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(group.getKey(),  shortOpts,  option);	  this.longOpts.put(group.getKey(),    option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
139	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getGroup();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getGroup();	  OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
140	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  options.getOptionGroup();	  OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
141	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getGroups();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getGroups();	  OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
142	[BUG]  [BUGGY]  this.shortOpts.put(option.getShortOpt(),  shortOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.shortOpts.put(option.getShortOpt(),  shortOpts,  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getShortOpt(),  shortOpts,  group);	  this.shortOpts.put(option.getShortOpt(),    group,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
143	[BUG]  [BUGGY]  this.shortOpts.put(option.getShortOpt(),  longOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.shortOpts.put(option.getShortOpt(),  longOpts,  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getShortOpt(),  longOpts,  group);	  this.shortOpts.put(option.getShortOpt(),    group,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
144	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  optional.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  group.getOptions())  {  optional.setRequired(false);  addOption(option);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  group.getOptions())  {  optional.setRequired(false);  addOption(option);  }	  for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
145	[BUG]  [BUGGY]  shortOpts.put(option.getKey(),  group,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  shortOpts.put(option.getKey(),  group,  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	shortOpts.put(option.getKey(),  group,  longOpts);	  shortOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
146	[BUG]  [BUGGY]  shortOpts.put(group.getKey(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  shortOpts.put(group.getKey(),  option);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	shortOpts.put(group.getKey(),  option);	  shortOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
147	[BUG]  [BUGGY]  OptionGroup  group  =  option.getShortOpts();  shortOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getShortOpts();  shortOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getShortOpts();  shortOpts.put(option.getKey(),  group);	  OptionGroup    group    =    option.getShortOpts();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	107	None	replace
148	[BUG]  [BUGGY]  if(longOpts!=  null)  {  OptionGroup  group  =  option.getShortOpts();  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(longOpts!=  null)  {  OptionGroup  group  =  option.getShortOpts();  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(longOpts!=  null)  {  OptionGroup  group  =  option.getShortOpts();  requiredOpts.put(option.getKey(),  group);  }	  OptionGroup    group    =    option.getShortOpts();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	107	None	replace
149	[BUG]  [BUGGY]  group  =  option.getShortOpts();  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group  =  option.getShortOpts();  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group  =  option.getShortOpts();  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    option.getShortOpts();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	107	None	replace
150	[BUG]  [BUGGY]  group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(true);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
151	[BUG]  [BUGGY]  group.getOptionGroups()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getOptionGroups()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptionGroups()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(true);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
152	[BUG]  [BUGGY]  for(Option  option  :  group.values())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  group.values())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  group.values())  {  option.setRequired(true);  addOption(option);  }	  for(Option    option    :    group.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
153	[BUG]  [BUGGY]  this.longOpts.put(option.getKey(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.longOpts.put(option.getKey(),  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(option.getKey(),  longOpts);	  this.longOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
154	[BUG]  [BUGGY]  while(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
155	[BUG]  [BUGGY]  optionGroups.put(option.getValue(),  group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  optionGroups.put(option.getValue(),  group,  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	optionGroups.put(option.getValue(),  group,  shortOpts);	  optionGroups.put(option.getValue(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	108	None	replace
156	[BUG]  [BUGGY]  longOpts.put(group.getKey(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts.put(group.getKey(),  option);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts.put(group.getKey(),  option);	  longOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
157	[BUG]  [BUGGY]  this.shortOpts.put(option.getShortOpt(),  group,  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.shortOpts.put(option.getShortOpt(),  group,  shortOpts,  longOpts);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getShortOpt(),  group,  shortOpts,  longOpts);	  this.shortOpts.put(option.getShortOpt(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
158	[BUG]  [BUGGY]  while(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
159	[BUG]  [BUGGY]  this.shortOpts.put(option.getKey(),  longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.shortOpts.put(option.getKey(),  longOpts,  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getKey(),  longOpts,  shortOpts);	  this.shortOpts.put(option.getKey(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
160	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.values())  {  option.setRequired(false);  addOption(option,  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  shortOpts.values())  {  option.setRequired(false);  addOption(option,  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  shortOpts.values())  {  option.setRequired(false);  addOption(option,  shortOpts);  }	  for(Option    option    :    longOpts.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
161	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.values())  {  options.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  shortOpts.values())  {  options.setRequired(false);  addOption(option);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  shortOpts.values())  {  options.setRequired(false);  addOption(option);  }	  for(Option    option    :    longOpts.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
162	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  option.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpts  :  option.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  option.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
163	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  group.getLongOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpts  :  group.getLongOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  group.getLongOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
164	[BUG]  [BUGGY]  for(Option  group  :  shortOpts.getShortOpts())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  group  :  shortOpts.getShortOpts())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  shortOpts.getShortOpts())  {  requiredOpts.put(option.getKey(),  group);  }	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
165	[BUG]  [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
166	[BUG]  [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
167	[BUG]  [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
168	[BUG]  [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
169	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)	  if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1)    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
170	[BUG]  [BUGGY]  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)	  if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1)    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
171	[BUG]  [BUGGY]  if(group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  }	  if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1)    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
172	[BUG]  [BUGGY]  for(OptionGroup  group  :  option.getGroups())  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  group  :  option.getGroups())  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  option.getGroups())  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    option.keySet())    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
173	[BUG]  [BUGGY]  if(longOpts!=  null)  {  OptionGroup  group  =  option.getKey();  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(longOpts!=  null)  {  OptionGroup  group  =  option.getKey();  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(longOpts!=  null)  {  OptionGroup  group  =  option.getKey();  requiredOpts.put(option.getKey(),  group);  }	  OptionGroup    group    =    option.getKey();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
174	[BUG]  [BUGGY]  OptionGroup  group  =  option.getKey(),  shortOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getKey(),  shortOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getKey(),  shortOpts.put(option.getKey(),  group);	  OptionGroup    group    =    option.getKey();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
175	[BUG]  [BUGGY]  group  =  option.getKey();  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group  =  option.getKey();  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group  =  option.getKey();  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    option.getKey();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
176	[BUG]  [BUGGY]  OptionGroup  group  =  optionGroups.get(option.getKey(),  longOpts);  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  optionGroups.get(option.getKey(),  longOpts);  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  optionGroups.get(option.getKey(),  longOpts);  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    optionGroups.get(option.getKey(),    shortOpts);    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
177	[BUG]  [BUGGY]  OptionGroup  group  =  optionGroups.get(option.getKey(),  shortOpts,  longOpts);  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  optionGroups.get(option.getKey(),  shortOpts,  longOpts);  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  optionGroups.get(option.getKey(),  shortOpts,  longOpts);  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    optionGroups.get(option.getKey(),    shortOpts);    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
178	[BUG]  [BUGGY]  OptionGroup  group  =  optionGroups.get(option.getKey(),  shortOpts,  shortOpts);  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  optionGroups.get(option.getKey(),  shortOpts,  shortOpts);  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  optionGroups.get(option.getKey(),  shortOpts,  shortOpts);  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    optionGroups.get(option.getKey(),    shortOpts);    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
179	[BUG]  [BUGGY]  if(longOpts!=  null)  {  OptionGroup  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(longOpts!=  null)  {  OptionGroup  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(longOpts!=  null)  {  OptionGroup  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);  }	  OptionGroup    group    =    option.getGroup();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
180	[BUG]  [BUGGY]  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    option.getGroup();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
181	[BUG]  [BUGGY]  Group  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Group  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Group  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    option.getGroup();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
182	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getKey(),  shortOpts);	  OptionGroup    shortOpts    =(OptionGroup)optionGroups.get(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
183	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey(),  group);	  OptionGroup    shortOpts    =(OptionGroup)optionGroups.get(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
184	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey(),  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey(),  longOpts);	  OptionGroup    shortOpts    =(OptionGroup)optionGroups.get(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
185	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)groups.get(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)groups.get(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =(OptionGroup)groups.get(option.getKey(),  shortOpts);	  OptionGroup    shortOpts    =(OptionGroup)optionGroups.get(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
186	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  shortOpts);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getOptionGroup(group,  shortOpts);	  OptionGroup    group    =    option.getOptionGroup(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
187	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  false);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getOptionGroup(group,  false);	  OptionGroup    group    =    option.getOptionGroup(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
188	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  this);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getOptionGroup(group,  this);	  OptionGroup    group    =    option.getOptionGroup(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
189	[BUG]  [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  option);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  option);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  shortOpts.put(option.getKey(),  option);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    option);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
190	[BUG]  [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  option);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  option);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  shortOpts.put(option.getKey(),  option);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    option);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
191	[BUG]  [BUGGY]  for(OptionGroup  longOpts  :  group.getLongOpts())  {  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  longOpts  :  group.getLongOpts())  {  requiredOpts.add(longOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  longOpts  :  group.getLongOpts())  {  requiredOpts.add(longOpts);  }	  for(OptionGroup    longOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
192	[BUG]  [BUGGY]  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts,  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts,  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts,  shortOpts);  }	  for(OptionGroup    longOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
193	[BUG]  [BUGGY]  for(Option  option  :  groups.keySet())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  groups.keySet())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  groups.keySet())  {  option.setRequired(true);  addOption(option);  }	  for(Option    option    :    options.keySet())    {    option.setRequired(true);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
194	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts	  if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1),    shortOpts    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
195	[BUG]  [BUGGY]  if(group.getShortOpts()  ==  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.getShortOpts()  ==  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.getShortOpts()  ==  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts	  if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1),    shortOpts    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
196	[BUG]  [BUGGY]  if(group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpt  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpt  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.getShortOpts()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpt	  if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1),    shortOpts    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
197	[BUG]  [BUGGY]  for(Option  option  :  langOpts.values())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  langOpts.values())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  langOpts.values())  {  option.setRequired(false);  addOption(option);  }	  for(Option    option    :    shortOpts.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
198	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  option.getShortOpts(),  group);	  OptionGroup    shortOpts    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
199	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts(longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  option.getShortOpts(longOpts);	  OptionGroup    shortOpts    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
200	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts(),  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  option.getShortOpts(),  longOpts);	  OptionGroup    shortOpts    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
201	[BUG]  [BUGGY]  group!=  null)  {  longOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  longOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  longOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    longOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
202	[BUG]  [BUGGY]  while(group!=  null)  {  longOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  longOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  longOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    longOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
203	[BUG]  [BUGGY]  group!=  null)  {  longOpts.put(option.getKey(),  shortOpts);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  longOpts.put(option.getKey(),  shortOpts);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  longOpts.put(option.getKey(),  shortOpts);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    longOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
204	[BUG]  [BUGGY]  group!=  null)  {  longOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  longOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  longOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()	  if(group!=    null)    {    longOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
205	[BUG]  [BUGGY]  Option  option  =  options.values(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Option  option  =  options.values(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  option  =  options.values(),  group);	  Option    option    =    options.values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
206	[BUG]  [BUGGY]  Option  option  =  options.get(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Option  option  =  options.get(option.getKey());  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  option  =  options.get(option.getKey());	  Option    option    =    options.values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
207	[BUG]  [BUGGY]  Option  option  =  options.keys();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Option  option  =  options.keys();  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  option  =  options.keys();	  Option    option    =    options.values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
208	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
209	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
210	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
211	[BUG]  [BUGGY]  longOpts.put(option.getKey(),  shortOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts.put(option.getKey(),  shortOpts,  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts.put(option.getKey(),  shortOpts,  group);	  longOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
212	[BUG]  [BUGGY]  LongOpts  shortOpts  =  optionGroups.get(option.getKey(),  shortOpts);  longOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  LongOpts  shortOpts  =  optionGroups.get(option.getKey(),  shortOpts);  longOpts.put(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	LongOpts  shortOpts  =  optionGroups.get(option.getKey(),  shortOpts);  longOpts.put(option.getKey(),  shortOpts);	  LongOpts    shortOpts    =    optionGroups.get(option.getKey());    longOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
213	[BUG]  [BUGGY]  LongOpts  shortOpts  =  longOpts.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  LongOpts  shortOpts  =  longOpts.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	LongOpts  shortOpts  =  longOpts.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);	  LongOpts    shortOpts    =    optionGroups.get(option.getKey());    longOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
214	[BUG]  [BUGGY]  longOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);	  if(longOpts!=    null)    {    OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    longOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
215	[BUG]  [BUGGY]  longOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  group);	  if(longOpts!=    null)    {    OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    longOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
216	[BUG]  [BUGGY]  longOpts  =  optionGroups.get(group.getKey());  shortOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts  =  optionGroups.get(group.getKey());  shortOpts.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =  optionGroups.get(group.getKey());  shortOpts.put(option.getKey(),  group);	  longOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
217	[BUG]  [BUGGY]  longOpts  =  optionGroups.get(option.getKey(),  group);  shortOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts  =  optionGroups.get(option.getKey(),  group);  shortOpts.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =  optionGroups.get(option.getKey(),  group);  shortOpts.put(option.getKey(),  group);	  longOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
218	[BUG]  [BUGGY]  longOpts  =  shortOpts.get(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts  =  shortOpts.get(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =  shortOpts.get(option.getKey(),  group);	  longOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
219	[BUG]  [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    pair);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
220	[BUG]  [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    pair);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
221	[BUG]  [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt()  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  shortOpts.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt()	  if(group!=    null)    {    shortOpts.put(option.getKey(),    pair);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
222	[BUG]  [BUGGY]  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);	  if(requiredOpts!=    null)    {    OptionGroup    group    =    optionGroups.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
223	[BUG]  [BUGGY]  if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt()    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
224	[BUG]  [BUGGY]  if(group!=  null)  {  if(longOpts  ==  null)  {  shortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group!=  null)  {  if(longOpts  ==  null)  {  shortOpts.put(option.getKey(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  if(longOpts  ==  null)  {  shortOpts.put(option.getKey(),  group);  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt()    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
225	[BUG]  [BUGGY]  longOpts  =  optionGroups.get(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts  =  optionGroups.get(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =  optionGroups.get(option.getKey(),  shortOpts);	  longOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
226	[BUG]  [BUGGY]  longOpts  =  optionGroups.get(option.getKey(),  group);  shortOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts  =  optionGroups.get(option.getKey(),  group);  shortOpts.put(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =  optionGroups.get(option.getKey(),  group);  shortOpts.put(option.getKey(),  shortOpts);	  longOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
227	[BUG]  [BUGGY]  longOpts  =  optionGroups.get(group.getKey());  shortOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts  =  optionGroups.get(group.getKey());  shortOpts.put(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =  optionGroups.get(group.getKey());  shortOpts.put(option.getKey(),  shortOpts);	  longOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
228	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(shortOpts);  }	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
229	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  option.getShortOpts())  {  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpts  :  option.getShortOpts())  {  requiredOpts.add(longOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  option.getShortOpts())  {  requiredOpts.add(longOpts);  }	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
230	[BUG]  [BUGGY]  this.longOpts.put(option.getValue(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.longOpts.put(option.getValue(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(option.getValue(),  shortOpts);	  this.longOpts.put(option.getValue(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
231	[BUG]  [BUGGY]  this.longOpts.put(option.getValue(),  group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.longOpts.put(option.getValue(),  group,  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(option.getValue(),  group,  shortOpts);	  this.longOpts.put(option.getValue(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
232	[BUG]  [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
233	[BUG]  [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt()  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt()	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
234	[BUG]  [BUGGY]  group!=  null  &&  shortOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null  &&  shortOpts.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null  &&  shortOpts.put(option.getKey(),  group);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
235	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.values();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  group.values();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  group.values();	  OptionGroup    shortOpts    =    option.values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
236	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  options.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  options.getShortOpts();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  options.getShortOpts();	  OptionGroup    shortOpts    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
237	[BUG]  [BUGGY]  group  =  optionGroups.get(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group  =  optionGroups.get(option.getKey());  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group  =  optionGroups.get(option.getKey());	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
238	[BUG]  [BUGGY]  while(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  longOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  longOpts);  }	  while(shortOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
239	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.values())  {  Option  option  =  option.getOption(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  shortOpts.values())  {  Option  option  =  option.getOption(false);  addOption(option);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  shortOpts.values())  {  Option  option  =  option.getOption(false);  addOption(option);  }	  for(Option    option    :    longOpts.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
240	[BUG]  [BUGGY]  this.longOpts.put(option.getLongOpt(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.longOpts.put(option.getLongOpt(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(option.getLongOpt(),  group);	  this.longOpts.put(option.getShortOpt(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
241	[BUG]  [BUGGY]  if(option.getShortOpts()!=  null)  {  OptionGroup  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(option.getShortOpts()!=  null)  {  OptionGroup  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(option.getShortOpts()!=  null)  {  OptionGroup  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);  }	  OptionGroup    group    =    option.getGroup();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
242	[BUG]  [BUGGY]  Option  longOpts  =  group.values();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Option  longOpts  =  group.values();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  longOpts  =  group.values();	  Option    longOpts    =    longOpts.values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
243	[BUG]  [BUGGY]  if(longOpts!=  null)  {  OptionGroup  group  =  shortOpts.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(longOpts!=  null)  {  OptionGroup  group  =  shortOpts.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(longOpts!=  null)  {  OptionGroup  group  =  shortOpts.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  }	  OptionGroup    group    =    shortOpts.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
244	[BUG]  [BUGGY]  OptionGroup  group  =  shortOpts.get(option.getKey(),  option);  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  shortOpts.get(option.getKey(),  option);  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  shortOpts.get(option.getKey(),  option);  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    shortOpts.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
245	[BUG]  [BUGGY]  Option  option  =  this.options.values();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Option  option  =  this.options.values();  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  option  =  this.options.values();	  for(Option    option    :    this.options.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
246	[BUG]  [BUGGY]  if(group.getOptions()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.getOptions()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.getOptions()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)	  if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1)    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
247	[BUG]  [BUGGY]  if(group.getShortOpts()  ==  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.getShortOpts()  ==  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.getShortOpts()  ==  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)	  if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1)    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
248	[BUG]  [BUGGY]  for(OptionGroup  shortOpt  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpt  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpt  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }	  for(OptionGroup    longOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
249	[BUG]  [BUGGY]  if(longOpts!=  null)  {  OptionGroup  group  =  optionGroups.get(option.getKey(),  shortOpts);  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(longOpts!=  null)  {  OptionGroup  group  =  optionGroups.get(option.getKey(),  shortOpts);  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(longOpts!=  null)  {  OptionGroup  group  =  optionGroups.get(option.getKey(),  shortOpts);  requiredOpts.put(option.getKey(),  group);  }	  OptionGroup    group    =    optionGroups.get(option.getKey(),    shortOpts);    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
250	[BUG]  [BUGGY]  group  =  optionGroups.get(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group  =  optionGroups.get(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group  =  optionGroups.get(option.getKey(),  group);	  if(group!=    null)    {    if(longOpts    ==    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
251	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getOptionGroup(option);	  OptionGroup    group    =    option.getOptionGroup(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
252	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(groups);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(groups);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getOptionGroup(groups);	  OptionGroup    group    =    option.getOptionGroup(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
253	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option.getKey());  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getOptionGroup(option.getKey());	  OptionGroup    group    =    option.getOptionGroup(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
254	[BUG]  [BUGGY]  LongOpts  shortOpts  =  longOpts.get(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  LongOpts  shortOpts  =  longOpts.get(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	LongOpts  shortOpts  =  longOpts.get(option.getKey(),  group);	  LongOpts    shortOpts    =    optionGroups.get(option.getKey());    longOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
255	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  options.values())  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  options.values())  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    options.values())    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
256	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpt(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpt(group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  option.getShortOpt(group);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
257	[BUG]  [BUGGY]  for(OptionGroup  group  :  option.values())  {  optionGroups.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  group  :  option.values())  {  optionGroups.put(group.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  option.values())  {  optionGroups.put(group.getKey(),  group);  }	  for(OptionGroup    group    :    options.values())    {    optionGroups.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
258	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  requiredOpts.put(option.getKey(),  group);	  if(longOpts!=    null)    {    OptionGroup    group    =    optionGroups.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
259	[BUG]  [BUGGY]  for(Option  option  :  options.keySet())  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  options.keySet())  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  options.keySet())  {  optionGroups.put(option.getKey(),  group);  }	  for(Option    group    :    options.keySet())    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
260	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  shortOpts.get(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  ShortOpts  shortOpts  =  shortOpts.get(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	ShortOpts  shortOpts  =  shortOpts.get(option.getKey(),  group);	  if(shortOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
261	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  shortOpts.get(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  ShortOpts  shortOpts  =  shortOpts.get(option.getKey());  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	ShortOpts  shortOpts  =  shortOpts.get(option.getKey());	  if(shortOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
262	[BUG]  [BUGGY]  OptionGroup  longOpts  =  option.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  longOpts  =  option.getLongOpts();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  longOpts  =  option.getLongOpts();	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    ShortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
263	[BUG]  [BUGGY]  OptionGroup  longOpts  =  option.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  longOpts  =  option.getLongOpt();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  longOpts  =  option.getLongOpt();	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    ShortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
264	[BUG]  [BUGGY]  OptionGroup  group  =  option.getValue();  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getValue();  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getValue();  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    option.getKey();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
265	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getOptions()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptions()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }	  group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
266	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getOptions()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptions()!=  null)  {  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }	  group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
267	[BUG]  [BUGGY]  group  =(ShortOpt)longOpts.get(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group  =(ShortOpt)longOpts.get(option.getKey());  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group  =(ShortOpt)longOpts.get(option.getKey());	  if(group!=    null)    {    shortOpts.put(option.getKey(),    member);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
268	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  member);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  optionGroups.put(option.getKey(),  member);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	optionGroups.put(option.getKey(),  member);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    member);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
269	[BUG]  [BUGGY]  if(group!=  null)  {  if(longOpts  ==  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group!=  null)  {  if(longOpts  ==  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  if(longOpts  ==  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt()    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
270	[BUG]  [BUGGY]  this.shortOpts.put(option.getKey(),  group,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.shortOpts.put(option.getKey(),  group,  requiredOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getKey(),  group,  requiredOpts);	  this.shortOpts.put(option.getKey(),    group,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
271	[BUG]  [BUGGY]  group.put(option.getKey(),  longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.put(option.getKey(),  longOpts,  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.put(option.getKey(),  longOpts,  shortOpts);	  group.put(option.getKey(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
272	[BUG]  [BUGGY]  group.put(option.getKey(),  blockOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.put(option.getKey(),  blockOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.put(option.getKey(),  blockOpts);	  group.put(option.getKey(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
273	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
274	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  group);	  if(longOpts!=    null)    {    OptionGroup    shortOpts    =(OptionGroup)optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
275	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getShortKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getShortKey());  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =(OptionGroup)longOpts.get(option.getShortKey());	  OptionGroup    shortOpts    =(OptionGroup)longOpts.get(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
276	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  optionGroups.put(option.getKey(),  longOpts,  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	optionGroups.put(option.getKey(),  longOpts,  shortOpts);	  optionGroups.put(option.getKey(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
277	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getLongOpts(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  option.getLongOpts(longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  option.getLongOpts(longOpts);	  OptionGroup    shortOpts    =    option.getLongOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
278	[BUG]  [BUGGY]  for(OptionGroup  shortOpt  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpt  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpt  :  group.getShortOpts())  {  requiredOpts.put(option.getKey(),  shortOpts);  }	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
279	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.values())  {  options.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  shortOpts.values())  {  options.setRequired(true);  addOption(option);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  shortOpts.values())  {  options.setRequired(true);  addOption(option);  }	  for(Option    option    :    longOpts.values())    {    option.setRequired(true);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
280	[BUG]  [BUGGY]  for(OptionGroup  group  :  option.keySet())  {  options.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  group  :  option.keySet())  {  options.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  option.keySet())  {  options.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    option.keySet())    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
281	[BUG]  [BUGGY]  this.lengthOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.lengthOpts.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.lengthOpts.put(option.getKey(),  group);	  this.longOpts.put(group.getKey(),    option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
282	[BUG]  [BUGGY]  this.langOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.langOpts.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.langOpts.put(option.getKey(),  group);	  this.longOpts.put(group.getKey(),    option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
283	[BUG]  [BUGGY]  this.longOpts.put(option.getKey(),  group,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.longOpts.put(option.getKey(),  group,  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(option.getKey(),  group,  longOpts);	  this.longOpts.put(option.getKey(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
284	[BUG]  [BUGGY]  group.setShortOpts(optionGroups.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.setShortOpts(optionGroups.length);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.setShortOpts(optionGroups.length);	  group.setShortOpts(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
285	[BUG]  [BUGGY]  longOpts  =  group.get(option.getKey());  shortOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts  =  group.get(option.getKey());  shortOpts.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =  group.get(option.getKey());  shortOpts.put(option.getKey(),  group);	  longOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
286	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  group.getLongOpts())  {  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpts  :  group.getLongOpts())  {  requiredOpts.add(longOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  group.getLongOpts())  {  requiredOpts.add(longOpts);  }	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
287	[BUG]  [BUGGY]  Option  option  =  options.get(option.key());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Option  option  =  options.get(option.key());  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  option  =  options.get(option.key());	  Option    option    =    options.keySet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
288	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  group);	  if(longOpts!=    null)    {    OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
289	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  OptionGroup  group  =  options.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(requiredOpts!=  null)  {  OptionGroup  group  =  options.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(requiredOpts!=  null)  {  OptionGroup  group  =  options.get(option.getKey());  requiredOpts.put(option.getKey(),  group);  }	  OptionGroup    group    =    options.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
290	[BUG]  [BUGGY]  OptionGroup  group  =  options.get(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  options.get(option.getKey(),  shortOpts);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  options.get(option.getKey(),  shortOpts);	  OptionGroup    group    =    options.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
291	[BUG]  [BUGGY]  group.getShortOpts().add(option,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getShortOpts().add(option,  requiredOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getShortOpts().add(option,  requiredOpts);	  group.getShortOpts().add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
292	[BUG]  [BUGGY]  group.getShortOpts().add(optionGroup);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getShortOpts().add(optionGroup);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getShortOpts().add(optionGroup);	  group.getShortOpts().add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
293	[BUG]  [BUGGY]  Group  group  =  option.getShortOpts();  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Group  group  =  option.getShortOpts();  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Group  group  =  option.getShortOpts();  requiredOpts.put(option.getKey(),  group);	  OptionGroup    group    =    option.getShortOpts();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	107	None	replace
294	[BUG]  [BUGGY]  group.getOptionGroups()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getOptionGroups()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptionGroups()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(true);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
295	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getGroup(option.getKey());  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getGroup(option.getKey());	  OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
296	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getOptionGroups();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getOptionGroups();	  OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
297	[BUG]  [BUGGY]  if(group!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);  }	  if(longOpts!=    null)    {    OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    longOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
298	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  group);	  if(longOpts!=    null)    {    OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    longOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
299	[BUG]  [BUGGY]  Option  option  =  options.get(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Option  option  =  options.get(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  option  =  options.get(option.getKey(),  group);	  Option    option    =    options.values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
300	[BUG]  [BUGGY]  longOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  group);	  longOpts    =(OptionGroup)optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
301	[BUG]  [BUGGY]  longOpts  =  shortOpts.get(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts  =  shortOpts.get(option.getKey());  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =  shortOpts.get(option.getKey());	  longOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
302	[BUG]  [BUGGY]  this.shortOpts.put(option.getLongOpt(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.shortOpts.put(option.getLongOpt(),  longOpts);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getLongOpt(),  longOpts);	  this.shortOpts.put(option.getShortOpt(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
303	[BUG]  [BUGGY]  longOpts.put(option.getKey(),  group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts.put(option.getKey(),  group,  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts.put(option.getKey(),  group,  shortOpts);	  longOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
304	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  group.getLongOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts.  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpts  :  group.getLongOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts.  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  group.getLongOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1),  shortOpts.	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1),    shortOpts.    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
305	[BUG]  [BUGGY]  if(group!=  null)  {  if(longOpts  ==  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group!=  null)  {  if(longOpts  ==  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  if(longOpts  ==  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
306	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOptions())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOptions())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  group.getShortOptions())  {  requiredOpts.put(option.getKey(),  shortOpts);  }	  for(OptionGroup    shortOpts    :    group.getShortOpties())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
307	[BUG]  [BUGGY]  Groups.put(option.getKey(),  pair);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Groups.put(option.getKey(),  pair);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Groups.put(option.getKey(),  pair);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    pair);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
308	[BUG]  [BUGGY]  group.setRequired(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.setRequired(false);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.setRequired(false);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    option);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
309	[BUG]  [BUGGY]  group.put(option.getValue(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.put(option.getValue(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.put(option.getValue(),  shortOpts);	  group.put(option.getKey(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
310	[BUG]  [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
311	[BUG]  [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt()  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt()	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
312	[BUG]  [BUGGY]  if(group.isRequired())  {  if(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.isRequired())  {  if(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.isRequired())  {  if(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
313	[BUG]  [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
314	[BUG]  [BUGGY]  group!=  null  &&  group.isRequired())  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null  &&  group.isRequired())  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null  &&  group.isRequired())  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
315	[BUG]  [BUGGY]  group!=  null  &&  group.getShortOpts().contains(option.getKey()))  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null  &&  group.getShortOpts().contains(option.getKey()))  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt()  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null  &&  group.getShortOpts().contains(option.getKey()))  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt()	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
316	[BUG]  [BUGGY]  group!=  null  &&  group.isRequired())  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null  &&  group.isRequired())  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt()  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null  &&  group.isRequired())  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getShortOpt()	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
317	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.values())  {  Option  option  =  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  shortOpts.values())  {  Option  option  =  option.setRequired(true);  addOption(option);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  shortOpts.values())  {  Option  option  =  option.setRequired(true);  addOption(option);  }	  for(Option    option    :    longOpts.values())    {    option.setRequired(true);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
318	[BUG]  [BUGGY]  group.getShortOpts().add(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getShortOpts().add(group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getShortOpts().add(group);	  group.getShortOpts().add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
319	[BUG]  [BUGGY]  group.getShortOpts().add(requiredOpts,  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getShortOpts().add(requiredOpts,  option);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getShortOpts().add(requiredOpts,  option);	  group.getShortOpts().add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
320	[BUG]  [BUGGY]  group  =  options.get(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group  =  options.get(option.getKey(),  shortOpts);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group  =  options.get(option.getKey(),  shortOpts);	  OptionGroup    group    =    options.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
321	[BUG]  [BUGGY]  group!=  null  &&  group.isRequired())  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null  &&  group.isRequired())  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null  &&  group.isRequired())  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
322	[BUG]  [BUGGY]  group!=  null  &&  group.getShortOpts().contains(option.getKey()))  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null  &&  group.getShortOpts().contains(option.getKey()))  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt()  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null  &&  group.getShortOpts().contains(option.getKey()))  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt()	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
323	[BUG]  [BUGGY]  group!=  null  &&  group.getShortOpts().contains(option.getKey()))  {  shortOpts.put(option.getLongOpt(),  group);  }  else  {  longOpts.put(option.getLongOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null  &&  group.getShortOpts().contains(option.getKey()))  {  shortOpts.put(option.getLongOpt(),  group);  }  else  {  longOpts.put(option.getLongOpt()  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null  &&  group.getShortOpts().contains(option.getKey()))  {  shortOpts.put(option.getLongOpt(),  group);  }  else  {  longOpts.put(option.getLongOpt()	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
324	[BUG]  [BUGGY]  Option  longOpts  =  option.values();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Option  longOpts  =  option.values();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  longOpts  =  option.values();	  Option    longOpts    =    longOpts.values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
325	[BUG]  [BUGGY]  this.shortOpts.put(option.getShortOpt(),  group,  longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.shortOpts.put(option.getShortOpt(),  group,  longOpts,  shortOpts);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.shortOpts.put(option.getShortOpt(),  group,  longOpts,  shortOpts);	  this.shortOpts.put(option.getShortOpt(),    group,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
326	[BUG]  [BUGGY]  if(shortOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(shortOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(shortOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  longOpts.put(option.getKey(),  shortOpts);  }	  if(longOpts!=    null)    {    OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    longOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
327	[BUG]  [BUGGY]  if(longOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey(),  shortOpts);  longOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(longOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey(),  shortOpts);  longOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(longOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey(),  shortOpts);  longOpts.put(option.getKey(),  shortOpts);  }	  if(longOpts!=    null)    {    OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    longOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
328	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
329	[BUG]  [BUGGY]  longOpts  =(OptionGroup)optionGroups.get(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  longOpts  =(OptionGroup)optionGroups.get(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	longOpts  =(OptionGroup)optionGroups.get(option.getKey(),  group);	  longOpts    =(OptionGroup)optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
330	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.shortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  option.shortOpts();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  option.shortOpts();	  OptionGroup    shortOpts    =    option.values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
331	[BUG]  [BUGGY]  group.setRequired(false);  shortOpts.put(option.getKey(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.setRequired(false);  shortOpts.put(option.getKey(),  option);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.setRequired(false);  shortOpts.put(option.getKey(),  option);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    option);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
332	[BUG]  [BUGGY]  group.setRequired(false);  shortOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.setRequired(false);  shortOpts.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.setRequired(false);  shortOpts.put(option.getKey(),  group);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    option);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
333	[BUG]  [BUGGY]  OptionGroup  group  =  option.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getShortOpt();  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getShortOpt();	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    ShortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
334	[BUG]  [BUGGY]  option.setRequired(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  option.setRequired(false);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	option.setRequired(false);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    ShortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
335	[BUG]  [BUGGY]  if(shortOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(shortOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(shortOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }	  if(longOpts!=    null)    {    OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
336	[BUG]  [BUGGY]  if(longOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey(),  shortOpts);  shortOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(longOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey(),  shortOpts);  shortOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(longOpts!=  null)  {  OptionGroup  shortOpts  =  optionGroups.get(option.getKey(),  shortOpts);  shortOpts.put(option.getKey(),  shortOpts);  }	  if(longOpts!=    null)    {    OptionGroup    shortOpts    =    optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
337	[BUG]  [BUGGY]  for(OptionGroup  group  :  option.getShortOpts())  {  optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  group  :  option.getShortOpts())  {  optionGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  option.getShortOpts())  {  optionGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    option.keySet())    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
338	[BUG]  [BUGGY]  for(Option  option  :  options.keySet())  {  option.setRequired(false);  addOption(option,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  options.keySet())  {  option.setRequired(false);  addOption(option,  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  options.keySet())  {  option.setRequired(false);  addOption(option,  group);  }	  for(Option    option    :    options.keySet())    {    option.setRequired(true);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
339	[BUG]  [BUGGY]  options.put(option.getValue(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  options.put(option.getValue(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	options.put(option.getValue(),  group);	  optionGroups.put(option.getValue(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	108	None	replace
340	[BUG]  [BUGGY]  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts,  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts,  group);  }	  for(OptionGroup    longOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
341	[BUG]  [BUGGY]  group!=  null  &&  group.size()  >  0)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null  &&  group.size()  >  0)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null  &&  group.size()  >  0)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
342	[BUG]  [BUGGY]  group!=  null  &&  group.isRequired())  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null  &&  group.isRequired())  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null  &&  group.isRequired())  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
343	[BUG]  [BUGGY]  group!=  null  &&  group.size()  >  0)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null  &&  group.size()  >  0)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null  &&  group.size()  >  0)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
344	[BUG]  [BUGGY]  group!=  null  &&  group.isRequired())  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null  &&  group.isRequired())  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null  &&  group.isRequired())  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()	  if(group!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
345	[BUG]  [BUGGY]  pendOpts.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  pendOpts.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	pendOpts.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    pair);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
346	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  optionGroups.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	optionGroups.put(option.getKey(),  pair);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    pair);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
347	[BUG]  [BUGGY]  pendOpts.put(option.getKey(),  pair);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  pendOpts.put(option.getKey(),  pair);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	pendOpts.put(option.getKey(),  pair);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    pair);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
348	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup();  shortOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getGroup();  shortOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getGroup();  shortOpts.put(option.getKey(),  group);	  OptionGroup    group    =    option.getGroup();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
349	[BUG]  [BUGGY]  if(group.isRequired())  {  OptionGroup  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.isRequired())  {  OptionGroup  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.isRequired())  {  OptionGroup  group  =  option.getGroup();  requiredOpts.put(option.getKey(),  group);  }	  OptionGroup    group    =    option.getGroup();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
350	[BUG]  [BUGGY]  group.getShortOpts()  ==  null)  {  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getShortOpts()  ==  null)  {  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getShortOpts()  ==  null)  {  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts);  }	  group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
351	[BUG]  [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
352	[BUG]  [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
353	[BUG]  [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group);  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
354	[BUG]  [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt(),  group	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
355	[BUG]  [BUGGY]  OptionGroup  group  =  longOpts.get(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  longOpts.get(option.getKey());  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  longOpts.get(option.getKey());	  OptionGroup    group    =    shortOpts.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
356	[BUG]  [BUGGY]  pentry.put(option.getKey(),  pair);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  pentry.put(option.getKey(),  pair);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	pentry.put(option.getKey(),  pair);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    pair);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
357	[BUG]  [BUGGY]  if(group.getShortOpts()!=  null)  {  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.getShortOpts()!=  null)  {  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.getShortOpts()!=  null)  {  for(OptionGroup  longOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(longOpts.size()  -  1)	  if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1)    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
358	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.put(longOpts.get(longOpts.size()  -  1)  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.put(longOpts.get(longOpts.size()  -  1)	  if(group.getShortOpts()!=    null)    {    for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1)    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
359	[BUG]  [BUGGY]  for(OptionGroup  group  :  options.values())  {  optGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  group  :  options.values())  {  optGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  options.values())  {  optGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    options.values())    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
360	[BUG]  [BUGGY]  Option  option  =  options.values().iterator().next();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  Option  option  =  options.values().iterator().next();  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	Option  option  =  options.values().iterator().next();	  Option    option    =    options.values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
361	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.keySet())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  shortOpts.keySet())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  shortOpts.keySet())  {  option.setRequired(false);  addOption(option);  }	  for(Option    option    :    longOpts.values())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
362	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(true);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
363	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts,  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts,  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.add(longOpts,  shortOpts);  }	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.add(longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
364	[BUG]  [BUGGY]  for(Option  group  :  shortOpts.keySet())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  group  :  shortOpts.keySet())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  group  :  shortOpts.keySet())  {  requiredOpts.put(option.getKey(),  group);  }	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
365	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  option.setRequired(false);  addOption(option,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(Option  option  :  options.values())  {  option.setRequired(false);  addOption(option,  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(Option  option  :  options.values())  {  option.setRequired(false);  addOption(option,  group);  }	  for(Option    option    :    options.values())    {    option.setRequired(true);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
366	[BUG]  [BUGGY]  OptionGroup  group  =  option.getKey();  shortOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getKey();  shortOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getKey();  shortOpts.put(option.getKey(),  group);	  OptionGroup    group    =    option.getKey();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
367	[BUG]  [BUGGY]  if(group.isRequired())  {  OptionGroup  group  =  option.getKey();  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.isRequired())  {  OptionGroup  group  =  option.getKey();  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.isRequired())  {  OptionGroup  group  =  option.getKey();  requiredOpts.put(option.getKey(),  group);  }	  OptionGroup    group    =    option.getKey();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
368	[BUG]  [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group!=  null)  {  shortOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group!=  null)  {  shortOpts.put(option.getKey(),  shortOpts);  }	  if(group!=    null)    {    shortOpts.put(option.getKey(),    longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
369	[BUG]  [BUGGY]  group!=  null  &&  shortOpts.put(option.getKey(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group!=  null  &&  shortOpts.put(option.getKey(),  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group!=  null  &&  shortOpts.put(option.getKey(),  longOpts);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    longOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
370	[BUG]  [BUGGY]  forceRequired(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  forceRequired(false);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	forceRequired(false);	  if(group!=    null)    {    longOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
371	[BUG]  [BUGGY]  shortOpts.put(option.getValue(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  shortOpts.put(option.getValue(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	shortOpts.put(option.getValue(),  shortOpts);	  shortOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
372	[BUG]  [BUGGY]  for(OptionGroup  group  :  shortOpts)  {  optGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  group  :  shortOpts)  {  optGroups.put(option.getKey(),  group);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  group  :  shortOpts)  {  optGroups.put(option.getKey(),  group);  }	  for(OptionGroup    group    :    longOpts)    {    optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
373	[BUG]  [BUGGY]  this.longOpts.put(option.getValue(),  block);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.longOpts.put(option.getValue(),  block);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(option.getValue(),  block);	  this.longOpts.put(option.getValue(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
374	[BUG]  [BUGGY]  OptionGroup  group  =  optionGroups.get(option.getKey(),  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  optionGroups.get(option.getKey(),  requiredOpts.put(option.getKey(),  group);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  optionGroups.get(option.getKey(),  requiredOpts.put(option.getKey(),  group);	  if(requiredOpts!=    null)    {    OptionGroup    group    =    optionGroups.get(option.getKey());    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
375	[BUG]  [BUGGY]  group.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.put(option.getKey(),  group);	  if(group!=    null)    {    if(longOpts    ==    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
376	[BUG]  [BUGGY]  option.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  option.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	option.put(option.getKey(),  group);	  options.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	109	None	replace
377	[BUG]  [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(0),  shortOpts.  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(0),  shortOpts.  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	for(OptionGroup  shortOpts  :  group.getShortOpts())  {  requiredOpts.put(longOpts.get(0),  shortOpts.	  for(OptionGroup    shortOpts    :    group.getShortOpts())    {    requiredOpts.put(longOpts.get(longOpts.size()    -    1),    shortOpts.    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
378	[BUG]  [BUGGY]  this.longOpts.put(option.getShortOpt(),  block);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  this.longOpts.put(option.getShortOpt(),  block);  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	this.longOpts.put(option.getShortOpt(),  block);	  this.longOpts.put(option.getShortOpt(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
379	[BUG]  [BUGGY]  LongOpts  shortOpts  =  optionGroups.get(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  LongOpts  shortOpts  =  optionGroups.get(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	LongOpts  shortOpts  =  optionGroups.get(option.getKey(),  shortOpts);	  LongOpts    shortOpts    =    optionGroups.get(option.getKey());    longOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
380	[BUG]  [BUGGY]  OptionGroup  group  =  option.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  group  =  option.getShortOpts();  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  group  =  option.getShortOpts();	  OptionGroup    group    =    option.getShortOpts();    requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	107	None	replace
381	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]        return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
382	[BUG]  [BUGGY]  if(longOpts!=  null)  {  ShortOpts  shortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(longOpts!=  null)  {  ShortOpts  shortOpts.put(option.getKey(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(longOpts!=  null)  {  ShortOpts  shortOpts.put(option.getKey(),  group);  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
383	[BUG]  [BUGGY]  if(longOpts!=  null)  {  ShortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(longOpts!=  null)  {  ShortOpts.put(option.getKey(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(longOpts!=  null)  {  ShortOpts.put(option.getKey(),  group);  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
384	[BUG]  [BUGGY]  if(group.isRequired())  {  if(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.isRequired())  {  if(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.isRequired())  {  if(shortOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  longOpts.put(option.getLongOpt(),  group);  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
385	[BUG]  [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
386	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  optionGroups.get(option.getKey(),  group,  longOpts.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  OptionGroup  shortOpts  =  optionGroups.get(option.getKey(),  group,  longOpts.put(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	OptionGroup  shortOpts  =  optionGroups.get(option.getKey(),  group,  longOpts.put(option.getKey(),  shortOpts);	  OptionGroup    shortOpts    =    optionGroups.get(option.getKey(),    group);    longOpts.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
387	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(requiredOpts!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(requiredOpts!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt()    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
388	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(requiredOpts!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(requiredOpts!=  null)  {  if(longOpts!=  null)  {  shortOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getShortOpt()	  if(group!=    null)    {    if(longOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    else    {    shortOpts.put(option.getShortOpt()    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
389	[BUG]  [BUGGY]  if(shortOpts!=  null)  {  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  if(shortOpts!=  null)  {  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	if(shortOpts!=  null)  {  OptionGroup  shortOpts  =(OptionGroup)optionGroups.get(option.getKey());  shortOpts.put(option.getKey(),  shortOpts);  }	  if(longOpts!=    null)    {    OptionGroup    shortOpts    =(OptionGroup)optionGroups.get(option.getKey());    shortOpts.put(option.getKey(),    shortOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
390	[BUG]  [BUGGY]  pendOrder.put(option.getKey(),  member);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  pendOrder.put(option.getKey(),  member);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	pendOrder.put(option.getKey(),  member);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    member);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
391	[BUG]  [BUGGY]  group.put(option.getKey(),  member);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  group.put(option.getKey(),  member);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	group.put(option.getKey(),  member);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    member);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
392	[BUG]  [BUGGY]  pendOrder.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  pendOrder.put(option.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	pendOrder.put(option.getKey(),  group);	  if(group!=    null)    {    shortOpts.put(option.getKey(),    member);    }    else    {    longOpts.put(option.getLongOpt(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
393	[BUG]  [BUGGY]  while(shortOpts!=  null  &&  longOpts.contains(option.getKey()))  {  shortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);      [BUGGY]  while(shortOpts!=  null  &&  longOpts.contains(option.getKey()))  {  shortOpts.put(option.getKey(),  group);  }  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	while(shortOpts!=  null  &&  longOpts.contains(option.getKey()))  {  shortOpts.put(option.getKey(),  group);  }	  while(shortOpts!=    null)    {    shortOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
