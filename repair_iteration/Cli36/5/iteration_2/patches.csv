bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.hasOptionGroups())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.hasOptionGroups())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.hasOptionGroups())  {	  if(group.isRequired()    ||    group.hasOptionGroups())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
2	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOptionShortOpts())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.hasOptionShortOpts())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOptionShortOpts())  {	  if(group.isRequired()    ||    group.hasOptionGroups())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
3	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.hasOpts())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.hasOpts())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.hasOpts())  {	  if(group.isRequired()    ||    group.hasOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
4	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOpts()  ||  shortOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.hasOpts()  ||  shortOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOpts()  ||  shortOpts.contains(group))  {	  if(group.isRequired()    ||    group.hasOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
5	[BUG]  [BUGGY]  for(Option  group  :  this.longOpts.getOptions())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  group  :  this.longOpts.getOptions())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  group  :  this.longOpts.getOptions())  {  requiredOpts.add(group);  }	  for(Option    group    :    group.getOptions())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
6	[BUG]  [BUGGY]  for(Option  group  :  group.getOptions())  {  requiredOpts.add(group,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  group  :  group.getOptions())  {  requiredOpts.add(group,  false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  group  :  group.getOptions())  {  requiredOpts.add(group,  false);  }	  for(Option    group    :    group.getOptions())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
7	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  }	  for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
8	[BUG]  [BUGGY]  for(Option  group  :  option.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  group  :  option.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  group  :  option.getOptions())  {  requiredOpts.add(false);  }	  for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
9	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.getOptions()  ==  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.getOptions()  ==  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.getOptions()  ==  null)  {	  if(group.isRequired()    ||    group.getOptions()    ==    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
10	[BUG]  [BUGGY]  if(group.isOption()  ||  group.isRequired())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isOption()  ||  group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isOption()  ||  group.isRequired())  {  requiredOpts.add(group);  }	  if(group.isOption())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
11	[BUG]  [BUGGY]  if(group.isOption()  ||  group.isOption())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isOption()  ||  group.isOption())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isOption()  ||  group.isOption())  {  requiredOpts.add(group);  }	  if(group.isOption())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
12	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.isRequired())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.isRequired())  {  requiredOpts.add(group);  }	  if(group.isRequired()    ||    group.isRequired())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
13	[BUG]  [BUGGY]  ArrayList  <  Option>  shortOpts  =  longOpts.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  ArrayList  <  Option>  shortOpts  =  longOpts.getShortOpts();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	ArrayList  <  Option>  shortOpts  =  longOpts.getShortOpts();	  ArrayList    <    Option>    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
14	[BUG]  [BUGGY]  ArrayList  <  Option>  shortOpts  =  group.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  ArrayList  <  Option>  shortOpts  =  group.getLongOpts();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	ArrayList  <  Option>  shortOpts  =  group.getLongOpts();	  ArrayList    <    Option>    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
15	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.requiredOpts.contains(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.requiredOpts.contains(requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.requiredOpts.contains(requiredOpts))  {	  if(group.isRequired()    ||    group.requiredOpts.contains(requiredOpts))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
16	[BUG]  [BUGGY]  if(group.isRequired()  ||  requiredOpts.contains(group.requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  requiredOpts.contains(group.requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  requiredOpts.contains(group.requiredOpts))  {	  if(group.isRequired()    ||    group.requiredOpts.contains(requiredOpts))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
17	[BUG]  [BUGGY]  if(group.isRequired()  ||  shortOpts.contains(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  shortOpts.contains(requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  shortOpts.contains(requiredOpts))  {	  if(group.isRequired()    ||    group.requiredOpts.contains(requiredOpts))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
18	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.isSupported())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.isSupported())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.isSupported())  {	  if(group.isRequired()    ||    group.isSupported())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
19	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isSupported()  ||  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isSupported()  ||  requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isSupported()  ||  requiredOpts.contains(group))  {	  if(group.isRequired()    ||    group.isSupported())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
20	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isSupported()  ||  this.requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isSupported()  ||  this.requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isSupported()  ||  this.requiredOpts.contains(group))  {	  if(group.isRequired()    ||    group.isSupported())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
21	[BUG]  [BUGGY]  if(group.isRequired()  ||  shortOpts.isRequired())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  shortOpts.isRequired())  {  requiredOpts.add(null);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  shortOpts.isRequired())  {  requiredOpts.add(null);  }	  if(group.isRequired()    ||    group.isRequired())    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
22	[BUG]  [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	while(group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  while(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
23	[BUG]  [BUGGY]  for(Option  group  :  option.getOptions())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  group  :  option.getOptions())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  group  :  option.getOptions())  {  requiredOpts.add(group);  }	  for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
24	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =  option.getGroup();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =  option.getGroup();	  OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
25	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =  options.getOptionGroup();	  OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
26	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =  option.getOptionGroups();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =  option.getOptionGroups();	  OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
27	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.getOptionGroups()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.getOptionGroups()!=  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.getOptionGroups()!=  null)  {	  if(group.isRequired()    ||    group.getOptionGroups()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
28	[BUG]  [BUGGY]  optionGroups.add(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  optionGroups.add(group,  shortOpts);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	optionGroups.add(group,  shortOpts);	  optionGroups.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
29	[BUG]  [BUGGY]  optionGroups.add(group,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  optionGroups.add(group,  false);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	optionGroups.add(group,  false);	  optionGroups.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
30	[BUG]  [BUGGY]  optionGroups.add(group,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  optionGroups.add(group,  null);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	optionGroups.add(group,  null);	  optionGroups.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
31	[BUG]  [BUGGY]  if(requiredOpts.contains(group)&&  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)&&  requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)&&  requiredOpts.contains(group))  {	  if(requiredOpts.contains(group)||    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
32	[BUG]  [BUGGY]  if(group.contains(requiredOpts)||  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.contains(requiredOpts)||  requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.contains(requiredOpts)||  requiredOpts.contains(group))  {	  if(requiredOpts.contains(group)||    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
33	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.isRequired())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.isRequired())  {  requiredOpts.add(false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.isRequired())  {  requiredOpts.add(false);  }	  if(group.isRequired()    ||    group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
34	[BUG]  [BUGGY]  if(group.isRequired()  ||  shortOpts.isRequired())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  shortOpts.isRequired())  {  requiredOpts.add(false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  shortOpts.isRequired())  {  requiredOpts.add(false);  }	  if(group.isRequired()    ||    group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
35	[BUG]  [BUGGY]  requiredOpts.add(group,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  requiredOpts.add(group,  false);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	requiredOpts.add(group,  false);	  requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
36	[BUG]  [BUGGY]  requiredOpts.add(false,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  requiredOpts.add(false,  group);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	requiredOpts.add(false,  group);	  requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
37	[BUG]  [BUGGY]  requiredOpts.add(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  requiredOpts.add(group,  shortOpts);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	requiredOpts.add(group,  shortOpts);	  requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
38	[BUG]  [BUGGY]  if(group.isRequired())  {  requiredOpts.add(group);  }  else  {  shortOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired())  {  requiredOpts.add(group);  }  else  {  shortOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired())  {  requiredOpts.add(group);  }  else  {  shortOpts.add(group);  }	  requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
39	[BUG]  [BUGGY]  if(!group.isRequired()  ||  group.getOptions()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(!group.isRequired()  ||  group.getOptions()!=  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  ||  group.getOptions()!=  null)  {	  if(!group.isRequired()    &&    group.getOptions()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
40	[BUG]  [BUGGY]  if(!group.isRequired()  &&  group.getOptions()  ==  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(!group.isRequired()  &&  group.getOptions()  ==  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  &&  group.getOptions()  ==  null)  {	  if(!group.isRequired()    &&    group.getOptions()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
41	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.isOptional())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.isOptional())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.isOptional())  {  requiredOpts.add(group);  }	  if(group.isRequired()    ||    group.isOptional())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
42	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isOptional())  {  requiredOpts.add(group,  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isOptional())  {  requiredOpts.add(group,  shortOpts);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isOptional())  {  requiredOpts.add(group,  shortOpts);  }	  if(group.isRequired()    ||    group.isOptional())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
43	[BUG]  [BUGGY]  For(Option  group  :  option.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  For(Option  group  :  option.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  group  :  option.getOptions())  {  requiredOpts.add(false);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
44	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
45	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
46	[BUG]  [BUGGY]  if(group.getOptions().contains(requiredOpts)||  group.getOptions().contains(requiredOpts.size()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().contains(requiredOpts)||  group.getOptions().contains(requiredOpts.size()))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().contains(requiredOpts)||  group.getOptions().contains(requiredOpts.size()))  {	  if(requiredOpts.contains(group)||    group.getOptions().contains(requiredOpts.size()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
47	[BUG]  [BUGGY]  if(requiredOpts.contains(group)&&  group.getOptions().contains(requiredOpts.size()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)&&  group.getOptions().contains(requiredOpts.size()))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)&&  group.getOptions().contains(requiredOpts.size()))  {	  if(requiredOpts.contains(group)||    group.getOptions().contains(requiredOpts.size()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
48	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  group.getOptions().contains(requiredOpts.size()  -  1))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)||  group.getOptions().contains(requiredOpts.size()  -  1))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  group.getOptions().contains(requiredOpts.size()  -  1))  {	  if(requiredOpts.contains(group)||    group.getOptions().contains(requiredOpts.size()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
49	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  shortOpts.getOptions().contains(group.getOptions().size()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)||  shortOpts.getOptions().contains(group.getOptions().size()))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  shortOpts.getOptions().contains(group.getOptions().size()))  {	  if(requiredOpts.contains(group)||    group.getOptions().contains(requiredOpts.size()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
50	[BUG]  [BUGGY]  if(requiredOpts.contains(group)&&  shortOpts.getOptions().contains(optionGroup))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)&&  shortOpts.getOptions().contains(optionGroup))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)&&  shortOpts.getOptions().contains(optionGroup))  {	  if(requiredOpts.contains(group)&&    group.getOptions().contains(optionGroup))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
51	[BUG]  [BUGGY]  if(group.getOptions().contains(requiredOpts)&&  group.getOptions().contains(optionGroup))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().contains(requiredOpts)&&  group.getOptions().contains(optionGroup))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().contains(requiredOpts)&&  group.getOptions().contains(optionGroup))  {	  if(requiredOpts.contains(group)&&    group.getOptions().contains(optionGroup))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
52	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(null);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(null);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
53	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(null);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  option  :  group.getOptions())  {  requiredOpts.add(null);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
54	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(null);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(null);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
55	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.isOptional())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.isOptional())  {  requiredOpts.add(null);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.isOptional())  {  requiredOpts.add(null);  }	  if(group.isRequired()    ||    group.isOptional())    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
56	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(false);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(false);	  List    <    Option>    shortOpts    =    group.getShortOpts(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
57	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(true,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(true,  longOpts);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(true,  longOpts);	  List    <    Option>    shortOpts    =    group.getShortOpts(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
58	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(false,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(false,  group);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(false,  group);	  List    <    Option>    shortOpts    =    group.getShortOpts(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
59	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(false,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(false,  false);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(false,  false);	  List    <    Option>    shortOpts    =    group.getShortOpts(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
60	[BUG]  [BUGGY]  For(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  For(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group);  }	  For(Option    group    :    group.getOptions())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
61	[BUG]  [BUGGY]  For(Option  group  :  group.getOptions())  {  requiredOpts.add(group,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  For(Option  group  :  group.getOptions())  {  requiredOpts.add(group,  false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  group  :  group.getOptions())  {  requiredOpts.add(group,  false);  }	  For(Option    group    :    group.getOptions())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
62	[BUG]  [BUGGY]  For(Option  group  :  this.longOpts.getOptions())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  For(Option  group  :  this.longOpts.getOptions())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  group  :  this.longOpts.getOptions())  {  requiredOpts.add(group);  }	  For(Option    group    :    group.getOptions())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
63	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
64	[BUG]  [BUGGY]  while(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  while(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	while(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
65	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
66	[BUG]  [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	while(group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
67	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  requiredOpts.add(longOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  requiredOpts.add(longOpts,  group);  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  option.getShortOpts();  requiredOpts.add(longOpts,  group);	  OptionGroup    shortOpts    =    option.getShortOpts();    requiredOpts.add(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
68	[BUG]  [BUGGY]  if(longOpts!=  null)  {  OptionGroup  shortOpts  =  option.getShortOpts();  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(longOpts!=  null)  {  OptionGroup  shortOpts  =  option.getShortOpts();  requiredOpts.add(longOpts);  }  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(longOpts!=  null)  {  OptionGroup  shortOpts  =  option.getShortOpts();  requiredOpts.add(longOpts);  }	  OptionGroup    shortOpts    =    option.getShortOpts();    requiredOpts.add(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
69	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  requiredOpts.add(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  requiredOpts.add(group);  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  option.getShortOpts();  requiredOpts.add(group);	  OptionGroup    shortOpts    =    option.getShortOpts();    requiredOpts.add(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
70	[BUG]  [BUGGY]  OptionGroup  group  =  this.optionGroups.getOptionGroup(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =  this.optionGroups.getOptionGroup(group);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =  this.optionGroups.getOptionGroup(group);	  OptionGroup    group    =    group.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
71	[BUG]  [BUGGY]  OptionGroup  group  =  group.getOptionGroup(this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =  group.getOptionGroup(this);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =  group.getOptionGroup(this);	  OptionGroup    group    =    group.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
72	[BUG]  [BUGGY]  OptionGroup  group  =  group.getGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =  group.getGroups();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =  group.getGroups();	  OptionGroup    group    =    group.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
73	[BUG]  [BUGGY]  for(Option  group  :  option.getOptions())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  group  :  option.getOptions())  {  requiredOpts.add(true);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  group  :  option.getOptions())  {  requiredOpts.add(true);  }	  for(Option    option    :    group.getOptions())    {    requiredOpts.add(true);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
74	[BUG]  [BUGGY]  if(group.isOption()  ||  group.isOption())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isOption()  ||  group.isOption())  {  requiredOpts.add(false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isOption()  ||  group.isOption())  {  requiredOpts.add(false);  }	  if(group.isOption())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
75	[BUG]  [BUGGY]  if(group.isOption()  ||  group.isRequired())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isOption()  ||  group.isRequired())  {  requiredOpts.add(false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isOption()  ||  group.isRequired())  {  requiredOpts.add(false);  }	  if(group.isOption())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
76	[BUG]  [BUGGY]  For(Option  group  :  option.getOptions())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  For(Option  group  :  option.getOptions())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  group  :  option.getOptions())  {  requiredOpts.add(group);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
77	[BUG]  [BUGGY]  For(Option  group  :  options.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  For(Option  group  :  options.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  group  :  options.getOptions())  {  requiredOpts.add(option);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
78	[BUG]  [BUGGY]  Option  group  =(OptionGroup)this.optionGroups.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(OptionGroup)this.optionGroups.clone();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(OptionGroup)this.optionGroups.clone();	  Option    group    =(Option)this.optionGroups.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
79	[BUG]  [BUGGY]  Option  group  =(Option)this.optionGroups.clone(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(Option)this.optionGroups.clone(),  group);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(Option)this.optionGroups.clone(),  group);	  Option    group    =(Option)this.optionGroups.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
80	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroup(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroup(longOpts);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getOptionGroup(longOpts);	  OptionGroup    shortOpts    =    group.getOptionGroup(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
81	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroup(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroup(requiredOpts);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getOptionGroup(requiredOpts);	  OptionGroup    shortOpts    =    group.getOptionGroup(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
82	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroup(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroup(group);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getOptionGroup(group);	  OptionGroup    shortOpts    =    group.getOptionGroup(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
83	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroup(option,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroup(option,  longOpts);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getOptionGroup(option,  longOpts);	  OptionGroup    shortOpts    =    group.getOptionGroup(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
84	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)group.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)group.getLongOpts();  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =(OptionGroup)group.getLongOpts();	  OptionGroup    shortOpts    =(OptionGroup)group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
85	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)longOpts.getShortOpts();  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =(OptionGroup)longOpts.getShortOpts();	  OptionGroup    shortOpts    =(OptionGroup)group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
86	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)group.getLargerOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)group.getLargerOpts();  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =(OptionGroup)group.getLargerOpts();	  OptionGroup    shortOpts    =(OptionGroup)group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
87	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  this.longOpts.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  List  <  Option>  shortOpts  =  this.longOpts.getShortOpts();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  this.longOpts.getShortOpts();	  List    <    Option>    shortOpts    =    longOpts.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
88	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  optionGroups.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  List  <  Option>  shortOpts  =  optionGroups.getShortOpts();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  optionGroups.getShortOpts();	  List    <    Option>    shortOpts    =    longOpts.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
89	[BUG]  [BUGGY]  Option  group  =(Option)group.clone()?  null  :  group.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(Option)group.clone()?  null  :  group.clone();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(Option)group.clone()?  null  :  group.clone();	  Option    group    =(Option)group.clone()    :    null;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
90	[BUG]  [BUGGY]  if(group.getOptions()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()  ==  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()  ==  0)  {	  if(group.getOptions()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
91	[BUG]  [BUGGY]  if(group.getOptions()!=  null  ||  group.getOptions()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()!=  null  ||  group.getOptions()  >  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null  ||  group.getOptions()  >  0)  {	  if(group.getOptions()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
92	[BUG]  [BUGGY]  if(group.getOptions()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()!=  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  0)  {	  if(group.getOptions()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
93	[BUG]  [BUGGY]  if(group.getOptions()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()!=  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null)  {	  if(group.getOptions()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
94	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(group);  }	  for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
95	[BUG]  [BUGGY]  for(Option  group  :  option.getOptionGroups())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  group  :  option.getOptionGroups())  {  requiredOpts.add(false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  group  :  option.getOptionGroups())  {  requiredOpts.add(false);  }	  for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
96	[BUG]  [BUGGY]  Option  group  =(Option)group.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(Option)group.getOptionGroup();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(Option)group.getOptionGroup();	  Option    group    =(Option)group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
97	[BUG]  [BUGGY]  Option  group  =(Option)group.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(Option)group.getShortOpts();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(Option)group.getShortOpts();	  Option    group    =(Option)group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
98	[BUG]  [BUGGY]  if(group.getShortOpts()!=  null)  {  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getShortOpts()!=  null)  {  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts);  }  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getShortOpts()!=  null)  {  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts);  }	  OptionGroup    shortOpts    =    group.getShortOpts();    requiredOpts.add(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
99	[BUG]  [BUGGY]  if(longOpts!=  null)  {  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(longOpts!=  null)  {  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts);  }  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(longOpts!=  null)  {  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts);  }	  OptionGroup    shortOpts    =    group.getShortOpts();    requiredOpts.add(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
100	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts,  shortOpts);  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts,  shortOpts);	  OptionGroup    shortOpts    =    group.getShortOpts();    requiredOpts.add(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
101	[BUG]  [BUGGY]  if(group.getOptions().contains(requiredOpts)||  group.getOptions().contains(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().contains(requiredOpts)||  group.getOptions().contains(requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().contains(requiredOpts)||  group.getOptions().contains(requiredOpts))  {	  if(group.getOptions().contains(requiredOpts))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
102	[BUG]  [BUGGY]  if(group.getOptions().contains(requiredOpts,  false))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().contains(requiredOpts,  false))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().contains(requiredOpts,  false))  {	  if(group.getOptions().contains(requiredOpts))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
103	[BUG]  [BUGGY]  if(group.getOptions().contains(requiredOpts)||  group.getShortOpts().contains(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().contains(requiredOpts)||  group.getShortOpts().contains(requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().contains(requiredOpts)||  group.getShortOpts().contains(requiredOpts))  {	  if(group.getOptions().contains(requiredOpts))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
104	[BUG]  [BUGGY]  if(group.isRequired())  {  requiredOpts.add(null);  }  else  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired())  {  requiredOpts.add(null);  }  else  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired())  {  requiredOpts.add(null);  }  else  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  requiredOpts.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
105	[BUG]  [BUGGY]  if(group.isRequired())  {  requiredOpts.add(null);  }  else  {  shortOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired())  {  requiredOpts.add(null);  }  else  {  shortOpts.add(null);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired())  {  requiredOpts.add(null);  }  else  {  shortOpts.add(null);  }	  requiredOpts.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
106	[BUG]  [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	while(group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	  while(group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
107	[BUG]  [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	while(group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	  while(group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
108	[BUG]  [BUGGY]  if(requiredOpts.isRequired()  &&  group.getOptions()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.isRequired()  &&  group.getOptions()!=  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.isRequired()  &&  group.getOptions()!=  null)  {	  if(group.isRequired()    &&    group.getOptions()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
109	[BUG]  [BUGGY]  if(group.getOptions().contains(requiredOpts)||  group.getOptions().contains(optionGroup))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().contains(requiredOpts)||  group.getOptions().contains(optionGroup))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().contains(requiredOpts)||  group.getOptions().contains(optionGroup))  {	  if(requiredOpts.contains(group)||    group.getOptions().contains(optionGroup))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
110	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  shortOpts.getOptions().contains(optionGroup))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)||  shortOpts.getOptions().contains(optionGroup))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  shortOpts.getOptions().contains(optionGroup))  {	  if(requiredOpts.contains(group)||    group.getOptions().contains(optionGroup))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
111	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.longOpts.getOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)this.longOpts.getOpts();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)this.longOpts.getOpts();	  OptionGroup    group    =(OptionGroup)group.getOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
112	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.optionGroups.getOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)this.optionGroups.getOpts();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)this.optionGroups.getOpts();	  OptionGroup    group    =(OptionGroup)group.getOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
113	[BUG]  [BUGGY]  Option  group  =(Option)this.optionGroups.get(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(Option)this.optionGroups.get(group,  shortOpts);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(Option)this.optionGroups.get(group,  shortOpts);	  Option    group    =(Option)this.optionGroups.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
114	[BUG]  [BUGGY]  Option  group  =(Option)this.optionGroups.get(group  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(Option)this.optionGroups.get(group  -  1);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(Option)this.optionGroups.get(group  -  1);	  Option    group    =(Option)this.optionGroups.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
115	[BUG]  [BUGGY]  Option  group  =(Option)this.optionGroups.get(group,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(Option)this.optionGroups.get(group,  requiredOpts);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(Option)this.optionGroups.get(group,  requiredOpts);	  Option    group    =(Option)this.optionGroups.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
116	[BUG]  [BUGGY]  if(requiredOpts.isRequired()  &&  group.hasOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.isRequired()  &&  group.hasOptions())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.isRequired()  &&  group.hasOptions())  {	  if(group.isRequired()    &&    group.hasOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
117	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.hasOptions()  &&  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.hasOptions()  &&  requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.hasOptions()  &&  requiredOpts.contains(group))  {	  if(group.isRequired()    &&    group.hasOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
118	[BUG]  [BUGGY]  if(!group.isRequired()  &&  group.hasOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(!group.isRequired()  &&  group.hasOptions())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  &&  group.hasOptions())  {	  if(group.isRequired()    &&    group.hasOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
119	[BUG]  [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	while(group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  while(group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
120	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts(),  group);  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  option.getShortOpts(),  group);	  OptionGroup    shortOpts    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
121	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  option.getLongOpts();  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  option.getLongOpts();	  OptionGroup    shortOpts    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
122	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.getOpts()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.getOpts()!=  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.getOpts()!=  null)  {	  if(group.isRequired()    ||    group.getOpts()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
123	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.getOpts()  ==  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.getOpts()  ==  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.getOpts()  ==  null)  {	  if(group.isRequired()    ||    group.getOpts()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
124	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.optionGroups.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)this.optionGroups.clone();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)this.optionGroups.clone();	  OptionGroup    group    =(OptionGroup)group.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
125	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)requiredOpts.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)requiredOpts.clone();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)requiredOpts.clone();	  OptionGroup    group    =(OptionGroup)group.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
126	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)super.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)super.clone();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)super.clone();	  OptionGroup    group    =(OptionGroup)group.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
127	[BUG]  [BUGGY]  if(group.size()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.size()  ==  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.size()  ==  0)  {	  if(group.size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
128	[BUG]  [BUGGY]  if(group.size()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.size()!=  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.size()!=  0)  {	  if(group.size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
129	[BUG]  [BUGGY]  if(group.size()  >  0  ||  group.getOptions().size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.size()  >  0  ||  group.getOptions().size()  >  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.size()  >  0  ||  group.getOptions().size()  >  0)  {	  if(group.size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
130	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  ||  shortOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  ||  shortOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOptions()  ||  shortOpts.contains(group))  {	  if(group.isRequired()    ||    group.hasOptions()    ||    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
131	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  &&  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  &&  requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOptions()  &&  requiredOpts.contains(group))  {	  if(group.isRequired()    ||    group.hasOptions()    ||    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
132	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.hasOptions()  ||  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.hasOptions()  ||  requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.hasOptions()  ||  requiredOpts.contains(group))  {	  if(group.isRequired()    ||    group.hasOptions()    ||    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
133	[BUG]  [BUGGY]  requiredOpts.add(optionGroup);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  requiredOpts.add(optionGroup);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	requiredOpts.add(optionGroup);	  requiredOpts.add(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
134	[BUG]  [BUGGY]  if(group.isRequired())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired())  {  requiredOpts.add(option);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired())  {  requiredOpts.add(option);  }	  requiredOpts.add(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
135	[BUG]  [BUGGY]  if(group.isRequired())  {  requiredOpts.add(option);  }  else  {  shortOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired())  {  requiredOpts.add(option);  }  else  {  shortOpts.add(option);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired())  {  requiredOpts.add(option);  }  else  {  shortOpts.add(option);  }	  requiredOpts.add(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
136	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.longOpts.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)this.longOpts.getShortOpts();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)this.longOpts.getShortOpts();	  OptionGroup    group    =(OptionGroup)group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
137	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)longOpts.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)longOpts.getShortOpts();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)longOpts.getShortOpts();	  OptionGroup    group    =(OptionGroup)group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
138	[BUG]  [BUGGY]  if(!group.isRequired()  &&  group.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(!group.isRequired()  &&  group.isRequired())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  &&  group.isRequired())  {	  if(group.isRequired()    &&    group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
139	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.isRequired()  ||  group.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.isRequired()  ||  group.isRequired())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.isRequired()  ||  group.isRequired())  {	  if(group.isRequired()    &&    group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
140	[BUG]  [BUGGY]  if(group.isRequired()  &&!group.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&!group.isRequired())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&!group.isRequired())  {	  if(group.isRequired()    ||!group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
141	[BUG]  [BUGGY]  if(group.isRequired()  ||!requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||!requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||!requiredOpts.contains(group))  {	  if(group.isRequired()    ||!group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
142	[BUG]  [BUGGY]  if(group.isRequired()  ||!group.isRequired()  ||!requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||!group.isRequired()  ||!requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||!group.isRequired()  ||!requiredOpts.contains(group))  {	  if(group.isRequired()    ||!group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
143	[BUG]  [BUGGY]  if(group.isRequired()  &&  shortOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  shortOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  shortOpts.contains(group))  {	  if(group.isRequired()    ||    shortOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
144	[BUG]  [BUGGY]  if(group.isRequired()  ||  longOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  longOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  longOpts.contains(group))  {	  if(group.isRequired()    ||    shortOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
145	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  group.getLongOpts();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getLongOpts();	  OptionGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
146	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts);	  OptionGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
147	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts;  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts;	  OptionGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
148	[BUG]  [BUGGY]  if(requiredOpts.isRequired()  &&  group.contains(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.isRequired()  &&  group.contains(requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.isRequired()  &&  group.contains(requiredOpts))  {	  if(group.isRequired()    &&    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
149	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.contains(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.contains(requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.contains(requiredOpts))  {	  if(group.isRequired()    &&    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
150	[BUG]  [BUGGY]  if(group!=  null  &&  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group!=  null  &&  requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group!=  null  &&  requiredOpts.contains(group))  {	  if(requiredOpts!=    null    &&    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
151	[BUG]  [BUGGY]  if(requiredOpts!=  null  &&  shortOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts!=  null  &&  shortOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts!=  null  &&  shortOpts.contains(group))  {	  if(requiredOpts!=    null    &&    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
152	[BUG]  [BUGGY]  if(requiredOpts!=  null  &&  group.contains(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts!=  null  &&  group.contains(requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts!=  null  &&  group.contains(requiredOpts))  {	  if(requiredOpts!=    null    &&    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
153	[BUG]  [BUGGY]  if(requiredOpts!=  null  ||  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts!=  null  ||  requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts!=  null  ||  requiredOpts.contains(group))  {	  if(requiredOpts!=    null    &&    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
154	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.isOptional())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.isOptional())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.isOptional())  {	  if(group.isRequired()    ||    group.isOptional())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
155	[BUG]  [BUGGY]  if(group.isOptional()  ||  group.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isOptional()  ||  group.isRequired())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isOptional()  ||  group.isRequired())  {	  if(group.isRequired()    ||    group.isOptional())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
156	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isPrivate())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isPrivate())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isPrivate())  {	  if(group.isRequired()    ||    group.isOptional())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
157	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  longOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)||  longOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  longOpts.contains(group))  {	  if(requiredOpts.contains(group)||    shortOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
158	[BUG]  [BUGGY]  if(longOpts.contains(group)||  shortOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(longOpts.contains(group)||  shortOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(longOpts.contains(group)||  shortOpts.contains(group))  {	  if(requiredOpts.contains(group)||    shortOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
159	[BUG]  [BUGGY]  if(longOpts.contains(group)||  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(longOpts.contains(group)||  requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(longOpts.contains(group)||  requiredOpts.contains(group))  {	  if(requiredOpts.contains(group)||    shortOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
160	[BUG]  [BUGGY]  optionGroups.put(group,  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  optionGroups.put(group,  option);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	optionGroups.put(group,  option);	  optionGroups.put(option,    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
161	[BUG]  [BUGGY]  optionGroups.put(group,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  optionGroups.put(group,  group);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	optionGroups.put(group,  group);	  optionGroups.put(option,    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
162	[BUG]  [BUGGY]  options.put(group,  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  options.put(group,  option);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	options.put(group,  option);	  optionGroups.put(option,    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
163	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.isRequiredOpts())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.isRequiredOpts())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.isRequiredOpts())  {	  if(group.isRequired()    ||    group.isRequiredOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
164	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isRequiredOpts()  ||  shortOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isRequiredOpts()  ||  shortOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isRequiredOpts()  ||  shortOpts.contains(group))  {	  if(group.isRequired()    ||    group.isRequiredOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
165	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isRequiredOpts()  ||  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isRequiredOpts()  ||  requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isRequiredOpts()  ||  requiredOpts.contains(group))  {	  if(group.isRequired()    ||    group.isRequiredOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
166	[BUG]  [BUGGY]  if(!group.isRequired()  &&  shortOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(!group.isRequired()  &&  shortOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  &&  shortOpts.contains(group))  {	  if(!group.isRequired()    &&    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
167	[BUG]  [BUGGY]  if(!group.isRequired()  ||  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(!group.isRequired()  ||  requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  ||  requiredOpts.contains(group))  {	  if(!group.isRequired()    &&    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
168	[BUG]  [BUGGY]  for(Option  group  :  option.getOptionGroups())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  group  :  option.getOptionGroups())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  group  :  option.getOptionGroups())  {  requiredOpts.add(group);  }	  for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
169	[BUG]  [BUGGY]  if(!group.isRequired()  ||!requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(!group.isRequired()  ||!requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  ||!requiredOpts.contains(group))  {	  if(!group.isRequired()    &&!requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
170	[BUG]  [BUGGY]  if(group.isRequired()  &&!requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&!requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&!requiredOpts.contains(group))  {	  if(!group.isRequired()    &&!requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
171	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isRequired()  ||  shortOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isRequired()  ||  shortOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isRequired()  ||  shortOpts.contains(group))  {	  if(group.isRequired()    ||    group.isRequired()    ||    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
172	[BUG]  [BUGGY]  if(group.isRequired()  ||  shortOpts.isRequired()  ||  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  shortOpts.isRequired()  ||  requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  shortOpts.isRequired()  ||  requiredOpts.contains(group))  {	  if(group.isRequired()    ||    group.isRequired()    ||    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
173	[BUG]  [BUGGY]  if(requiredOpts.isRequired()  ||  group.isRequired()  ||  group.isRequired()  ||  group.contains(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.isRequired()  ||  group.isRequired()  ||  group.isRequired()  ||  group.contains(requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.isRequired()  ||  group.isRequired()  ||  group.isRequired()  ||  group.contains(requiredOpts))  {	  if(group.isRequired()    ||    group.isRequired()    ||    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
174	[BUG]  [BUGGY]  if(group.getOptions()  ==  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()  ==  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()  ==  null)  {	  if(group.getOptions()    >    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
175	[BUG]  [BUGGY]  if(group.getOptions()  >=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()  >=  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()  >=  null)  {	  if(group.getOptions()    >    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
176	[BUG]  [BUGGY]  if(group.getOptions()!=  null  &&  shortOpts.size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()!=  null  &&  shortOpts.size()  >  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null  &&  shortOpts.size()  >  0)  {	  if(group.getOptions()!=    null    &&    requiredOpts.size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
177	[BUG]  [BUGGY]  if(group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {	  if(group.getOptions()!=    null    &&    requiredOpts.size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
178	[BUG]  [BUGGY]  if(group.getOptions()!=  null  ||  requiredOpts.size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()!=  null  ||  requiredOpts.size()  >  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null  ||  requiredOpts.size()  >  0)  {	  if(group.getOptions()!=    null    &&    requiredOpts.size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
179	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.getOptions())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.getOptions())  {	  if(group.isRequired()    ||    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
180	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.getOptions().contains(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.getOptions().contains(requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.getOptions().contains(requiredOpts))  {	  if(group.isRequired()    ||    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
181	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.getOptions().size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.getOptions().size()  >  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.getOptions().size()  >  0)  {	  if(group.isRequired()    ||    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
182	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  shortOpts);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =  option.getOptionGroup(group,  shortOpts);	  OptionGroup    group    =    option.getOptionGroup(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
183	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  requiredOpts);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =  option.getOptionGroup(group,  requiredOpts);	  OptionGroup    group    =    option.getOptionGroup(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
184	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  false);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =  option.getOptionGroup(group,  false);	  OptionGroup    group    =    option.getOptionGroup(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
185	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {	  if(group.isRequired()    ||    group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
186	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {	  if(group.isRequired()    ||    group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
187	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {	  if(group.isRequired()    ||    group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
188	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  ||  group.getOptions()  <  requiredOpts.size())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  ||  group.getOptions()  <  requiredOpts.size())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOptions()  ||  group.getOptions()  <  requiredOpts.size())  {	  if(group.isRequired()    ||    group.hasOptions()    ||    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
189	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  &&  group.getOptions().size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  &&  group.getOptions().size()  >  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOptions()  &&  group.getOptions().size()  >  0)  {	  if(group.isRequired()    ||    group.hasOptions()    ||    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
190	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.hasOptions()  ||  group.getOptions().size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.hasOptions()  ||  group.getOptions().size()  >  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.hasOptions()  ||  group.getOptions().size()  >  0)  {	  if(group.isRequired()    ||    group.hasOptions()    ||    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
191	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOptionGroups();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getShortOptionGroups();	  OptionGroup    shortOpts    =    group.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
192	[BUG]  [BUGGY]  if(!group.isRequired()  &&  group.getOptions().size()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(!group.isRequired()  &&  group.getOptions().size()  ==  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  &&  group.getOptions().size()  ==  0)  {	  if(!group.isRequired()    &&    group.getOptions().size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
193	[BUG]  [BUGGY]  if(!group.isRequired()  ||  group.getOptions().size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(!group.isRequired()  ||  group.getOptions().size()  >  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  ||  group.getOptions().size()  >  0)  {	  if(!group.isRequired()    &&    group.getOptions().size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
194	[BUG]  [BUGGY]  if(!group.isRequired()  &&  group.getOptions().size()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(!group.isRequired()  &&  group.getOptions().size()!=  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  &&  group.getOptions().size()!=  0)  {	  if(!group.isRequired()    &&    group.getOptions().size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
195	[BUG]  [BUGGY]  if(group.getOptions().size()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().size()  ==  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().size()  ==  0)  {	  if(requiredOpts.size()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
196	[BUG]  [BUGGY]  if(group.getOptions()  ==  null  ||  requiredOpts.size()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()  ==  null  ||  requiredOpts.size()  ==  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()  ==  null  ||  requiredOpts.size()  ==  0)  {	  if(requiredOpts.size()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
197	[BUG]  [BUGGY]  if(group.getOptions().size()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().size()!=  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().size()!=  0)  {	  if(group.getOptions().size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
198	[BUG]  [BUGGY]  if(group.getOptions().size()  >=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().size()  >=  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().size()  >=  0)  {	  if(group.getOptions().size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
199	[BUG]  [BUGGY]  if(group.getOptions().size()  >  0  ||  group.getOptions().size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().size()  >  0  ||  group.getOptions().size()  >  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().size()  >  0  ||  group.getOptions().size()  >  0)  {	  if(group.getOptions().size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
200	[BUG]  [BUGGY]  if(requiredOpts.contains(group)&&  group.getOptions()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)&&  group.getOptions()!=  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)&&  group.getOptions()!=  null)  {	  if(requiredOpts.contains(group)||    group.getOptions()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
201	[BUG]  [BUGGY]  if(group.getOptions()!=  null  ||  requiredOpts.contains(group)||  group.getOptions()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()!=  null  ||  requiredOpts.contains(group)||  group.getOptions()!=  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null  ||  requiredOpts.contains(group)||  group.getOptions()!=  null)  {	  if(requiredOpts.contains(group)||    group.getOptions()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
202	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  group.getOptions()  ==  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)||  group.getOptions()  ==  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  group.getOptions()  ==  null)  {	  if(requiredOpts.contains(group)||    group.getOptions()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
203	[BUG]  [BUGGY]  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group,  false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group,  false);  }	  if(group.getOptions()!=    null)    {    for(Option    group    :    group.getOptionGroups())    {    requiredOpts.add(group,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
204	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.optionGroups.get(group  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)this.optionGroups.get(group  -  1);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)this.optionGroups.get(group  -  1);	  OptionGroup    group    =(OptionGroup)this.optionGroups.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
205	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.optionGroups.get(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)this.optionGroups.get(group,  shortOpts);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)this.optionGroups.get(group,  shortOpts);	  OptionGroup    group    =(OptionGroup)this.optionGroups.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
206	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.optionGroups.get(group,  this.longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)this.optionGroups.get(group,  this.longOpts);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)this.optionGroups.get(group,  this.longOpts);	  OptionGroup    group    =(OptionGroup)this.optionGroups.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
207	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  longOpts.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  List  <  Option>  shortOpts  =  longOpts.getLongOpts();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  longOpts.getLongOpts();	  List    <    Option>    shortOpts    =    group.getLongOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
208	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  group.getLongOpts(),  longOpts);	  List    <    Option>    shortOpts    =    group.getLongOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
209	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  longOpts.getShortOpts(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  List  <  Option>  shortOpts  =  longOpts.getShortOpts(),  group);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  longOpts.getShortOpts(),  group);	  List    <    Option>    shortOpts    =    group.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
210	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts,  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts,  optionGroups);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts,  optionGroups);	  List    <    Option>    shortOpts    =    group.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
211	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  this.longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  this.longOpts);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(),  this.longOpts);	  List    <    Option>    shortOpts    =    group.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
212	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  options);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  options);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(),  options);	  List    <    Option>    shortOpts    =    group.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
213	[BUG]  [BUGGY]  for(Option  group  :  this.longOpts.getOptionGroups())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  group  :  this.longOpts.getOptionGroups())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  group  :  this.longOpts.getOptionGroups())  {  requiredOpts.add(group);  }	  for(Option    group    :    group.getOptionGroups())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
214	[BUG]  [BUGGY]  while(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  while(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	while(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
215	[BUG]  [BUGGY]  Option  group  =(OptionGroup)requiredOpts.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(OptionGroup)requiredOpts.clone();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(OptionGroup)requiredOpts.clone();	  Option    group    =(OptionGroup)group.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
216	[BUG]  [BUGGY]  Option  group  =(OptionGroup)super.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(OptionGroup)super.clone();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(OptionGroup)super.clone();	  Option    group    =(OptionGroup)group.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
217	[BUG]  [BUGGY]  For(Option  group  :  option.getOptionGroups())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  For(Option  group  :  option.getOptionGroups())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  group  :  option.getOptionGroups())  {  requiredOpts.add(group);  }	  For(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
218	[BUG]  [BUGGY]  For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(group);  }	  For(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
219	[BUG]  [BUGGY]  group  =  group.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  group  =  group.getOptionGroups();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	group  =  group.getOptionGroups();	  group    =    group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
220	[BUG]  [BUGGY]  group  =  group.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  group  =  group.getOptionGroup();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	group  =  group.getOptionGroup();	  group    =    group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
221	[BUG]  [BUGGY]  group  =(OptionGroup)group.getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  group  =(OptionGroup)group.getOptions();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	group  =(OptionGroup)group.getOptions();	  group    =    group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
222	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)group.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)group.getLongOpts();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)group.getLongOpts();	  OptionGroup    group    =(OptionGroup)group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
223	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)group.getLargerOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)group.getLargerOpts();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)group.getLargerOpts();	  OptionGroup    group    =(OptionGroup)group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
224	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  group);  }	  for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
225	[BUG]  [BUGGY]  if(group.getOptions().contains(requiredOpts)||  group.getOptions().contains(type))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().contains(requiredOpts)||  group.getOptions().contains(type))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().contains(requiredOpts)||  group.getOptions().contains(type))  {	  if(group.getOptions().contains(requiredOpts))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
226	[BUG]  [BUGGY]  if(group.getOptions().contains(optionGroup))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().contains(optionGroup))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().contains(optionGroup))  {	  if(group.getOptions().contains(requiredOpts))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
227	[BUG]  [BUGGY]  if(group.getOptions().contains(option))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().contains(option))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().contains(option))  {	  if(group.getOptions().contains(requiredOpts))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
228	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isRequired()  ||  ShortOpts.contains(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isRequired()  ||  ShortOpts.contains(requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isRequired()  ||  ShortOpts.contains(requiredOpts))  {	  if(group.isRequired()    ||    group.isRequired()    ||    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
229	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isRequired()  ||  selectedOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isRequired()  ||  selectedOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isRequired()  ||  selectedOpts.contains(group))  {	  if(group.isRequired()    ||    group.isRequired()    ||    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
230	[BUG]  [BUGGY]  if(group  ==  null  ||  group.getOptions()  >  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group  ==  null  ||  group.getOptions()  >  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group  ==  null  ||  group.getOptions()  >  null)  {	  if(group.getOptions()    >    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
231	[BUG]  [BUGGY]  if(group.getOptionGroups()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptionGroups()!=  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptionGroups()!=  null)  {	  if(group.getOptions()    >    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
232	[BUG]  [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  false);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
233	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isCollection())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isCollection())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isCollection())  {	  if(group.isRequired()    ||    group.isSupported())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
234	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isTransient())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isTransient())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isTransient())  {	  if(group.isRequired()    ||    group.isSupported())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
235	[BUG]  [BUGGY]  while(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  while(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	while(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }	  while(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
236	[BUG]  [BUGGY]  if(requiredOpts!=  null  &&  group.getOptions().contains(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts!=  null  &&  group.getOptions().contains(requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts!=  null  &&  group.getOptions().contains(requiredOpts))  {	  if(requiredOpts!=    null    &&    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
237	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts(true);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  group.getLongOpts(true);	  List    <    Option>    shortOpts    =    group.getLongOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
238	[BUG]  [BUGGY]  if(group.size()  >=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.size()  >=  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.size()  >=  0)  {	  if(group.size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
239	[BUG]  [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  true);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  true);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
240	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  true);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  true);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
241	[BUG]  [BUGGY]  if(group.isOption())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isOption())  {  requiredOpts.add(null);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isOption())  {  requiredOpts.add(null);  }	  if(group.isOption())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
242	[BUG]  [BUGGY]  if(group.isOption())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isOption())  {  requiredOpts.add(true);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isOption())  {  requiredOpts.add(true);  }	  if(group.isOption())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
243	[BUG]  [BUGGY]  ArrayList  <  Option>  shortOpts  =  group.getShortOpts(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  ArrayList  <  Option>  shortOpts  =  group.getShortOpts(true);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	ArrayList  <  Option>  shortOpts  =  group.getShortOpts(true);	  List    <    Option>    shortOpts    =    group.getShortOpts(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
244	[BUG]  [BUGGY]  Option  group  =(OptionGroup)this.groups.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(OptionGroup)this.groups.clone();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(OptionGroup)this.groups.clone();	  Option    group    =(OptionGroup)group.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
245	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(true);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getShortOpts(true);	  OptionGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
246	[BUG]  [BUGGY]  if(requiredOpts.contains(group)&&  shortOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)&&  shortOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)&&  shortOpts.contains(group))  {	  if(requiredOpts.contains(group)||    shortOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
247	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOpts()  ||  group.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.hasOpts()  ||  group.getOptions())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOpts()  ||  group.getOptions())  {	  if(group.isRequired()    ||    group.hasOptions()    ||    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
248	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.hasOptions()  ||  group.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  &&  group.hasOptions()  ||  group.getOptions())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.hasOptions()  ||  group.getOptions())  {	  if(group.isRequired()    ||    group.hasOptions()    ||    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
249	[BUG]  [BUGGY]  For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
250	[BUG]  [BUGGY]  for(Option  group  :  groups.getOptionGroups())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  group  :  groups.getOptionGroups())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  group  :  groups.getOptionGroups())  {  requiredOpts.add(group);  }	  for(Option    group    :    group.getOptionGroups())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
251	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts!=  null)  {  requiredOpts.add(false);  }	  requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
252	[BUG]  [BUGGY]  if(requiredOpts  ==  null)  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts  ==  null)  {  requiredOpts.add(false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts  ==  null)  {  requiredOpts.add(false);  }	  requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
253	[BUG]  [BUGGY]  if(group.getOptions()!=  null  &&!group.isRequired()  &&  group.getOptions().size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()!=  null  &&!group.isRequired()  &&  group.getOptions().size()  >  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null  &&!group.isRequired()  &&  group.getOptions().size()  >  0)  {	  if(!group.isRequired()    &&    group.getOptions().size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
254	[BUG]  [BUGGY]  if(group.getOptions()  ==  null  ||  group.getOptions()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()  ==  null  ||  group.getOptions()  >  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()  ==  null  ||  group.getOptions()  >  0)  {	  if(group.getOptions()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
255	[BUG]  [BUGGY]  if(group!=  null)  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group!=  null)  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group!=  null)  {  requiredOpts.add(group);  }	  requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
256	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isOptional())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isOptional())  {  requiredOpts.add(false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isOptional())  {  requiredOpts.add(false);  }	  if(group.isRequired()    ||    group.isOptional())    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
257	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isShortOpts())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isShortOpts())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isShortOpts())  {	  if(group.isRequired()    ||    group.isRequiredOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
258	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isOptionalOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isOptionalOpt())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isOptionalOpt())  {	  if(group.isRequired()    ||    group.isRequiredOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
259	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(true);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(true);  }	  for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
260	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  group.isRequired()  &&  group.hasOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)||  group.isRequired()  &&  group.hasOptions())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  group.isRequired()  &&  group.hasOptions())  {	  if(group.isRequired()    &&    group.hasOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
261	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroup(this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroup(this);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getOptionGroup(this);	  OptionGroup    shortOpts    =    group.getOptionGroup(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
262	[BUG]  [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group,  true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group,  true);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null)  {  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group,  true);  }	  if(group.getOptions()!=    null)    {    for(Option    group    :    group.getOptionGroups())    {    requiredOpts.add(group,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
263	[BUG]  [BUGGY]  if(group  ==  null  ||!group.isRequired()  ||  group.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group  ==  null  ||!group.isRequired()  ||  group.isRequired())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group  ==  null  ||!group.isRequired()  ||  group.isRequired())  {	  if(!group.isRequired()    ||    group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
264	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.groups.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)this.groups.clone();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)this.groups.clone();	  OptionGroup    group    =(OptionGroup)group.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
265	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.requiredOpts.contains(type))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.requiredOpts.contains(type))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.requiredOpts.contains(type))  {	  if(group.isRequired()    ||    group.requiredOpts.contains(requiredOpts))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
266	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.requiredOpts.contains(required))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.requiredOpts.contains(required))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.requiredOpts.contains(required))  {	  if(group.isRequired()    ||    group.requiredOpts.contains(requiredOpts))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
267	[BUG]  [BUGGY]  if(group.getOptions().contains(required)||  group.getOptions().contains(optionGroup))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().contains(required)||  group.getOptions().contains(optionGroup))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().contains(required)||  group.getOptions().contains(optionGroup))  {	  if(requiredOpts.contains(group)||    group.getOptions().contains(optionGroup))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
268	[BUG]  [BUGGY]  Option  group  =(OptionGroup)this.optionGroups.get(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(OptionGroup)this.optionGroups.get(group);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(OptionGroup)this.optionGroups.get(group);	  Option    group    =(Option)this.optionGroups.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
269	[BUG]  [BUGGY]  Option  group  =(Option)this.optionGroups.get(group,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(Option)this.optionGroups.get(group,  0);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(Option)this.optionGroups.get(group,  0);	  Option    group    =(Option)this.optionGroups.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
270	[BUG]  [BUGGY]  Option  group  =(Option)this.optionGroups.get(group,  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(Option)this.optionGroups.get(group,  true);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(Option)this.optionGroups.get(group,  true);	  Option    group    =(Option)this.optionGroups.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
271	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  group);  }	  for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
272	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)group.getOptionGroups().clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)group.getOptionGroups().clone();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)group.getOptionGroups().clone();	  OptionGroup    group    =    group.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
273	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  ||  longOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  ||  longOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOptions()  ||  longOpts.contains(group))  {	  if(group.isRequired()    ||    group.hasOptions()    ||    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
274	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.getOptionGroups())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.getOptionGroups())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.getOptionGroups())  {	  if(group.isRequired()    ||    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
275	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts(group);  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  option.getShortOpts(group);	  OptionGroup    shortOpts    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
276	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getLargerOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  group.getLargerOptionGroups();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getLargerOptionGroups();	  OptionGroup    shortOpts    =    group.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
277	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(true);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(true);  }	  if(group.isRequired()    ||    group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
278	[BUG]  [BUGGY]  if(group.getOptions().contains(group)||  group.getOptions().contains(requiredOpts.size()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().contains(group)||  group.getOptions().contains(requiredOpts.size()))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().contains(group)||  group.getOptions().contains(requiredOpts.size()))  {	  if(requiredOpts.contains(group)||    group.getOptions().contains(requiredOpts.size()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
279	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  group.getOptions().contains(group.size()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)||  group.getOptions().contains(group.size()))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  group.getOptions().contains(group.size()))  {	  if(requiredOpts.contains(group)||    group.getOptions().contains(requiredOpts.size()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
280	[BUG]  [BUGGY]  optionGroups.add(group,  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  optionGroups.add(group,  true);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	optionGroups.add(group,  true);	  optionGroups.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
281	[BUG]  [BUGGY]  if(group.isRequired()  ||  shortOpts.contains(group)||  longOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  shortOpts.contains(group)||  longOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  shortOpts.contains(group)||  longOpts.contains(group))  {	  if(group.isRequired()    ||    shortOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
282	[BUG]  [BUGGY]  for(Option  group  :  groups.getOptions())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  group  :  groups.getOptions())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  group  :  groups.getOptions())  {  requiredOpts.add(group);  }	  for(Option    group    :    group.getOptions())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
283	[BUG]  [BUGGY]  while(group.getOptionGroups()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  while(group.getOptionGroups()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	while(group.getOptionGroups()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  while(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
284	[BUG]  [BUGGY]  While(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  While(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	While(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  while(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
285	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  shortOpts,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  shortOpts,  false);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(),  shortOpts,  false);	  List    <    Option>    shortOpts    =    group.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
286	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts,  false);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts,  false);	  List    <    Option>    shortOpts    =    group.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
287	[BUG]  [BUGGY]  optionGroup  group  =(OptionGroup)this.optionGroups.get(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  optionGroup  group  =(OptionGroup)this.optionGroups.get(group);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	optionGroup  group  =(OptionGroup)this.optionGroups.get(group);	  OptionGroup    group    =(OptionGroup)this.optionGroups.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
288	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  true);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =  option.getOptionGroup(group,  true);	  OptionGroup    group    =    option.getOptionGroup(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
289	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  this);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =  option.getOptionGroup(group,  this);	  OptionGroup    group    =    option.getOptionGroup(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
290	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {	  if(group.isRequired()    ||    group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
291	[BUG]  [BUGGY]  Option  group  =(Option)group.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(Option)group.getOptionGroups();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(Option)group.getOptionGroups();	  Option    group    =(Option)group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
292	[BUG]  [BUGGY]  Option  group  =(OptionGroup)group.getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(OptionGroup)group.getOptions();  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(OptionGroup)group.getOptions();	  Option    group    =(Option)group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
293	[BUG]  [BUGGY]  if(group!=  null)  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group!=  null)  {  requiredOpts.add(null);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group!=  null)  {  requiredOpts.add(null);  }	  requiredOpts.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
294	[BUG]  [BUGGY]  if(group!=  null)  {  requiredOpts.add(null);  }  else  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group!=  null)  {  requiredOpts.add(null);  }  else  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group!=  null)  {  requiredOpts.add(null);  }  else  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  requiredOpts.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
295	[BUG]  [BUGGY]  if(group!=  null)  {  requiredOpts.add(null);  }  else  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group!=  null)  {  requiredOpts.add(null);  }  else  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group!=  null)  {  requiredOpts.add(null);  }  else  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	  requiredOpts.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
296	[BUG]  [BUGGY]  if(group.getOptions()!=  null)  {  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()!=  null)  {  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts);  }  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null)  {  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts);  }	  OptionGroup    shortOpts    =    group.getShortOpts();    requiredOpts.add(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
297	[BUG]  [BUGGY]  For(Option  group  :  groups.getOptions())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  For(Option  group  :  groups.getOptions())  {  requiredOpts.add(group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  group  :  groups.getOptions())  {  requiredOpts.add(group);  }	  For(Option    group    :    group.getOptions())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
298	[BUG]  [BUGGY]  requiredOpts.add(option,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  requiredOpts.add(option,  group);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	requiredOpts.add(option,  group);	  requiredOpts.add(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
299	[BUG]  [BUGGY]  if(requiredOpts!=  null  &&!group.isRequired()  &&!requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts!=  null  &&!group.isRequired()  &&!requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts!=  null  &&!group.isRequired()  &&!requiredOpts.contains(group))  {	  if(!group.isRequired()    &&!requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
300	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.getOptionGroups()  ==  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.getOptionGroups()  ==  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.getOptionGroups()  ==  null)  {	  if(group.isRequired()    ||    group.getOptionGroups()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
301	[BUG]  [BUGGY]  if(group.isRequired())  {  requiredOpts.add(group);  }  else  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired())  {  requiredOpts.add(group);  }  else  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired())  {  requiredOpts.add(group);  }  else  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
302	[BUG]  [BUGGY]  if(requiredOpts.contains(group)&&  group.hasOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)&&  group.hasOptions())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)&&  group.hasOptions())  {	  if(group.isRequired()    &&    group.hasOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
303	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroup(group.getShortOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroup(group.getShortOpts());  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getOptionGroup(group.getShortOpts());	  OptionGroup    shortOpts    =    group.getOptionGroup(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
304	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  group.isRequired()  &&  group.getOptions()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)||  group.isRequired()  &&  group.getOptions()!=  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  group.isRequired()  &&  group.getOptions()!=  null)  {	  if(group.isRequired()    &&    group.getOptions()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
305	[BUG]  [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	while(group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	  while(group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
306	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  group.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)||  group.isRequired())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  group.isRequired())  {	  if(group.isRequired()    &&    group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
307	[BUG]  [BUGGY]  if(requiredOpts.contains(group)&&  group.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)&&  group.isRequired())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)&&  group.isRequired())  {	  if(group.isRequired()    &&    group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
308	[BUG]  [BUGGY]  if(!group.isRequired()  ||  group.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(!group.isRequired()  ||  group.getOptions())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  ||  group.getOptions())  {	  if(group.isRequired()    ||    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
309	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(shortOpts);  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(shortOpts);	  OptionGroup    shortOpts    =    group.getShortOpts();    requiredOpts.add(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
310	[BUG]  [BUGGY]  group  =  group.getOptionGroup(this);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  group  =  group.getOptionGroup(this);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	group  =  group.getOptionGroup(this);	  group    =    group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
311	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  group.getOptionGroups()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)||  group.getOptionGroups()!=  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  group.getOptionGroups()!=  null)  {	  if(requiredOpts.contains(group)||    group.getOptions()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
312	[BUG]  [BUGGY]  if(group.getOptions()!=  null  &&  requiredOpts.size()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()!=  null  &&  requiredOpts.size()  ==  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null  &&  requiredOpts.size()  ==  0)  {	  if(requiredOpts.size()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
313	[BUG]  [BUGGY]  if(requiredOpts!=  null  &&  group.getRequiredOpts().contains(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts!=  null  &&  group.getRequiredOpts().contains(requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts!=  null  &&  group.getRequiredOpts().contains(requiredOpts))  {	  if(requiredOpts!=    null    &&    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
314	[BUG]  [BUGGY]  if(requiredOpts!=  null  &&  group.hasOption(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts!=  null  &&  group.hasOption(requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts!=  null  &&  group.hasOption(requiredOpts))  {	  if(requiredOpts!=    null    &&    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
315	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOption(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.hasOption(requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOption(requiredOpts))  {	  if(group.isRequired()    ||    group.hasOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
316	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isOptional())  {  requiredOpts.add(null,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isOptional())  {  requiredOpts.add(null,  group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isOptional())  {  requiredOpts.add(null,  group);  }	  if(group.isRequired()    ||    group.isOptional())    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
317	[BUG]  [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  group);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option,  group);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
318	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(null);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts!=  null)  {  requiredOpts.add(null);  }	  requiredOpts.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
319	[BUG]  [BUGGY]  if(requiredOpts  ==  null)  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts  ==  null)  {  requiredOpts.add(null);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts  ==  null)  {  requiredOpts.add(null);  }	  requiredOpts.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
320	[BUG]  [BUGGY]  While(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  While(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	While(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	  while(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
321	[BUG]  [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().contains(option))  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().contains(option))  {  requiredOpts.add(option);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	while(group.getOptions()!=  null  &&  group.getOptions().contains(option))  {  requiredOpts.add(option);  }	  while(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
322	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  ||  selectedOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  ||  selectedOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOptions()  ||  selectedOpts.contains(group))  {	  if(group.isRequired()    ||    group.hasOptions()    ||    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
323	[BUG]  [BUGGY]  Option  group  =(Option)this.optionGroups.get(0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(Option)this.optionGroups.get(0);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(Option)this.optionGroups.get(0);	  Option    group    =(Option)this.optionGroups.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
324	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  requiredOpts.add(shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  requiredOpts.add(shortOpts);  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  option.getShortOpts();  requiredOpts.add(shortOpts);	  OptionGroup    shortOpts    =    option.getShortOpts();    requiredOpts.add(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
325	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOptionGroups()  ||  group.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.hasOptionGroups()  ||  group.getOptions())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOptionGroups()  ||  group.getOptions())  {	  if(group.isRequired()    ||    group.hasOptionGroups())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
326	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  group.getOptions()  >  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)||  group.getOptions()  >  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  group.getOptions()  >  null)  {	  if(group.getOptions()    >    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
327	[BUG]  [BUGGY]  if(requiredOpts  ==  null  ||  group.getOptions()  >  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts  ==  null  ||  group.getOptions()  >  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts  ==  null  ||  group.getOptions()  >  null)  {	  if(group.getOptions()    >    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
328	[BUG]  [BUGGY]  if(group.getOptions().contains(requiredOpts)&&  group.getOptions().contains(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().contains(requiredOpts)&&  group.getOptions().contains(requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().contains(requiredOpts)&&  group.getOptions().contains(requiredOpts))  {	  if(group.getOptions().contains(requiredOpts))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
329	[BUG]  [BUGGY]  if(group.getOptions().contains(requiredOpts)||  groups.contains(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().contains(requiredOpts)||  groups.contains(requiredOpts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().contains(requiredOpts)||  groups.contains(requiredOpts))  {	  if(group.getOptions().contains(requiredOpts))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
330	[BUG]  [BUGGY]  if(group.getOptions().contains(requiredOpts)||  group.getOptions().contains(requiredOPts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions().contains(requiredOpts)||  group.getOptions().contains(requiredOPts))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().contains(requiredOpts)||  group.getOptions().contains(requiredOPts))  {	  if(group.getOptions().contains(requiredOpts))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
331	[BUG]  [BUGGY]  if(!group.isRequired()  &&  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(!group.isRequired()  &&  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  &&  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {	  if(!group.isRequired()    &&    group.getOptions()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
332	[BUG]  [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	while(group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  while(group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
333	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)super.optionGroups.get(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)super.optionGroups.get(group);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)super.optionGroups.get(group);	  OptionGroup    group    =(OptionGroup)this.optionGroups.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
334	[BUG]  [BUGGY]  if(group.getOptions()!=  null  &&  group.getShortOpts().size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()!=  null  &&  group.getShortOpts().size()  >  0)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null  &&  group.getShortOpts().size()  >  0)  {	  if(group.getOptions()!=    null    &&    requiredOpts.size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
335	[BUG]  [BUGGY]  for(Option  group  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  group  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  group  :  group.getOptions())  {  requiredOpts.add(false);  }	  for(Option    option    :    group.getOptions())    {    requiredOpts.add(true);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
336	[BUG]  [BUGGY]  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group,  true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group,  true);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group,  true);  }	  if(group.getOptions()!=    null)    {    for(Option    group    :    group.getOptionGroups())    {    requiredOpts.add(group,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
337	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  optionGroups);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(),  optionGroups);	  List    <    Option>    shortOpts    =    group.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
338	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(group,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(group,  false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(group,  false);  }	  for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
339	[BUG]  [BUGGY]  Option  group  =(Option)super.optionGroups.get(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  Option  group  =(Option)super.optionGroups.get(group);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(Option)super.optionGroups.get(group);	  Option    group    =(Option)this.optionGroups.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
340	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  group.getOptions().contains(group.getOptions()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(requiredOpts.contains(group)||  group.getOptions().contains(group.getOptions()))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  group.getOptions().contains(group.getOptions()))  {	  if(requiredOpts.contains(group)||    group.getOptions().contains(requiredOpts.size()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
341	[BUG]  [BUGGY]  if(group.size()  >  0  ||  group.getOptions()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.size()  >  0  ||  group.getOptions()!=  null)  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.size()  >  0  ||  group.getOptions()!=  null)  {	  if(group.size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
342	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isCollection()  ||  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isCollection()  ||  requiredOpts.contains(group))  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isCollection()  ||  requiredOpts.contains(group))  {	  if(group.isRequired()    ||    group.isRequired()    ||    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
343	[BUG]  [BUGGY]  OptionGroup  group  =  group.getOptionGroup(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =  group.getOptionGroup(group);  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =  group.getOptionGroup(group);	  OptionGroup    group    =    group.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
344	[BUG]  [BUGGY]  OptionGroup  group  =  group.getOptionGroup(group.getName());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  OptionGroup  group  =  group.getOptionGroup(group.getName());  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =  group.getOptionGroup(group.getName());	  OptionGroup    group    =    group.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
345	[BUG]  [BUGGY]  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group,  null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group,  null);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group,  null);  }	  for(Option    group    :    group.getOptionGroups())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
346	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isRequiredOpts()  ||  group.isShortOpts())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isRequiredOpts()  ||  group.isShortOpts())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isRequiredOpts()  ||  group.isShortOpts())  {	  if(group.isRequired()    ||    group.isRequiredOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
347	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.getOptions()  ||  group.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.getOptions()  ||  group.getOptions())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.getOptions()  ||  group.getOptions())  {	  if(group.isRequired()    ||    group.hasOptions()    ||    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
348	[BUG]  [BUGGY]  if(!group.isRequired()  ||  group.hasOptions()  ||  group.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(!group.isRequired()  ||  group.hasOptions()  ||  group.getOptions())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  ||  group.hasOptions()  ||  group.getOptions())  {	  if(group.isRequired()    ||    group.hasOptions()    ||    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
349	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  ||  group.getOptionGroups())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  ||  group.getOptionGroups())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOptions()  ||  group.getOptionGroups())  {	  if(group.isRequired()    ||    group.hasOptions()    ||    group.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
350	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isSupported()  ||  group.isPrivate())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isSupported()  ||  group.isPrivate())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isSupported()  ||  group.isPrivate())  {	  if(group.isRequired()    ||    group.isSupported())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
351	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isSupported()  ||  group.isOptional())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.isRequired()  ||  group.isSupported()  ||  group.isOptional())  {  [BUGGY]      {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isSupported()  ||  group.isOptional())  {	  if(group.isRequired()    ||    group.isSupported())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
352	[BUG]  [BUGGY]  if(optionGroups.contains(group))  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(optionGroups.contains(group))  {  requiredOpts.add(option);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(optionGroups.contains(group))  {  requiredOpts.add(option);  }	  requiredOpts.add(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
353	[BUG]  [BUGGY]  if(group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {      [BUGGY]  if(group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [BUGGY]      if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }	  if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option,    false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
