bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
2	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
3	[BUG]  [BUGGY]  while(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  while(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	while(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
4	[BUG]  [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	while(group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
5	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  &&  group.isRequired())  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.isRequired())  {	  if(group.isRequired()    ||    group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
6	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isRequired()  ||  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.isRequired()  ||  requiredOpts.contains(group))  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isRequired()  ||  requiredOpts.contains(group))  {	  if(group.isRequired()    ||    group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
7	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isRequiredOpts())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.isRequiredOpts())  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isRequiredOpts())  {	  if(group.isRequired()    ||    group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
8	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.hasOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  &&  group.hasOptions())  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.hasOptions())  {	  if(group.isRequired()    ||    group.hasOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
9	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  ||  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  ||  requiredOpts.contains(group))  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOptions()  ||  requiredOpts.contains(group))  {	  if(group.isRequired()    ||    group.hasOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
10	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOptionGroups())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.hasOptionGroups())  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOptionGroups())  {	  if(group.isRequired()    ||    group.hasOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
11	[BUG]  [BUGGY]  if(group.isRequired()  ||  shortOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  shortOpts.contains(group))  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  shortOpts.contains(group))  {	  if(group.isRequired()    ||    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
12	[BUG]  [BUGGY]  if(group.isRequired()  &&  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  &&  requiredOpts.contains(group))  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  requiredOpts.contains(group))  {	  if(group.isRequired()    ||    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
13	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.requiredOpts.contains(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.requiredOpts.contains(requiredOpts))  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.requiredOpts.contains(requiredOpts))  {	  if(group.isRequired()    ||    requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
14	[BUG]  [BUGGY]  requiredOpts.add(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  requiredOpts.add(group);  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	requiredOpts.add(group);	      if(group.isRequired())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
15	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(group);  }	      if(group.isRequired())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
16	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isOptional())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.isOptional())  {  requiredOpts.add(group);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isOptional())  {  requiredOpts.add(group);  }	      if(group.isRequired())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
17	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(null);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(null);  }	      if(group.isRequired())    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
18	[BUG]  [BUGGY]  requiredOpts.add(null);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  requiredOpts.add(null);  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	requiredOpts.add(null);	      if(group.isRequired())    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
19	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(requiredOpts.contains(group)||  requiredOpts.contains(group))  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  requiredOpts.contains(group))  {	  if(requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
20	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  shortOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(requiredOpts.contains(group)||  shortOpts.contains(group))  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  shortOpts.contains(group))  {	  if(requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
21	[BUG]  [BUGGY]  if(requiredOpts!=  null  &&  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(requiredOpts!=  null  &&  requiredOpts.contains(group))  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts!=  null  &&  requiredOpts.contains(group))  {	  if(requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
22	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  group.getOptions().contains(requiredOpts.size()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(requiredOpts.contains(group)||  group.getOptions().contains(requiredOpts.size()))  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  group.getOptions().contains(requiredOpts.size()))  {	  if(requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
23	[BUG]  [BUGGY]  if(!group.isRequired()  &&!requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(!group.isRequired()  &&!requiredOpts.contains(group))  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  &&!requiredOpts.contains(group))  {	  if(!group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
24	[BUG]  [BUGGY]  if(!group.isRequired()  &&  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(!group.isRequired()  &&  requiredOpts.contains(group))  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  &&  requiredOpts.contains(group))  {	  if(!group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
25	[BUG]  [BUGGY]  if(group.isRequired()  ||!group.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||!group.isRequired())  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||!group.isRequired())  {	  if(!group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
26	[BUG]  [BUGGY]  requiredOpts.add(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  requiredOpts.add(false);  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	requiredOpts.add(false);	      if(group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
27	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(false);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(false);  }	      if(group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
28	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.getOptions()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  &&  group.getOptions()!=  null)  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  &&  group.getOptions()!=  null)  {	  if(group.isRequired()    ||    group.getOptions()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
29	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.getOptions()  ==  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.getOptions()  ==  null)  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.getOptions()  ==  null)  {	  if(group.isRequired()    ||    group.getOptions()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
30	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.getOpts()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.getOpts()!=  null)  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.getOpts()!=  null)  {	  if(group.isRequired()    ||    group.getOptions()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
31	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  List  <  Option>  shortOpts  =  group.getLongOpts();  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  group.getLongOpts();	      List    <    Option>    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
32	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts);  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(),  longOpts);	      List    <    Option>    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
33	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  longOpts.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  List  <  Option>  shortOpts  =  longOpts.getShortOpts();  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  longOpts.getShortOpts();	      List    <    Option>    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
34	[BUG]  [BUGGY]  Option  group  =(Option)this.optionGroups.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  Option  group  =(Option)this.optionGroups.clone();  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(Option)this.optionGroups.clone();	      Option    group    =(Option)group.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
35	[BUG]  [BUGGY]  Option  group  =(Option)group.clone()  :  null;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  Option  group  =(Option)group.clone()  :  null;  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(Option)group.clone()  :  null;	      Option    group    =(Option)group.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
36	[BUG]  [BUGGY]  Option  group  =(OptionGroup)group.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  Option  group  =(OptionGroup)group.clone();  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(OptionGroup)group.clone();	      Option    group    =(Option)group.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
37	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	      if(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
38	[BUG]  [BUGGY]  For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	      if(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
39	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	      if(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
40	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	      if(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
41	[BUG]  [BUGGY]  while(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  while(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	while(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
42	[BUG]  [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  while(group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	while(group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
43	[BUG]  [BUGGY]  if(group.size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.size()  >  0)  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.size()  >  0)  {	  if(requiredOpts.size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
44	[BUG]  [BUGGY]  if(group.getOptions().size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.getOptions().size()  >  0)  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().size()  >  0)  {	  if(requiredOpts.size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
45	[BUG]  [BUGGY]  if(group.getOptions()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.getOptions()  >  0)  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()  >  0)  {	  if(requiredOpts.size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
46	[BUG]  [BUGGY]  if(requiredOpts.size()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(requiredOpts.size()  ==  0)  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.size()  ==  0)  {	  if(requiredOpts.size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
47	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.optionGroups.get(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  OptionGroup  group  =(OptionGroup)this.optionGroups.get(group);  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)this.optionGroups.get(group);	      OptionGroup    group    =(OptionGroup)group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
48	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)group.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  OptionGroup  group  =(OptionGroup)group.getShortOpts();  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)group.getShortOpts();	      OptionGroup    group    =(OptionGroup)group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
49	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)group.getOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  OptionGroup  group  =(OptionGroup)group.getOpts();  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)group.getOpts();	      OptionGroup    group    =(OptionGroup)group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
50	[BUG]  [BUGGY]  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group);  }	      if(group.getOptions()!=    null)    {    for(Option    group    :    group.getOptionGroups())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
51	[BUG]  [BUGGY]  for(Option  group  :  group.getOptions())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  for(Option  group  :  group.getOptions())  {  requiredOpts.add(group);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  group  :  group.getOptions())  {  requiredOpts.add(group);  }	      if(group.getOptions()!=    null)    {    for(Option    group    :    group.getOptionGroups())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
52	[BUG]  [BUGGY]  For(Option  group  :  group.getOptions())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  For(Option  group  :  group.getOptions())  {  requiredOpts.add(group);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	For(Option  group  :  group.getOptions())  {  requiredOpts.add(group);  }	      if(group.getOptions()!=    null)    {    for(Option    group    :    group.getOptionGroups())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
53	[BUG]  [BUGGY]  requiredOpts.add(option);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  requiredOpts.add(option);  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	requiredOpts.add(option);	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
54	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getShortOpts();	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
55	[BUG]  [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)group.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  OptionGroup  shortOpts  =(OptionGroup)group.getShortOpts();  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =(OptionGroup)group.getShortOpts();	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
56	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  option.getShortOpts();	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
57	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts);  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getShortOpts();  requiredOpts.add(longOpts);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
58	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
59	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
60	[BUG]  [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  false);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
61	[BUG]  [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
62	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.getOptionGroups()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.getOptionGroups()!=  null)  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.getOptionGroups()!=  null)  {	  if(group.isRequired()    ||    group.getOptions()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
63	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroups();  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getOptionGroups();	      if(group.isRequired())    {    for(Option    option    :    group.getOptionGroups())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
64	[BUG]  [BUGGY]  ArrayList  <  Option>  shortOpts  =  group.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  ArrayList  <  Option>  shortOpts  =  group.getShortOpts();  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	ArrayList  <  Option>  shortOpts  =  group.getShortOpts();	      List    <    Option>    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
65	[BUG]  [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  List  <  Option>  shortOpts  =  group.getShortOpts(true);  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	List  <  Option>  shortOpts  =  group.getShortOpts(true);	      List    <    Option>    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
66	[BUG]  [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group,  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group,  false);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null)  {  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group,  false);  }	      if(group.getOptions()!=    null)    {    for(Option    group    :    group.getOptionGroups())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
67	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroup(option);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  OptionGroup  shortOpts  =  group.getOptionGroup(option);  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  group.getOptionGroup(option);	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
68	[BUG]  [BUGGY]  optionGroups.add(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  optionGroups.add(group);  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	optionGroups.add(group);	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
69	[BUG]  [BUGGY]  if(group.isOption())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isOption())  {  requiredOpts.add(false);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isOption())  {  requiredOpts.add(false);  }	      if(group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
70	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.getOptions())  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.getOptions())  {	  if(group.isRequired()    ||    group.hasOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
71	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOpts())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.hasOpts())  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOpts())  {	  if(group.isRequired()    ||    group.hasOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
72	[BUG]  [BUGGY]  if(group.getOptions().contains(requiredOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.getOptions().contains(requiredOpts))  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions().contains(requiredOpts))  {	  if(requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
73	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  group.getOptions()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(requiredOpts.contains(group)||  group.getOptions()!=  null)  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  group.getOptions()!=  null)  {	  if(requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
74	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)group.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  OptionGroup  group  =(OptionGroup)group.getOptionGroups();  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)group.getOptionGroups();	      OptionGroup    group    =(OptionGroup)group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
75	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)group.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  OptionGroup  group  =(OptionGroup)group.clone();  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =(OptionGroup)group.clone();	      OptionGroup    group    =(OptionGroup)group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
76	[BUG]  [BUGGY]  Option  group  =(Option)group.getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  Option  group  =(Option)group.getOptions();  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(Option)group.getOptions();	      Option    group    =(Option)group.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
77	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  requiredOpts.add(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  requiredOpts.add(longOpts);  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  shortOpts  =  option.getShortOpts();  requiredOpts.add(longOpts);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
78	[BUG]  [BUGGY]  if(!group.isRequired()  &&  group.getOptions()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(!group.isRequired()  &&  group.getOptions()!=  null)  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  &&  group.getOptions()!=  null)  {	  if(!group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
79	[BUG]  [BUGGY]  if(group.getOptions()!=  null  &&  requiredOpts.size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.getOptions()!=  null  &&  requiredOpts.size()  >  0)  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null  &&  requiredOpts.size()  >  0)  {	  if(requiredOpts.size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
80	[BUG]  [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
81	[BUG]  [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(null);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(null);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
82	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isOptional())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.isOptional())  {  requiredOpts.add(null);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isOptional())  {  requiredOpts.add(null);  }	      if(group.isRequired())    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
83	[BUG]  [BUGGY]  if(requiredOpts.contains(group)||  group.getOptions().contains(optionGroup))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(requiredOpts.contains(group)||  group.getOptions().contains(optionGroup))  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)||  group.getOptions().contains(optionGroup))  {	  if(requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
84	[BUG]  [BUGGY]  if(requiredOpts.contains(group)&&  group.getOptions().contains(optionGroup))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(requiredOpts.contains(group)&&  group.getOptions().contains(optionGroup))  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group)&&  group.getOptions().contains(optionGroup))  {	  if(requiredOpts.contains(group))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
85	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  ||  group.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.hasOptions()  ||  group.getOptions())  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOptions()  ||  group.getOptions())  {	  if(group.isRequired()    ||    group.hasOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
86	[BUG]  [BUGGY]  optionGroups.put(option,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  optionGroups.put(option,  group);  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	optionGroups.put(option,  group);	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
87	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group);  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =  option.getOptionGroup(group);	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
88	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  OptionGroup  group  =  option.getOptionGroup();  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =  option.getOptionGroup();	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
89	[BUG]  [BUGGY]  if(group.getOptions()  >  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.getOptions()  >  null)  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.getOptions()  >  null)  {	  if(requiredOpts.size()    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
90	[BUG]  [BUGGY]  group  =  group.getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  group  =  group.getOptions();  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	group  =  group.getOptions();	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
91	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {	  if(group.isRequired()    ||    group.getOptions()!=    null)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
92	[BUG]  [BUGGY]  if(group.isOption())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isOption())  {  requiredOpts.add(group);  }  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isOption())  {  requiredOpts.add(group);  }	      if(group.isRequired())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
93	[BUG]  [BUGGY]  if(!group.isRequired()  ||  group.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(!group.isRequired()  ||  group.isRequired())  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  ||  group.isRequired())  {	  if(!group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
94	[BUG]  [BUGGY]  if(!group.isRequired()  &&  group.getOptions().size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(!group.isRequired()  &&  group.getOptions().size()  >  0)  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired()  &&  group.getOptions().size()  >  0)  {	  if(!group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
95	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isSupported())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.isSupported())  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isSupported())  {	  if(group.isRequired()    ||    group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
96	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isOptional())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  if(group.isRequired()  ||  group.isOptional())  {  [BUGGY]    {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isOptional())  {	  if(group.isRequired()    ||    group.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
97	[BUG]  [BUGGY]  OptionGroup  group  =  group.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  OptionGroup  group  =  group.getOptionGroups();  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	OptionGroup  group  =  group.getOptionGroups();	      if(group.getOptions()!=    null)    {    for(Option    group    :    group.getOptionGroups())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
98	[BUG]  [BUGGY]  Option  group  =(Option)this.optionGroups.get(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {    [BUGGY]  Option  group  =(Option)this.optionGroups.get(group);  [BUGGY]    if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	Option  group  =(Option)this.optionGroups.get(group);	      Option    group    =(Option)group.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
