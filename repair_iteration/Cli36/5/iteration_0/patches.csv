bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]  if(group.isRequired()  ||  group.isRequired())  {  [BUGGY]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.isRequired())  {	if  (group.isRequired())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
2	[BUG]  [BUGGY]  if(group.isRequired()  ||  requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]  if(group.isRequired()  ||  requiredOpts.contains(group))  {  [BUGGY]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  requiredOpts.contains(group))  {	if  (group.isRequired())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
3	[BUG]  [BUGGY]  if(!group.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]  if(!group.isRequired())  {  [BUGGY]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(!group.isRequired())  {	if  (group.isRequired())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
4	[BUG]  [BUGGY]  if(requiredOpts.size()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]  if(requiredOpts.size()  >  0)  {  [BUGGY]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.size()  >  0)  {	if  (group.isRequired())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
5	[BUG]  [BUGGY]    [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]    [BUGGY]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	  	if  (group.isRequired())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
6	[BUG]  [BUGGY]    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]  if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
7	[BUG]  [BUGGY]    if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]    if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]  if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	    if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
8	[BUG]  [BUGGY]    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]  if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
9	[BUG]  [BUGGY]    if(group.getOptions()!=  null)  {  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]    if(group.getOptions()!=  null)  {  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group);  }  [BUGGY]  if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	    if(group.getOptions()!=  null)  {  for(Option  group  :  group.getOptionGroups())  {  requiredOpts.add(group);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
10	[BUG]  [BUGGY]    if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]    if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]  if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	    if(group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
11	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.hasOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]  if(group.isRequired()  ||  group.hasOptions())  {  [BUGGY]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.hasOptions())  {	if  (group.isRequired())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
12	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.getOptions()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]  if(group.isRequired()  ||  group.getOptions()!=  null)  {  [BUGGY]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(group.isRequired()  ||  group.getOptions()!=  null)  {	if  (group.isRequired())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
13	[BUG]  [BUGGY]    if(group.isRequired())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]    if(group.isRequired())  {  requiredOpts.add(null);  }  [BUGGY]  if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	    if(group.isRequired())  {  requiredOpts.add(null);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
14	[BUG]  [BUGGY]    if(group.isRequired())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]    if(group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]  if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	    if(group.isRequired())  {  requiredOpts.add(group);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
15	[BUG]  [BUGGY]    if(group.isRequired())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]    if(group.isRequired())  {  requiredOpts.add(false);  }  [BUGGY]  if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	    if(group.isRequired())  {  requiredOpts.add(false);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
16	[BUG]  [BUGGY]    OptionGroup  group  =(OptionGroup)group.getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]    OptionGroup  group  =(OptionGroup)group.getOptions();  [BUGGY]  if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	    OptionGroup  group  =(OptionGroup)group.getOptions();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
17	[BUG]  [BUGGY]    Option  group  =(Option)group.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]    Option  group  =(Option)group.clone();  [BUGGY]  if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	    Option  group  =(Option)group.clone();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
18	[BUG]  [BUGGY]    List  <  Option>  shortOpts  =  group.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]    List  <  Option>  shortOpts  =  group.getShortOpts();  [BUGGY]  if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	    List  <  Option>  shortOpts  =  group.getShortOpts();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
19	[BUG]  [BUGGY]    if(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]    if(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]  if  (group.isRequired())  {  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	    if(group.isRequired())  {  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
20	[BUG]  [BUGGY]  if(requiredOpts.contains(group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  [BUGGY]  if(requiredOpts.contains(group))  {  [BUGGY]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	if(requiredOpts.contains(group))  {	if  (group.isRequired())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
