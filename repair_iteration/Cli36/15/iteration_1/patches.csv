bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  longOpts  =  opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  longOpts  =  opt.getLongOpt();  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  longOpts  =  opt.getLongOpt();	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    shortOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
2	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  shortOpts  =  opt.getLongOpt();  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  shortOpts  =  opt.getLongOpt();	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    shortOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
3	[BUG]  [BUGGY]  ShortOpts  longOpts  =  shortOpts.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  ShortOpts  longOpts  =  shortOpts.get(key);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	ShortOpts  longOpts  =  shortOpts.get(key);	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    shortOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
4	[BUG]  [BUGGY]  longOpts.put(key,  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  longOpts.put(key,  opt);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	longOpts.put(key,  opt);	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    shortOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
5	[BUG]  [BUGGY]  Option  shortOpts  =(Option)opt.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  shortOpts  =(Option)opt.getShortOpt();  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  shortOpts  =(Option)opt.getShortOpt();	      if(opt.hasLongOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
6	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  shortOpts  =  opt.getShortOpt();  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  shortOpts  =  opt.getShortOpt();	      if(opt.hasLongOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
7	[BUG]  [BUGGY]  Option  shortOpts  =  optionGroups.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  shortOpts  =  optionGroups.get(key);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  shortOpts  =  optionGroups.get(key);	      if(opt.hasLongOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
8	[BUG]  [BUGGY]  shortOpts.put(opt.getLongOpt(),  opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  shortOpts.put(opt.getLongOpt(),  opt.getLongOpt());  [BUGGY]    }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	shortOpts.put(opt.getLongOpt(),  opt.getLongOpt());	  longOpts.put(opt.getLongOpt(),    opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
9	[BUG]  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  longOpts.put(opt.getLongOpt(),  opt.getValue());  [BUGGY]    }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	longOpts.put(opt.getLongOpt(),  opt.getValue());	  longOpts.put(opt.getLongOpt(),    opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
10	[BUG]  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt.getUpperBound());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  longOpts.put(opt.getLongOpt(),  opt.getUpperBound());  [BUGGY]    }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	longOpts.put(opt.getLongOpt(),  opt.getUpperBound());	  longOpts.put(opt.getLongOpt(),    opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
11	[BUG]  [BUGGY]  longOpts.add(opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  longOpts.add(opt.getLongOpt());  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	longOpts.add(opt.getLongOpt());	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    longOpts.add(opt.getLongOpt());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
12	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  optionGroups  =  opt.getOptionGroups(key);	      Option    optionGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
13	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  shortOpts);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  optionGroups  =  opt.getOptionGroups(),  shortOpts);	      Option    optionGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
14	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  shortOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  shortOpts;  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  optionGroups  =  opt.getOptionGroups(),  shortOpts;	      Option    optionGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
15	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  shortOpts  =  opt.getShortOpts();  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  shortOpts  =  opt.getShortOpts();	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
16	[BUG]  [BUGGY]  longOpts.put(opt.getLongOpt(),  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  longOpts.put(opt.getLongOpt(),  null);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	longOpts.put(opt.getLongOpt(),  null);	      if(opt.hasLongOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    shortOpts.put(opt.getLongOpt(),    null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
17	[BUG]  [BUGGY]  shortOpts.put(opt.getLongOpt(),  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  shortOpts.put(opt.getLongOpt(),  null);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	shortOpts.put(opt.getLongOpt(),  null);	      if(opt.hasLongOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    shortOpts.put(opt.getLongOpt(),    null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
18	[BUG]  [BUGGY]  LongOpts  shortOpts  =  opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  LongOpts  shortOpts  =  opt.getLongOpt();  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	LongOpts  shortOpts  =  opt.getLongOpt();	      if(opt.hasLongOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
19	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  opt  =  opt.getOption(),  shortOpts);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  opt  =  opt.getOption(),  shortOpts);	      Option    opt    =    opt.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
20	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  opt  =  opt.getOption(),  longOpts);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  opt  =  opt.getOption(),  longOpts);	      Option    opt    =    opt.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
21	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(),  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  opt  =  opt.getOption(),  key);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  opt  =  opt.getOption(),  key);	      Option    opt    =    opt.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
22	[BUG]  [BUGGY]  longOpts.put(opt.getLongOpt(),  key)  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  longOpts.put(opt.getLongOpt(),  key)  [BUGGY]    }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	longOpts.put(opt.getLongOpt(),  key)	  longOpts.put(opt.getLongOpt(),    opt)    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
23	[BUG]  [BUGGY]  shortOpts.put(opt.getLongOpt(),  opt)  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  shortOpts.put(opt.getLongOpt(),  opt)  [BUGGY]    }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	shortOpts.put(opt.getLongOpt(),  opt)	  longOpts.put(opt.getLongOpt(),    opt)    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
24	[BUG]  [BUGGY]  longOpts.put(key.getLongOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  longOpts.put(key.getLongOpt(),  opt);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	longOpts.put(key.getLongOpt(),  opt);	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    longOpts.put(key.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
25	[BUG]  [BUGGY]  longOpts.put(key.indexOf( "   "),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  longOpts.put(key.indexOf( "   "),  opt);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	longOpts.put(key.indexOf( "   "),  opt);	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    longOpts.put(key.indexOf(   "   "),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
26	[BUG]  [BUGGY]  Option  longOpts  =  optionGroups.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  longOpts  =  optionGroups.get(key);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  longOpts  =  optionGroups.get(key);	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    requiredOpts.add(opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
27	[BUG]  [BUGGY]  longOpts  =  opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  longOpts  =  opt.getLongOpt();  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	longOpts  =  opt.getLongOpt();	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    requiredOpts.add(opt.getLongOpt());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
28	[BUG]  [BUGGY]  shortOpts.put(opt.getLongOpt(),  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  shortOpts.put(opt.getLongOpt(),  key);  [BUGGY]    }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	shortOpts.put(opt.getLongOpt(),  key);	  shortOpts.put(opt.getLongOpt(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
29	[BUG]  [BUGGY]  shortOpts.put(key,  opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  shortOpts.put(key,  opt.getLongOpt());  [BUGGY]    }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	shortOpts.put(key,  opt.getLongOpt());	  shortOpts.put(opt.getLongOpt(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
30	[BUG]  [BUGGY]  shortOpts.put(key.getLongOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  shortOpts.put(key.getLongOpt(),  opt);  [BUGGY]    }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	shortOpts.put(key.getLongOpt(),  opt);	  shortOpts.put(opt.getLongOpt(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
31	[BUG]  [BUGGY]  longOpts.put(opt.getLongOpt(),  key,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  longOpts.put(opt.getLongOpt(),  key,  shortOpts);  [BUGGY]    }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	longOpts.put(opt.getLongOpt(),  key,  shortOpts);	  longOpts.put(opt.getLongOpt(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
32	[BUG]  [BUGGY]  Option  shortOpt  =  opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  shortOpt  =  opt.getLongOpt();  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  shortOpt  =  opt.getLongOpt();	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    longOpts.add(opt.getLongOpt());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
33	[BUG]  [BUGGY]  Option  longOpt  =  opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  longOpt  =  opt.getLongOpt();  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  longOpt  =  opt.getLongOpt();	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    requiredOpts.add(opt.getLongOpt());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
34	[BUG]  [BUGGY]  Option  longOpts  =  optionGroups.get(opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  longOpts  =  optionGroups.get(opt.getLongOpt());  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  longOpts  =  optionGroups.get(opt.getLongOpt());	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    requiredOpts.add(opt.getLongOpt());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
35	[BUG]  [BUGGY]  Aleger  opt  =  opt.getOption();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Aleger  opt  =  opt.getOption();  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Aleger  opt  =  opt.getOption();	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    shortOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
36	[BUG]  [BUGGY]  Option  option  =  opt.getOption();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  option  =  opt.getOption();  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  option  =  opt.getOption();	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    shortOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
37	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  ShortOpts  shortOpts  =  opt.getLongOpt();  [BUGGY]    }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	ShortOpts  shortOpts  =  opt.getLongOpt();	  shortOpts.put(opt.getLongOpt(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
38	[BUG]  [BUGGY]  ShortOpts.put(opt.getLongOpt(),  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  ShortOpts.put(opt.getLongOpt(),  key);  [BUGGY]    }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	ShortOpts.put(opt.getLongOpt(),  key);	  shortOpts.put(opt.getLongOpt(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
39	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  opt  =  opt.getOption(key);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  opt  =  opt.getOption(key);	      Option    opt    =    opt.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
40	[BUG]  [BUGGY]  Option  opt  =  opt.cloneOption();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  opt  =  opt.cloneOption();  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  opt  =  opt.cloneOption();	      Option    opt    =    opt.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
41	[BUG]  [BUGGY]  Option  opt  =  opt.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  opt  =  opt.getOptionGroup();  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  opt  =  opt.getOptionGroup();	      Option    opt    =    opt.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
42	[BUG]  [BUGGY]  Option  shortOpt  =  opt.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  shortOpt  =  opt.getShortOpt();  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  shortOpt  =  opt.getShortOpt();	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    longOpts.put(key.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
43	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(true);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  optionGroups  =  opt.getOptionGroups(true);	      Option    optionGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
44	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(option);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  optionGroups  =  opt.getOptionGroups(option);	      Option    optionGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
45	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(this);  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  optionGroups  =  opt.getOptionGroups(this);	      Option    optionGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
46	[BUG]  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt.getUpperOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  longOpts.put(opt.getLongOpt(),  opt.getUpperOpt());  [BUGGY]    }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	longOpts.put(opt.getLongOpt(),  opt.getUpperOpt());	  longOpts.put(opt.getLongOpt(),    opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
47	[BUG]  [BUGGY]  [Delete]  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  [Delete]  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	[Delete]	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    requiredOpts.add(opt.getLongOpt());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
48	[BUG]  [BUGGY]  opt.setLongOpt(longOpts.indexOf(key));  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  opt.setLongOpt(longOpts.indexOf(key));  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	opt.setLongOpt(longOpts.indexOf(key));	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    requiredOpts.add(opt.getLongOpt());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
49	[BUG]  [BUGGY]  opt.setLongOpt(longOpts.get(opt.getLongOpt()));  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  opt.setLongOpt(longOpts.get(opt.getLongOpt()));  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	opt.setLongOpt(longOpts.get(opt.getLongOpt()));	      if(opt.hasLongOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
50	[BUG]  [BUGGY]  Option  shortOpts  =  optionGroups.get(opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  shortOpts  =  optionGroups.get(opt.getLongOpt());  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  shortOpts  =  optionGroups.get(opt.getLongOpt());	      if(opt.hasLongOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
51	[BUG]  [BUGGY]  opt.setLongOpt(longOpts.get(opt.getLongOpt(),  opt));  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  opt.setLongOpt(longOpts.get(opt.getLongOpt(),  opt));  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	opt.setLongOpt(longOpts.get(opt.getLongOpt(),  opt));	      if(opt.hasLongOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
52	[BUG]  [BUGGY]  Option  opt  =  opt.getOption()  :  null;  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  Option  opt  =  opt.getOption()  :  null;  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	Option  opt  =  opt.getOption()  :  null;	      Option    opt    =    opt.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
53	[BUG]  [BUGGY]  shortOpts.put(opt.getKey(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  shortOpts.put(opt.getKey(),  opt);  [BUGGY]    }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	shortOpts.put(opt.getKey(),  opt);	  shortOpts.put(opt.getLongOpt(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
54	[BUG]  [BUGGY]  opt.setLongOpt(longOpts.get(key));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  opt.setLongOpt(longOpts.get(key));  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	opt.setLongOpt(longOpts.get(key));	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    longOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
55	[BUG]  [BUGGY]  shortOpts.put(opt.getLongOpt(),  key)  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  shortOpts.put(opt.getLongOpt(),  key)  [BUGGY]    }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	shortOpts.put(opt.getLongOpt(),  key)	  longOpts.put(opt.getLongOpt(),    opt)    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
56	[BUG]  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  longOpts.put(opt.getLongOpt(),  opt.getKey());  [BUGGY]    }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	longOpts.put(opt.getLongOpt(),  opt.getKey());	  longOpts.put(opt.getLongOpt(),    opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
57	[BUG]  [BUGGY]  opt.setLongOpt(longOpts.contains(key));  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {    [BUGGY]  opt.setLongOpt(longOpts.contains(key));  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	opt.setLongOpt(longOpts.contains(key));	      if(opt.hasLongOpt())    {    if(longOpts.contains(key))    {    shortOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
