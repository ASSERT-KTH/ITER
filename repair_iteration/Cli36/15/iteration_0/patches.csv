bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]    if(opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	    if(opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	add
2	[BUG]  [BUGGY]    if(opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]    if(opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	    if(opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	add
3	[BUG]  [BUGGY]    if(opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]    if(opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	    if(opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	add
4	[BUG]  [BUGGY]    Option  optionGroups  =  opt.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]    Option  optionGroups  =  opt.getOptionGroups();  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	    Option  optionGroups  =  opt.getOptionGroups();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	add
5	[BUG]  [BUGGY]    if(opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]    if(opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  null);  }  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	    if(opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  null);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	add
6	[BUG]  [BUGGY]  longOpts.put(opt.getLongOpt(),  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]  longOpts.put(opt.getLongOpt(),  key);  [BUGGY]  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	longOpts.put(opt.getLongOpt(),  key);	longOpts.put(opt.getLongOpt(),  opt);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
7	[BUG]  [BUGGY]  shortOpts.put(opt.getLongOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]  shortOpts.put(opt.getLongOpt(),  opt);  [BUGGY]  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	shortOpts.put(opt.getLongOpt(),  opt);	longOpts.put(opt.getLongOpt(),  opt);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
8	[BUG]  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt.getLongOpt());  [BUGGY]  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	longOpts.put(opt.getLongOpt(),  opt.getLongOpt());	longOpts.put(opt.getLongOpt(),  opt);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
9	[BUG]  [BUGGY]    Option  opt  =  opt.getOption();  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]    Option  opt  =  opt.getOption();  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	    Option  opt  =  opt.getOption();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	add
10	[BUG]  [BUGGY]    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  requiredOpts.add(opt.getLongOpt());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  requiredOpts.add(opt.getLongOpt());  }  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  requiredOpts.add(opt.getLongOpt());  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	add
11	[BUG]  [BUGGY]    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  longOpts.put(opt.getLongOpt(),  opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	add
12	[BUG]  [BUGGY]    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  requiredOpts.add(opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  requiredOpts.add(opt);  }  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  requiredOpts.add(opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	add
13	[BUG]  [BUGGY]    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  longOpts.add(opt.getLongOpt());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  longOpts.add(opt.getLongOpt());  }  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  longOpts.add(opt.getLongOpt());  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	add
14	[BUG]  [BUGGY]    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  longOpts.put(key.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  longOpts.put(key.getLongOpt(),  opt);  }  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  longOpts.put(key.getLongOpt(),  opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	add
15	[BUG]  [BUGGY]    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  shortOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  shortOpts.put(key,  opt);  }  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  shortOpts.put(key,  opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	add
16	[BUG]  [BUGGY]    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  longOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  longOpts.put(key,  opt);  }  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  longOpts.put(key,  opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	add
17	[BUG]  [BUGGY]    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  longOpts.put(key.indexOf( " "),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  longOpts.put(key.indexOf( " "),  opt);  }  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	    if(opt.hasLongOpt())  {  if(longOpts.contains(key))  {  longOpts.put(key.indexOf( " "),  opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	add
18	[BUG]  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt)  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt)  [BUGGY]  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	longOpts.put(opt.getLongOpt(),  opt)	longOpts.put(opt.getLongOpt(),  opt);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
