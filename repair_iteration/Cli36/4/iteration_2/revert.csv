projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatefinalMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatestaticfinalMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatefinalMap<String,OptionGroup>optionGroups=newLinkedHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privateMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=newArrayList<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newArrayList<OptionGroup>(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61optionGroups.putAll(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups.putAll(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newArrayList<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notNull(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newOptionGroup(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups.putAll(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=(OptionGroup<OptionGroup>)optionGroups.clone();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>(Arrays.asList(optionGroups));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup(optionGroups.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61staticfinalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61publicMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>(Arrays.asList(optionGroups));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>(Arrays.asList(optionGroups),options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>(Arrays.asList(optionGroups),type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,newHashMap<String,OptionGroup>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61staticfinalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatefinalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=(OptionGroup<OptionGroup>)optionGroups.clone();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=(OptionGroup<OptionGroup>)this.optionGroups.clone();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61optionGroups=(OptionGroup<OptionGroup>)optionGroups.clone();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatestaticfinalMap<String,OptionGroup>optionGroups=newLinkedHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalMap<String,OptionGroup>optionGroups=newLinkedHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newLinkedList<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newLinkedHashMap<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newArrayList<OptionGroup>(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newLinkedList<OptionGroup>(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newArrayList<OptionGroup>(optionGroups.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61optionGroups.putAll(optionGroups,newHashMap<String,OptionGroup>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups.putAll(optionGroups,newHashMap<String,OptionGroup>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups.putAll(optionGroups,options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups.putAll(optionGroups,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=newLinkedHashMap<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=newLinkedList<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration;returntype.requires(declaration.getMethod());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration;returntype.requires(declaration.getMethodType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration;returntype.requires(declaration.getType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61if(type==null){methoddeclaration=newComparableFailure();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notEmpty(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notNull(optionGroups,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notNull(optionGroups,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newOptionGroup(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=newOptionGroup(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newOptionGroup(optionGroups.size(),options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups.putAll(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups.putAll(optionGroups.values());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups.putAll(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61staticfinalMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatestaticfinalHashMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61if(type==null){thrownewIllegalArgumentException("Methodmethoddeclarationmustnotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61if(type==null){thrownewIllegalArgumentException("Methodmethoddeclarationcannotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61if(type==null){thrownewIllegalArgumentException("Methodmethoddeclarationmustnotbenull.");}else{returntype.toString();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61if(type==null){thrownewIllegalArgumentException("Methodmethoddeclarationcannotbenull.");}else{returntype.toString();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroups.putAll(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61optionGroups.putAll(optionGroups,optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups.putAll(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups.putAll(optionGroups,optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=optionGroups.getAll(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=options.getAll(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=optionGroups.get(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>(Arrays.asList(optionGroups)+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=newArrayList<OptionGroup>(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=(OptionGroup<OptionGroup>)optionGroups.toArray(newOptionGroup[optionGroups.size()]);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,optionGroups.length);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privateMap<String,OptionGroup>optionGroups=newLinkedHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=newOptionGroup(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatefinalMap<String,OptionGroup>optionGroups=newArrayMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61publicfinalMap<String,OptionGroup>optionGroups=newLinkedHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("method",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("declaration",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("requires",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("type",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61staticfinalOptionGroup<String,OptionGroup>optionGroups=newArrayList<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatefinalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=optionGroups.getAll(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=options.getAll(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=optionGroups.get(0);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=optionGroups.get(optionGroup);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61if(optionGroups==null){finalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>();}else{privatefinalMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notNull(optionGroups,optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=newOptionGroup(optionGroups.size(),options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61aughtException("Methodmethoddeclarationcannotbenull.");
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61aughtExceptionHandler.handleException("Methodmethoddeclarationcannotbenull.");
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=newLinkedHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61staticfinalOptionGroup<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalMethoddeclaration;returntype.requires(declaration.getMethod());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration;returntype.requires(declaration.getReturnType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration;returntype.requires(declaration.getRawClass());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,newHashMap<String,OptionGroup>(),type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,newHashMap<String,OptionGroup>(),null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,newHashMap<String,OptionGroup>(),optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=(OptionGroup<OptionGroup>)this.optionGroups.clone();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61staticfinalOptionGroup<String,OptionGroup>optionGroups=(OptionGroup<OptionGroup>)optionGroups.clone();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatestaticfinalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notNull(type,optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notEmpty(optionGroups,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notNull(optionGroups,type,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=(OptionGroup<OptionGroup>)optionGroups.toArray(newOptionGroup[optionGroups.size()]);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=(OptionGroup<OptionGroup>)optionGroups.toArray(newOptionGroup[optionGroups.size()+1]);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61optionGroups=(OptionGroup<OptionGroup>)optionGroups.toArray(newOptionGroup[optionGroups.size()]);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61staticfinalHashMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61publicstaticfinalHashMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("requires",type,this);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("requires",type,false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("requires",type,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("declaration",type,this);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("declaration",type,false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("declaration",type,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalMethoddeclaration;returntype.requires(declaration.getType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration;returntype.requires(declaration.getType(),type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=options.getAll(optionGroups,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=options.getAll(this.optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=options.getAll(optionGroups,true);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>(Arrays.asList(optionGroups),options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61optionGroups=newOptionGroup(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newLinkedList<OptionGroup>(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newLinkedList<OptionGroup>(optionGroups.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,options,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalMethoddeclaration;returntype.requires(declaration.getMethodType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration;returntype.requires(declaration.getRawType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalstaticOptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61staticfinalOptionGroup<String,OptionGroup>optionGroups=newLinkedList<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61staticfinalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61staticfinalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup(optionGroups.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=optionGroups.getAll(this.optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=optionGroups.getAll(optionGroups,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61optionGroups=newArrayList<OptionGroup>(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=newArrayList<OptionGroup>(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=newLinkedList<OptionGroup>(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=newArrayList<OptionGroup>(optionGroups.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61parent==null){thrownewIllegalArgumentException("Methodmethoddeclarationmustnotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61aughtExceptionHandler.handleMissingException("Methodmethoddeclarationmustnotbenull.");
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups.putAll(optionGroups,this);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups.putAll(optionGroups,newLinkedHashMap<String,OptionGroup>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=optionGroups.getAll(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=optionGroups.getAll();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61staticfinalOptionGroup<String,OptionGroup>optionGroups.putAll(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupgroup=newArrayList<OptionGroup>(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<OptionGroup>optionGroups=(OptionGroup<OptionGroup>)optionGroups.clone();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<OptionGroup>optionGroups=(OptionGroup<OptionGroup>)this.optionGroups.clone();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61staticfinalMap<String,OptionGroup>optionGroups=newLinkedHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalstaticMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=options.get(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=optionGroups.get(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=optionGroups.get(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newjava.util.ArrayList<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>(Arrays.asList(optionGroups),type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>(Arrays.asList(optionGroups),type,description);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups.putAll(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups.putAll(optionGroups.keySet());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,options.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,optionGroups.size()-2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,options.length);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,optionGroups.length+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,optionGroups.length,options.length);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=newHashMap<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61staticfinalOptionGroup<String,OptionGroup>optionGroups=newLinkedHashMap<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=newArrayHashMap<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups.putAll(optionGroups.values(),options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups.putAll(optionGroups.values(),optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=options.getAll(optionGroups,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=options.getAll(optionGroups,true);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=options.getAll(this.optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatestaticfinalMap<String,OptionGroup>optionGroups=newArrayMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatefinalMap<String,OptionGroup>optionGroups=newLinkedMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroups.putAll(optionGroups,newHashMap<String,OptionGroup>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61optionGroups.putAll(newHashMap<String,OptionGroup>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newLinkedHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61parent==null){thrownewIllegalArgumentException("Methodmethoddeclarationcannotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61methoddeclaration=newComparableFailure();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=newMethod(type.toString());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=newMethod(type.required);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=newOptionGroup(optionGroups.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61staticfinalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>(Arrays.asList(optionGroups));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notEmpty(optionGroups,optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notNull(optionGroups,options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>(Arrays.asList(optionGroups)/1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>(Arrays.asList(optionGroups)+1,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>(Arrays.asList(optionGroups)+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups.putAll(optionGroups,options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=optionGroups.getAll(this.optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61optionGroups.putAll(optionGroups,options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61publicfinalMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61publicMap<String,OptionGroup>optionGroups=newLinkedHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalpublicMap<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalMap<String,OptionGroup>optionGroups=newTreeMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalMap<String,OptionGroup>optionGroups=newArrayMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroups.putAll(optionGroups,optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroups.putAll(optionGroups,options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("method,",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notEmpty(optionGroups,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatefinalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatestaticfinalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatestaticfinalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=newOptionGroup(options.size(),options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newOptionGroup(options.size(),options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=newOptionGroup(options.size()-1,options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=newOptionGroup(options.size(),options,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61optionGroups=(OptionGroup<OptionGroup>)this.optionGroups.clone();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>options=(OptionGroup<OptionGroup>)this.optionGroups.clone();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups.putAll(newHashMap<String,OptionGroup>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups.putAll(this,newHashMap<String,OptionGroup>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=options.get(optionGroup);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=optionGroups.get(optionName);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=newOptionGroup(options.size(),options,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newHashMap<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalLinkedHashMap<OptionGroup>optionGroups=newLinkedHashMap<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61aughtException("Methodmethoddeclarationmustnotbenull.");
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61aughtExceptionHandler.handleException("Methodmethoddeclarationmustnotbenull.");
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("type",type,false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("type",type,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("type",type,this);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notNull(optionGroups,this);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=options.get(0);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61publicfinalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups.putAll(optionGroups,newHashMap<String,OptionGroup>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups.putAll(optionGroups,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61publicstaticfinalMap<String,OptionGroup>optionGroups=newLinkedHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61publicfinalMap<String,OptionGroup>optionGroups=newArrayMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalprivateMap<String,OptionGroup>optionGroups=newLinkedHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(type,optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,type,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,type,false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups.putAll(optionGroups.values());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61optionGroups.putAll(optionGroups,newHashMap<String,OptionGroup>(),options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61if(type!=null){Methoddeclaration;returntype.requires(declaration.getMethodType());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration;returntype.requires(declaration.getDeclarationType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61aught(null){thrownewIllegalArgumentException("Methodmethoddeclarationcannotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,newTreeMap<String,OptionGroup>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroups.putAll(optionGroups,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatefinalOptionGroup<String,OptionGroup>optionGroups=newHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("declaration,",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("declaration",null,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod(".declaration",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=options.getAll(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61method=newComparableFailure();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61methoddeclaration=newComparableFailure(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,optionGroups.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Preconditions.checkArgument(type.requires(declaration.getType()));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration;returntype.requires(declaration.getValue());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalMap<String,OptionGroup>optionGroups=newArrayHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=optionGroups.getAll(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=options.getAll(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,options,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61if(type!=null){Methoddeclaration;returntype.requires(declaration.getMethod());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration;returntype.requires(declaration.getDeclaration());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=options.getAll(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=optionGroups.get(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatestaticfinalMap<String,OptionGroup>optionGroups=newArrayHashMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("declarations",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("requires,",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("declaration","type");
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privateMap<String,OptionGroup>optionGroups=newArrayMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=optionGroups.get(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>(Arrays.asList(optionGroups)+1,options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>(Arrays.asList(optionGroups)-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=options.getAll(optionGroups,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups.putAll(optionGroups,optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("type",typeName);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newArrayMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=optionGroups.getAll(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=optionGroups.getAll();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61aughtExceptionHandler.handleMissingException("Methodmethoddeclarationmustbenull.");
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61[Delete]
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61>>
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61staticfinalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup(optionGroups.size()-2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=optionGroups.get(optionGroup.type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newArrayHashMap<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notNull(type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=newOptionGroup(optiongroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=newOptionGroup(optionGroups.size()-1,options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=newOptionGroup(optionGroups.size(),options,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroupoptionGroups=newOptionGroup(optionGroups.size(),options,null);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61staticfinalMap<String,OptionGroup>optionGroups=newTreeMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newTreeMap<OptionGroup>(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("declaration.requires",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroups.putAll(optionGroups,type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatefinalOptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>(Arrays.asList(optionGroups));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notNull(optionGroups,null,optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notNull(optionGroups,null,options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("declaredmethod",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("declared-method",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61publicfinalMap<String,OptionGroup>optionGroups=newTreeMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=optionGroups.getAll(optionGroups,options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notNull(optionGroups,type,optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatestaticfinalMap<String,OptionGroup>optionGroups=newTreeMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=optionGroups.get(optionGroup);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61returntype.requires(declaration.getType());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newLinkedList<OptionGroup>(Arrays.asList(optionGroups));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newTreeMap<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,type,options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newTreeMap<String,OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups=newOptionGroup(optionGroups.size()-1,options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=newOptionGroup<OptionGroup>(Arrays.asList(optionGroups)+2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61||type==null){thrownewIllegalArgumentException("Methodmethoddeclarationmustnotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61||(type==null&&type.toString().equals(""))){thrownewIllegalArgumentException("Methodmethoddeclarationmustnotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61||(type==null&&type.toString().length()>0)){thrownewIllegalArgumentException("Methodmethoddeclarationmustnotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,newHashMap<String,OptionGroup>(),options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61if(optionGroups!=null){finalOptionGroup<String,OptionGroup>optionGroups=(OptionGroup<OptionGroup>)optionGroups.clone();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=optionGroups.removeAll(optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61finalOptionGroup<String,OptionGroup>optionGroups=optionGroups.get(0);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("declaredType",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Methoddeclaration=getDeclaredMethod("declared",type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61aughtException("Methodmethoddeclarationmustnotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup>optionGroups.putAll(optionGroups,newHashMap<String,OptionGroup>(),options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=(OptionGroup<OptionGroup>)this.optionGroups.toArray(newOptionGroup[this.optionGroups.size()]);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61privatefinalOptionGroup<String,OptionGroup>optionGroups=newLinkedHashMap<OptionGroup>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61aught(null,type){thrownewIllegalArgumentException("Methodmethoddeclarationcannotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61aught(null,type){thrownewIllegalArgumentException("Methodmethoddeclarationcannotbenull..");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61parent<0||type==null){thrownewIllegalArgumentException("Methodmethoddeclarationcannotbenull.");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Validate.notEmpty(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=optionGroups.get(optionGroup.optionName);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61OptionGroup<String,OptionGroup>optionGroups=optionGroups.values();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java61Arrays.sort(optionGroups,optionGroups.values());
