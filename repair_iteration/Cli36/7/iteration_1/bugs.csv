bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  [BUGGY]  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptionGroups())  {	for  (Option  option  :  group.getOptions())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
2	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]  for(Option  option  :  this.optionGroups.getOptions())  {  [BUGGY]  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.getOptions())  {	for  (Option  option  :  group.getOptions())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
3	[BUG]  [BUGGY]    [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    [BUGGY]  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	  	for  (Option  option  :  group.getOptions())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
4	[BUG]  [BUGGY]    if(requiredOpts!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    if(requiredOpts!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]  for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	    if(requiredOpts!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	add
5	[BUG]  [BUGGY]    if(longOpts.size()  >  0)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    if(longOpts.size()  >  0)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]  for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	    if(longOpts.size()  >  0)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	add
6	[BUG]  [BUGGY]    if(longOpts.size()  >  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    if(longOpts.size()  >  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]  for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	    if(longOpts.size()  >  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	add
7	[BUG]  [BUGGY]    if(requiredOpts!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    if(requiredOpts!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]  for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	    if(requiredOpts!=  null)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	add
8	[BUG]  [BUGGY]    if(longOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    if(longOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [BUGGY]  for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	    if(longOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	add
9	[BUG]  [BUGGY]    Option  option  =(Option)requiredOpts.get(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    Option  option  =(Option)requiredOpts.get(group);  [BUGGY]  for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	    Option  option  =(Option)requiredOpts.get(group);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	add
10	[BUG]  [BUGGY]    if(group.isRequired())  {  requiredOpts.add(requiredOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    if(group.isRequired())  {  requiredOpts.add(requiredOpts);  }  [BUGGY]  for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	    if(group.isRequired())  {  requiredOpts.add(requiredOpts);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	add
11	[BUG]  [BUGGY]    if(group.isRequired())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    if(group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]  for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	    if(group.isRequired())  {  requiredOpts.add(group);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	add
12	[BUG]  [BUGGY]    if(group.isRequired())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    if(group.isRequired())  {  requiredOpts.add(null);  }  [BUGGY]  for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	    if(group.isRequired())  {  requiredOpts.add(null);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	add
13	[BUG]  [BUGGY]    if(group.isRequired())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    if(group.isRequired())  {  requiredOpts.add(false);  }  [BUGGY]  for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	    if(group.isRequired())  {  requiredOpts.add(false);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	add
14	[BUG]  [BUGGY]    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]  for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	add
15	[BUG]  [BUGGY]    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  this.optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  this.optionGroups.put(option.getKey(),  group);  }  [BUGGY]  for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  this.optionGroups.put(option.getKey(),  group);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	add
16	[BUG]  [BUGGY]    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]  for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	add
17	[BUG]  [BUGGY]    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]  for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	    if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	add
18	[BUG]  [BUGGY]  for(Option  option  :  group.getOpts())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]  for(Option  option  :  group.getOpts())  {  [BUGGY]  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOpts())  {	for  (Option  option  :  group.getOptions())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
