bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  this.optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  group.getOptions())  {  this.optionGroups.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  this.optionGroups.put(option.getKey(),  group);  }	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    this.optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
2	[BUG]  [BUGGY]  this.optionGroups.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  this.optionGroups.put(option.getKey(),  group);  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	this.optionGroups.put(option.getKey(),  group);	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    this.optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
3	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    this.optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
4	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  optionGroups.put(option.getKey(),  group);  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	optionGroups.put(option.getKey(),  group);	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    this.optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
5	[BUG]  [BUGGY]  requiredOpts.add(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  requiredOpts.add(false);  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	requiredOpts.add(false);	      if(group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
6	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  optionGroups.put(group.getKey(),  group);  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	optionGroups.put(group.getKey(),  group);	      if(group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
7	[BUG]  [BUGGY]  group.setRequired(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  group.setRequired(false);  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.setRequired(false);	      if(group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
8	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
9	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	For(Option  option  :  group.getOptions())  {  requiredOpts.add(false);  }	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
10	[BUG]  [BUGGY]  requiredOpts.add(null);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  requiredOpts.add(null);  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	requiredOpts.add(null);	      if(group.isRequired())    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
11	[BUG]  [BUGGY]  requiredOpts.add(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  requiredOpts.add(group);  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	requiredOpts.add(group);	      if(group.isRequired())    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
12	[BUG]  [BUGGY]  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }	      if(longOpts.size()    >    0)    {    for(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
13	[BUG]  [BUGGY]  For(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  For(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	For(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }	      if(longOpts.size()    >    0)    {    for(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
14	[BUG]  [BUGGY]  for(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }	      if(longOpts.size()    >    0)    {    for(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
15	[BUG]  [BUGGY]  for(Option  option  :  shortOpts)  {  neededOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  shortOpts)  {  neededOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  shortOpts)  {  neededOpts.put(option.getKey(),  group);  }	      if(longOpts.size()    >    0)    {    for(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
16	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	      if(requiredOpts!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
17	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	For(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	      if(requiredOpts!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
18	[BUG]  [BUGGY]  requiredOpts.add(option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  requiredOpts.add(option);  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	requiredOpts.add(option);	      if(requiredOpts!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
19	[BUG]  [BUGGY]  option.setRequired(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  option.setRequired(false);  [BUGGY]    {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	option.setRequired(false);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
20	[BUG]  [BUGGY]  foundOpts.add(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  foundOpts.add(requiredOpts);  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	foundOpts.add(requiredOpts);	      if(group.isRequired())    {    requiredOpts.add(requiredOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
21	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  shortOpts  =  group.getShortOpts();	      if(group.isRequired())    {    requiredOpts.add(requiredOpts);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
22	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	For(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }	      if(requiredOpts!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
23	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  For(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	For(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  group);  }	      if(requiredOpts!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
24	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  shortOpts  =  option.getShortOpts();	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
25	[BUG]  [BUGGY]  Option  group  =  option.getOption(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  Option  group  =  option.getOption(group);  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  group  =  option.getOption(group);	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
26	[BUG]  [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired())  {  if(longOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
27	[BUG]  [BUGGY]  shortOpts.put(group.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  shortOpts.put(group.getKey(),  group);  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	shortOpts.put(group.getKey(),  group);	      if(longOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
28	[BUG]  [BUGGY]  if(group!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  if(group!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group!=  null)  {  shortOpts.put(group.getKey(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
29	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.keySet())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  this.optionGroups.keySet())  {  [BUGGY]    {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.keySet())  {	  for(Option    option    :    this.optionGroups.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
30	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.getOptions(),  group)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  this.optionGroups.getOptions(),  group)  {  [BUGGY]    {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.getOptions(),  group)  {	  for(Option    option    :    this.optionGroups.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
31	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.getOpts())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  shortOpts.getOpts())  {  [BUGGY]    {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  shortOpts.getOpts())  {	  for(Option    option    :    group.getOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
32	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  Option  option  =(Option)requiredOpts.get(group,  shortOpts);  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group,  shortOpts);	      Option    option    =(Option)requiredOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
33	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  Option  option  =(Option)requiredOpts.get(group  +  1);  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group  +  1);	      Option    option    =(Option)requiredOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
34	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  Option  option  =(Option)requiredOpts.get(group  -  1);  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group  -  1);	      Option    option    =(Option)requiredOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
35	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }	      if(longOpts.size()    >    0)    {    for(Option    option    :    longOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
36	[BUG]  [BUGGY]  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }	      if(longOpts.size()    >    0)    {    for(Option    option    :    longOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
37	[BUG]  [BUGGY]  while(longOpts.size()  >  0)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  while(longOpts.size()  >  0)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	while(longOpts.size()  >  0)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }	      if(longOpts.size()    >    0)    {    for(Option    option    :    longOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
38	[BUG]  [BUGGY]  while(longOpts.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  while(longOpts.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	while(longOpts.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }	      if(longOpts.size()    >    0)    {    for(Option    option    :    longOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
39	[BUG]  [BUGGY]  if(group.isRequired()  ||  requiredOpts.contains(group))  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  if(group.isRequired()  ||  requiredOpts.contains(group))  {  requiredOpts.add(group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired()  ||  requiredOpts.contains(group))  {  requiredOpts.add(group);  }	      if(group.isRequired())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
40	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.getOptionGroups())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  this.optionGroups.getOptionGroups())  {  [BUGGY]    {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.getOptionGroups())  {	  for(Option    option    :    group.getOptionGroups())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
41	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups(),  shortOpts)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  group.getOptionGroups(),  shortOpts)  {  [BUGGY]    {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptionGroups(),  shortOpts)  {	  for(Option    option    :    group.getOptionGroups())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
42	[BUG]  [BUGGY]  OptionGroup  group  =  group.getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  OptionGroup  group  =  group.getOptions();  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  group.getOptions();	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
43	[BUG]  [BUGGY]  for(Option  option  :  group.options())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  group.options())  {  [BUGGY]    {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.options())  {	  for(Option    option    :    group.getOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
44	[BUG]  [BUGGY]  group.size()  >  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  group.size()  >  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.size()  >  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }	      if(longOpts.size()    >    0)    {    for(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
45	[BUG]  [BUGGY]  group.size()  >  0)  {  for(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  group.size()  >  0)  {  for(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.size()  >  0)  {  for(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }	      if(longOpts.size()    >    0)    {    for(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
46	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  OptionGroup  shortOpts  =  group.getOptions();  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  shortOpts  =  group.getOptions();	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
47	[BUG]  [BUGGY]  if(longOpts.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  if(longOpts.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(longOpts.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }	      if(longOpts.size()    >    0)    {    for(Option    option    :    longOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
48	[BUG]  [BUGGY]  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  requiredOpts.put(option.getKey(),  group);  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	requiredOpts.put(option.getKey(),  group);	      if(requiredOpts!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
49	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  group);  }	      if(requiredOpts!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
50	[BUG]  [BUGGY]  if(shortOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  if(shortOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(shortOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
51	[BUG]  [BUGGY]  if(group.isRequired())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  if(group.isRequired())  {  requiredOpts.add(true);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired())  {  requiredOpts.add(true);  }	      if(group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
52	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  Option  option  =(Option)requiredOpts.get(group.getKey());  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group.getKey());	      Option    option    =(Option)requiredOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
53	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(group);  }	      if(group.isRequired())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
54	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  neededOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  group.getOptions())  {  neededOpts.add(option);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  neededOpts.add(option);  }	      if(requiredOpts!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
55	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.values())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  this.optionGroups.values())  {  [BUGGY]    {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.values())  {	  for(Option    option    :    this.optionGroups.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
56	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.getOptionKey())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  this.optionGroups.getOptionKey())  {  [BUGGY]    {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.getOptionKey())  {	  for(Option    option    :    this.optionGroups.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
57	[BUG]  [BUGGY]  OptionGroup  optionGroups  =  group.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  OptionGroup  optionGroups  =  group.getOptionGroups();  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroups  =  group.getOptionGroups();	      if(requiredOpts!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
58	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  OptionGroup  group  =  option.getOptionGroup();  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  option.getOptionGroup();	      if(requiredOpts!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
59	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  group.getOptionGroup(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  OptionGroup  optionGroup  =  group.getOptionGroup(option.getKey());  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  group.getOptionGroup(option.getKey());	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
60	[BUG]  [BUGGY]  for(Option  option  :  group.getKey())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  group.getKey())  {  [BUGGY]    {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getKey())  {	  for(Option    option    :    group.getOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
61	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.get(group.getOpts()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  this.optionGroups.get(group.getOpts()))  {  [BUGGY]    {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.get(group.getOpts()))  {	  for(Option    option    :    group.getOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
62	[BUG]  [BUGGY]  Option  option  =(Option)this.longOpts.get(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  Option  option  =(Option)this.longOpts.get(group);  [BUGGY]    {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)this.longOpts.get(group);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
63	[BUG]  [BUGGY]  Option  option  =  group.getOption();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  Option  option  =  group.getOption();  [BUGGY]    {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =  group.getOption();	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
64	[BUG]  [BUGGY]  Option  option  =  option.getOption(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  Option  option  =  option.getOption(option.getKey());  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =  option.getOption(option.getKey());	      if(requiredOpts!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
65	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  option.getOptionGroup(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  OptionGroup  optionGroup  =  option.getOptionGroup(option.getKey());  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  option.getOptionGroup(option.getKey());	      if(requiredOpts!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
66	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  option.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  OptionGroup  optionGroup  =  option.getOptionGroup();  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  option.getOptionGroup();	      if(requiredOpts!=    null)    {    for(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
67	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.getAllOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  this.optionGroups.getAllOptions())  {  [BUGGY]    {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.getAllOptions())  {	  for(Option    option    :    this.optionGroups.getOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
68	[BUG]  [BUGGY]  OptionGroup  group  =  this.optionGroups.get(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  OptionGroup  group  =  this.optionGroups.get(option.getKey());  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  this.optionGroups.get(option.getKey());	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    this.optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
69	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.keySet())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  for(Option  option  :  shortOpts.keySet())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  shortOpts.keySet())  {  requiredOpts.put(option.getKey(),  group);  }	      if(longOpts.size()    >    0)    {    for(Option    option    :    longOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
70	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(false);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(false);  }	      if(group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
71	[BUG]  [BUGGY]  Option  shortOpts  =  option.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  Option  shortOpts  =  option.getShortOpts();  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  shortOpts  =  option.getShortOpts();	      if(longOpts.size()    >    0)    {    for(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
72	[BUG]  [BUGGY]  if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(null);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired()  ||  group.isRequired())  {  requiredOpts.add(null);  }	      if(group.isRequired())    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
73	[BUG]  [BUGGY]  if(group.isRequired())  {  requiredOpts.add(null,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  if(group.isRequired())  {  requiredOpts.add(null,  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired())  {  requiredOpts.add(null,  group);  }	      if(group.isRequired())    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
74	[BUG]  [BUGGY]  found(false,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  found(false,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	found(false,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
75	[BUG]  [BUGGY]  found(false,  group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  found(false,  group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	found(false,  group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
76	[BUG]  [BUGGY]  found(false,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  found(false,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	found(false,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  group);  }	      if(group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
77	[BUG]  [BUGGY]  while(shortOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  while(shortOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	while(shortOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
78	[BUG]  [BUGGY]  if(shortOpts!=  null)  {  requiredOpts.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }    [BUGGY]  if(shortOpts!=  null)  {  requiredOpts.put(group.getKey(),  group);  }  [BUGGY]    for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(shortOpts!=  null)  {  requiredOpts.put(group.getKey(),  group);  }	      if(longOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
