bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)requiredOpts.get(group,  longOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group,  longOpts);	  Option    option    =(Option)requiredOpts.get(group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
2	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group,  lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)requiredOpts.get(group,  lengthOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group,  lengthOpts);	  Option    option    =(Option)requiredOpts.get(group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
3	[BUG]  [BUGGY]  Option  option  =(Option)longOpts.get(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)longOpts.get(group,  shortOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)longOpts.get(group,  shortOpts);	  Option    option    =(Option)requiredOpts.get(group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
4	[BUG]  [BUGGY]  Option  option  =(Option)longOpts.get(group,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)longOpts.get(group,  requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)longOpts.get(group,  requiredOpts);	  Option    option    =(Option)requiredOpts.get(group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
5	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group,  requiredOpts.size()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)requiredOpts.get(group,  requiredOpts.size()  +  1);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group,  requiredOpts.size()  +  1);	  Option    option    =(Option)requiredOpts.get(group    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
6	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.getOptionKey(),  group)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.getOptionKey(),  group)  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.getOptionKey(),  group)  {	  for(Option    option    :    this.optionGroups.getOptionKey())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
7	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.getOptionShortOpts())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.getOptionShortOpts())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.getOptionShortOpts())  {	  for(Option    option    :    this.optionGroups.getOptionKey())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
8	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.getAllOptions(),  group)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.getAllOptions(),  group)  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.getAllOptions(),  group)  {	  for(Option    option    :    this.optionGroups.getAllOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
9	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(requiredOpts!=  null)  {  requiredOpts.add(option);  }	  requiredOpts.add(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
10	[BUG]  [BUGGY]  if(requiredOpts.contains(option))  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(requiredOpts.contains(option))  {  requiredOpts.add(option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(requiredOpts.contains(option))  {  requiredOpts.add(option);  }	  requiredOpts.add(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
11	[BUG]  [BUGGY]  if(group.isRequired())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group.isRequired())  {  requiredOpts.add(option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired())  {  requiredOpts.add(option);  }	  requiredOpts.add(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
12	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)requiredOpts.get(group.getKey(),  shortOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group.getKey(),  shortOpts);	  Option    option    =(Option)requiredOpts.get(group.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
13	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)requiredOpts.get(group.getKey(),  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group.getKey(),  group);	  Option    option    =(Option)requiredOpts.get(group.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
14	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group.getKey(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)requiredOpts.get(group.getKey(),  requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group.getKey(),  requiredOpts);	  Option    option    =(Option)requiredOpts.get(group.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
15	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)requiredOpts.get(group.getValue());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group.getValue());	  Option    option    =(Option)requiredOpts.get(group.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
16	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.getOptionGroups(),  group)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.getOptionGroups(),  group)  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.getOptionGroups(),  group)  {	  for(Option    option    :    this.optionGroups.getOptionGroups())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
17	[BUG]  [BUGGY]  foundOpts.add(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  foundOpts.add(group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	foundOpts.add(group);	  foundOpts.add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
18	[BUG]  [BUGGY]  foundOpts.addAll(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  foundOpts.addAll(requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	foundOpts.addAll(requiredOpts);	  foundOpts.add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
19	[BUG]  [BUGGY]  foundOpts.add(group,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  foundOpts.add(group,  requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	foundOpts.add(group,  requiredOpts);	  foundOpts.add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
20	[BUG]  [BUGGY]  foundOpts.add(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  foundOpts.add(longOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	foundOpts.add(longOpts);	  foundOpts.add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
21	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.keySet())  {  this.optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.keySet())  {  this.optionGroups.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.keySet())  {  this.optionGroups.put(option.getKey(),  group);  }	  for(Option    option    :    group.getOptions())    {    this.optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
22	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.get(option.getKey(),  group))  {  this.optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.get(option.getKey(),  group))  {  this.optionGroups.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.get(option.getKey(),  group))  {  this.optionGroups.put(option.getKey(),  group);  }	  for(Option    option    :    group.getOptions())    {    this.optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
23	[BUG]  [BUGGY]  requiredOpts.add(null,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  requiredOpts.add(null,  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	requiredOpts.add(null,  group);	  if(group.isRequired())    {    requiredOpts.add(null,    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
24	[BUG]  [BUGGY]  requiredOpts.add(group,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  requiredOpts.add(group,  null);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	requiredOpts.add(group,  null);	  if(group.isRequired())    {    requiredOpts.add(null,    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
25	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups(),  longOpts)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptionGroups(),  longOpts)  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptionGroups(),  longOpts)  {	  for(Option    option    :    group.getOptionGroups(),    shortOpts)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
26	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups(),  shortOpts,  longOpts)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptionGroups(),  shortOpts,  longOpts)  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptionGroups(),  shortOpts,  longOpts)  {	  for(Option    option    :    group.getOptionGroups(),    shortOpts)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
27	[BUG]  [BUGGY]  for(Option  option  :  longOpts.getOptionGroups(),  shortOpts)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  longOpts.getOptionGroups(),  shortOpts)  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  longOpts.getOptionGroups(),  shortOpts)  {	  for(Option    option    :    group.getOptionGroups(),    shortOpts)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
28	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups(),  requiredOpts)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptionGroups(),  requiredOpts)  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptionGroups(),  requiredOpts)  {	  for(Option    option    :    group.getOptionGroups(),    shortOpts)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
29	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }	  for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
30	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(group.getKey(),  false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(group.getKey(),  false);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(group.getKey(),  false);  }	  for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
31	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(null);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(null);  }	  for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
32	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  group.getOptionGroup(option.getKey(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroup  =  group.getOptionGroup(option.getKey(),  requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  group.getOptionGroup(option.getKey(),  requiredOpts);	  OptionGroup    optionGroup    =    group.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
33	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  group.getOptionGroup(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroup  =  group.getOptionGroup(option.getKey(),  shortOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  group.getOptionGroup(option.getKey(),  shortOpts);	  OptionGroup    optionGroup    =    group.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
34	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  group.getOptionGroup(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroup  =  group.getOptionGroup(option.getKey(),  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  group.getOptionGroup(option.getKey(),  group);	  OptionGroup    optionGroup    =    group.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
35	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  group.getOptionGroup(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroup  =  group.getOptionGroup(group.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  group.getOptionGroup(group.getKey());	  OptionGroup    optionGroup    =    group.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
36	[BUG]  [BUGGY]  option.setRequired(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  option.setRequired(true);  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	option.setRequired(true);	  option.setRequired(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
37	[BUG]  [BUGGY]  for(Option  option  :  longOpts)  {  neededOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  longOpts)  {  neededOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  longOpts)  {  neededOpts.put(option.getKey(),  group);  }	  for(Option    option    :    shortOpts)    {    neededOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
38	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.values())  {  neededOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  shortOpts.values())  {  neededOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  shortOpts.values())  {  neededOpts.put(option.getKey(),  group);  }	  for(Option    option    :    shortOpts)    {    neededOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
39	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  optionGroups.put(group.getKey(),  requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	optionGroups.put(group.getKey(),  requiredOpts);	  optionGroups.put(group.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
40	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  optionGroups.put(group.getKey(),  shortOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	optionGroups.put(group.getKey(),  shortOpts);	  optionGroups.put(group.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
41	[BUG]  [BUGGY]  Option  option  =  option.getOption(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =  option.getOption(group.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =  option.getOption(group.getKey());	  Option    option    =    option.getOption(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
42	[BUG]  [BUGGY]  Option  option  =  optionGroups.getOption(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =  optionGroups.getOption(option.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =  optionGroups.getOption(option.getKey());	  Option    option    =    option.getOption(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
43	[BUG]  [BUGGY]  Option  option  =  option.getOption(group.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =  option.getOption(group.getValue());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =  option.getOption(group.getValue());	  Option    option    =    option.getOption(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
44	[BUG]  [BUGGY]  option  =  option.getOption(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  option  =  option.getOption(group.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	option  =  option.getOption(group.getKey());	  Option    option    =    option.getOption(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
45	[BUG]  [BUGGY]  For(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  For(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	For(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }	  for(Option    option    :    longOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
46	[BUG]  [BUGGY]  group.size()  ==  0)  {  for(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  group.size()  ==  0)  {  for(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.size()  ==  0)  {  for(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }	  group.size()    >    0)    {    for(Option    option    :    longOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
47	[BUG]  [BUGGY]  group.size()  >=  0)  {  for(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  group.size()  >=  0)  {  for(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.size()  >=  0)  {  for(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }	  group.size()    >    0)    {    for(Option    option    :    longOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
48	[BUG]  [BUGGY]  for(Option  option  :  longOpts.getOpts())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  longOpts.getOpts())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  longOpts.getOpts())  {	  for(Option    option    :    shortOpts.getOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
49	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.getOptions())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  shortOpts.getOptions())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  shortOpts.getOptions())  {	  for(Option    option    :    shortOpts.getOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
50	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.keySet())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  shortOpts.keySet())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  shortOpts.keySet())  {	  for(Option    option    :    shortOpts.getOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
51	[BUG]  [BUGGY]  if(group.isRequired()  ||  shortOpts.contains(group))  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group.isRequired()  ||  shortOpts.contains(group))  {  requiredOpts.add(group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired()  ||  shortOpts.contains(group))  {  requiredOpts.add(group);  }	  if(group.isRequired()    ||    requiredOpts.contains(group))    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
52	[BUG]  [BUGGY]  if(group.isRequired()  &&  requiredOpts.contains(group))  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group.isRequired()  &&  requiredOpts.contains(group))  {  requiredOpts.add(group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired()  &&  requiredOpts.contains(group))  {  requiredOpts.add(group);  }	  if(group.isRequired()    ||    requiredOpts.contains(group))    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
53	[BUG]  [BUGGY]  if(requiredOpts.contains(group))  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(requiredOpts.contains(group))  {  requiredOpts.add(group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(requiredOpts.contains(group))  {  requiredOpts.add(group);  }	  if(group.isRequired()    ||    requiredOpts.contains(group))    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
54	[BUG]  [BUGGY]  while(longOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  while(longOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	while(longOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }	  while(shortOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
55	[BUG]  [BUGGY]  while(group!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  while(group!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	while(group!=  null)  {  shortOpts.put(group.getKey(),  group);  }	  while(shortOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
56	[BUG]  [BUGGY]  while(shortOpts!=  null)  {  shortOpts.put(group.getKey(),  requiredOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  while(shortOpts!=  null)  {  shortOpts.put(group.getKey(),  requiredOpts);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	while(shortOpts!=  null)  {  shortOpts.put(group.getKey(),  requiredOpts);  }	  while(shortOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
57	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(null);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(requiredOpts!=  null)  {  requiredOpts.add(null);  }	  requiredOpts.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
58	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(null);  }  else  {  setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(null);  }  else  {  setRequired(false);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(requiredOpts!=  null)  {  requiredOpts.add(null);  }  else  {  setRequired(false);  }	  requiredOpts.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
59	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(null);  }  else  {  longOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(null);  }  else  {  longOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(requiredOpts!=  null)  {  requiredOpts.add(null);  }  else  {  longOpts.put(option.getKey(),  group);  }	  requiredOpts.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
60	[BUG]  [BUGGY]  For(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  For(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	For(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }	  For(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
61	[BUG]  [BUGGY]  For(Option  option  :  shortOpts.keySet())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  For(Option  option  :  shortOpts.keySet())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	For(Option  option  :  shortOpts.keySet())  {  requiredOpts.put(option.getKey(),  group);  }	  For(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
62	[BUG]  [BUGGY]  if(group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }	  requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
63	[BUG]  [BUGGY]  requiredOpts.put(group.getKey(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  requiredOpts.put(group.getKey(),  option);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	requiredOpts.put(group.getKey(),  option);	  requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
64	[BUG]  [BUGGY]  requiredOpts.put(option.getKey(),  group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  requiredOpts.put(option.getKey(),  group,  shortOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	requiredOpts.put(option.getKey(),  group,  shortOpts);	  requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
65	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptionGroups())  {  requiredOpts.put(option.getKey(),  group);  }	  for(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
66	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  shortOpts);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  shortOpts);  }	  for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
67	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(group);  }	  for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
68	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	  for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
69	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.isRequired())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group.isRequired()  &&  group.isRequired())  {  requiredOpts.add(false);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired()  &&  group.isRequired())  {  requiredOpts.add(false);  }	  if(group.isRequired()    ||    group.isRequired())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
70	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(false);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(requiredOpts!=  null)  {  requiredOpts.add(false);  }	  requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
71	[BUG]  [BUGGY]  if(requiredOpts.size()  >  0)  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(requiredOpts.size()  >  0)  {  requiredOpts.add(false);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(requiredOpts.size()  >  0)  {  requiredOpts.add(false);  }	  requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
72	[BUG]  [BUGGY]  requiredOpts.add(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  requiredOpts.add(true);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	requiredOpts.add(true);	  requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
73	[BUG]  [BUGGY]  OptionGroup  group  =  this.optionGroups.get(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  group  =  this.optionGroups.get(option.getKey(),  shortOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  this.optionGroups.get(option.getKey(),  shortOpts);	  OptionGroup    group    =    this.optionGroups.get(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
74	[BUG]  [BUGGY]  OptionGroup  group  =  this.optionGroups.get(option.getKey(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  group  =  this.optionGroups.get(option.getKey(),  requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  this.optionGroups.get(option.getKey(),  requiredOpts);	  OptionGroup    group    =    this.optionGroups.get(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
75	[BUG]  [BUGGY]  OptionGroup  group  =  this.optionGroups.get(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  group  =  this.optionGroups.get(group.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  this.optionGroups.get(group.getKey());	  OptionGroup    group    =    this.optionGroups.get(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
76	[BUG]  [BUGGY]  OptionGroup  group  =  this.optionGroups.get(option.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  group  =  this.optionGroups.get(option.getValue());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  this.optionGroups.get(option.getValue());	  OptionGroup    group    =    this.optionGroups.get(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
77	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  group.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroup  =  group.getOptionGroup();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  group.getOptionGroup();	  OptionGroup    optionGroup    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
78	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  option.getOptionGroup(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroup  =  option.getOptionGroup(group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  option.getOptionGroup(group);	  OptionGroup    optionGroup    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
79	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  option.getOptionGroup(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroup  =  option.getOptionGroup(),  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  option.getOptionGroup(),  group);	  OptionGroup    optionGroup    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
80	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  shortOpts  =  group.getLongOpts();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  shortOpts  =  group.getLongOpts();	  OptionGroup    shortOpts    =    group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
81	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getRequiredOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  shortOpts  =  group.getRequiredOpts();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  shortOpts  =  group.getRequiredOpts();	  OptionGroup    shortOpts    =    group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
82	[BUG]  [BUGGY]  for(Option  option  :  longOpts.keySet())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  longOpts.keySet())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  longOpts.keySet())  {  requiredOpts.put(option.getKey(),  group);  }	  for(Option    option    :    shortOpts.keySet())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
83	[BUG]  [BUGGY]  for(Option  option  :  group.keySet())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.keySet())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.keySet())  {  requiredOpts.put(option.getKey(),  group);  }	  for(Option    option    :    shortOpts.keySet())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
84	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.getOptions())  {  neededOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  shortOpts.getOptions())  {  neededOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  shortOpts.getOptions())  {  neededOpts.put(option.getKey(),  group);  }	  for(Option    option    :    group.getOptions())    {    neededOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
85	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  neededOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  neededOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptionGroups())  {  neededOpts.put(option.getKey(),  group);  }	  for(Option    option    :    group.getOptions())    {    neededOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
86	[BUG]  [BUGGY]  OptionGroup  group  =  requiredOpts.getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  group  =  requiredOpts.getOptions();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  requiredOpts.getOptions();	  OptionGroup    group    =    group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
87	[BUG]  [BUGGY]  OptionGroup  group  =  group.getOptions(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  group  =  group.getOptions(),  requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  group.getOptions(),  requiredOpts);	  OptionGroup    group    =    group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
88	[BUG]  [BUGGY]  OptionGroup  group  =  this.longOpts.getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  group  =  this.longOpts.getOptions();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  this.longOpts.getOptions();	  OptionGroup    group    =    group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
89	[BUG]  [BUGGY]  for(Option  option  :  requiredOpts.options())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  requiredOpts.options())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  requiredOpts.options())  {	  for(Option    option    :    group.options())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
90	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.options())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  shortOpts.options())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  shortOpts.options())  {	  for(Option    option    :    group.options())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
91	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.options())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.options())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.options())  {	  for(Option    option    :    group.options())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
92	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  neededOpts.add(option,  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptions())  {  neededOpts.add(option,  shortOpts);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  neededOpts.add(option,  shortOpts);  }	  for(Option    option    :    group.getOptions())    {    neededOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
93	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  neededOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  neededOpts.add(option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptionGroups())  {  neededOpts.add(option);  }	  for(Option    option    :    group.getOptions())    {    neededOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
94	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.values(),  group)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.values(),  group)  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.values(),  group)  {	  for(Option    option    :    this.optionGroups.values())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
95	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.values()  ||  group.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.values()  ||  group.isRequired())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.values()  ||  group.isRequired())  {	  for(Option    option    :    this.optionGroups.values())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
96	[BUG]  [BUGGY]  Option  group  =  option.getOption(group,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  group  =  option.getOption(group,  requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  group  =  option.getOption(group,  requiredOpts);	  Option    group    =    option.getOption(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
97	[BUG]  [BUGGY]  Option  group  =  option.getOption(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  group  =  option.getOption(requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  group  =  option.getOption(requiredOpts);	  Option    group    =    option.getOption(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
98	[BUG]  [BUGGY]  Option  group  =  option.getOptionGroup(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  group  =  option.getOptionGroup(group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  group  =  option.getOptionGroup(group);	  Option    group    =    option.getOption(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
99	[BUG]  [BUGGY]  group.size()  ==  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  group.size()  ==  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.size()  ==  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }	  group.size()    >    0)    {    for(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
100	[BUG]  [BUGGY]  group.size()  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  group.size()  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.size()  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }	  group.size()    >    0)    {    for(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
101	[BUG]  [BUGGY]  group.size()  <  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  group.size()  <  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.size()  <  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }	  group.size()    >    0)    {    for(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
102	[BUG]  [BUGGY]  while(group.size()  >  0)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  while(group.size()  >  0)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	while(group.size()  >  0)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }	  while(longOpts.size()    >    0)    {    for(Option    option    :    longOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
103	[BUG]  [BUGGY]  while(group.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  while(group.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	while(group.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }	  while(longOpts.size()    >    0)    {    for(Option    option    :    longOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
104	[BUG]  [BUGGY]  found(true,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  found(true,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	found(true,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }	  found(false,    group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
105	[BUG]  [BUGGY]  longOpts  =  shortOpts.get(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  longOpts  =  shortOpts.get(group.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	longOpts  =  shortOpts.get(group.getKey());	  if(shortOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
106	[BUG]  [BUGGY]  Option  option  =  group.getOption(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =  group.getOption(),  requiredOpts);  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =  group.getOption(),  requiredOpts);	  Option    option    =    group.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
107	[BUG]  [BUGGY]  Option  option  =  group.getOption(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =  group.getOption(requiredOpts);  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =  group.getOption(requiredOpts);	  Option    option    =    group.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
108	[BUG]  [BUGGY]  Option  option  =  group.getOption(),  requiredOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =  group.getOption(),  requiredOpts;  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =  group.getOption(),  requiredOpts;	  Option    option    =    group.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
109	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group  -  1  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)requiredOpts.get(group  -  1  +  1);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group  -  1  +  1);	  Option    option    =(Option)requiredOpts.get(group    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
110	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group  *  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)requiredOpts.get(group  *  1);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group  *  1);	  Option    option    =(Option)requiredOpts.get(group    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
111	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  group  =  option.getGroup();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  option.getGroup();	  OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
112	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  group  =  option.getOptionGroups();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  option.getOptionGroups();	  OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
113	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  option.getOptionGroup(group);	  OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
114	[BUG]  [BUGGY]  requiredOpts.add(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  requiredOpts.add(group,  shortOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	requiredOpts.add(group,  shortOpts);	  requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
115	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(requiredOpts!=  null)  {  requiredOpts.add(group);  }	  requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
116	[BUG]  [BUGGY]  OptionGroup  optionGroups  =  group.getOptionGroups(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroups  =  group.getOptionGroups(requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroups  =  group.getOptionGroups(requiredOpts);	  OptionGroup    optionGroups    =    group.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
117	[BUG]  [BUGGY]  OptionGroup  optionGroups  =  group.getOptionGroups(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroups  =  group.getOptionGroups(),  requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroups  =  group.getOptionGroups(),  requiredOpts);	  OptionGroup    optionGroups    =    group.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
118	[BUG]  [BUGGY]  OptionGroup  optionGroups  =  group.getOptionGroups(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroups  =  group.getOptionGroups(),  shortOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroups  =  group.getOptionGroups(),  shortOpts);	  OptionGroup    optionGroups    =    group.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
119	[BUG]  [BUGGY]  for(Option  option  :  group.values())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.values())  {  requiredOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.values())  {  requiredOpts.put(option.getKey(),  shortOpts);  }	  for(Option    option    :    shortOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
120	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  option.getOptionGroup(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroup  =  option.getOptionGroup(group.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  option.getOptionGroup(group.getKey());	  OptionGroup    optionGroup    =    option.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
121	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  option.getOptionGroup(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroup  =  option.getOptionGroup(option.getKey(),  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  option.getOptionGroup(option.getKey(),  group);	  OptionGroup    optionGroup    =    option.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
122	[BUG]  [BUGGY]  optionGroup  =  option.getOptionGroup(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  optionGroup  =  option.getOptionGroup(group.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	optionGroup  =  option.getOptionGroup(group.getKey());	  OptionGroup    optionGroup    =    option.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
123	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  options.getOptionGroup(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroup  =  options.getOptionGroup(option.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  options.getOptionGroup(option.getKey());	  OptionGroup    optionGroup    =    option.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
124	[BUG]  [BUGGY]  while(shortOpts.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  while(shortOpts.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	while(shortOpts.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }	  while(longOpts.size()    >    0)    {    for(Option    option    :    shortOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
125	[BUG]  [BUGGY]  while(lengthOpts.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  while(lengthOpts.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	while(lengthOpts.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }	  while(longOpts.size()    >    0)    {    for(Option    option    :    shortOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
126	[BUG]  [BUGGY]  if(group!=  null)  {  requiredOpts.put(group.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group!=  null)  {  requiredOpts.put(group.getKey(),  shortOpts);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group!=  null)  {  requiredOpts.put(group.getKey(),  shortOpts);  }	  if(shortOpts!=    null)    {    requiredOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
127	[BUG]  [BUGGY]  if(longOpts!=  null)  {  requiredOpts.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(longOpts!=  null)  {  requiredOpts.put(group.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(longOpts!=  null)  {  requiredOpts.put(group.getKey(),  group);  }	  if(shortOpts!=    null)    {    requiredOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
128	[BUG]  [BUGGY]  while(group!=  null)  {  requiredOpts.put(group.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  while(group!=  null)  {  requiredOpts.put(group.getKey(),  shortOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	while(group!=  null)  {  requiredOpts.put(group.getKey(),  shortOpts);	  if(shortOpts!=    null)    {    requiredOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
129	[BUG]  [BUGGY]  requiredOpts.put(group.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  requiredOpts.put(group.getKey(),  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	requiredOpts.put(group.getKey(),  group);	  if(shortOpts!=    null)    {    requiredOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
130	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  shortOpts  =  group.getShortOpts(),  requiredOpts);	  OptionGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
131	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts);	  OptionGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
132	[BUG]  [BUGGY]  Option  shortOpts  =  option.getShortOpts(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  shortOpts  =  option.getShortOpts(),  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  shortOpts  =  option.getShortOpts(),  group);	  Option    shortOpts    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
133	[BUG]  [BUGGY]  Option  shortOpts  =  group.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  shortOpts  =  group.getShortOpts();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  shortOpts  =  group.getShortOpts();	  Option    shortOpts    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
134	[BUG]  [BUGGY]  Option  shortOpts  =  option.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  shortOpts  =  option.getLongOpts();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  shortOpts  =  option.getLongOpts();	  Option    shortOpts    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
135	[BUG]  [BUGGY]  for(Option  option  :  group.getOption())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOption())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOption())  {	  for(Option    option    :    group.getKey())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
136	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroup())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptionGroup())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptionGroup())  {	  for(Option    option    :    group.getKey())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
137	[BUG]  [BUGGY]  group.setRequired(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  group.setRequired(true);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.setRequired(true);	  group.setRequired(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
138	[BUG]  [BUGGY]  group.setRequired(false,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  group.setRequired(false,  requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.setRequired(false,  requiredOpts);	  group.setRequired(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
139	[BUG]  [BUGGY]  group.setRequired(falseOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  group.setRequired(falseOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.setRequired(falseOpts);	  group.setRequired(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
140	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.isRequired())  {  requiredOpts.add(group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group.isRequired()  &&  group.isRequired())  {  requiredOpts.add(group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired()  &&  group.isRequired())  {  requiredOpts.add(group);  }	  if(group.isRequired()    ||    group.isRequired())    {    requiredOpts.add(group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
141	[BUG]  [BUGGY]  if(group.isRequired()  ||  shortOpts.isRequired())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group.isRequired()  ||  shortOpts.isRequired())  {  requiredOpts.add(null);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired()  ||  shortOpts.isRequired())  {  requiredOpts.add(null);  }	  if(group.isRequired()    ||    group.isRequired())    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
142	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  group,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  optionGroups.put(option.getKey(),  group,  requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	optionGroups.put(option.getKey(),  group,  requiredOpts);	  optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
143	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  optionGroups.put(option.getKey(),  requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	optionGroups.put(option.getKey(),  requiredOpts);	  optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
144	[BUG]  [BUGGY]  Option  option  =(Option)this.longOpts.get(group,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)this.longOpts.get(group,  requiredOpts);  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)this.longOpts.get(group,  requiredOpts);	  Option    option    =(Option)this.longOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
145	[BUG]  [BUGGY]  Option  option  =(Option)this.longOpts.get(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)this.longOpts.get(group,  shortOpts);  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)this.longOpts.get(group,  shortOpts);	  Option    option    =(Option)this.longOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
146	[BUG]  [BUGGY]  group!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  group!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group!=  null)  {  shortOpts.put(group.getKey(),  group);  }	  if(group!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
147	[BUG]  [BUGGY]  while(group!=  null)  {  shortOpts.put(group.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  while(group!=  null)  {  shortOpts.put(group.getKey(),  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	while(group!=  null)  {  shortOpts.put(group.getKey(),  group);	  if(group!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
148	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.keySet(),  group)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.keySet(),  group)  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.keySet(),  group)  {	  for(Option    option    :    this.optionGroups.keySet())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
149	[BUG]  [BUGGY]  for(Option  option  :  this.options.keySet())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.options.keySet())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.options.keySet())  {	  for(Option    option    :    this.optionGroups.keySet())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
150	[BUG]  [BUGGY]  if(group.isRequired())  {  if(shortOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group.isRequired())  {  if(shortOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired())  {  if(shortOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }	  if(group.isRequired())    {    if(longOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
151	[BUG]  [BUGGY]  if(group.isRequired())  {  if(longOpts  ==  null)  {  shortOpts.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group.isRequired())  {  if(longOpts  ==  null)  {  shortOpts.put(group.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired())  {  if(longOpts  ==  null)  {  shortOpts.put(group.getKey(),  group);  }	  if(group.isRequired())    {    if(longOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
152	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.getOptions(),  group,  shortOpts)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.getOptions(),  group,  shortOpts)  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.getOptions(),  group,  shortOpts)  {	  for(Option    option    :    this.optionGroups.getOptions(),    group)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
153	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.getOptions(),  shortOpts)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.getOptions(),  shortOpts)  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.getOptions(),  shortOpts)  {	  for(Option    option    :    this.optionGroups.getOptions(),    group)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
154	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.getOptions(),  group,  requiredOpts)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.getOptions(),  group,  requiredOpts)  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.getOptions(),  group,  requiredOpts)  {	  for(Option    option    :    this.optionGroups.getOptions(),    group)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
155	[BUG]  [BUGGY]  found(true,  group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  found(true,  group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	found(true,  group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }	  found(false,    group.isRequired())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
156	[BUG]  [BUGGY]  found(false,  group.isRequired(),  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  found(false,  group.isRequired(),  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	found(false,  group.isRequired(),  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }	  found(false,    group.isRequired())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
157	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.get(group.getKey()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.get(group.getKey()))  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.get(group.getKey()))  {	  for(Option    option    :    this.optionGroups.get(group.getOpts()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
158	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.get(group.getOpts(),  shortOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.get(group.getOpts(),  shortOpts))  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.get(group.getOpts(),  shortOpts))  {	  for(Option    option    :    this.optionGroups.get(group.getOpts()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
159	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.get(group.getOpts(),  longOpts))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.get(group.getOpts(),  longOpts))  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.get(group.getOpts(),  longOpts))  {	  for(Option    option    :    this.optionGroups.get(group.getOpts()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
160	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.get(group.getName()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.get(group.getName()))  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.get(group.getName()))  {	  for(Option    option    :    this.optionGroups.get(group.getOpts()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
161	[BUG]  [BUGGY]  this.optionGroups.put(option.getKey(),  group,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  this.optionGroups.put(option.getKey(),  group,  requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	this.optionGroups.put(option.getKey(),  group,  requiredOpts);	  this.optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
162	[BUG]  [BUGGY]  this.optionGroups.put(group.getKey(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  this.optionGroups.put(group.getKey(),  option);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	this.optionGroups.put(group.getKey(),  option);	  this.optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
163	[BUG]  [BUGGY]  this.optionGroups.put(option.getKey(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  this.optionGroups.put(option.getKey(),  requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	this.optionGroups.put(option.getKey(),  requiredOpts);	  this.optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
164	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	For(Option  option  :  group.getOptions())  {  requiredOpts.add(true);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
165	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  shortOpts);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	For(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  shortOpts);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
166	[BUG]  [BUGGY]  shortOpts.put(group.getKey(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  shortOpts.put(group.getKey(),  requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	shortOpts.put(group.getKey(),  requiredOpts);	  shortOpts.put(group.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
167	[BUG]  [BUGGY]  longOpts.put(group.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  longOpts.put(group.getKey(),  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	longOpts.put(group.getKey(),  group);	  shortOpts.put(group.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
168	[BUG]  [BUGGY]  shortOpts.put(group.getKey(),  new  OptionGroup(group));  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  shortOpts.put(group.getKey(),  new  OptionGroup(group));  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	shortOpts.put(group.getKey(),  new  OptionGroup(group));	  shortOpts.put(group.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
169	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts(),  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  shortOpts  =  option.getShortOpts(),  group);	  OptionGroup    shortOpts    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
170	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  shortOpts  =  option.getLongOpts();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  shortOpts  =  option.getLongOpts();	  OptionGroup    shortOpts    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
171	[BUG]  [BUGGY]  found(true,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  found(true,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	found(true,  group.isRequired())  {  for(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  group);  }	  found(false,    group.isRequired())    {    for(Option    option    :    group.getOptions())    {    neededOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
172	[BUG]  [BUGGY]  For(Option  group  :  option.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  For(Option  group  :  option.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	For(Option  group  :  option.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
173	[BUG]  [BUGGY]  optionGroups.add(null,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  optionGroups.add(null,  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	optionGroups.add(null,  group);	  if(group.isRequired())    {    requiredOpts.add(null,    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
174	[BUG]  [BUGGY]  while(shortOpts.size()  >  0)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  while(shortOpts.size()  >  0)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	while(shortOpts.size()  >  0)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }	  while(longOpts.size()    >    0)    {    for(Option    option    :    shortOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
175	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.get(group.getOpts(),  group))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.get(group.getOpts(),  group))  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.get(group.getOpts(),  group))  {	  for(Option    option    :    this.optionGroups.get(group.getOpts()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
176	[BUG]  [BUGGY]  OptionGroup  group  =  this.optionGroups.get(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  group  =  this.optionGroups.get(option.getKey(),  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  this.optionGroups.get(option.getKey(),  group);	  OptionGroup    group    =    this.optionGroups.get(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
177	[BUG]  [BUGGY]  uncovered(true,  group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  uncovered(true,  group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	uncovered(true,  group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }	  found(false,    group.isRequired())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
178	[BUG]  [BUGGY]  for(Option  option  :  group.optionGroups())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.optionGroups())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.optionGroups())  {	  for(Option    option    :    group.options())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
179	[BUG]  [BUGGY]  for(Option  option  :  options.options())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  options.options())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  options.options())  {	  for(Option    option    :    group.options())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
180	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  optionGroups.put(group.getKey(),  option);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	optionGroups.put(group.getKey(),  option);	  optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
181	[BUG]  [BUGGY]  Option  option  =  group.getOption(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =  group.getOption(option.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =  group.getOption(option.getKey());	  optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
182	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions(),  longOpts)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptions(),  longOpts)  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions(),  longOpts)  {	  for(Option    option    :    group.getOptionGroups(),    shortOpts)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
183	[BUG]  [BUGGY]  for(Option  option  :  group.values())  {  requiredOpts.put(option.getKey(),  option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.values())  {  requiredOpts.put(option.getKey(),  option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.values())  {  requiredOpts.put(option.getKey(),  option);  }	  for(Option    option    :    shortOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
184	[BUG]  [BUGGY]  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  option);  }	  for(Option    option    :    shortOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
185	[BUG]  [BUGGY]  if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired())  {  for(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  group);  }	  found(false,    group.isRequired())    {    for(Option    option    :    group.getOptions())    {    neededOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
186	[BUG]  [BUGGY]  Option  option  =  options.getOption(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =  options.getOption(group.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =  options.getOption(group.getKey());	  Option    option    =    option.getOption(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
187	[BUG]  [BUGGY]  OptionGroup  group  =  group.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  group  =  group.getOptionGroups();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  group.getOptionGroups();	  OptionGroup    group    =    group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
188	[BUG]  [BUGGY]  OptionGroup  group  =  group.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  group  =  group.getOptionGroup();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  group.getOptionGroup();	  OptionGroup    group    =    group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
189	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  group  =  option.getOptions();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  option.getOptions();	  OptionGroup    group    =    group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
190	[BUG]  [BUGGY]  for(Option  option  :  shortOpts.values())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  shortOpts.values())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  shortOpts.values())  {	  for(Option    option    :    shortOpts.getOpts())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
191	[BUG]  [BUGGY]  Option  optionGroup  =  option.getOptionGroup(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  optionGroup  =  option.getOptionGroup(group.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  optionGroup  =  option.getOptionGroup(group.getKey());	  OptionGroup    optionGroup    =    option.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
192	[BUG]  [BUGGY]  OptionOption  optionGroup  =  option.getOptionGroup(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionOption  optionGroup  =  option.getOptionGroup(group.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionOption  optionGroup  =  option.getOptionGroup(group.getKey());	  OptionGroup    optionGroup    =    option.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
193	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  this.optionGroups.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  this.optionGroups.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptionGroups())  {  this.optionGroups.put(option.getKey(),  group);  }	  for(Option    option    :    group.getOptions())    {    this.optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
194	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  this.optionGroups.put(option.getKey(),  member);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptions())  {  this.optionGroups.put(option.getKey(),  member);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  this.optionGroups.put(option.getKey(),  member);  }	  for(Option    option    :    group.getOptions())    {    this.optionGroups.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
195	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)requiredOpts.get(group  -  2);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group  -  2);	  Option    option    =(Option)requiredOpts.get(group    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
196	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group  -  1  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)requiredOpts.get(group  -  1  -  1);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group  -  1  -  1);	  Option    option    =(Option)requiredOpts.get(group    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
197	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group.getKey(),  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)requiredOpts.get(group.getKey(),  false);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group.getKey(),  false);	  Option    option    =(Option)requiredOpts.get(group.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
198	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  new  OptionGroup(group));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  optionGroups.put(group.getKey(),  new  OptionGroup(group));  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	optionGroups.put(group.getKey(),  new  OptionGroup(group));	  optionGroups.put(group.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
199	[BUG]  [BUGGY]  uncoveredOpts.add(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  uncoveredOpts.add(group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	uncoveredOpts.add(group);	  foundOpts.add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
200	[BUG]  [BUGGY]  if(group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }  else  {  shortOpts.put(option.getKey(),  group);  }	  requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
201	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionKey())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptionKey())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptionKey())  {	  for(Option    option    :    group.getKey())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
202	[BUG]  [BUGGY]  For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	For(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(option);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
203	[BUG]  [BUGGY]  RequiredOpts.For(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  RequiredOpts.For(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	RequiredOpts.For(Option  option  :  group.getOptions())  {  requiredOpts.add(option);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
204	[BUG]  [BUGGY]  group.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  group.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }	  if(longOpts.size()    >    0)    {    for(Option    option    :    shortOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
205	[BUG]  [BUGGY]  group.size()  >  0)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  group.size()  >  0)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.size()  >  0)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }	  if(longOpts.size()    >    0)    {    for(Option    option    :    shortOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
206	[BUG]  [BUGGY]  group.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey()  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  group.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey()  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.size()  >  0)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey()	  if(longOpts.size()    >    0)    {    for(Option    option    :    shortOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
207	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts(longOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  shortOpts  =  option.getShortOpts(longOpts);	  OptionGroup    shortOpts    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
208	[BUG]  [BUGGY]  this.optionGroups.put(option.getValue(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  this.optionGroups.put(option.getValue(),  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	this.optionGroups.put(option.getValue(),  group);	  this.optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
209	[BUG]  [BUGGY]  for(Option  option  :  group.keySet())  {  requiredOpts.put(option.getKey(),  option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.keySet())  {  requiredOpts.put(option.getKey(),  option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.keySet())  {  requiredOpts.put(option.getKey(),  option);  }	  for(Option    option    :    shortOpts.keySet())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
210	[BUG]  [BUGGY]  for(Option  option  :  longOpts)  {  neededOpts.put(option.getKey(),  option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  longOpts)  {  neededOpts.put(option.getKey(),  option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  longOpts)  {  neededOpts.put(option.getKey(),  option);  }	  for(Option    option    :    shortOpts)    {    neededOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
211	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  neededOpts.put(option.getKey(),  option);  }	  for(Option    option    :    shortOpts)    {    neededOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
212	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  option);  }	  for(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
213	[BUG]  [BUGGY]  requiredOpts.put(group.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  requiredOpts.put(group.getKey(),  shortOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	requiredOpts.put(group.getKey(),  shortOpts);	  if(shortOpts!=    null)    {    requiredOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
214	[BUG]  [BUGGY]  group.size()  >=  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  group.size()  >=  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.size()  >=  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }	  group.size()    >    0)    {    for(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
215	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  shortOpts.get(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  ShortOpts  shortOpts  =  shortOpts.get(group.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	ShortOpts  shortOpts  =  shortOpts.get(group.getKey());	  if(shortOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
216	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  shortOpts.get(group.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  ShortOpts  shortOpts  =  shortOpts.get(group.getKey(),  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	ShortOpts  shortOpts  =  shortOpts.get(group.getKey(),  group);	  if(shortOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
217	[BUG]  [BUGGY]  Option  optionGroup  =  option.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  optionGroup  =  option.getOptionGroup();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  optionGroup  =  option.getOptionGroup();	  OptionGroup    optionGroup    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
218	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  group.getOptionGroup(option.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroup  =  group.getOptionGroup(option.getValue());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  group.getOptionGroup(option.getValue());	  OptionGroup    optionGroup    =    group.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
219	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  group.getOptionGroup(option.getKey(),  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroup  =  group.getOptionGroup(option.getKey(),  false);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  group.getOptionGroup(option.getKey(),  false);	  OptionGroup    optionGroup    =    group.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
220	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(requiredOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  shortOpts  =  group.getShortOpts(requiredOpts);	  OptionGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
221	[BUG]  [BUGGY]  if(group.isRequired())  {  if(requiredOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group.isRequired())  {  if(requiredOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired())  {  if(requiredOpts!=  null)  {  shortOpts.put(group.getKey(),  group);  }	  if(group.isRequired())    {    if(longOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
222	[BUG]  [BUGGY]  Option  shortOpts  =  option.getShortOpts(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  shortOpts  =  option.getShortOpts(longOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  shortOpts  =  option.getShortOpts(longOpts);	  Option    shortOpts    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
223	[BUG]  [BUGGY]  shortOpts.put(group.getKey(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  shortOpts.put(group.getKey(),  option);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	shortOpts.put(group.getKey(),  option);	  shortOpts.put(group.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
224	[BUG]  [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  For(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	For(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  option);  }	  For(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
225	[BUG]  [BUGGY]  For(Option  option  :  group)  {  requiredOpts.put(option.getKey(),  option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  For(Option  option  :  group)  {  requiredOpts.put(option.getKey(),  option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	For(Option  option  :  group)  {  requiredOpts.put(option.getKey(),  option);  }	  For(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
226	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  options.values())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  options.values())  {	  for(Option    option    :    this.optionGroups.values())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
227	[BUG]  [BUGGY]  Option  option  =(Option)longOpts.get(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)longOpts.get(group);  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)longOpts.get(group);	  Option    option    =(Option)this.longOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
228	[BUG]  [BUGGY]  Option  option  =(Option)this.lengthOpts.get(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)this.lengthOpts.get(group);  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)this.lengthOpts.get(group);	  Option    option    =(Option)this.longOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
229	[BUG]  [BUGGY]  Option  option  =(Option)this.langOpts.get(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)this.langOpts.get(group);  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)this.langOpts.get(group);	  Option    option    =(Option)this.longOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
230	[BUG]  [BUGGY]  if(requiredOpts  ==  null)  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(requiredOpts  ==  null)  {  requiredOpts.add(option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(requiredOpts  ==  null)  {  requiredOpts.add(option);  }	  requiredOpts.add(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
231	[BUG]  [BUGGY]  For(Option  option  :  group.getOptionGroups())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  For(Option  option  :  group.getOptionGroups())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	For(Option  option  :  group.getOptionGroups())  {  requiredOpts.put(option.getKey(),  group);  }	  For(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
232	[BUG]  [BUGGY]  if(group.isRequired()  &&  group.isRequired())  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group.isRequired()  &&  group.isRequired())  {  requiredOpts.add(null);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired()  &&  group.isRequired())  {  requiredOpts.add(null);  }	  if(group.isRequired()    ||    group.isRequired())    {    requiredOpts.add(null);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
233	[BUG]  [BUGGY]  if(requiredOpts  ==  null)  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(requiredOpts  ==  null)  {  requiredOpts.add(false);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(requiredOpts  ==  null)  {  requiredOpts.add(false);  }	  requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
234	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.get(option.getKey()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.get(option.getKey()))  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.get(option.getKey()))  {	  for(Option    option    :    this.optionGroups.keySet())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
235	[BUG]  [BUGGY]  for(Option  option  :  options.keySet())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  options.keySet())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  options.keySet())  {	  for(Option    option    :    this.optionGroups.keySet())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
236	[BUG]  [BUGGY]  if(requiredOpts  ==  null)  {  requiredOpts.add(null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(requiredOpts  ==  null)  {  requiredOpts.add(null);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(requiredOpts  ==  null)  {  requiredOpts.add(null);  }	  requiredOpts.add(null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
237	[BUG]  [BUGGY]  OptionGroup  optionGroups  =  group.getOptionGroups(true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroups  =  group.getOptionGroups(true);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroups  =  group.getOptionGroups(true);	  OptionGroup    optionGroups    =    group.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
238	[BUG]  [BUGGY]  OptionGroup  optionGroups  =  group.getOptionGroups(this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroups  =  group.getOptionGroups(this);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroups  =  group.getOptionGroups(this);	  OptionGroup    optionGroups    =    group.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
239	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)group.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)group.getOptionGroup();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =(OptionGroup)group.getOptionGroup();	  OptionGroup    optionGroup    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
240	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  options.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroup  =  options.getOptionGroup();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  options.getOptionGroup();	  OptionGroup    optionGroup    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
241	[BUG]  [BUGGY]  Option  group  =  option.getOption(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  group  =  option.getOption(group.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  group  =  option.getOption(group.getKey());	  Option    group    =    option.getOption(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
242	[BUG]  [BUGGY]  while(shortOpts!=  null  &&  group.isRequired())  {  shortOpts.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  while(shortOpts!=  null  &&  group.isRequired())  {  shortOpts.put(group.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	while(shortOpts!=  null  &&  group.isRequired())  {  shortOpts.put(group.getKey(),  group);  }	  while(shortOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
243	[BUG]  [BUGGY]  while(shortOpts.size()  >  1)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  while(shortOpts.size()  >  1)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	while(shortOpts.size()  >  1)  {  for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }	  if(longOpts.size()    >    0)    {    for(Option    option    :    shortOpts.values())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
244	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.getOptions(),  group),  this.longOpts)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.getOptions(),  group),  this.longOpts)  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.getOptions(),  group),  this.longOpts)  {	  for(Option    option    :    this.optionGroups.getOptions(),    group)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
245	[BUG]  [BUGGY]  Option  option  =(Option)this.shortOpts.get(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)this.shortOpts.get(group);  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)this.shortOpts.get(group);	  Option    option    =(Option)this.longOpts.get(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
246	[BUG]  [BUGGY]  found(false,  group.isRequired())&&  requiredOpts.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  found(false,  group.isRequired())&&  requiredOpts.put(option.getKey(),  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	found(false,  group.isRequired())&&  requiredOpts.put(option.getKey(),  group);	  found(false,    group.isRequired())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
247	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.getAllOptionGroups())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.getAllOptionGroups())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.getAllOptionGroups())  {	  for(Option    option    :    this.optionGroups.getOptionGroups())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
248	[BUG]  [BUGGY]  this.optionGroups.put(option.getKey(),  group)  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  this.optionGroups.put(option.getKey(),  group)  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	this.optionGroups.put(option.getKey(),  group)	  this.optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
249	[BUG]  [BUGGY]  found(false)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  found(false)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	found(false)  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }	  found(false,    group.isRequired())    {    for(Option    option    :    group.getOptions())    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
250	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts;  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts;	  OptionGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
251	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  options.getOptionGroup(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroup  =  options.getOptionGroup(group.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroup  =  options.getOptionGroup(group.getKey());	  OptionGroup    optionGroup    =    option.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
252	[BUG]  [BUGGY]  if(group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }  else  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }  else  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired())  {  requiredOpts.put(option.getKey(),  group);  }  else  {  for(Option  option  :  group.getOptions())  {  requiredOpts.put(option.getKey(),  group);  }	  requiredOpts.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
253	[BUG]  [BUGGY]  Option  option  =(Option)requiredOpts.get(group.getKey()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =(Option)requiredOpts.get(group.getKey()  +  1);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =(Option)requiredOpts.get(group.getKey()  +  1);	  Option    option    =(Option)requiredOpts.get(group    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
254	[BUG]  [BUGGY]  if(requiredOpts.contains(group))  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(requiredOpts.contains(group))  {  requiredOpts.add(option);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(requiredOpts.contains(group))  {  requiredOpts.add(option);  }	  requiredOpts.add(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
255	[BUG]  [BUGGY]  group.size()  <  =  0)  {  for(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  group.size()  <  =  0)  {  for(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.size()  <  =  0)  {  for(Option  option  :  longOpts)  {  requiredOpts.put(option.getKey(),  group);  }	  group.size()    >    0)    {    for(Option    option    :    longOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
256	[BUG]  [BUGGY]  optionGroups.put(null,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  optionGroups.put(null,  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	optionGroups.put(null,  group);	  if(group.isRequired())    {    requiredOpts.add(null,    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
257	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  requiredOpts.add(option,  group);  }	  for(Option    option    :    group.getOptions())    {    requiredOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
258	[BUG]  [BUGGY]  OptionGroup  optionGroups  =  group.getOptionGroup(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  optionGroups  =  group.getOptionGroup(option.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  optionGroups  =  group.getOptionGroup(option.getKey());	  if(group.isRequired())    {    if(longOpts!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
259	[BUG]  [BUGGY]  Option  shortOpts  =  options.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  shortOpts  =  options.getShortOpts();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  shortOpts  =  options.getShortOpts();	  Option    shortOpts    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
260	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups(),  shortOpts,  langOpts)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptionGroups(),  shortOpts,  langOpts)  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptionGroups(),  shortOpts,  langOpts)  {	  for(Option    option    :    group.getOptionGroups(),    shortOpts)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
261	[BUG]  [BUGGY]  Option  option  =  option.getOptionGroup(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =  option.getOptionGroup(group.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =  option.getOptionGroup(group.getKey());	  Option    option    =    option.getOption(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
262	[BUG]  [BUGGY]  Option  option  =  optionGroups.get(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =  optionGroups.get(option.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =  optionGroups.get(option.getKey());	  Option    option    =    option.getOption(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
263	[BUG]  [BUGGY]  Option  option  =  group.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =  group.getOptionGroup();  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =  group.getOptionGroup();	  Option    option    =    group.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
264	[BUG]  [BUGGY]  Option  option  =  group.getOption(this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =  group.getOption(this);  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =  group.getOption(this);	  Option    option    =    group.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
265	[BUG]  [BUGGY]  Option  option  =  group.getOption(option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  Option  option  =  group.getOption(option);  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	Option  option  =  group.getOption(option);	  Option    option    =    group.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
266	[BUG]  [BUGGY]  optionGroups.put(option.getValue(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  optionGroups.put(option.getValue(),  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	optionGroups.put(option.getValue(),  group);	  optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
267	[BUG]  [BUGGY]  options.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  options.put(option.getKey(),  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	options.put(option.getKey(),  group);	  optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
268	[BUG]  [BUGGY]  for(Option  option  :  this.optionGroups.getAllOpts())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  this.optionGroups.getAllOpts())  {  [BUGGY]      {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  this.optionGroups.getAllOpts())  {	  for(Option    option    :    this.optionGroups.getAllOptions())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
269	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptionGroups())  {  requiredOpts.add(false);  }	  for(Option    option    :    group.getOptions())    {    requiredOpts.add(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
270	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  neededOpts.add(option,  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  for(Option  option  :  group.getOptions())  {  neededOpts.add(option,  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	for(Option  option  :  group.getOptions())  {  neededOpts.add(option,  group);  }	  for(Option    option    :    group.getOptions())    {    neededOpts.add(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
271	[BUG]  [BUGGY]  group!=  null  &&  shortOpts.put(group.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  group!=  null  &&  shortOpts.put(group.getKey(),  group);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group!=  null  &&  shortOpts.put(group.getKey(),  group);	  if(group!=    null)    {    shortOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
272	[BUG]  [BUGGY]  group.size()  <  =  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  group.size()  <  =  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	group.size()  <  =  0)  {  for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }	  group.size()    >    0)    {    for(Option    option    :    shortOpts)    {    requiredOpts.put(option.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
273	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  foundOpts.add(requiredOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(requiredOpts!=  null)  {  foundOpts.add(requiredOpts);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(requiredOpts!=  null)  {  foundOpts.add(requiredOpts);  }	  foundOpts.add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
274	[BUG]  [BUGGY]  if(requiredOpts.size()  >  0)  {  foundOpts.add(requiredOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(requiredOpts.size()  >  0)  {  foundOpts.add(requiredOpts);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(requiredOpts.size()  >  0)  {  foundOpts.add(requiredOpts);  }	  foundOpts.add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
275	[BUG]  [BUGGY]  if(requiredOpts.contains(group))  {  foundOpts.add(requiredOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(requiredOpts.contains(group))  {  foundOpts.add(requiredOpts);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(requiredOpts.contains(group))  {  foundOpts.add(requiredOpts);  }	  foundOpts.add(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
276	[BUG]  [BUGGY]  OptionGroup  group  =  group.getOptionGroup(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  group  =  group.getOptionGroup(group.getKey());  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  group  =  group.getOptionGroup(group.getKey());	  OptionGroup    group    =    group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
277	[BUG]  [BUGGY]  if(group!=  null)  {  requiredOpts.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group!=  null)  {  requiredOpts.put(group.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group!=  null)  {  requiredOpts.put(group.getKey(),  group);  }	  if(shortOpts!=    null)    {    requiredOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
278	[BUG]  [BUGGY]  found(group.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  found(group.getKey(),  shortOpts);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	found(group.getKey(),  shortOpts);	  if(shortOpts!=    null)    {    requiredOpts.put(group.getKey(),    group);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
279	[BUG]  [BUGGY]  if(group.isRequired())  {  requiredOpts.add(group);  }  else  {  longOpts.put(group.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  if(group.isRequired())  {  requiredOpts.add(group);  }  else  {  longOpts.put(group.getKey(),  group);  }  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	if(group.isRequired())  {  requiredOpts.add(group);  }  else  {  longOpts.put(group.getKey(),  group);  }	  requiredOpts.add(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
280	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  options.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  shortOpts  =  options.getShortOpts();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  shortOpts  =  options.getShortOpts();	  OptionGroup    shortOpts    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
281	[BUG]  [BUGGY]  optionalOpts.add(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  optionalOpts.add(false);  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	optionalOpts.add(false);	  requiredOpts.add(false);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
282	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOptionGroup(OptionGroup  group)  {  if  (group.isRequired())  {  requiredOpts.add(group);  }      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOptions();  [BUGGY]      for  (Option  option  :  group.getOptions())  {  {    option.setRequired(false);  addOption(option);  optionGroups.put(option.getKey(),  group);  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	OptionGroup  shortOpts  =  group.getShortOptions();	  OptionGroup    shortOpts    =    group.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
