bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getAll();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getAll();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  this.optionGroups.getAll();	      Collection    <    Option>    requiredOpts    =    this.optionGroups.getAllOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
2	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getAllRequiredOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getAllRequiredOptions();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  this.optionGroups.getAllRequiredOptions();	      Collection    <    Option>    requiredOpts    =    this.optionGroups.getAllOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
3	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getOptions();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  this.optionGroups.getOptions();	      Collection    <    Option>    requiredOpts    =    this.optionGroups.getAllOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
4	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size()  -  1);  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size()  -  1);	      Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
5	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size(),  shortOpts);  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size(),  shortOpts);	      Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
6	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size()  -  2);  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size()  -  2);	      Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
7	[BUG]  [BUGGY]  Collections.  <  Option>  requiredOpts  =  getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collections.  <  Option>  requiredOpts  =  getOptions();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.  <  Option>  requiredOpts  =  getOptions();	      Collections.    <    Option>    requiredOpts    =    getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
8	[BUG]  [BUGGY]  Collections.  <  Option>  requiredOpts  =  getRequiredOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collections.  <  Option>  requiredOpts  =  getRequiredOptions();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.  <  Option>  requiredOpts  =  getRequiredOptions();	      Collections.    <    Option>    requiredOpts    =    getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
9	[BUG]  [BUGGY]  Collections.  <  Option>  requiredOpts  =  getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collections.  <  Option>  requiredOpts  =  getShortOpts();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.  <  Option>  requiredOpts  =  getShortOpts();	      Collections.    <    Option>    requiredOpts    =    getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
10	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  shortOpts);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups(),  shortOpts);	  return    Collections.unmodifiableCollection(optionGroups());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
11	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  options);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  options);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups(),  options);	  return    Collections.unmodifiableCollection(optionGroups());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
12	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getRequiredOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  getRequiredOptions();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getRequiredOptions();	      Collection    <    Option>    requiredOpts    =    getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
13	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  getShortOpts();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getShortOpts();	      Collection    <    Option>    requiredOpts    =    getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
14	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  shortOpts);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups,  shortOpts);	  return    Collections.unmodifiableCollection(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
15	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(requiredOpts);	  return    Collections.unmodifiableCollection(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
16	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  requiredOpts);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups,  requiredOpts);	  return    Collections.unmodifiableCollection(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
17	[BUG]  [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups);	  return    Collections.unmodifiableCollection(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
18	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newHashSet();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newHashSet();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newHashSet();	      Collection    <    Option>    requiredOpts    =    Collections.newArrayList();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
19	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups);  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups);	      Collection    <    Option>    requiredOpts    =    Collections.newArrayList();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
20	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(requiredOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(requiredOpts.size());  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayList(requiredOpts.size());	      Collection    <    Option>    requiredOpts    =    Collections.newArrayList();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
21	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getRequiredOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  getRequiredOpts();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getRequiredOpts();	      Collection    <    Option>    requiredOpts    =    getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
22	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups());  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups());  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups());	      Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(helpOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
23	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(required);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(required);  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(required);	      Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(helpOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
24	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(shortOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(shortOpts());  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(shortOpts());	      Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(helpOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
25	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(longOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(longOpts());  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(longOpts());	      Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(helpOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
26	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  shortOpts);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  shortOpts);	  return    Collections.unmodifiableCollection(this.optionGroups());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
27	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.shortOpts);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this.shortOpts);	  return    Collections.unmodifiableCollection(this.optionGroups());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
28	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts);	  return    Collections.unmodifiableCollection(this.optionGroups());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
29	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  shortOpts);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups,  shortOpts);	  return    Collections.unmodifiableCollection(this.optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
30	[BUG]  [BUGGY]  if(this.optionGroups!=  null)  {  return  Collections.unmodifiableCollection(this.optionGroups);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  if(this.optionGroups!=  null)  {  return  Collections.unmodifiableCollection(this.optionGroups);  }  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	if(this.optionGroups!=  null)  {  return  Collections.unmodifiableCollection(this.optionGroups);  }	  return    Collections.unmodifiableCollection(this.optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
31	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts);	  return    Collections.unmodifiableCollection(this.optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
32	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.shortOpts);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups,  this.shortOpts);	  return    Collections.unmodifiableCollection(this.optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
33	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(requiredOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(requiredOpts.size());  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(requiredOpts.size());	      Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
34	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts);  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts);	      Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
35	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.EMPTY_LIST;  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.EMPTY_LIST;  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.EMPTY_LIST;	      Collection    <    Option>    requiredOpts    =    Collections.emptyList();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
36	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.emptySet();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.emptySet();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.emptySet();	      Collection    <    Option>    requiredOpts    =    Collections.emptyList();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
37	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(size()  -  1);  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(size()  -  1);	      Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
38	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts());  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts());	      Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
39	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size());	      Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
40	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.values());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.values());  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.values());	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
41	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
42	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  shortOpts  =  getShortOpts();  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  getShortOpts();	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
43	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.get(0));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.get(0));  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.get(0));	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
44	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts(),  shortOpts);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(requiredOpts(),  shortOpts);	  return    Collections.unmodifiableCollection(requiredOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
45	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups.getOptions());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(optionGroups.getOptions());  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups.getOptions());	  return    Collections.unmodifiableCollection(requiredOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
46	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  requiredOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  requiredOpts());  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups,  requiredOpts());	  return    Collections.unmodifiableCollection(requiredOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
47	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts(),  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts(),  optionGroups);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(requiredOpts(),  optionGroups);	  return    Collections.unmodifiableCollection(requiredOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
48	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getAllRequiredOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  getAllRequiredOptions();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getAllRequiredOptions();	      Collection    <    Option>    requiredOpts    =    getAllOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
49	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups);	  return    Collections.unmodifiableCollection(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
50	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups.size());  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups.size());	      Collection    <    Option>    requiredOpts    =    Collections.newArrayList();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
51	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getAllRequiredOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getAllRequiredOpts();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  this.optionGroups.getAllRequiredOpts();	      Collection    <    Option>    requiredOpts    =    this.optionGroups.getAllOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
52	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getAllOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  getAllOptionGroups();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getAllOptionGroups();	      Collection    <    Option>    requiredOpts    =    getAllOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
53	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  LinkedList  <  Option>();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  new  LinkedList  <  Option>();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  LinkedList  <  Option>();	      Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
54	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(longOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(longOpts.size());  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(longOpts.size());	      Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
55	[BUG]  [BUGGY]  Collections.  <  Option>  requiredOpts  =  getRequiredOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collections.  <  Option>  requiredOpts  =  getRequiredOpts();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.  <  Option>  requiredOpts  =  getRequiredOpts();	      Collections.    <    Option>    requiredOpts    =    getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
56	[BUG]  [BUGGY]  Collections.  <  Option>  requiredOpts  =  getRequiredOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collections.  <  Option>  requiredOpts  =  getRequiredOptionGroups();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.  <  Option>  requiredOpts  =  getRequiredOptionGroups();	      Collections.    <    Option>    requiredOpts    =    getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
57	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  optionGroups.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  optionGroups.length);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups(),  optionGroups.length);	  return    Collections.unmodifiableCollection(optionGroups());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
58	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getRequiredOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  getRequiredOptionGroups();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getRequiredOptionGroups();	      Collection    <    Option>    requiredOpts    =    getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
59	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(optionGroups());  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(optionGroups());  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(optionGroups());	      Collection    <    Option>    requiredOpts    =    Collections.emptyList();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
60	[BUG]  [BUGGY]  Collections.sort(optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collections.sort(optionGroups);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.sort(optionGroups);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
61	[BUG]  [BUGGY]  if(optionGroups  ==  null)  {  for(Option  option  :  options.values())  {  requiredOpts.add(optionGroup);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  if(optionGroups  ==  null)  {  for(Option  option  :  options.values())  {  requiredOpts.add(optionGroup);  }  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	if(optionGroups  ==  null)  {  for(Option  option  :  options.values())  {  requiredOpts.add(optionGroup);  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
62	[BUG]  [BUGGY]  if(optionGroups  ==  null)  {  for(Option  option  :  options.values())  {  requiredOpts.addAll(optionGroups.values());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  if(optionGroups  ==  null)  {  for(Option  option  :  options.values())  {  requiredOpts.addAll(optionGroups.values());  }  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	if(optionGroups  ==  null)  {  for(Option  option  :  options.values())  {  requiredOpts.addAll(optionGroups.values());  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
63	[BUG]  [BUGGY]  if(optionGroups  ==  null)  {  for(Option  option  :  options.values())  {  shortOpts.add(optionGroup);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  if(optionGroups  ==  null)  {  for(Option  option  :  options.values())  {  shortOpts.add(optionGroup);  }  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	if(optionGroups  ==  null)  {  for(Option  option  :  options.values())  {  shortOpts.add(optionGroup);  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
64	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size()  +  1);  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size()  +  1);	      Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
65	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(longOpts);  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(longOpts);	      Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(helpOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
66	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  optionGroups);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups(),  optionGroups);	  return    Collections.unmodifiableCollection(optionGroups());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
67	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getOptionGroups().values();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  getOptionGroups().values();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getOptionGroups().values();	      Collection    <    Option>    requiredOpts    =    getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
68	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(requiredOpts);  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(requiredOpts);	      Collection    <    Option>    requiredOpts    =    Collections.emptyList();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
69	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups);  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups);	      Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
70	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.optionGroups);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this.optionGroups);	  return    Collections.unmodifiableCollection(this.optionGroups());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
71	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this);	  return    Collections.unmodifiableCollection(this.optionGroups());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
72	[BUG]  [BUGGY]  Collections.  <  Option>  requiredOpts  =  new  ArrayList  <  Option>();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collections.  <  Option>  requiredOpts  =  new  ArrayList  <  Option>();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.  <  Option>  requiredOpts  =  new  ArrayList  <  Option>();	      Collections.    <    Option>    requiredOpts    =    getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
73	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayListWithCapacity(optionGroups.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayListWithCapacity(optionGroups.size());  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayListWithCapacity(optionGroups.size());	      Collection    <    Option>    requiredOpts    =    Collections.newArrayList();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
74	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  this);  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups,  this);	  return    Collections.unmodifiableCollection(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
75	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size());  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size());	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
76	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(size());  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(size());	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
77	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  shortOpts  =  getOptionGroups();  [BUGGY]    }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  getOptionGroups();	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
78	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(shortOpts);  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(shortOpts);	      Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(helpOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
79	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getAllOptions().values();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  getAllOptions().values();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getAllOptions().values();	      Collection    <    Option>    requiredOpts    =    getAllOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
80	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getRequiredOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Collection<Option>  getOptions()  {    [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getRequiredOptions();  [BUGGY]    return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  this.optionGroups.getRequiredOptions();	      Collection    <    Option>    requiredOpts    =    this.optionGroups.getAllOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
