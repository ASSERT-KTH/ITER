bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  getLongOpts();  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  getLongOpts();	  Collection    <    Option>    shortOpts    =    getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
2	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  getShortOpts(null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  getShortOpts(null);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  getShortOpts(null);	  Collection    <    Option>    shortOpts    =    getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
3	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  getShortOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  getShortOpts(),  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  getShortOpts(),  longOpts);	  Collection    <    Option>    shortOpts    =    getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
4	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  this,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  this,  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups,  this,  shortOpts);	  return    Collections.unmodifiableCollection(optionGroups,    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
5	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  this,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  this,  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups,  this,  longOpts);	  return    Collections.unmodifiableCollection(optionGroups,    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
6	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts,  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts,  this);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(requiredOpts,  this);	  return    Collections.unmodifiableCollection(optionGroups,    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
7	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(lengthOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(lengthOpts.size());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayList(lengthOpts.size());	  Collection    <    Option>    requiredOpts    =    Collections.newArrayList(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
8	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(requiredOpts.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(requiredOpts.size()  -  1);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayList(requiredOpts.size()  -  1);	  Collection    <    Option>    requiredOpts    =    Collections.newArrayList(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
9	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(longOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(longOpts.size());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayList(longOpts.size());	  Collection    <    Option>    requiredOpts    =    Collections.newArrayList(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
10	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getRequiredOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getRequiredOpts();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  this.optionGroups.getRequiredOpts();	  Collection    <    Option>    requiredOpts    =    this.optionGroups.getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
11	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts(),  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts(),  shortOpts);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(lengthOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
12	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts(),  lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts(),  lengthOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts(),  lengthOpts);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(lengthOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
13	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.length());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.length());	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(lengthOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
14	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size(),  longOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size(),  longOpts);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
15	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size(),  shortOpts,  longOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size(),  shortOpts,  longOpts);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
16	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size(),  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size(),  shortOpts);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
17	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size(),  shortOpts,  lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size(),  shortOpts,  lengthOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size(),  shortOpts,  lengthOpts);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
18	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(shortOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(shortOpts.size());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(shortOpts.size());	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(longOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
19	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getAllRequiredOpts(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getAllRequiredOpts(),  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  this.optionGroups.getAllRequiredOpts(),  shortOpts);	  Collection    <    Option>    requiredOpts    =    this.optionGroups.getAllRequiredOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
20	[BUG]  [BUGGY]  Collections.  <  Option>  requiredOpts  =  getAllOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collections.  <  Option>  requiredOpts  =  getAllOptions();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.  <  Option>  requiredOpts  =  getAllOptions();	  Collections.    <    Option>    requiredOpts    =    getRequiredOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
21	[BUG]  [BUGGY]  Collections.  <  Option>  requiredOpts  =  getDeclaredOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collections.  <  Option>  requiredOpts  =  getDeclaredOptions();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.  <  Option>  requiredOpts  =  getDeclaredOptions();	  Collections.    <    Option>    requiredOpts    =    getRequiredOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
22	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(requiredOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(requiredOpts,  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(requiredOpts,  shortOpts);	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
23	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this,  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this,  shortOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
24	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  options);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  options);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  options);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
25	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  optionGroups);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
26	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups.shortOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups.shortOpts());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups.shortOpts());	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(shortOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
27	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(langOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(langOpts());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(langOpts());	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(shortOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
28	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(lengthOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(lengthOpts());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(lengthOpts());	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(shortOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
29	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups,  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups,  shortOpts);	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
30	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(length());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(length());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(length());	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(size()    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
31	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  shortOpts.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  shortOpts.length);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups(),  shortOpts.length);	  return    Collections.unmodifiableCollection(optionGroups(),    optionGroups.length);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
32	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  options.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  options.length);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups(),  options.length);	  return    Collections.unmodifiableCollection(optionGroups(),    optionGroups.length);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
33	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups(),  optionGroups.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups(),  optionGroups.length);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups(),  optionGroups.length);	  return    Collections.unmodifiableCollection(optionGroups(),    optionGroups.length);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
34	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  optionGroups.length,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  optionGroups.length,  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups(),  optionGroups.length,  shortOpts);	  return    Collections.unmodifiableCollection(optionGroups(),    optionGroups.length);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
35	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getDeclaredOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  getDeclaredOptions();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getDeclaredOptions();	  Collection    <    Option>    requiredOpts    =    getRequiredOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
36	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getAllRequiredOptions(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getAllRequiredOptions(),  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  this.optionGroups.getAllRequiredOptions(),  shortOpts);	  Collection    <    Option>    requiredOpts    =    this.optionGroups.getAllRequiredOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
37	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups,  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups,  shortOpts);	  Collection    <    Option>    requiredOpts    =    Collections.newArrayList(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
38	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(lengthOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayList(lengthOpts);	  Collection    <    Option>    requiredOpts    =    Collections.newArrayList(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
39	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(requiredOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayList(requiredOpts);	  Collection    <    Option>    requiredOpts    =    Collections.newArrayList(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
40	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts,  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts,  shortOpts);	  return    Collections.unmodifiableCollection(this.optionGroups,    this.lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
41	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts);	  return    Collections.unmodifiableCollection(this.optionGroups,    this.lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
42	[BUG]  [BUGGY]  if(this.optionGroups!=  null)  {  return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  if(this.optionGroups!=  null)  {  return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts);  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	if(this.optionGroups!=  null)  {  return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts);  }	  return    Collections.unmodifiableCollection(this.optionGroups,    this.lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
43	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts,  this.optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts,  this.optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts,  this.optionGroups);	  return    Collections.unmodifiableCollection(this.optionGroups,    this.lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
44	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups.size()  -  1);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups.size()  -  1);	  Collection    <    Option>    requiredOpts    =    Collections.newArrayList(optionGroups.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
45	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups.size(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups.size(),  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups.size(),  shortOpts);	  Collection    <    Option>    requiredOpts    =    Collections.newArrayList(optionGroups.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
46	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups.size()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups.size()  -  2);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups.size()  -  2);	  Collection    <    Option>    requiredOpts    =    Collections.newArrayList(optionGroups.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
47	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups,  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups,  shortOpts);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
48	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.length);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.length);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
49	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.values());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.values());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.values());	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
50	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optiongroups.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optiongroups.size());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optiongroups.size());	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size()    -    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
51	[BUG]  [BUGGY]  Collection  <  Option>  neededOpts  =  new  ArrayList  <  Option>(optionGroups.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  neededOpts  =  new  ArrayList  <  Option>(optionGroups.size());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  neededOpts  =  new  ArrayList  <  Option>(optionGroups.size());	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size()    -    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
52	[BUG]  [BUGGY]  Set  <  Option>  requiredOpts  =  new  HashSet  <  Option>(optionGroups.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Set  <  Option>  requiredOpts  =  new  HashSet  <  Option>(optionGroups.size());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Set  <  Option>  requiredOpts  =  new  HashSet  <  Option>(optionGroups.size());	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size()    -    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
53	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size());  shortOpts.addAll(optionGroups.values());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size());  shortOpts.addAll(optionGroups.values());  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size());  shortOpts.addAll(optionGroups.values());	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    shortOpts.addAll(optionGroups.values());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
54	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  1);  shortOpts.addAll(optionGroups.values());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  1);  shortOpts.addAll(optionGroups.values());  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  1);  shortOpts.addAll(optionGroups.values());	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    shortOpts.addAll(optionGroups.values());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
55	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  2);  shortOpts.addAll(optionGroups.values());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  2);  shortOpts.addAll(optionGroups.values());  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  2);  shortOpts.addAll(optionGroups.values());	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    shortOpts.addAll(optionGroups.values());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
56	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  1);  shortOpts.addAll(optionGroups.get(0));  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  1);  shortOpts.addAll(optionGroups.get(0));  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  1);  shortOpts.addAll(optionGroups.get(0));	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    shortOpts.addAll(optionGroups.get(0));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
57	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size());  shortOpts.addAll(optionGroups.get(0));  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size());  shortOpts.addAll(optionGroups.get(0));  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size());  shortOpts.addAll(optionGroups.get(0));	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    shortOpts.addAll(optionGroups.get(0));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
58	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size(),  optionGroups.size());  shortOpts.addAll(optionGroups.get(0));  [CE]  invalid  method  declaration;  return  type  required  [FE]                              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size(),  optionGroups.size());  shortOpts.addAll(optionGroups.get(0));  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size(),  optionGroups.size());  shortOpts.addAll(optionGroups.get(0));	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    shortOpts.addAll(optionGroups.get(0));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
59	[BUG]  [BUGGY]  Collections.  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(requiredOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collections.  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(requiredOpts.size());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(requiredOpts.size());	  Collections.    <    Option>    requiredOpts    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
60	[BUG]  [BUGGY]  Collections.  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collections.  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts);	  Collections.    <    Option>    requiredOpts    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
61	[BUG]  [BUGGY]  Collections.  <  Option>  requiredOpts  =  new  LinkedList  <  Option>();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collections.  <  Option>  requiredOpts  =  new  LinkedList  <  Option>();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.  <  Option>  requiredOpts  =  new  LinkedList  <  Option>();	  Collections.    <    Option>    requiredOpts    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
62	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getAllRequiredOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  getAllRequiredOpts();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getAllRequiredOpts();	  Collection    <    Option>    requiredOpts    =    getRequiredOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
63	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  requiredOpts.addAll(optionGroups.values());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  for(Option  option  :  options.values())  {  requiredOpts.addAll(optionGroups.values());  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	for(Option  option  :  options.values())  {  requiredOpts.addAll(optionGroups.values());  }	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    requiredOpts.addAll(optionGroups.values());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
64	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  options.get(option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  options.get(option);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  options.get(option);	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    requiredOpts.addAll(optionGroups.values());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
65	[BUG]  [BUGGY]  Set  <  Option>  shortOpts  =  Sets.newHashSet();  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Set  <  Option>  shortOpts  =  Sets.newHashSet();  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Set  <  Option>  shortOpts  =  Sets.newHashSet();	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    requiredOpts.addAll(optionGroups.values());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
66	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getRequired();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getRequired();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  this.optionGroups.getRequired();	  Collection    <    Option>    requiredOpts    =    this.optionGroups.getRequiredOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
67	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts,  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts,  shortOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
68	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts,  this.optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts,  this.optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts,  this.optionGroups);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
69	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  shortOpts,  this.lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  shortOpts,  this.lengthOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  shortOpts,  this.lengthOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
70	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  this.optionGroups().get(this.lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  this.optionGroups().get(this.lengthOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  this.optionGroups().get(this.lengthOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
71	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size()  -  1);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size()  -  1);	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(optionGroups.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
72	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size(),  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size(),  longOpts);	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(optionGroups.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
73	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size()  +  1);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(optionGroups.size()  +  1);	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(optionGroups.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
74	[BUG]  [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups,  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups,  shortOpts);	  Collection    <    Option>    options    =    Collections.unmodifiableCollection(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
75	[BUG]  [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(requiredOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  options  =  Collections.unmodifiableCollection(requiredOpts);	  Collection    <    Option>    options    =    Collections.unmodifiableCollection(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
76	[BUG]  [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(this.optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(this.optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  options  =  Collections.unmodifiableCollection(this.optionGroups);	  Collection    <    Option>    options    =    Collections.unmodifiableCollection(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
77	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  longOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
78	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  longOpts,  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  longOpts,  shortOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
79	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  shortOpts,  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  shortOpts,  longOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
80	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  shortOpts,  this.longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  shortOpts,  this.longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  shortOpts,  this.longOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
81	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  shortOpts,  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups,  shortOpts,  longOpts);	  return    Collections.unmodifiableCollection(this.optionGroups,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
82	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups,  longOpts);	  return    Collections.unmodifiableCollection(this.optionGroups,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
83	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  longOpts,  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups,  longOpts,  shortOpts);	  return    Collections.unmodifiableCollection(this.optionGroups,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
84	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  shortOpts,  this.longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  shortOpts,  this.longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups,  shortOpts,  this.longOpts);	  return    Collections.unmodifiableCollection(this.optionGroups,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
85	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.emptyArray();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.emptyArray();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.emptyArray();	  Collection    <    Option>    requiredOpts    =    Collections.emptySet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
86	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.emptyMap();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.emptyMap();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.emptyMap();	  Collection    <    Option>    requiredOpts    =    Collections.emptySet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
87	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups(),  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups(),  optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups(),  optionGroups);	  return    Collections.unmodifiableCollection(optionGroups(),    optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
88	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups(),  longOpts);	  return    Collections.unmodifiableCollection(optionGroups(),    optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
89	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  optionGroups,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  optionGroups,  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups(),  optionGroups,  shortOpts);	  return    Collections.unmodifiableCollection(optionGroups(),    optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
90	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(longOpts(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(longOpts(),  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(longOpts(),  shortOpts);	  return    Collections.unmodifiableCollection(requiredOpts(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
91	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts(),  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(requiredOpts(),  longOpts);	  return    Collections.unmodifiableCollection(requiredOpts(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
92	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts(),  shortOpts,  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts(),  shortOpts,  optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(requiredOpts(),  shortOpts,  optionGroups);	  return    Collections.unmodifiableCollection(requiredOpts(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
93	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts(),  shortOpts,  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(requiredOpts(),  shortOpts,  longOpts);	  return    Collections.unmodifiableCollection(requiredOpts(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
94	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups.getOptions(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups.getOptions(),  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups.getOptions(),  shortOpts);	  return    Collections.unmodifiableCollection(optionGroups.getOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
95	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups.getOptions(),  options);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups.getOptions(),  options);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups.getOptions(),  options);	  return    Collections.unmodifiableCollection(optionGroups.getOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
96	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups.getShortOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups.getShortOpts());  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups.getShortOpts());	  return    Collections.unmodifiableCollection(optionGroups.getOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
97	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(longOpts,  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(longOpts,  shortOpts);	  return    Collections.unmodifiableCollection(optionGroups,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
98	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(longOpts,  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(longOpts,  optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(longOpts,  optionGroups);	  return    Collections.unmodifiableCollection(optionGroups,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
99	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups,  longOpts);	  return    Collections.unmodifiableCollection(optionGroups,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
100	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  shortOpts,  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups,  shortOpts,  longOpts);	  return    Collections.unmodifiableCollection(optionGroups,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
101	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayListWithCapacity(optionGroups.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayListWithCapacity(optionGroups.size()  -  1);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayListWithCapacity(optionGroups.size()  -  1);	  Collection    <    Option>    requiredOpts    =    Collections.newArrayListWithCapacity(optionGroups.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
102	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayListWithCapacity(optionGroups.size(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayListWithCapacity(optionGroups.size(),  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayListWithCapacity(optionGroups.size(),  shortOpts);	  Collection    <    Option>    requiredOpts    =    Collections.newArrayListWithCapacity(optionGroups.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
103	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayListWithCapacity(optionGroups.size()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayListWithCapacity(optionGroups.size()  -  2);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayListWithCapacity(optionGroups.size()  -  2);	  Collection    <    Option>    requiredOpts    =    Collections.newArrayListWithCapacity(optionGroups.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
104	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  shortOpts.add(optionGroup);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  for(Option  option  :  options.values())  {  shortOpts.add(optionGroup);  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	for(Option  option  :  options.values())  {  shortOpts.add(optionGroup);  }	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    shortOpts.add(optionGroup);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
105	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  shortOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  for(Option  option  :  options.values())  {  shortOpts.add(option);  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	for(Option  option  :  options.values())  {  shortOpts.add(option);  }	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    shortOpts.add(optionGroup);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
106	[BUG]  [BUGGY]  while(optionGroups!=  null)  {  for(Option  option  :  options.values())  {  shortOpts.add(optionGroup);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  while(optionGroups!=  null)  {  for(Option  option  :  options.values())  {  shortOpts.add(optionGroup);  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	while(optionGroups!=  null)  {  for(Option  option  :  options.values())  {  shortOpts.add(optionGroup);  }	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    shortOpts.add(optionGroup);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
107	[BUG]  [BUGGY]  while(optionGroups!=  null  &&  options.values().size()  >  0)  {  shortOpts.add(optionGroup);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  while(optionGroups!=  null  &&  options.values().size()  >  0)  {  shortOpts.add(optionGroup);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	while(optionGroups!=  null  &&  options.values().size()  >  0)  {  shortOpts.add(optionGroup);	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    shortOpts.add(optionGroup);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
108	[BUG]  [BUGGY]  Set  <  Option>  requiredOpts  =  new  LinkedHashSet  <  Option>(optionGroups.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Set  <  Option>  requiredOpts  =  new  LinkedHashSet  <  Option>(optionGroups.size());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Set  <  Option>  requiredOpts  =  new  LinkedHashSet  <  Option>(optionGroups.size());	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size()    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
109	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(longOpts(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(longOpts(),  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(longOpts(),  shortOpts);	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(longOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
110	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups.longOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups.longOpts());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups.longOpts());	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(longOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
111	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  options,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  options,  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups(),  options,  shortOpts);	  return    Collections.unmodifiableCollection(optionGroups(),    options);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
112	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  shortOpts,  options);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  shortOpts,  options);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups(),  shortOpts,  options);	  return    Collections.unmodifiableCollection(optionGroups(),    options);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
113	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups(),  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups(),  shortOpts);	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(optionGroups());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
114	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(langOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(langOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(langOpts);	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
115	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getOptionGroups().keySet();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  getOptionGroups().keySet();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getOptionGroups().keySet();	  Collection    <    Option>    requiredOpts    =    getOptionGroups().values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
116	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getOptionGroups().get(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  getOptionGroups().get(requiredOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getOptionGroups().get(requiredOpts);	  Collection    <    Option>    requiredOpts    =    getOptionGroups().values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
117	[BUG]  [BUGGY]  Collections.  <  Option>  requiredOpts  =  this.optionGroups.getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collections.  <  Option>  requiredOpts  =  this.optionGroups.getOptions();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.  <  Option>  requiredOpts  =  this.optionGroups.getOptions();	  Collections.    <    Option>    requiredOpts    =    getOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
118	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(requiredOpts.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(requiredOpts.size()  -  1);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(requiredOpts.size()  -  1);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
119	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(requiredOpts.size(),  shortOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(requiredOpts.size(),  shortOpts.size());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(requiredOpts.size(),  shortOpts.size());	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(requiredOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
120	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts,  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts,  shortOpts);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
121	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts,  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts,  optionGroups);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts,  optionGroups);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
122	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts,  lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts,  lengthOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts,  lengthOpts);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
123	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts,  options);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts,  options);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts,  options);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
124	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(this.optionGroups(),  this.optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(this.optionGroups(),  this.optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(this.optionGroups(),  this.optionGroups);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
125	[BUG]  [BUGGY]  Collection  <  Option>  result  =  Collections.unmodifiableCollection(this.optionGroups(),  this.optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  result  =  Collections.unmodifiableCollection(this.optionGroups(),  this.optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  result  =  Collections.unmodifiableCollection(this.optionGroups(),  this.optionGroups);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
126	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.get(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.get(requiredOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  this.optionGroups.get(requiredOpts);	  Collection    <    Option>    requiredOpts    =    this.optionGroups.getAll();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
127	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.get(0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.get(0);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  this.optionGroups.get(0);	  Collection    <    Option>    requiredOpts    =    this.optionGroups.getAll();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
128	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getAll(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getAll(),  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  this.optionGroups.getAll(),  shortOpts);	  Collection    <    Option>    requiredOpts    =    this.optionGroups.getAll();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
129	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  LinkedList  <  Option>(optionGroups.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  LinkedList  <  Option>(optionGroups.size());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  LinkedList  <  Option>(optionGroups.size());	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size()    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
130	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups,  longOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups,  longOpts);	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
131	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(longOpts,  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(longOpts,  optionGroups);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(longOpts,  optionGroups);	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
132	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(longOpts,  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(longOpts,  shortOpts);	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
133	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getAllShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  getAllShortOpts();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getAllShortOpts();	  Collection    <    Option>    requiredOpts    =    getAllRequiredOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
134	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  shortOpts,  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups(),  shortOpts,  longOpts);	  return    Collections.unmodifiableCollection(optionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
135	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  longOpts,  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups(),  longOpts,  shortOpts);	  return    Collections.unmodifiableCollection(optionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
136	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  shortOpts,  requiredOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  shortOpts,  requiredOpts());  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups,  shortOpts,  requiredOpts());	  return    Collections.unmodifiableCollection(optionGroups,    requiredOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
137	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  shortOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  shortOpts());  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups,  shortOpts());	  return    Collections.unmodifiableCollection(optionGroups,    requiredOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
138	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts,  optionGroups());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts,  optionGroups());  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(requiredOpts,  optionGroups());	  return    Collections.unmodifiableCollection(optionGroups,    requiredOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
139	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(longOpts,  optionGroups,  requiredOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(longOpts,  optionGroups,  requiredOpts());  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(longOpts,  optionGroups,  requiredOpts());	  return    Collections.unmodifiableCollection(optionGroups,    requiredOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
140	[BUG]  [BUGGY]  this.optionGroups  =  Collections.unmodifiableCollection(this.optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  this.optionGroups  =  Collections.unmodifiableCollection(this.optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	this.optionGroups  =  Collections.unmodifiableCollection(this.optionGroups);	  if(this.optionGroups!=    null)    {    return    Collections.unmodifiableCollection(this.optionGroups);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
141	[BUG]  [BUGGY]  if(this.optionGroups  ==  null)  {  return  Collections.unmodifiableCollection(this.optionGroups);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  if(this.optionGroups  ==  null)  {  return  Collections.unmodifiableCollection(this.optionGroups);  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	if(this.optionGroups  ==  null)  {  return  Collections.unmodifiableCollection(this.optionGroups);  }	  if(this.optionGroups!=    null)    {    return    Collections.unmodifiableCollection(this.optionGroups);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
142	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(this.optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(this.optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(this.optionGroups);	  if(this.optionGroups!=    null)    {    return    Collections.unmodifiableCollection(this.optionGroups);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
143	[BUG]  [BUGGY]  Collections.sort(optionGroups,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collections.sort(optionGroups,  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.sort(optionGroups,  shortOpts);	  Collections.sort(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
144	[BUG]  [BUGGY]  Collections.sort(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collections.sort(requiredOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.sort(requiredOpts);	  Collections.sort(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
145	[BUG]  [BUGGY]  Collections.sort(this.optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collections.sort(this.optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.sort(this.optionGroups);	  Collections.sort(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
146	[BUG]  [BUGGY]  Collections.sort(optionGroups,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collections.sort(optionGroups,  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.sort(optionGroups,  longOpts);	  Collections.sort(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
147	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getOptions().values();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  getOptions().values();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getOptions().values();	  Collection    <    Option>    requiredOpts    =    getAllOptions().values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
148	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getAllOptions().keySet();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  getAllOptions().keySet();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getAllOptions().keySet();	  Collection    <    Option>    requiredOpts    =    getAllOptions().values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
149	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  requiredOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups(),  requiredOpts);	  return    Collections.unmodifiableCollection(requiredOpts(),    optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
150	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(longOpts(),  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(longOpts(),  optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(longOpts(),  optionGroups);	  return    Collections.unmodifiableCollection(requiredOpts(),    optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
151	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  getOptions();  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  getOptions();	  Collection    <    Option>    shortOpts    =    getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
152	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.EMPTY_LIST  |  Collections.EMPTY_LIST;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.EMPTY_LIST  |  Collections.EMPTY_LIST;  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.EMPTY_LIST  |  Collections.EMPTY_LIST;	  Collection    <    Option>    requiredOpts    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
153	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(length());  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(length());	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
154	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(longOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(longOpts.size());  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(longOpts.size());	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
155	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts);	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
156	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.longOpts,  this.shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.longOpts,  this.shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this.longOpts,  this.shortOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
157	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this.longOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
158	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.shortOpts,  this.longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.shortOpts,  this.longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this.shortOpts,  this.longOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
159	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.shortOpts,  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this.shortOpts,  longOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
160	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  LinkedList  <  Option>(requiredOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  LinkedList  <  Option>(requiredOpts.size());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  LinkedList  <  Option>(requiredOpts.size());	  Collection    <    Option>    requiredOpts    =    new    LinkedList    <    Option>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
161	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  LinkedList  <  Option>(lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  LinkedList  <  Option>(lengthOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  LinkedList  <  Option>(lengthOpts);	  Collection    <    Option>    requiredOpts    =    new    LinkedList    <    Option>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
162	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  1);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  1);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
163	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  +  1);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  +  1);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
164	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  2);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  2);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
165	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts,  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(requiredOpts,  shortOpts);	  return    Collections.unmodifiableCollection(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
166	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  shortOpts,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  shortOpts,  requiredOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups,  shortOpts,  requiredOpts);	  return    Collections.unmodifiableCollection(optionGroups,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
167	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts,  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(requiredOpts,  optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(requiredOpts,  optionGroups);	  return    Collections.unmodifiableCollection(optionGroups,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
168	[BUG]  [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(requiredOpts,  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(requiredOpts,  optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  options  =  Collections.unmodifiableCollection(requiredOpts,  optionGroups);	  return    Collections.unmodifiableCollection(optionGroups,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
169	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newHashSet(optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newHashSet(optionGroups);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newHashSet(optionGroups);	  Collection    <    Option>    requiredOpts    =    Collections.newHashSet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
170	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newLinkedHashSet();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newLinkedHashSet();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newLinkedHashSet();	  Collection    <    Option>    requiredOpts    =    Collections.newHashSet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
171	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  requiredOpts.add(optionGroup);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  for(Option  option  :  options.values())  {  requiredOpts.add(optionGroup);  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	for(Option  option  :  options.values())  {  requiredOpts.add(optionGroup);  }	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    requiredOpts.add(optionGroup);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
172	[BUG]  [BUGGY]  For(Option  option  :  options.values())  {  requiredOpts.add(optionGroup);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  For(Option  option  :  options.values())  {  requiredOpts.add(optionGroup);  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	For(Option  option  :  options.values())  {  requiredOpts.add(optionGroup);  }	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    requiredOpts.add(optionGroup);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
173	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  options.values();  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  options.values();  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  options.values();	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    requiredOpts.add(optionGroup);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
174	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  for(Option  option  :  options.values())  {  requiredOpts.add(option);  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	for(Option  option  :  options.values())  {  requiredOpts.add(option);  }	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    requiredOpts.add(optionGroup);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
175	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  Collections.unmodifiableCollection(this.optionGroups,  this.shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  Collections.unmodifiableCollection(this.optionGroups,  this.shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  Collections.unmodifiableCollection(this.optionGroups,  this.shortOpts);	  return    Collections.unmodifiableCollection(this.optionGroups,    this.shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
176	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups,  this.longOpts);	  return    Collections.unmodifiableCollection(this.optionGroups,    this.shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
177	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.longOpts,  this.shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.longOpts,  this.shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups,  this.longOpts,  this.shortOpts);	  return    Collections.unmodifiableCollection(this.optionGroups,    this.shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
178	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.shortOpts,  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups,  this.shortOpts,  longOpts);	  return    Collections.unmodifiableCollection(this.optionGroups,    this.shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
179	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  1);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  1);	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
180	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  +  1);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  +  1);	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
181	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  2);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size()  -  2);	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
182	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(optionGroups(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(optionGroups(),  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(optionGroups(),  shortOpts);	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableList(optionGroups());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
183	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(optionOptions());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(optionOptions());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(optionOptions());	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableList(optionGroups());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
184	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(requiredOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(requiredOpts());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(requiredOpts());	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableList(optionGroups());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
185	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(longOpts,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(longOpts,  requiredOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(longOpts,  requiredOpts);	  return    Collections.unmodifiableCollection(requiredOpts(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
186	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.langOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.langOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups,  this.langOpts);	  return    Collections.unmodifiableCollection(this.optionGroups,    this.shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
187	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lenOpts.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lenOpts.size());  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lenOpts.size());	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
188	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.get(optionGroups.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.get(optionGroups.size()  -  1);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.get(optionGroups.size()  -  1);	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    shortOpts.addAll(optionGroups.get(0));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
189	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.get(optionGroups.size()  -  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.get(optionGroups.size()  -  1));  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.get(optionGroups.size()  -  1));	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    shortOpts.addAll(optionGroups.get(0));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
190	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.get(1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.get(1));  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.get(1));	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    shortOpts.addAll(optionGroups.get(0));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
191	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(lenOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(lenOpts());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(lenOpts());	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(shortOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
192	[BUG]  [BUGGY]  if(optionGroups!=  null)  {  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.values());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  if(optionGroups!=  null)  {  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.values());  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	if(optionGroups!=  null)  {  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.values());  }	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    shortOpts.addAll(optionGroups.values());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
193	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getRequiredOpts().values();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  getRequiredOpts().values();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getRequiredOpts().values();	  Collection    <    Option>    requiredOpts    =    getOptionGroups().values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
194	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getRequiredOptionGroups().values();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  getRequiredOptionGroups().values();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getRequiredOptionGroups().values();	  Collection    <    Option>    requiredOpts    =    getOptionGroups().values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
195	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(opts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(opts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(opts);	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
196	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newHashMap();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newHashMap();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newHashMap();	  Collection    <    Option>    requiredOpts    =    Collections.newHashSet();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
197	[BUG]  [BUGGY]  if(optionGroups!=  null)  {  return  Collections.unmodifiableCollection(optionGroups,  requiredOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  if(optionGroups!=  null)  {  return  Collections.unmodifiableCollection(optionGroups,  requiredOpts);  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	if(optionGroups!=  null)  {  return  Collections.unmodifiableCollection(optionGroups,  requiredOpts);  }	  return    Collections.unmodifiableCollection(optionGroups,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
198	[BUG]  [BUGGY]  Return  Collections.unmodifiableCollection(optionGroups,  shortOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Return  Collections.unmodifiableCollection(optionGroups,  shortOpts());  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Return  Collections.unmodifiableCollection(optionGroups,  shortOpts());	  return    Collections.unmodifiableCollection(optionGroups,    requiredOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
199	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(lenOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(lenOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(lenOpts);	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
200	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(longOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(longOpts());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(longOpts());	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(lengthOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
201	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  getLongOpts();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getLongOpts();	  Collection    <    Option>    requiredOpts    =    getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
202	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts,  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts,  longOpts);	  return    Collections.unmodifiableCollection(this.optionGroups,    this.lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
203	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  shortOpts,  this.lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  shortOpts,  this.lengthOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups,  shortOpts,  this.lengthOpts);	  return    Collections.unmodifiableCollection(this.optionGroups,    this.lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
204	[BUG]  [BUGGY]  Collections.sort(optionGroups,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collections.sort(optionGroups,  requiredOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.sort(optionGroups,  requiredOpts);	  Collections.sort(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
205	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.langOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.langOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this.langOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
206	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups(),  options);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups(),  options);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups(),  options);	  return    Collections.unmodifiableCollection(optionGroups(),    options);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
207	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts,  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts,  longOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
208	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts,  lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts,  lengthOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts,  lengthOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
209	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(longOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(longOpts());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(longOpts());	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableList(optionGroups());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
210	[BUG]  [BUGGY]  Return  Collections.unmodifiableCollection(optionGroups(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Return  Collections.unmodifiableCollection(optionGroups(),  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Return  Collections.unmodifiableCollection(optionGroups(),  shortOpts);	  return    Collections.unmodifiableCollection(optionGroups(),    optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
211	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups.values());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups.values());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayList(optionGroups.values());	  Collection    <    Option>    requiredOpts    =    Collections.newArrayList(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
212	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.newArrayList(longOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.newArrayList(longOpts);	  Collection    <    Option>    requiredOpts    =    Collections.newArrayList(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
213	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  java.util.ArrayList  <  Option>();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  java.util.ArrayList  <  Option>();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  java.util.ArrayList  <  Option>();	  Collection    <    Option>    requiredOpts    =    new    LinkedList    <    Option>();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
214	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  options.getAllRequiredOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  options.getAllRequiredOpts();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  options.getAllRequiredOpts();	  Collection    <    Option>    requiredOpts    =    this.optionGroups.getAllRequiredOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
215	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups.getOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups.getOpts());  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups.getOpts());	  return    Collections.unmodifiableCollection(optionGroups.getOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
216	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  options.values();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  options.values();  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  options.values();	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    requiredOpts.add(optionGroup);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
217	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  getShortOpts(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  getShortOpts(longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  getShortOpts(longOpts);	  Collection    <    Option>    shortOpts    =    getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
218	[BUG]  [BUGGY]  Collections.  <  Option>  requiredOpts  =  getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collections.  <  Option>  requiredOpts  =  getLongOpts();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.  <  Option>  requiredOpts  =  getLongOpts();	  Collections.    <    Option>    requiredOpts    =    getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
219	[BUG]  [BUGGY]  while(optionGroups  ==  null)  {  for(Option  option  :  options.values())  {  shortOpts.add(optionGroup);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  while(optionGroups  ==  null)  {  for(Option  option  :  options.values())  {  shortOpts.add(optionGroup);  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	while(optionGroups  ==  null)  {  for(Option  option  :  options.values())  {  shortOpts.add(optionGroup);  }	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    shortOpts.add(optionGroup);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
220	[BUG]  [BUGGY]  Return  Collections.unmodifiableCollection(optionGroups(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Return  Collections.unmodifiableCollection(optionGroups(),  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Return  Collections.unmodifiableCollection(optionGroups(),  longOpts);	  return    Collections.unmodifiableCollection(optionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
221	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.get(this.lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.get(this.lengthOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  this.optionGroups.get(this.lengthOpts);	  Collection    <    Option>    requiredOpts    =    this.optionGroups.getAll();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
222	[BUG]  [BUGGY]  Return  Collections.unmodifiableCollection(optionGroups(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Return  Collections.unmodifiableCollection(optionGroups(),  requiredOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Return  Collections.unmodifiableCollection(optionGroups(),  requiredOpts);	  return    Collections.unmodifiableCollection(requiredOpts(),    optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
223	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(opts(),  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(opts(),  optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(opts(),  optionGroups);	  return    Collections.unmodifiableCollection(requiredOpts(),    optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
224	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts  -  1);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts  -  1);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(size()    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
225	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  requiredOpts.addAll(optiongroups.values());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  for(Option  option  :  options.values())  {  requiredOpts.addAll(optiongroups.values());  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	for(Option  option  :  options.values())  {  requiredOpts.addAll(optiongroups.values());  }	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    requiredOpts.addAll(optionGroups.values());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
226	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  null);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups,  null);	  return    Collections.unmodifiableCollection(optionGroups,    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
227	[BUG]  [BUGGY]  Return  Collections.unmodifiableCollection(this.optionGroups(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Return  Collections.unmodifiableCollection(this.optionGroups(),  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Return  Collections.unmodifiableCollection(this.optionGroups(),  longOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
228	[BUG]  [BUGGY]  Collections.  <  Option>  requiredOpts  =  getAllRequiredOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collections.  <  Option>  requiredOpts  =  getAllRequiredOptions();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collections.  <  Option>  requiredOpts  =  getAllRequiredOptions();	  Collections.    <    Option>    requiredOpts    =    getRequiredOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
229	[BUG]  [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups,  longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups,  longOpts);	  Collection    <    Option>    options    =    Collections.unmodifiableCollection(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
230	[BUG]  [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups,  ShortOpts.class);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups,  ShortOpts.class);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups,  ShortOpts.class);	  Collection    <    Option>    options    =    Collections.unmodifiableCollection(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
231	[BUG]  [BUGGY]  Collection  <  Option>  shortOpts  =  getOptionGroups(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  shortOpts  =  getOptionGroups(longOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  shortOpts  =  getOptionGroups(longOpts);	  Collection    <    Option>    shortOpts    =    getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
232	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(longOpts.size(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(longOpts.size(),  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(longOpts.size(),  shortOpts);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
233	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size()  -  1,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size()  -  1,  shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size()  -  1,  shortOpts);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
234	[BUG]  [BUGGY]  while(optionGroups.size()  >  0)  {  for(Option  option  :  options.values())  {  shortOpts.add(optionGroup);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  while(optionGroups.size()  >  0)  {  for(Option  option  :  options.values())  {  shortOpts.add(optionGroup);  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	while(optionGroups.size()  >  0)  {  for(Option  option  :  options.values())  {  shortOpts.add(optionGroup);  }	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    shortOpts.add(optionGroup);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
235	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups.size());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups.size());	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(longOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
236	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size(),  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size(),  optionGroups);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(lengthOpts.size(),  optionGroups);	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
237	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups.getOptions(),  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups.getOptions(),  optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups.getOptions(),  optionGroups);	  return    Collections.unmodifiableCollection(optionGroups.getOptions());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
238	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts,  this.shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts,  this.shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups,  this.lengthOpts,  this.shortOpts);	  return    Collections.unmodifiableCollection(this.optionGroups,    this.lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
239	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableList(shortOpts);	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableList(optionGroups());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
240	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  this,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups,  this,  requiredOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups,  this,  requiredOpts);	  return    Collections.unmodifiableCollection(optionGroups,    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
241	[BUG]  [BUGGY]  Iterator  <  Option>  shortOpts  =  options.values().iterator();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Iterator  <  Option>  shortOpts  =  options.values().iterator();  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Iterator  <  Option>  shortOpts  =  options.values().iterator();	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    requiredOpts.add(optionGroup);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
242	[BUG]  [BUGGY]  Option  optionGroup  =  options.values();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Option  optionGroup  =  options.values();  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Option  optionGroup  =  options.values();	  if(optionGroups    ==    null)    {    for(Option    option    :    options.values())    {    requiredOpts.add(optionGroup);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
243	[BUG]  [BUGGY]  Return  Collections.unmodifiableCollection(optionGroups,  shortOpts,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Return  Collections.unmodifiableCollection(optionGroups,  shortOpts,  requiredOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Return  Collections.unmodifiableCollection(optionGroups,  shortOpts,  requiredOpts);	  return    Collections.unmodifiableCollection(optionGroups,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
244	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(longOpts,  optionsGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(longOpts,  optionsGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(longOpts,  optionsGroups);	  return    Collections.unmodifiableCollection(optionGroups,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
245	[BUG]  [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups,  requiredOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups,  requiredOpts);	  Collection    <    Option>    options    =    Collections.unmodifiableCollection(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
246	[BUG]  [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups,  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups,  this);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  options  =  Collections.unmodifiableCollection(optionGroups,  this);	  Collection    <    Option>    options    =    Collections.unmodifiableCollection(optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
247	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getRequiredOptions().values();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  getRequiredOptions().values();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getRequiredOptions().values();	  Collection    <    Option>    requiredOpts    =    getRequiredOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
248	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getAllRequiredOptions().values();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  getAllRequiredOptions().values();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getAllRequiredOptions().values();	  Collection    <    Option>    requiredOpts    =    getAllRequiredOptions();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
249	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(longOpts,  optionGroups(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(longOpts,  optionGroups(),  shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(longOpts,  optionGroups(),  shortOpts);	  return    Collections.unmodifiableCollection(optionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
250	[BUG]  [BUGGY]  collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	collection  <  Option>  requiredOpts  =  new  ArrayList  <  Option>(optionGroups.size());	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size()    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
251	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  new  TreeSet  <  Option>(optionGroups.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  new  TreeSet  <  Option>(optionGroups.size());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  new  TreeSet  <  Option>(optionGroups.size());	  Collection    <    Option>    requiredOpts    =    new    ArrayList    <    Option>(optionGroups.size()    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
252	[BUG]  [BUGGY]  if(shortOpts.size()  >  0)  {  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.values());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  if(shortOpts.size()  >  0)  {  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.values());  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	if(shortOpts.size()  >  0)  {  Collection  <  Option>  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.values());  }	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    shortOpts.addAll(optionGroups.values());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
253	[BUG]  [BUGGY]  Set  <  Option>  shortOpts  =  new  HashSet  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.values());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Set  <  Option>  shortOpts  =  new  HashSet  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.values());  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Set  <  Option>  shortOpts  =  new  HashSet  <  Option>(lengthOpts.size());  shortOpts.addAll(optionGroups.values());	  Collection    <    Option>    shortOpts    =    new    ArrayList    <    Option>(lengthOpts.size());    shortOpts.addAll(optionGroups.values());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
254	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getAllRequiredOpts(this.shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.getAllRequiredOpts(this.shortOpts);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  this.optionGroups.getAllRequiredOpts(this.shortOpts);	  Collection    <    Option>    requiredOpts    =    this.optionGroups.getAllRequiredOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
255	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.shortOpts,  this.lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.shortOpts,  this.lengthOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this.shortOpts,  this.lengthOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
256	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts,  this.shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts,  this.shortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this.lengthOpts,  this.shortOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.lengthOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
257	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups.getShortOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups.getShortOpts());  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  Collections.unmodifiableCollection(optionGroups.getShortOpts());	  Collection    <    Option>    requiredOpts    =    Collections.unmodifiableCollection(shortOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
258	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  optionGroups.size());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(optionGroups(),  optionGroups.size());  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(optionGroups(),  optionGroups.size());	  return    Collections.unmodifiableCollection(optionGroups(),    optionGroups.length);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
259	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.get(this.optionGroups.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.get(this.optionGroups.size()  -  1);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  this.optionGroups.get(this.optionGroups.size()  -  1);	  Collection    <    Option>    requiredOpts    =    this.optionGroups.getAll();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
260	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getAllOptionGroups().values();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  getAllOptionGroups().values();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getAllOptionGroups().values();	  Collection    <    Option>    requiredOpts    =    getAllOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
261	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(longOpts,  requiredOpts(),  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(longOpts,  requiredOpts(),  optionGroups);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(longOpts,  requiredOpts(),  optionGroups);	  return    Collections.unmodifiableCollection(requiredOpts(),    optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
262	[BUG]  [BUGGY]  if(this.optionGroups!=  null)  {  return  Collections.unmodifiableCollection(this.optionGroups(),  this.optionGroups);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  if(this.optionGroups!=  null)  {  return  Collections.unmodifiableCollection(this.optionGroups(),  this.optionGroups);  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	if(this.optionGroups!=  null)  {  return  Collections.unmodifiableCollection(this.optionGroups(),  this.optionGroups);  }	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
263	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.optionGroups,  this.optionShortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(this.optionGroups(),  this.optionGroups,  this.optionShortOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(this.optionGroups(),  this.optionGroups,  this.optionShortOpts);	  return    Collections.unmodifiableCollection(this.optionGroups(),    this.optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
264	[BUG]  [BUGGY]  Return  Collections.unmodifiableCollection(optionGroups,  shortOpts,  requiredOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Return  Collections.unmodifiableCollection(optionGroups,  shortOpts,  requiredOpts());  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Return  Collections.unmodifiableCollection(optionGroups,  shortOpts,  requiredOpts());	  return    Collections.unmodifiableCollection(optionGroups,    requiredOpts());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
265	[BUG]  [BUGGY]  if(this.optionGroups!=  null)  {  return  Collections.unmodifiableCollection(this.optionGroups,  this.shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  if(this.optionGroups!=  null)  {  return  Collections.unmodifiableCollection(this.optionGroups,  this.shortOpts);  }  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	if(this.optionGroups!=  null)  {  return  Collections.unmodifiableCollection(this.optionGroups,  this.shortOpts);  }	  return    Collections.unmodifiableCollection(this.optionGroups,    this.shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
266	[BUG]  [BUGGY]  return  Collections.unmodifiableCollection(longOpts(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  return  Collections.unmodifiableCollection(longOpts(),  requiredOpts);  [BUGGY]      }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	return  Collections.unmodifiableCollection(longOpts(),  requiredOpts);	  return    Collections.unmodifiableCollection(requiredOpts(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
267	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  getOptionGroups().toArray(new  Option[requiredOpts.size()  ]);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  getOptionGroups().toArray(new  Option[requiredOpts.size()  ]);  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  getOptionGroups().toArray(new  Option[requiredOpts.size()  ]);	  Collection    <    Option>    requiredOpts    =    getOptionGroups().values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
268	[BUG]  [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.values();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Collection<Option>  getOptions()  {      [BUGGY]  Collection  <  Option>  requiredOpts  =  this.optionGroups.values();  [BUGGY]      return  Collections.unmodifiableCollection(helpOptions());  }  [CLASS]  Options  [METHOD]  getOptions  [RETURN_TYPE]  Collection  [VARIABLES]  List  requiredOpts  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	Collection  <  Option>  requiredOpts  =  this.optionGroups.values();	  Collection    <    Option>    requiredOpts    =    getOptionGroups().values();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
