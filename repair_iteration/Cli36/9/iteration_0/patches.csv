bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(requiredOpts.contains(option))  {  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]  if(requiredOpts.contains(option))  {  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	if(requiredOpts.contains(option))  {  addOption(option);  }	addOption(option);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
2	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]  if(requiredOpts!=  null)  {  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	if(requiredOpts!=  null)  {  addOption(option);  }	addOption(option);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
3	[BUG]  [BUGGY]  if(requiredOpts.size()  >  0)  {  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]  if(requiredOpts.size()  >  0)  {  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	if(requiredOpts.size()  >  0)  {  addOption(option);  }	addOption(option);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
4	[BUG]  [BUGGY]    [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]    [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	  	addOption(option);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
5	[BUG]  [BUGGY]    optionGroups.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]    optionGroups.put(option.getKey(),  group);  [BUGGY]  addOption(option);  optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	    optionGroups.put(option.getKey(),  group);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
6	[BUG]  [BUGGY]    for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]    for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]  addOption(option);  optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	    for(Option  option  :  shortOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
7	[BUG]  [BUGGY]    for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]    for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]  addOption(option);  optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	    for(Option  option  :  shortOpts)  {  requiredOpts.put(option.getKey(),  group);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
8	[BUG]  [BUGGY]    OptionGroup  shortOpts  =  option.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]    OptionGroup  shortOpts  =  option.getShortOpts();  [BUGGY]  addOption(option);  optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	    OptionGroup  shortOpts  =  option.getShortOpts();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
9	[BUG]  [BUGGY]    for(Option  option  :  shortOpts.values())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]    for(Option  option  :  shortOpts.values())  {  requiredOpts.add(option);  }  [BUGGY]  addOption(option);  optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	    for(Option  option  :  shortOpts.values())  {  requiredOpts.add(option);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
10	[BUG]  [BUGGY]  if(option.isRequired())  {  addOption(option);  }  else  {  requiredOpts.put(option.getKey(),  option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]  if(option.isRequired())  {  addOption(option);  }  else  {  requiredOpts.put(option.getKey(),  option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	if(option.isRequired())  {  addOption(option);  }  else  {  requiredOpts.put(option.getKey(),  option);  }	addOption(option);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
11	[BUG]  [BUGGY]  if(option.getKey()!=  null)  {  addOption(option);  }  else  {  requiredOpts.put(option.getKey(),  option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]  if(option.getKey()!=  null)  {  addOption(option);  }  else  {  requiredOpts.put(option.getKey(),  option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	if(option.getKey()!=  null)  {  addOption(option);  }  else  {  requiredOpts.put(option.getKey(),  option);  }	addOption(option);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
12	[BUG]  [BUGGY]  addOption(option,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]  addOption(option,  shortOpts);  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	addOption(option,  shortOpts);	addOption(option);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
13	[BUG]  [BUGGY]    if(longOpts!=  null)  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]    if(longOpts!=  null)  {  requiredOpts.add(option);  }  [BUGGY]  addOption(option);  optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	    if(longOpts!=  null)  {  requiredOpts.add(option);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
14	[BUG]  [BUGGY]    option.setRequired(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]    option.setRequired(false);  [BUGGY]  addOption(option);  optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	    option.setRequired(false);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
15	[BUG]  [BUGGY]    if(longOpts!=  null)  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]    if(longOpts!=  null)  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]  addOption(option);  optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	    if(longOpts!=  null)  {  requiredOpts.put(option.getKey(),  group);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
16	[BUG]  [BUGGY]    Option  option  =  option.getOption(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]    Option  option  =  option.getOption(requiredOpts);  [BUGGY]  addOption(option);  optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	    Option  option  =  option.getOption(requiredOpts);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
17	[BUG]  [BUGGY]    if(longOpts!=  null)  {  for(Option  option  :  longOpts.keySet())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]    if(longOpts!=  null)  {  for(Option  option  :  longOpts.keySet())  {  requiredOpts.add(option);  }  [BUGGY]  addOption(option);  optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	    if(longOpts!=  null)  {  for(Option  option  :  longOpts.keySet())  {  requiredOpts.add(option);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
18	[BUG]  [BUGGY]    if(longOpts!=  null)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]    if(longOpts!=  null)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.add(option);  }  [BUGGY]  addOption(option);  optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	    if(longOpts!=  null)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.add(option);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
19	[BUG]  [BUGGY]    if(longOpts!=  null)  {  for(Option  option  :  longOpts.keySet())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]    if(longOpts!=  null)  {  for(Option  option  :  longOpts.keySet())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]  addOption(option);  optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	    if(longOpts!=  null)  {  for(Option  option  :  longOpts.keySet())  {  requiredOpts.put(option.getKey(),  group);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
20	[BUG]  [BUGGY]    if(shortOpts.contains(option))  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]    if(shortOpts.contains(option))  {  requiredOpts.add(option);  }  [BUGGY]  addOption(option);  optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	    if(shortOpts.contains(option))  {  requiredOpts.add(option);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
21	[BUG]  [BUGGY]    if(longOpts!=  null)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]    if(longOpts!=  null)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }  [BUGGY]  addOption(option);  optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	    if(longOpts!=  null)  {  for(Option  option  :  longOpts.values())  {  requiredOpts.put(option.getKey(),  group);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
22	[BUG]  [BUGGY]  addOption(option,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]  addOption(option,  group);  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	addOption(option,  group);	addOption(option);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
23	[BUG]  [BUGGY]  addOption(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  {  requiredOpts.add(group);  }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  [BUGGY]  addOption(option.getKey(),  group);  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	addOption(option.getKey(),  group);	addOption(option);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
