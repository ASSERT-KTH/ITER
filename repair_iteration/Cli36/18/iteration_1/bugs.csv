bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(opt.isRequired())  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]  if(opt.isRequired())  {  requiredOpts.add(key);  }  [BUGGY]  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	if(opt.isRequired())  {  requiredOpts.add(key);  }	requiredOpts.add(key);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
2	[BUG]  [BUGGY]  if(optionGroups.containsKey(key))  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]  if(optionGroups.containsKey(key))  {  requiredOpts.add(key);  }  [BUGGY]  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	if(optionGroups.containsKey(key))  {  requiredOpts.add(key);  }	requiredOpts.add(key);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
3	[BUG]  [BUGGY]  if(optionGroups.containsKey(key))  {  requiredOpts.add(key);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]  if(optionGroups.containsKey(key))  {  requiredOpts.add(key);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	if(optionGroups.containsKey(key))  {  requiredOpts.add(key);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }	requiredOpts.add(key);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
4	[BUG]  [BUGGY]  if(optionGroups.containsKey(key))  {  requiredOpts.add(key);  }  else  {  shortOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]  if(optionGroups.containsKey(key))  {  requiredOpts.add(key);  }  else  {  shortOpts.put(key,  opt);  }  [BUGGY]  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	if(optionGroups.containsKey(key))  {  requiredOpts.add(key);  }  else  {  shortOpts.put(key,  opt);  }	requiredOpts.add(key);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
5	[BUG]  [BUGGY]    [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]    [BUGGY]  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	  	requiredOpts.add(key);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
6	[BUG]  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]    longOpts.put(opt.getLongOpt(),  opt);  [BUGGY]  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	    longOpts.put(opt.getLongOpt(),  opt);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	add
7	[BUG]  [BUGGY]    if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]    if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	    if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	add
8	[BUG]  [BUGGY]    optionGroups.put(opt.getLongOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]    optionGroups.put(opt.getLongOpt(),  opt);  [BUGGY]  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	    optionGroups.put(opt.getLongOpt(),  opt);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	add
9	[BUG]  [BUGGY]    if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]    if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	    if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	add
10	[BUG]  [BUGGY]    if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.add(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]    if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.add(opt.getLongOpt(),  opt);  }  [BUGGY]  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	    if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.add(opt.getLongOpt(),  opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	add
11	[BUG]  [BUGGY]    if(opt.isRequired())  {  if(requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]    if(opt.isRequired())  {  if(requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	    if(opt.isRequired())  {  if(requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	add
12	[BUG]  [BUGGY]    if(opt.isRequired())  {  if(longOpts.contains(option))  {  requiredOpts.remove(opt.indexOf(option));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]    if(opt.isRequired())  {  if(longOpts.contains(option))  {  requiredOpts.remove(opt.indexOf(option));  }  [BUGGY]  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	    if(opt.isRequired())  {  if(longOpts.contains(option))  {  requiredOpts.remove(opt.indexOf(option));  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	add
13	[BUG]  [BUGGY]    if(opt.isRequired())  {  if(longOpts.contains(opt))  {  requiredOpts.remove(opt.indexOf(opt));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]    if(opt.isRequired())  {  if(longOpts.contains(opt))  {  requiredOpts.remove(opt.indexOf(opt));  }  [BUGGY]  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	    if(opt.isRequired())  {  if(longOpts.contains(opt))  {  requiredOpts.remove(opt.indexOf(opt));  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	add
14	[BUG]  [BUGGY]    if(opt.isRequired())  {  if(requiredOpts.contains(option))  {  requiredOpts.add(opt.getLongOpt());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]    if(opt.isRequired())  {  if(requiredOpts.contains(option))  {  requiredOpts.add(opt.getLongOpt());  }  [BUGGY]  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	    if(opt.isRequired())  {  if(requiredOpts.contains(option))  {  requiredOpts.add(opt.getLongOpt());  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	add
15	[BUG]  [BUGGY]  requiredOpts.add(opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]  requiredOpts.add(opt);  [BUGGY]  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	requiredOpts.add(opt);	requiredOpts.add(key);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
16	[BUG]  [BUGGY]  if(requiredOpts.contains(key))  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]  if(requiredOpts.contains(key))  {  requiredOpts.add(key);  }  [BUGGY]  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	if(requiredOpts.contains(key))  {  requiredOpts.add(key);  }	requiredOpts.add(key);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
17	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(key);  }  [BUGGY]  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	if(requiredOpts!=  null)  {  requiredOpts.add(key);  }	requiredOpts.add(key);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
18	[BUG]  [BUGGY]  if(optionGroups!=  null)  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]  if(optionGroups!=  null)  {  requiredOpts.add(key);  }  [BUGGY]  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	if(optionGroups!=  null)  {  requiredOpts.add(key);  }	requiredOpts.add(key);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
19	[BUG]  [BUGGY]    if(opt.isRequired())  {  if(requiredOpts.contains(key))  {  requiredOpts.add(requiredOpts.indexOf(key));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]    if(opt.isRequired())  {  if(requiredOpts.contains(key))  {  requiredOpts.add(requiredOpts.indexOf(key));  }  [BUGGY]  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	    if(opt.isRequired())  {  if(requiredOpts.contains(key))  {  requiredOpts.add(requiredOpts.indexOf(key));  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	add
20	[BUG]  [BUGGY]    if(opt.isOption())  {  if(longOpts.contains(option))  {  requiredOpts.remove(opt.indexOf(option));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]    if(opt.isOption())  {  if(longOpts.contains(option))  {  requiredOpts.remove(opt.indexOf(option));  }  [BUGGY]  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	    if(opt.isOption())  {  if(longOpts.contains(option))  {  requiredOpts.remove(opt.indexOf(option));  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	add
21	[BUG]  [BUGGY]    if(opt.isRequired())  {  if(requiredOpts.contains(key))  {  requiredOpts.add( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  [BUGGY]    if(opt.isRequired())  {  if(requiredOpts.contains(key))  {  requiredOpts.add( " ");  }  [BUGGY]  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	    if(opt.isRequired())  {  if(requiredOpts.contains(key))  {  requiredOpts.add( " ");  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	add
