bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
2	[BUG] [BUGGY] private final Map<String, Option> shortOpts = new LinkedHashMap<String, Option>(); [FE] ComparisonFailure [CONTEXT] [BUGGY] private final Map<String, Option> shortOpts = new LinkedHashMap<String, Option>(); [BUGGY]  [CLASS] Options  [VARIABLES] 	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	50	50	1	replace	
3	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] [BUGGY] [BUGGY] private final Map<String, Option> shortOpts = new LinkedHashMap<String, Option>(); [CLASS] Options  [VARIABLES] 	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	50	50	1	add	
4	[BUG] [BUGGY] private final Map<String, Option> longOpts = new LinkedHashMap<String, Option>(); [FE] ComparisonFailure [CONTEXT] [BUGGY] private final Map<String, Option> longOpts = new LinkedHashMap<String, Option>(); [BUGGY]  [CLASS] Options  [VARIABLES] 	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	53	53	1	replace	
5	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] [BUGGY] [BUGGY] private final Map<String, Option> longOpts = new LinkedHashMap<String, Option>(); [CLASS] Options  [VARIABLES] 	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	53	53	1	add	
6	[BUG] [BUGGY] private final List<Object> requiredOpts = new ArrayList<Object>(); [FE] ComparisonFailure [CONTEXT] [BUGGY] private final List<Object> requiredOpts = new ArrayList<Object>(); [BUGGY]  [CLASS] Options  [VARIABLES] 	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	replace	
7	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] [BUGGY] [BUGGY] private final List<Object> requiredOpts = new ArrayList<Object>(); [CLASS] Options  [VARIABLES] 	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	58	58	1	add	
8	[BUG] [BUGGY] private final Map<String, OptionGroup> optionGroups = new HashMap<String, OptionGroup>(); [FE] ComparisonFailure [CONTEXT] [BUGGY] private final Map<String, OptionGroup> optionGroups = new HashMap<String, OptionGroup>(); [BUGGY]  [CLASS] Options  [VARIABLES] 	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	61	61	1	replace	
9	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] [BUGGY] [BUGGY] private final Map<String, OptionGroup> optionGroups = new HashMap<String, OptionGroup>(); [CLASS] Options  [VARIABLES] 	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	61	61	1	add	
10	[BUG] [BUGGY] if (group.isRequired()) { [FE] ComparisonFailure [CONTEXT] public Options addOptionGroup(OptionGroup group) { [BUGGY] if (group.isRequired())  { [BUGGY] { requiredOpts.add(group); } for (Option option : group.getOptions()) {    option.setRequired(false); [CLASS] Options [METHOD] addOptionGroup [RETURN_TYPE] Options  OptionGroup group [VARIABLES] List requiredOpts Option option OptionGroup group boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	replace	
11	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public Options addOptionGroup(OptionGroup group) { [BUGGY] [BUGGY] if (group.isRequired())  { { requiredOpts.add(group); } for (Option option : group.getOptions()) {    option.setRequired(false); [CLASS] Options [METHOD] addOptionGroup [RETURN_TYPE] Options  OptionGroup group [VARIABLES] List requiredOpts Option option OptionGroup group boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	71	72	1	add	
12	[BUG] [BUGGY] requiredOpts.add(group); [FE] ComparisonFailure [CONTEXT] public Options addOptionGroup(OptionGroup group) { if (group.isRequired()) { [BUGGY] requiredOpts.add(group); [BUGGY] } for (Option option : group.getOptions()) {    option.setRequired(false); addOption(option);  [CLASS] Options [METHOD] addOptionGroup [RETURN_TYPE] Options  OptionGroup group [VARIABLES] List requiredOpts Option option OptionGroup group boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	replace	
13	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public Options addOptionGroup(OptionGroup group) { if (group.isRequired()) { [BUGGY] [BUGGY] requiredOpts.add(group); } for (Option option : group.getOptions()) {    option.setRequired(false); addOption(option);  [CLASS] Options [METHOD] addOptionGroup [RETURN_TYPE] Options  OptionGroup group [VARIABLES] List requiredOpts Option option OptionGroup group boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	73	73	1	add	
14	[BUG] [BUGGY] for (Option option : group.getOptions()) { [FE] ComparisonFailure [CONTEXT] public Options addOptionGroup(OptionGroup group) { if (group.isRequired()) { requiredOpts.add(group); } [BUGGY] for (Option option : group.getOptions())  { [BUGGY] {    option.setRequired(false); addOption(option); optionGroups.put(option.getKey(), group); }  [CLASS] Options [METHOD] addOptionGroup [RETURN_TYPE] Options  OptionGroup group [VARIABLES] List requiredOpts Option option OptionGroup group boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	replace	
15	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public Options addOptionGroup(OptionGroup group) { if (group.isRequired()) { requiredOpts.add(group); } [BUGGY] [BUGGY] for (Option option : group.getOptions())  { {    option.setRequired(false); addOption(option); optionGroups.put(option.getKey(), group); }  [CLASS] Options [METHOD] addOptionGroup [RETURN_TYPE] Options  OptionGroup group [VARIABLES] List requiredOpts Option option OptionGroup group boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	76	77	1	add	
16	[BUG] [BUGGY] option.setRequired(false); [FE] ComparisonFailure [CONTEXT] if (group.isRequired()) { requiredOpts.add(group); } for (Option option : group.getOptions()) {    [BUGGY] option.setRequired(false); [BUGGY] addOption(option); optionGroups.put(option.getKey(), group); } return this; } [CLASS] Options [METHOD] addOptionGroup [RETURN_TYPE] Options  OptionGroup group [VARIABLES] List requiredOpts Option option OptionGroup group boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	81	81	1	replace	
17	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (group.isRequired()) { requiredOpts.add(group); } for (Option option : group.getOptions()) {    [BUGGY] [BUGGY] option.setRequired(false); addOption(option); optionGroups.put(option.getKey(), group); } return this; } [CLASS] Options [METHOD] addOptionGroup [RETURN_TYPE] Options  OptionGroup group [VARIABLES] List requiredOpts Option option OptionGroup group boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	81	81	1	add	
18	[BUG] [BUGGY] addOption(option); [FE] ComparisonFailure [CONTEXT] { requiredOpts.add(group); } for (Option option : group.getOptions()) {    option.setRequired(false); [BUGGY] addOption(option); [BUGGY]  optionGroups.put(option.getKey(), group); } return this; } [CLASS] Options [METHOD] addOptionGroup [RETURN_TYPE] Options  OptionGroup group [VARIABLES] List requiredOpts Option option OptionGroup group boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	replace	
19	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] { requiredOpts.add(group); } for (Option option : group.getOptions()) {    option.setRequired(false); [BUGGY] [BUGGY] addOption(option); optionGroups.put(option.getKey(), group); } return this; } [CLASS] Options [METHOD] addOptionGroup [RETURN_TYPE] Options  OptionGroup group [VARIABLES] List requiredOpts Option option OptionGroup group boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	82	82	1	add	
20	[BUG] [BUGGY] optionGroups.put(option.getKey(), group); [FE] ComparisonFailure [CONTEXT] } for (Option option : group.getOptions()) {    option.setRequired(false); addOption(option); [BUGGY] optionGroups.put(option.getKey(), group); [BUGGY] } return this; } [CLASS] Options [METHOD] addOptionGroup [RETURN_TYPE] Options  OptionGroup group [VARIABLES] List requiredOpts Option option OptionGroup group boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	
21	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } for (Option option : group.getOptions()) {    option.setRequired(false); addOption(option); [BUGGY] [BUGGY] optionGroups.put(option.getKey(), group); } return this; } [CLASS] Options [METHOD] addOptionGroup [RETURN_TYPE] Options  OptionGroup group [VARIABLES] List requiredOpts Option option OptionGroup group boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	add	
22	[BUG] [BUGGY] } [FE] ComparisonFailure [CONTEXT] for (Option option : group.getOptions()) {    option.setRequired(false); addOption(option); optionGroups.put(option.getKey(), group); [BUGGY] } [BUGGY]  return this; } [CLASS] Options [METHOD] addOptionGroup [RETURN_TYPE] Options  OptionGroup group [VARIABLES] List requiredOpts Option option OptionGroup group boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	replace	
23	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] for (Option option : group.getOptions()) {    option.setRequired(false); addOption(option); optionGroups.put(option.getKey(), group); [BUGGY] [BUGGY] } return this; } [CLASS] Options [METHOD] addOptionGroup [RETURN_TYPE] Options  OptionGroup group [VARIABLES] List requiredOpts Option option OptionGroup group boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	85	85	1	add	
24	[BUG] [BUGGY] return this; [FE] ComparisonFailure [CONTEXT] {    option.setRequired(false); addOption(option); optionGroups.put(option.getKey(), group); } [BUGGY] return this; [BUGGY] } [CLASS] Options [METHOD] addOptionGroup [RETURN_TYPE] Options  OptionGroup group [VARIABLES] List requiredOpts Option option OptionGroup group boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	87	87	1	replace	
25	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] {    option.setRequired(false); addOption(option); optionGroups.put(option.getKey(), group); } [BUGGY] [BUGGY] return this; } [CLASS] Options [METHOD] addOptionGroup [RETURN_TYPE] Options  OptionGroup group [VARIABLES] List requiredOpts Option option OptionGroup group boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	87	87	1	add	
26	[BUG] [BUGGY] String key = opt.getKey(); [FE] ComparisonFailure [CONTEXT] public Options addOption(Option opt) { [BUGGY] String key = opt.getKey(); [BUGGY]   if (opt.hasLongOpt()) { longOpts.put(opt.getLongOpt(), opt); }  if (opt.isRequired()) { [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	
27	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public Options addOption(Option opt) { [BUGGY] [BUGGY] String key = opt.getKey();  if (opt.hasLongOpt()) { longOpts.put(opt.getLongOpt(), opt); }  if (opt.isRequired()) { [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	add	
28	[BUG] [BUGGY] if (opt.hasLongOpt()) { [FE] ComparisonFailure [CONTEXT] public Options addOption(Option opt) { String key = opt.getKey();  [BUGGY] if (opt.hasLongOpt())  { [BUGGY] { longOpts.put(opt.getLongOpt(), opt); }  if (opt.isRequired()) { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	
29	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public Options addOption(Option opt) { String key = opt.getKey();  [BUGGY] [BUGGY] if (opt.hasLongOpt())  { { longOpts.put(opt.getLongOpt(), opt); }  if (opt.isRequired()) { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	add	
30	[BUG] [BUGGY] longOpts.put(opt.getLongOpt(), opt); [FE] ComparisonFailure [CONTEXT] public Options addOption(Option opt) { String key = opt.getKey();  if (opt.hasLongOpt()) { [BUGGY] longOpts.put(opt.getLongOpt(), opt); [BUGGY] }  if (opt.isRequired()) { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	replace	
31	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public Options addOption(Option opt) { String key = opt.getKey();  if (opt.hasLongOpt()) { [BUGGY] [BUGGY] longOpts.put(opt.getLongOpt(), opt); }  if (opt.isRequired()) { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	159	159	1	add	
32	[BUG] [BUGGY] if (opt.isRequired()) { [FE] ComparisonFailure [CONTEXT] { String key = opt.getKey();  if (opt.hasLongOpt()) { longOpts.put(opt.getLongOpt(), opt); }  [BUGGY] if (opt.isRequired())  { [BUGGY] { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); } shortOpts.put(key, opt);  [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	163	164	1	replace	
33	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] { String key = opt.getKey();  if (opt.hasLongOpt()) { longOpts.put(opt.getLongOpt(), opt); }  [BUGGY] [BUGGY] if (opt.isRequired())  { { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); } shortOpts.put(key, opt);  [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	163	164	1	add	
34	[BUG] [BUGGY] if (requiredOpts.contains(key)) { [FE] ComparisonFailure [CONTEXT]  if (opt.hasLongOpt()) { longOpts.put(opt.getLongOpt(), opt); }  if (opt.isRequired()) { [BUGGY] if (requiredOpts.contains(key))   { [BUGGY] { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); } shortOpts.put(key, opt); return this; } [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	
35	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  if (opt.hasLongOpt()) { longOpts.put(opt.getLongOpt(), opt); }  if (opt.isRequired()) { [BUGGY] [BUGGY] if (requiredOpts.contains(key))   { { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); } shortOpts.put(key, opt); return this; } [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	add	
36	[BUG] [BUGGY] requiredOpts.add(key); [FE] ComparisonFailure [CONTEXT] longOpts.put(opt.getLongOpt(), opt); }  if (opt.isRequired()) { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } [BUGGY] requiredOpts.add(key); [BUGGY] } shortOpts.put(key, opt); return this; } [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	replace	
37	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] longOpts.put(opt.getLongOpt(), opt); }  if (opt.isRequired()) { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } [BUGGY] [BUGGY] requiredOpts.add(key); } shortOpts.put(key, opt); return this; } [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	169	169	1	add	
38	[BUG] [BUGGY] shortOpts.put(key, opt); [FE] ComparisonFailure [CONTEXT]  if (opt.isRequired()) { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); } [BUGGY] shortOpts.put(key, opt); [BUGGY]  return this; } [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	172	172	1	replace	
39	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  if (opt.isRequired()) { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); } [BUGGY] [BUGGY] shortOpts.put(key, opt); return this; } [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	172	172	1	add	
40	[BUG] [BUGGY] return this; [FE] ComparisonFailure [CONTEXT] { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); } shortOpts.put(key, opt); [BUGGY] return this; [BUGGY] } [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	
41	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] { if (requiredOpts.contains(key)) { requiredOpts.remove(requiredOpts.indexOf(key)); } requiredOpts.add(key); } shortOpts.put(key, opt); [BUGGY] [BUGGY] return this; } [CLASS] Options [METHOD] addOption [RETURN_TYPE] Options  Option opt [VARIABLES] List requiredOpts Option opt String key boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	add	
42	[BUG] [BUGGY] return Collections.unmodifiableCollection(helpOptions()); [FE] ComparisonFailure [CONTEXT] public Collection<Option> getOptions() { [BUGGY] return Collections.unmodifiableCollection(helpOptions()); [BUGGY] } [CLASS] Options [METHOD] getOptions [RETURN_TYPE] Collection  [VARIABLES] List requiredOpts boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	replace	
43	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public Collection<Option> getOptions() { [BUGGY] [BUGGY] return Collections.unmodifiableCollection(helpOptions()); } [CLASS] Options [METHOD] getOptions [RETURN_TYPE] Collection  [VARIABLES] List requiredOpts boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	184	184	1	add	
44	[BUG] [BUGGY] return new ArrayList<Option>(shortOpts.values()); [FE] ComparisonFailure [CONTEXT] List<Option> helpOptions() { [BUGGY] return new ArrayList<Option>(shortOpts.values()); [BUGGY] } [CLASS] Options [METHOD] helpOptions [RETURN_TYPE] List  [VARIABLES] List requiredOpts boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	194	194	1	replace	
45	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] List<Option> helpOptions() { [BUGGY] [BUGGY] return new ArrayList<Option>(shortOpts.values()); } [CLASS] Options [METHOD] helpOptions [RETURN_TYPE] List  [VARIABLES] List requiredOpts boolean Map longOpts optionGroups shortOpts long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	194	194	1	add	
47	[BUG] [BUGGY] private final Map<String, Option> optionMap = new HashMap<String, Option>(); [FE] ComparisonFailure [CONTEXT] [BUGGY] private final Map<String, Option> optionMap = new HashMap<String, Option>(); [BUGGY]  [CLASS] OptionGroup  [VARIABLES] 	projects/Cli36/src/main/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865475	37	37	1	replace	
48	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] [BUGGY] [BUGGY] private final Map<String, Option> optionMap = new HashMap<String, Option>(); [CLASS] OptionGroup  [VARIABLES] 	projects/Cli36/src/main/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865475	37	37	1	add	
49	[BUG] [BUGGY] optionMap.put(option.getKey(), option); [FE] ComparisonFailure [CONTEXT] public OptionGroup addOption(Option option) {   [BUGGY] optionMap.put(option.getKey(), option); [BUGGY]  return this; } [CLASS] OptionGroup [METHOD] addOption [RETURN_TYPE] OptionGroup  Option option [VARIABLES] Option option boolean required String selected Map optionMap long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865475	55	55	1	replace	
50	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public OptionGroup addOption(Option option) {   [BUGGY] [BUGGY] optionMap.put(option.getKey(), option); return this; } [CLASS] OptionGroup [METHOD] addOption [RETURN_TYPE] OptionGroup  Option option [VARIABLES] Option option boolean required String selected Map optionMap long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865475	55	55	1	add	
51	[BUG] [BUGGY] return this; [FE] ComparisonFailure [CONTEXT] public OptionGroup addOption(Option option) {   optionMap.put(option.getKey(), option); [BUGGY] return this; [BUGGY] } [CLASS] OptionGroup [METHOD] addOption [RETURN_TYPE] OptionGroup  Option option [VARIABLES] Option option boolean required String selected Map optionMap long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865475	57	57	1	replace	
52	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public OptionGroup addOption(Option option) {   optionMap.put(option.getKey(), option); [BUGGY] [BUGGY] return this; } [CLASS] OptionGroup [METHOD] addOption [RETURN_TYPE] OptionGroup  Option option [VARIABLES] Option option boolean required String selected Map optionMap long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865475	57	57	1	add	
53	[BUG] [BUGGY] return optionMap.values(); [FE] ComparisonFailure [CONTEXT] public Collection<Option> getOptions() {  [BUGGY] return optionMap.values(); [BUGGY] } [CLASS] OptionGroup [METHOD] getOptions [RETURN_TYPE] Collection  [VARIABLES] boolean required String selected Map optionMap long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865475	76	76	1	replace	
54	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public Collection<Option> getOptions() {  [BUGGY] [BUGGY] return optionMap.values(); } [CLASS] OptionGroup [METHOD] getOptions [RETURN_TYPE] Collection  [VARIABLES] boolean required String selected Map optionMap long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865475	76	76	1	add	
55	[BUG] [BUGGY] this.required = required; [FE] ComparisonFailure [CONTEXT] public void setRequired(boolean required) { [BUGGY] this.required = required; [BUGGY] } [CLASS] OptionGroup [METHOD] setRequired [RETURN_TYPE] void  boolean required [VARIABLES] boolean required String selected Map optionMap long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865475	121	121	1	replace	
56	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public void setRequired(boolean required) { [BUGGY] [BUGGY] this.required = required; } [CLASS] OptionGroup [METHOD] setRequired [RETURN_TYPE] void  boolean required [VARIABLES] boolean required String selected Map optionMap long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865475	121	121	1	add	
57	[BUG] [BUGGY] } [FE] ComparisonFailure [CONTEXT] public void setRequired(boolean required) { this.required = required; [BUGGY] } [BUGGY]  [CLASS] OptionGroup [METHOD] setRequired [RETURN_TYPE] void  boolean required [VARIABLES] boolean required String selected Map optionMap long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865475	122	122	1	replace	
58	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public void setRequired(boolean required) { this.required = required; [BUGGY] [BUGGY] } [CLASS] OptionGroup [METHOD] setRequired [RETURN_TYPE] void  boolean required [VARIABLES] boolean required String selected Map optionMap long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865475	122	122	1	add	
59	[BUG] [BUGGY] return required; [FE] ComparisonFailure [CONTEXT] public boolean isRequired() { [BUGGY] return required; [BUGGY] } [CLASS] OptionGroup [METHOD] isRequired [RETURN_TYPE] boolean  [VARIABLES] boolean required String selected Map optionMap long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865475	131	131	1	replace	
60	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public boolean isRequired() { [BUGGY] [BUGGY] return required; } [CLASS] OptionGroup [METHOD] isRequired [RETURN_TYPE] boolean  [VARIABLES] boolean required String selected Map optionMap long serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865475	131	131	1	add	
