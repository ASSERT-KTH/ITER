bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(opt  ==  null  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt  ==  null  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt  ==  null  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {	  if(key    ==    null    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
2	[BUG]  [BUGGY]  if(key  ==  null  ||  opt.hasLongOpt()  ||  opt.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  opt.hasLongOpt()  ||  opt.isRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  opt.hasLongOpt()  ||  opt.isRequired())  {	  if(key    ==    null    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
3	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt!=  null  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt!=  null  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {	  if(key    ==    null    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
4	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(new  Option(key));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(new  Option(key));  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(new  Option(key));  }	  if(opt.isOptional())    {    if(requiredOpts.contains(key))    {    requiredOpts.add(new    Option(key));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
5	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.add(new  Option(key));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.add(new  Option(key));  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.add(new  Option(key));  }	  if(opt.isOptional())    {    if(requiredOpts.contains(key))    {    requiredOpts.add(new    Option(key));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
6	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }	  if(opt.isOptional())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
7	[BUG]  [BUGGY]  if(opt.hasLongOpt()  &&  key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  &&  key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  &&  key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.isLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    &&    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
8	[BUG]  [BUGGY]  if(opt.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.isLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    &&    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
9	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getLongOpt(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getLongOpt(),  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getLongOpt(),  longOpts);	  Option    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
10	[BUG]  [BUGGY]  Option  shortOpts  =  longOpts.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  longOpts.getLongOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  longOpts.getLongOpt();	  Option    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
11	[BUG]  [BUGGY]  if(opt.hasOpt()  &&  opt.hasRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOpt()  &&  opt.hasRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOpt()  &&  opt.hasRequired())  {	  if(opt.hasOpt()    ||    opt.hasRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
12	[BUG]  [BUGGY]  if(key.hasOpt()  ||  opt.hasRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.hasOpt()  ||  opt.hasRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.hasOpt()  ||  opt.hasRequired())  {	  if(opt.hasOpt()    ||    opt.hasRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
13	[BUG]  [BUGGY]  if(requiredOpts.contains(key)||  requiredOpts.contains(key.substring(1)))  {  requiredOpts.put(key.substring(2),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.contains(key)||  requiredOpts.contains(key.substring(1)))  {  requiredOpts.put(key.substring(2),  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.contains(key)||  requiredOpts.contains(key.substring(1)))  {  requiredOpts.put(key.substring(2),  opt);  }	  if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(1),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	118	None	replace
14	[BUG]  [BUGGY]  if(requiredOpts.contains(key)||  requiredOpts.contains(key.substring(1)))  {  requiredOpts.put(key.substring(0,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.contains(key)||  requiredOpts.contains(key.substring(1)))  {  requiredOpts.put(key.substring(0,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.contains(key)||  requiredOpts.contains(key.substring(1)))  {  requiredOpts.put(key.substring(0,  opt);  }	  if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(1),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	118	None	replace
15	[BUG]  [BUGGY]  if(requiredOpts.contains(key)||  requiredOpts.containsKey(key.substring(1)))  {  requiredOpts.put(key.substring(2),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.contains(key)||  requiredOpts.containsKey(key.substring(1)))  {  requiredOpts.put(key.substring(2),  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.contains(key)||  requiredOpts.containsKey(key.substring(1)))  {  requiredOpts.put(key.substring(2),  opt);  }	  if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(1),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	118	None	replace
16	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key,  shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(key,  shortOpts);	  Option    optionGroups    =    opt.getOptionGroups(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
17	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key,  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(key,  longOpts);	  Option    optionGroups    =    opt.getOptionGroups(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
18	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key,  requiredOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(key,  requiredOpts);	  Option    optionGroups    =    opt.getOptionGroups(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
19	[BUG]  [BUGGY]  Option  shortOpts  =  options.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  options.getShortOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  options.getShortOpt();	  Option    shortOpts    =    option.getShortOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	115	None	replace
20	[BUG]  [BUGGY]  Option  shortOpts  =  option.getShortOpt(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  option.getShortOpt(),  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  option.getShortOpt(),  longOpts);	  Option    shortOpts    =    option.getShortOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	115	None	replace
21	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(key,  opt);  }	  if(opt.isOptional())    {    if(requiredOpts.contains(key))    {    requiredOpts.add(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
22	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.add(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.add(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.add(key,  opt);  }	  if(opt.isOptional())    {    if(requiredOpts.contains(key))    {    requiredOpts.add(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
23	[BUG]  [BUGGY]  String  shortOpts  =  getShortOpts(key,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getShortOpts(key,  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getShortOpts(key,  longOpts);	  String    shortOpts    =    getShortOpts(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
24	[BUG]  [BUGGY]  String  shortOpts  =  getShortOpts(key.toLowerCase());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getShortOpts(key.toLowerCase());  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getShortOpts(key.toLowerCase());	  String    shortOpts    =    getShortOpts(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
25	[BUG]  [BUGGY]  String  shortOpts  =  getShortOpts(key,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getShortOpts(key,  shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getShortOpts(key,  shortOpts);	  String    shortOpts    =    getShortOpts(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
26	[BUG]  [BUGGY]  if(opt.hasLongOpt()  &&  opt.isOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  &&  opt.isOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  &&  opt.isOpt())  {	  if(opt.hasOpt()    &&    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
27	[BUG]  [BUGGY]  if(key.hasOpt()  &&  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.hasOpt()  &&  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.hasOpt()  &&  opt.isLongOpt())  {	  if(opt.hasOpt()    &&    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
28	[BUG]  [BUGGY]  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(key);  }	  if(requiredOpts.contains(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
29	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts!=  null)  {  requiredOpts.add(key);  }	  if(requiredOpts.contains(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
30	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(),  key,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOption(),  key,  shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOption(),  key,  shortOpts);	  Option    opt    =    opt.getOption(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
31	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(),  key,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOption(),  key,  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOption(),  key,  longOpts);	  Option    opt    =    opt.getOption(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
32	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(),  key,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOption(),  key,  requiredOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOption(),  key,  requiredOpts);	  Option    opt    =    opt.getOption(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
33	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(),  key,  lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOption(),  key,  lengthOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOption(),  key,  lengthOpts);	  Option    opt    =    opt.getOption(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
34	[BUG]  [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpt  =  opt.getShortOpt(),  key);	  Option    shortOpt    =    opt.getShortOpt(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
35	[BUG]  [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  longOpts,  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  longOpts,  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpt  =  opt.getShortOpt(),  longOpts,  key);	  Option    shortOpt    =    opt.getShortOpt(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
36	[BUG]  [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  longOpts,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  longOpts,  requiredOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpt  =  opt.getShortOpt(),  longOpts,  requiredOpts);	  Option    shortOpt    =    opt.getShortOpt(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
37	[BUG]  [BUGGY]  Option  shortOpt  =  longOpts.getShortOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpt  =  longOpts.getShortOpt(),  opt);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpt  =  longOpts.getShortOpt(),  opt);	  Option    shortOpt    =    opt.getShortOpt(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
38	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpts(),  key;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getShortOpts(),  key;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getShortOpts(),  key;	  Option    shortOpts    =    opt.getShortOpts(),    longOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
39	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpts(),  longOpts,  key;  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getShortOpts(),  longOpts,  key;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getShortOpts(),  longOpts,  key;	  Option    shortOpts    =    opt.getShortOpts(),    longOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
40	[BUG]  [BUGGY]  Option  shortOpts  =  longOpts.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  longOpts.getShortOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  longOpts.getShortOpts();	  Option    shortOpts    =    opt.getShortOpts(),    longOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
41	[BUG]  [BUGGY]  if(opt.isLongOpt()  &&  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  &&  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  &&  opt.isLongOpt())  {	  if(opt.isLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
42	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key,  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key,  true);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(key,  true);	  Option    optionGroups    =    opt.getOptionGroups(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
43	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(false,  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(false,  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(false,  key);	  Option    optionGroups    =    opt.getOptionGroups(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
44	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(false);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(false);	  Option    optionGroups    =    opt.getOptionGroups(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
45	[BUG]  [BUGGY]  if(key!=  null  ||!longOpts.contains(key)&&!longOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||!longOpts.contains(key)&&!longOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||!longOpts.contains(key)&&!longOpts.contains(key))  {	  if(!longOpts.contains(key)&&!longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
46	[BUG]  [BUGGY]  if(!longOpts.containsKey(key)&&!longOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(!longOpts.containsKey(key)&&!longOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(!longOpts.containsKey(key)&&!longOpts.contains(key))  {	  if(!longOpts.contains(key)&&!longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
47	[BUG]  [BUGGY]  Option  shortOpt  =  opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpt  =  opt.getLongOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpt  =  opt.getLongOpt();	  Option    longOpt    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
48	[BUG]  [BUGGY]  Option  longOpt  =  opt.getLongOpt(),  key;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  longOpt  =  opt.getLongOpt(),  key;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  longOpt  =  opt.getLongOpt(),  key;	  Option    longOpt    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
49	[BUG]  [BUGGY]  Option  longOpt  =  opt.getLongOpt(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  longOpt  =  opt.getLongOpt(),  shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  longOpt  =  opt.getLongOpt(),  shortOpts);	  Option    longOpt    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
50	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(0,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(0,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isRequired())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(0,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(0,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
51	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.contains(key))  {  requiredOpts.add(key.substring(0,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.contains(key))  {  requiredOpts.add(key.substring(0,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isRequired())  {  if(requiredOpts.contains(key))  {  requiredOpts.add(key.substring(0,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(0,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
52	[BUG]  [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  key,  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  key,  longOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpt  =  opt.getShortOpt(),  key,  longOpts;	  Option    shortOpt    =    opt.getShortOpt(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
53	[BUG]  [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  key,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  key,  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpt  =  opt.getShortOpt(),  key,  longOpts);	  Option    shortOpt    =    opt.getShortOpt(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
54	[BUG]  [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  key,  shortOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  key,  shortOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpt  =  opt.getShortOpt(),  key,  shortOpts;	  Option    shortOpt    =    opt.getShortOpt(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
55	[BUG]  [BUGGY]  longOpts  =  opt.getLongOpt(),  shortOpts,  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  longOpts  =  opt.getLongOpt(),  shortOpts,  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	longOpts  =  opt.getLongOpt(),  shortOpts,  key);	  longOpts    =    opt.getLongOpt(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
56	[BUG]  [BUGGY]  if(opt.hasOption())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(new  Option(key));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOption())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(new  Option(key));  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOption())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(new  Option(key));  }	  if(opt.hasOption())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.add(new    Option(key));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
57	[BUG]  [BUGGY]  if(opt.hasOption())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.add(new  Option(key));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOption())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.add(new  Option(key));  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOption())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.add(new  Option(key));  }	  if(opt.hasOption())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.add(new    Option(key));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
58	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.get(key,  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)this.optionGroups.get(key,  opt);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)this.optionGroups.get(key,  opt);	  Option    opt    =(Option)this.optionGroups.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	122	None	replace
59	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.get(key  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)this.optionGroups.get(key  +  1);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)this.optionGroups.get(key  +  1);	  Option    opt    =(Option)this.optionGroups.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	122	None	replace
60	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.get(key  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)this.optionGroups.get(key  -  1);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)this.optionGroups.get(key  -  1);	  Option    opt    =(Option)this.optionGroups.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	122	None	replace
61	[BUG]  [BUGGY]  if(opt.isLongOpt()  ||  opt.isLongOpt().length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  ||  opt.isLongOpt().length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  ||  opt.isLongOpt().length()  ==  0)  {	  if(opt.isLongOpt()    &&    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
62	[BUG]  [BUGGY]  if(key  ==  null  ||  opt.isLongOpt()  &&  key.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  opt.isLongOpt()  &&  key.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  opt.isLongOpt()  &&  key.length()  ==  0)  {	  if(opt.isLongOpt()    &&    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
63	[BUG]  [BUGGY]  if(opt.isLongOpt()  ||  opt.isLongOpt()  {  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  ||  opt.isLongOpt()  {  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  ||  opt.isLongOpt()  {  0)  {	  if(opt.isLongOpt()    &&    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
64	[BUG]  [BUGGY]  if(key  ==  null  ||  opt.hasOpt()  ||  opt.hasRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  opt.hasOpt()  ||  opt.hasRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  opt.hasOpt()  ||  opt.hasRequired())  {	  if(key    ==    null    ||    opt.hasLongOpt()    ||    opt.hasRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
65	[BUG]  [BUGGY]  if(opt  ==  null  ||  opt.hasLongOpt()  ||  opt.hasRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt  ==  null  ||  opt.hasLongOpt()  ||  opt.hasRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt  ==  null  ||  opt.hasLongOpt()  ||  opt.hasRequired())  {	  if(key    ==    null    ||    opt.hasLongOpt()    ||    opt.hasRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
66	[BUG]  [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  longOpts,  key;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  longOpts,  key;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpt  =  opt.getShortOpt(),  longOpts,  key;	  Option    shortOpt    =    opt.getShortOpt(),    longOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
67	[BUG]  [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  longOpts,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  longOpts,  null);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpt  =  opt.getShortOpt(),  longOpts,  null);	  Option    shortOpt    =    opt.getShortOpt(),    longOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
68	[BUG]  [BUGGY]  if(opt.hasLongOpt()  ||  opt.isOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  ||  opt.isOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  ||  opt.isOpt())  {	  if(opt.hasOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
69	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  opt.hasOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  ||  opt.hasOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  ||  opt.hasOpt()  ||  opt.isLongOpt())  {	  if(opt.hasOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
70	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getShortOpt(),  key);	  Option    shortOpts    =    opt.getShortOpt(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
71	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  longOpts,  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  longOpts,  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getShortOpt(),  longOpts,  key);	  Option    shortOpts    =    opt.getShortOpt(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
72	[BUG]  [BUGGY]  Option  shortOpts  =  longOpts.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  longOpts.getShortOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  longOpts.getShortOpt();	  Option    shortOpts    =    opt.getShortOpt(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
73	[BUG]  [BUGGY]  Option  shortOpts  =  longOpts.getShortOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  longOpts.getShortOpt(),  opt);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  longOpts.getShortOpt(),  opt);	  Option    shortOpts    =    opt.getShortOpt(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
74	[BUG]  [BUGGY]  String  shortOpts  =(String)key.getShortValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =(String)key.getShortValue();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =(String)key.getShortValue();	  String    shortOpts    =(String)opt.getShortValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	113	None	replace
75	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getShortValue(),  key;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =(String)opt.getShortValue(),  key;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =(String)opt.getShortValue(),  key;	  String    shortOpts    =(String)opt.getShortValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	113	None	replace
76	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getShortValue(),  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =(String)opt.getShortValue(),  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =(String)opt.getShortValue(),  key);	  String    shortOpts    =(String)opt.getShortValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	113	None	replace
77	[BUG]  [BUGGY]  Option  longOpts  =  optionGroups.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  longOpts  =  optionGroups.get(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  longOpts  =  optionGroups.get(key);	  if(opt.hasOpt())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(0,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	120	None	replace
78	[BUG]  [BUGGY]  CharSequence  shortOpts  =  opt.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  CharSequence  shortOpts  =  opt.getShortOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	CharSequence  shortOpts  =  opt.getShortOpts();	  char    shortOpts    =    opt.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	124	None	replace
79	[BUG]  [BUGGY]  Character  shortOpts  =  opt.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Character  shortOpts  =  opt.getShortOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Character  shortOpts  =  opt.getShortOpts();	  char    shortOpts    =    opt.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	124	None	replace
80	[BUG]  [BUGGY]  List  shortOpts  =  opt.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  List  shortOpts  =  opt.getShortOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	List  shortOpts  =  opt.getShortOpts();	  char    shortOpts    =    opt.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	124	None	replace
81	[BUG]  [BUGGY]  Option  opt  =  opt.getOptionGroup(),  key;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOptionGroup(),  key;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOptionGroup(),  key;	  Option    opt    =    opt.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
82	[BUG]  [BUGGY]  Option  opt  =  opt.getOptionGroup(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOptionGroup(),  shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOptionGroup(),  shortOpts);	  Option    opt    =    opt.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
83	[BUG]  [BUGGY]  Option  optionGroups  =  options.getOptionGroups(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  options.getOptionGroups(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  options.getOptionGroups(key);	  Option    optionGroups    =    options.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	123	None	replace
84	[BUG]  [BUGGY]  Option  optionGroups  =  options.getOptionGroups(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  options.getOptionGroups(),  opt);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  options.getOptionGroups(),  opt);	  Option    optionGroups    =    options.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	123	None	replace
85	[BUG]  [BUGGY]  Option  optionGroups  =  options.getOptionGroup(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  options.getOptionGroup(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  options.getOptionGroup(key);	  Option    optionGroups    =    options.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	123	None	replace
86	[BUG]  [BUGGY]  String  shortOpts  =  opt.getShortOpt(),  key,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  opt.getShortOpt(),  key,  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  opt.getShortOpt(),  key,  longOpts);	  String    shortOpts    =    opt.getShortOpt(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
87	[BUG]  [BUGGY]  String  shortOpts  =  opt.getShortOpt(),  key,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  opt.getShortOpt(),  key,  shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  opt.getShortOpt(),  key,  shortOpts);	  String    shortOpts    =    opt.getShortOpt(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
88	[BUG]  [BUGGY]  String  shortOpts  =  opt.getShortOpt(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  opt.getShortOpt(),  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  opt.getShortOpt(),  longOpts);	  String    shortOpts    =    opt.getShortOpt(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
89	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(key);  }	  if(opt.hasLongOpt())    {    if(requiredOpts.contains(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
90	[BUG]  [BUGGY]  Option  shortOpts  =  requiredOpts.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  requiredOpts.get(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  requiredOpts.get(key);	  Option    longOpts    =    requiredOpts.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
91	[BUG]  [BUGGY]  Option  longOpts  =  shortOpts.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  longOpts  =  shortOpts.get(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  longOpts  =  shortOpts.get(key);	  Option    longOpts    =    requiredOpts.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
92	[BUG]  [BUGGY]  Option  longOpts  =  requiredOpts.get(key,  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  longOpts  =  requiredOpts.get(key,  opt);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  longOpts  =  requiredOpts.get(key,  opt);	  Option    longOpts    =    requiredOpts.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
93	[BUG]  [BUGGY]  Option  opt  =(Option)optionGroups.get(key,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)optionGroups.get(key,  shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)optionGroups.get(key,  shortOpts);	  Option    opt    =(Option)optionGroups.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
94	[BUG]  [BUGGY]  Option  opt  =(Option)optionGroups.get(key  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)optionGroups.get(key  +  1);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)optionGroups.get(key  +  1);	  Option    opt    =(Option)optionGroups.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
95	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.contains(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.contains(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isRequired())  {  if(requiredOpts.contains(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key)||    requiredOpts.containsKey(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
96	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isRequired())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key)||    requiredOpts.containsKey(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
97	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isRequired())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key)||    requiredOpts.containsKey(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
98	[BUG]  [BUGGY]  if(key.length()  ==  0  &&  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  &&  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  &&  opt.hasLongOpt()  ||  opt.isLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
99	[BUG]  [BUGGY]  if(opt.hasLongOpt()  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
100	[BUG]  [BUGGY]  if(opt.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
101	[BUG]  [BUGGY]  longOpts  =  opt.getLongOpt(),  key,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  longOpts  =  opt.getLongOpt(),  key,  shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	longOpts  =  opt.getLongOpt(),  key,  shortOpts);	  longOpts    =    opt.getLongOpt(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
102	[BUG]  [BUGGY]  longOpts  =  opt.getLongOpt(),  key,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  longOpts  =  opt.getLongOpt(),  key,  requiredOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	longOpts  =  opt.getLongOpt(),  key,  requiredOpts);	  longOpts    =    opt.getLongOpt(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
103	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(),  key,  shortOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOption(),  key,  shortOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOption(),  key,  shortOpts;	  Option    opt    =    opt.getOption(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
104	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(),  key,  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOption(),  key,  longOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOption(),  key,  longOpts;	  Option    opt    =    opt.getOption(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
105	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(),  key,  requiredOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOption(),  key,  requiredOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOption(),  key,  requiredOpts;	  Option    opt    =    opt.getOption(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
106	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  neededOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  neededOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  neededOpts.add(key);  }	  if(opt.isOptional())    {    if(requiredOpts.containsKey(key))    {    neededOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
107	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key))  {  neededOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.containsKey(key))  {  neededOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.containsKey(key))  {  neededOpts.add(key);  }	  if(opt.isOptional())    {    if(requiredOpts.containsKey(key))    {    neededOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
108	[BUG]  [BUGGY]  if(opt.hasLongOpt()  ||  opt.hasOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  ||  opt.hasOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  ||  opt.hasOpt())  {	  if(opt.hasOpt()    ||    opt.hasLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
109	[BUG]  [BUGGY]  if(opt.hasOpt()  &&  opt.hasLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOpt()  &&  opt.hasLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOpt()  &&  opt.hasLongOpt())  {	  if(opt.hasOpt()    ||    opt.hasLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
110	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  opt.hasOpt()  ||  opt.hasLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  ||  opt.hasOpt()  ||  opt.hasLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  ||  opt.hasOpt()  ||  opt.hasLongOpt())  {	  if(opt.hasOpt()    ||    opt.hasLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
111	[BUG]  [BUGGY]  String  shortOpts  =  getShortOpts(),  key,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getShortOpts(),  key,  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getShortOpts(),  key,  longOpts);	  String    shortOpts    =    getShortOpts(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
112	[BUG]  [BUGGY]  String  shortOpts  =  getShortOpts(),  key,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getShortOpts(),  key,  shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getShortOpts(),  key,  shortOpts);	  String    shortOpts    =    getShortOpts(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
113	[BUG]  [BUGGY]  String  shortOpts  =  getShortOpts(),  opt,  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getShortOpts(),  opt,  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getShortOpts(),  opt,  key);	  String    shortOpts    =    getShortOpts(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
114	[BUG]  [BUGGY]  String  shortOpts  =  getShortOpts(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getShortOpts(),  opt);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getShortOpts(),  opt);	  String    shortOpts    =    getShortOpts(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
115	[BUG]  [BUGGY]  if(opt.hasLongOpt()  &&  opt.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  &&  opt.isRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  &&  opt.isRequired())  {	  if(opt.hasLongOpt()    ||    opt.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
116	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isRequired())  {	  if(opt.hasLongOpt()    ||    opt.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
117	[BUG]  [BUGGY]  if(key.equals(opt.getLongOpt())||  opt.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.equals(opt.getLongOpt())||  opt.isRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.equals(opt.getLongOpt())||  opt.isRequired())  {	  if(opt.hasLongOpt()    ||    opt.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
118	[BUG]  [BUGGY]  if(opt.hasLongOpt()  &&  opt.hasArg())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  &&  opt.hasArg())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  &&  opt.hasArg())  {	  if(opt.hasLongOpt()    ||    opt.hasArg())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	121	None	replace
119	[BUG]  [BUGGY]  if(opt.hasOpt()  ||  opt.hasArg())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOpt()  ||  opt.hasArg())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOpt()  ||  opt.hasArg())  {	  if(opt.hasLongOpt()    ||    opt.hasArg())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	121	None	replace
120	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isRequired())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.add(key);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key)||    requiredOpts.contains(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
121	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key)||    requiredOpts.contains(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
122	[BUG]  [BUGGY]  shortOpts  =  opt.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  shortOpts  =  opt.getShortOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	shortOpts  =  opt.getShortOpt();	  shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
123	[BUG]  [BUGGY]  shortOpts  =  opt.getLongOpt(),  key;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  shortOpts  =  opt.getLongOpt(),  key;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	shortOpts  =  opt.getLongOpt(),  key;	  shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
124	[BUG]  [BUGGY]  if(key.length()!=  0  &&  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()!=  0  &&  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()!=  0  &&  opt.hasLongOpt()  ||  opt.isLongOpt())  {	  if(key.length()!=    0    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
125	[BUG]  [BUGGY]  if(opt.length()!=  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.length()!=  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.length()!=  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {	  if(key.length()!=    0    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
126	[BUG]  [BUGGY]  if(opt.hasLongOpt()  ||  key.length()!=  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  ||  key.length()!=  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  ||  key.length()!=  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {	  if(key.length()!=    0    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
127	[BUG]  [BUGGY]  if(opt.hasOption())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(new  Option(key));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOption())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(new  Option(key));  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOption())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(new  Option(key));  }	  if(opt.hasOption())    {    if(requiredOpts.contains(key))    {    requiredOpts.add(new    Option(key));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
128	[BUG]  [BUGGY]  String  shortOpts  =  getLongOpts(),  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getLongOpts(),  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getLongOpts(),  key);	  String    shortOpts    =    getLongOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
129	[BUG]  [BUGGY]  String  shortOpts  =  getLongOpts(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getLongOpts(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getLongOpts(key);	  String    shortOpts    =    getLongOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
130	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  opt.isLongOpt()  ||  opt.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  ||  opt.isLongOpt()  ||  opt.isRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  ||  opt.isLongOpt()  ||  opt.isRequired())  {	  if(opt.isLongOpt()    ||    opt.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
131	[BUG]  [BUGGY]  if(opt.isLongOpt()  &&  opt.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  &&  opt.isRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  &&  opt.isRequired())  {	  if(opt.isLongOpt()    ||    opt.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
132	[BUG]  [BUGGY]  if(key  ==  null  ||  opt.isLongOpt()  ||  opt.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  opt.isLongOpt()  ||  opt.isRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  opt.isLongOpt()  ||  opt.isRequired())  {	  if(opt.isLongOpt()    ||    opt.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
133	[BUG]  [BUGGY]  if(opt.hasOptions())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(new  Option(key));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOptions())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(new  Option(key));  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOptions())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.add(new  Option(key));  }	  if(opt.hasOptions())    {    if(requiredOpts.contains(key))    {    requiredOpts.add(new    Option(key));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
134	[BUG]  [BUGGY]  if(opt.hasOptions())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.add(new  Option(key));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOptions())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.add(new  Option(key));  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOptions())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.add(new  Option(key));  }	  if(opt.hasOptions())    {    if(requiredOpts.contains(key))    {    requiredOpts.add(new    Option(key));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
135	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.containsKey(key))  {  neededOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.containsKey(key))  {  neededOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isRequired())  {  if(requiredOpts.containsKey(key))  {  neededOpts.put(key,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
136	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }	  if(opt.hasLongOpt())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	108	None	replace
137	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }	  if(opt.hasLongOpt())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	108	None	replace
138	[BUG]  [BUGGY]  Options  optionGroups  =  opt.getOptionGroups(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Options  optionGroups  =  opt.getOptionGroups(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Options  optionGroups  =  opt.getOptionGroups(key);	  Options    optionGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
139	[BUG]  [BUGGY]  CharSequence  shortOpts  =(char)opt.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  CharSequence  shortOpts  =(char)opt.getValue();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	CharSequence  shortOpts  =(char)opt.getValue();	  char    shortOpts    =(char)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	114	None	replace
140	[BUG]  [BUGGY]  String  shortOpts  =(String)option.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =(String)option.getValue();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =(String)option.getValue();	  char    shortOpts    =(char)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	114	None	replace
141	[BUG]  [BUGGY]  if(!longOpts.contains(key)&&  longOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(!longOpts.contains(key)&&  longOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(!longOpts.contains(key)&&  longOpts.contains(key))  {	  if(!longOpts.contains(key)||    longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
142	[BUG]  [BUGGY]  if(key!=  null  ||!longOpts.contains(key)||  longOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||!longOpts.contains(key)||  longOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||!longOpts.contains(key)||  longOpts.contains(key))  {	  if(!longOpts.contains(key)||    longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
143	[BUG]  [BUGGY]  if(!longOpts.contains(key)||  shortOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(!longOpts.contains(key)||  shortOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(!longOpts.contains(key)||  shortOpts.contains(key))  {	  if(!longOpts.contains(key)||    longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
144	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.hasOptionalLongOpt())  {	  if(opt.hasLongOpt()    &&    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
145	[BUG]  [BUGGY]  if(key.equals(opt.getLongOpt())&&  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.equals(opt.getLongOpt())&&  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.equals(opt.getLongOpt())&&  opt.hasOptionalLongOpt())  {	  if(opt.hasLongOpt()    &&    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
146	[BUG]  [BUGGY]  if(key.length()  ==  0  &&  opt.hasLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  &&  opt.hasLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  &&  opt.hasLongOpt())  {	  if(opt.hasLongOpt()    &&    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
147	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  longOpts,  key;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  longOpts,  key;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getShortOpt(),  longOpts,  key;	  Option    shortOpts    =    opt.getShortOpt(),    longOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
148	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  this.longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  this.longOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getShortOpt(),  this.longOpts;	  Option    shortOpts    =    opt.getShortOpt(),    longOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
149	[BUG]  [BUGGY]  String  shortOpts  =  getShortOpts().toString(),  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getShortOpts().toString(),  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getShortOpts().toString(),  key);	  String    shortOpts    =    getShortOpts().toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	112	None	replace
150	[BUG]  [BUGGY]  String  shortOpts  =  getShortOpts().indexOf(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getShortOpts().indexOf(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getShortOpts().indexOf(key);	  String    shortOpts    =    getShortOpts().toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	112	None	replace
151	[BUG]  [BUGGY]  String  shortOpts  =  getShortOpts().toString()  + ", ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getShortOpts().toString()  + ", ";  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getShortOpts().toString()  + ", ";	  String    shortOpts    =    getShortOpts().toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	112	None	replace
152	[BUG]  [BUGGY]  String  shortOpts  =  key.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  key.getShortOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  key.getShortOpt();	  String    shortOpts    =    key.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
153	[BUG]  [BUGGY]  String  shortOpts  =  optionGroups.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  optionGroups.getShortOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  optionGroups.getShortOpts();	  String    shortOpts    =    key.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
154	[BUG]  [BUGGY]  char  shortOpts  =  key.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  char  shortOpts  =  key.getShortOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	char  shortOpts  =  key.getShortOpts();	  String    shortOpts    =    key.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
155	[BUG]  [BUGGY]  String  shortOpts  =  opt.getShortOpt(),  key;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  opt.getShortOpt(),  key;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  opt.getShortOpt(),  key;	  String    shortOpts    =    opt.getShortOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
156	[BUG]  [BUGGY]  if(key  ==  null  ||  opt.hasLongOpt()  ||  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  opt.hasLongOpt()  ||  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  opt.hasLongOpt()  ||  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {	  if(opt.hasLongOpt()    ||    opt.isLongOpt()    ||    key.equals(opt.getLongOpt()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	125	None	replace
157	[BUG]  [BUGGY]  if(key!=  null  ||  opt.hasLongOpt()  ||  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||  opt.hasLongOpt()  ||  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||  opt.hasLongOpt()  ||  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {	  if(opt.hasLongOpt()    ||    opt.isLongOpt()    ||    key.equals(opt.getLongOpt()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	125	None	replace
158	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  ||  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  ||  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {	  if(opt.hasLongOpt()    ||    opt.isLongOpt()    ||    key.equals(opt.getLongOpt()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	125	None	replace
159	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  ||  opt.isLongOpt())  {	  if(opt.isLongOpt()    ||    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
160	[BUG]  [BUGGY]  if(key  ==  null  ||  opt.isLongOpt()  ||  key.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  opt.isLongOpt()  ||  key.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  opt.isLongOpt()  ||  key.length()  ==  0)  {	  if(opt.isLongOpt()    ||    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
161	[BUG]  [BUGGY]  if(key.isLongOpt()  ||  key.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.isLongOpt()  ||  key.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.isLongOpt()  ||  key.length()  ==  0)  {	  if(opt.isLongOpt()    ||    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
162	[BUG]  [BUGGY]  if(opt.isLongOpt()  ||  opt.isLongOpt()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  ||  opt.isLongOpt()!=  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  ||  opt.isLongOpt()!=  0)  {	  if(opt.isLongOpt()    &&    key.length()!=    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
163	[BUG]  [BUGGY]  if(opt.isLongOpt()  ||  key.length()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  ||  key.length()!=  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  ||  key.length()!=  0)  {	  if(opt.isLongOpt()    &&    key.length()!=    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
164	[BUG]  [BUGGY]  if(key!=  null  ||  opt.isLongOpt()  &&  key.length()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||  opt.isLongOpt()  &&  key.length()!=  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||  opt.isLongOpt()  &&  key.length()!=  0)  {	  if(opt.isLongOpt()    &&    key.length()!=    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
165	[BUG]  [BUGGY]  if(key.length()!=  0  &&  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()!=  0  &&  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()!=  0  &&  opt.isLongOpt())  {	  if(opt.isLongOpt()    &&    key.length()!=    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
166	[BUG]  [BUGGY]  if(opt.hasLongOpt()  &&  opt.hasValue())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  &&  opt.hasValue())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  &&  opt.hasValue())  {	  if(opt.hasLongOpt()    ||    opt.hasValue())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
167	[BUG]  [BUGGY]  if(opt.hasLongOpt()  ||  opt.hasValue()  ||  key.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  ||  opt.hasValue()  ||  key.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  ||  opt.hasValue()  ||  key.length()  ==  0)  {	  if(opt.hasLongOpt()    ||    opt.hasValue())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
168	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  opt.hasValue())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  ||  opt.hasValue())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  ||  opt.hasValue())  {	  if(opt.hasLongOpt()    ||    opt.hasValue())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
169	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isOptional())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
170	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)||  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)||  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.contains(key)||  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isOptional())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
171	[BUG]  [BUGGY]  LongOpts  shortOpts  =  opt.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  LongOpts  shortOpts  =  opt.getShortOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	LongOpts  shortOpts  =  opt.getShortOpt();	  LongOpts    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
172	[BUG]  [BUGGY]  LongOpts  shortOpts  =  opt.getLongOpt(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  LongOpts  shortOpts  =  opt.getLongOpt(),  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	LongOpts  shortOpts  =  opt.getLongOpt(),  longOpts);	  LongOpts    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
173	[BUG]  [BUGGY]  LongOpts  shortOpts  =  opt.getLongOpt(),  key;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  LongOpts  shortOpts  =  opt.getLongOpt(),  key;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	LongOpts  shortOpts  =  opt.getLongOpt(),  key;	  LongOpts    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
174	[BUG]  [BUGGY]  if(opt.isLongOpt()  &&  opt.isShortOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  &&  opt.isShortOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  &&  opt.isShortOpt())  {	  if(opt.isLongOpt()    ||    opt.isShortOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
175	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  opt.isLongOpt()  ||  opt.isShortOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  ||  opt.isLongOpt()  ||  opt.isShortOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  ||  opt.isLongOpt()  ||  opt.isShortOpt())  {	  if(opt.isLongOpt()    ||    opt.isShortOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
176	[BUG]  [BUGGY]  if(requiredOpts.contains(key)||  requiredOpts.contains(key.substring(0,  opt))  {  requiredOpts.put(key.substring(0,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.contains(key)||  requiredOpts.contains(key.substring(0,  opt))  {  requiredOpts.put(key.substring(0,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.contains(key)||  requiredOpts.contains(key.substring(0,  opt))  {  requiredOpts.put(key.substring(0,  opt);  }	  if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(0,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	119	None	replace
177	[BUG]  [BUGGY]  optionGroups.put(key,  requiredOpts.substring(0,  opt));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  optionGroups.put(key,  requiredOpts.substring(0,  opt));  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	optionGroups.put(key,  requiredOpts.substring(0,  opt));	  if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(0,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	119	None	replace
178	[BUG]  [BUGGY]  if(requiredOpts.contains(key)||  requiredOpts.contains(key.substring(0,  opt))  {  neededOpts.put(key.substring(0,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.contains(key)||  requiredOpts.contains(key.substring(0,  opt))  {  neededOpts.put(key.substring(0,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.contains(key)||  requiredOpts.contains(key.substring(0,  opt))  {  neededOpts.put(key.substring(0,  opt);  }	  if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(0,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	119	None	replace
179	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(key,  opt);  }	  if(opt.isOptional())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.add(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
180	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.add(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.add(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.add(key,  opt);  }	  if(opt.isOptional())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.add(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
181	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key))  {  neededOpts.add(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key))  {  neededOpts.add(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.containsKey(key))  {  neededOpts.add(key,  opt);  }	  if(opt.isOptional())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.add(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
182	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }	  if(requiredOpts.containsKey(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
183	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isOptional())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
184	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isOptional())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
185	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key,  option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key,  option);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key,  option);  }	  if(opt.isOptional())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
186	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  key,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  key,  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getShortOpt(),  key,  longOpts);	  Option    shortOpts    =    opt.getShortOpt(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
187	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  key,  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  key,  longOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getShortOpt(),  key,  longOpts;	  Option    shortOpts    =    opt.getShortOpt(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
188	[BUG]  [BUGGY]  Option  shortOpts  =  optionGroups.get(key,  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  optionGroups.get(key,  opt);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  optionGroups.get(key,  opt);	  Option    shortOpts    =    optionGroups.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
189	[BUG]  [BUGGY]  Option  shortOpts  =  options.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  options.get(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  options.get(key);	  Option    shortOpts    =    optionGroups.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
190	[BUG]  [BUGGY]  Option  shortOpts  =  optionGroups.get(key,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  optionGroups.get(key,  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  optionGroups.get(key,  longOpts);	  Option    shortOpts    =    optionGroups.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
191	[BUG]  [BUGGY]  if(opt.isLongOpt()  &&  opt.isOptional())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  &&  opt.isOptional())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  &&  opt.isOptional())  {	  if(opt.isLongOpt()    ||    opt.isOptional())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	109	None	replace
192	[BUG]  [BUGGY]  if(opt.isOptional()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional()  ||  opt.isLongOpt())  {	  if(opt.isLongOpt()    ||    opt.isOptional())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	109	None	replace
193	[BUG]  [BUGGY]  longOpts  =  opt.getLongOpt()  /  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  longOpts  =  opt.getLongOpt()  /  1;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	longOpts  =  opt.getLongOpt()  /  1;	  longOpts    =    opt.getLongOpt()    +    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
194	[BUG]  [BUGGY]  Option  shortOpts  =(Option)requiredOpts.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =(Option)requiredOpts.get(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =(Option)requiredOpts.get(key);	  Option    longOpts    =(Option)requiredOpts.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
195	[BUG]  [BUGGY]  Option  longOpts  =(Option)requiredOpts.get(key,  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  longOpts  =(Option)requiredOpts.get(key,  opt);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  longOpts  =(Option)requiredOpts.get(key,  opt);	  Option    longOpts    =(Option)requiredOpts.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
196	[BUG]  [BUGGY]  Option  longOpts  =(Option)longOpts.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  longOpts  =(Option)longOpts.get(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  longOpts  =(Option)longOpts.get(key);	  Option    longOpts    =(Option)requiredOpts.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
197	[BUG]  [BUGGY]  if(key.length()  ==  0  &&  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  &&  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  &&  opt.hasOptionalLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
198	[BUG]  [BUGGY]  if(opt.length()  ==  0  ||  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.length()  ==  0  ||  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.length()  ==  0  ||  opt.hasOptionalLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
199	[BUG]  [BUGGY]  if(opt.length()  ==  0  ||  opt.hasLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.length()  ==  0  ||  opt.hasLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.length()  ==  0  ||  opt.hasLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
200	[BUG]  [BUGGY]  String  shortOpts  =  opt.getShortOpts(),  key,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  opt.getShortOpts(),  key,  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  opt.getShortOpts(),  key,  longOpts);	  String    shortOpts    =    opt.getShortOpts(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
201	[BUG]  [BUGGY]  String  shortOpts  =  opt.getShortOpts(),  key,  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  opt.getShortOpts(),  key,  longOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  opt.getShortOpts(),  key,  longOpts;	  String    shortOpts    =    opt.getShortOpts(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
202	[BUG]  [BUGGY]  String  shortOpts  =  opt.getShortOpts(),  key,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  opt.getShortOpts(),  key,  shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  opt.getShortOpts(),  key,  shortOpts);	  String    shortOpts    =    opt.getShortOpts(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
203	[BUG]  [BUGGY]  String  shortOpts  =  opt.getShortOpts(),  key,  shortOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  opt.getShortOpts(),  key,  shortOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  opt.getShortOpts(),  key,  shortOpts;	  String    shortOpts    =    opt.getShortOpts(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
204	[BUG]  [BUGGY]  Option  opt  =  option.getOption(),  key;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  option.getOption(),  key;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  option.getOption(),  key;	  Option    opt    =    option.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
205	[BUG]  [BUGGY]  Option  opt  =  option.getOption(),  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  option.getOption(),  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  option.getOption(),  key);	  Option    opt    =    option.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
206	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(key,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOption(key,  requiredOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOption(key,  requiredOpts);	  Option    opt    =    opt.getOption(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
207	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(key,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOption(key,  shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOption(key,  shortOpts);	  Option    opt    =    opt.getOption(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
208	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(key,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOption(key,  false);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOption(key,  false);	  Option    opt    =    opt.getOption(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
209	[BUG]  [BUGGY]  if(!longOpts.contains(key)||!requiredOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(!longOpts.contains(key)||!requiredOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(!longOpts.contains(key)||!requiredOpts.contains(key))  {	  if(!longOpts.contains(key)&&!requiredOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
210	[BUG]  [BUGGY]  if(requiredOpts.contains(key)&&!requiredOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.contains(key)&&!requiredOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.contains(key)&&!requiredOpts.contains(key))  {	  if(!longOpts.contains(key)&&!requiredOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
211	[BUG]  [BUGGY]  if(!requiredOpts.contains(key)&&!requiredOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(!requiredOpts.contains(key)&&!requiredOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(!requiredOpts.contains(key)&&!requiredOpts.contains(key))  {	  if(!longOpts.contains(key)&&!requiredOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
212	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.hasRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.hasRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.hasRequired())  {	  if(opt.hasLongOpt()    &&    opt.hasRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
213	[BUG]  [BUGGY]  if(key.equals(opt.getLongOpt())&&  opt.hasRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.equals(opt.getLongOpt())&&  opt.hasRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.equals(opt.getLongOpt())&&  opt.hasRequired())  {	  if(opt.hasLongOpt()    &&    opt.hasRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
214	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getValue(),  key,  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =(String)opt.getValue(),  key,  longOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =(String)opt.getValue(),  key,  longOpts;	  String    shortOpts    =(String)opt.getValue(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
215	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getValue(),  key,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =(String)opt.getValue(),  key,  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =(String)opt.getValue(),  key,  longOpts);	  String    shortOpts    =(String)opt.getValue(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
216	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getValue(),  key,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =(String)opt.getValue(),  key,  shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =(String)opt.getValue(),  key,  shortOpts);	  String    shortOpts    =(String)opt.getValue(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
217	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getValue(),  key,  shortOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =(String)opt.getValue(),  key,  shortOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =(String)opt.getValue(),  key,  shortOpts;	  String    shortOpts    =(String)opt.getValue(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
218	[BUG]  [BUGGY]  Option  opt  =(Option)optionGroups.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)optionGroups.clone();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)optionGroups.clone();	  Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
219	[BUG]  [BUGGY]  Option  opt  =(Option)opt.clone(),  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)opt.clone(),  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)opt.clone(),  key);	  Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
220	[BUG]  [BUGGY]  Option  opt  =(Option)opt.clone(),  key;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)opt.clone(),  key;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)opt.clone(),  key;	  Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
221	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.hasRequired()  ||  key.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.hasRequired()  ||  key.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.hasRequired()  ||  key.length()  ==  0)  {	  if(opt.hasLongOpt()    ||    opt.hasRequired()    ||    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
222	[BUG]  [BUGGY]  if(key  ==  null  ||  opt.hasLongOpt()  ||  opt.hasRequired()  ||  key.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  opt.hasLongOpt()  ||  opt.hasRequired()  ||  key.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  opt.hasLongOpt()  ||  opt.hasRequired()  ||  key.length()  ==  0)  {	  if(opt.hasLongOpt()    ||    opt.hasRequired()    ||    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
223	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.hasRequired()  ||  opt.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.hasRequired()  ||  opt.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.hasRequired()  ||  opt.length()  ==  0)  {	  if(opt.hasLongOpt()    ||    opt.hasRequired()    ||    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
224	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =(String)opt.getShortOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =(String)opt.getShortOpt();	  String    shortOpts    =(String)opt.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
225	[BUG]  [BUGGY]  String  shortOpts  =(String)key.getKey();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =(String)key.getKey();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =(String)key.getKey();	  String    shortOpts    =(String)opt.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
226	[BUG]  [BUGGY]  if(opt.hasOpt()  &&  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOpt()  &&  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOpt()  &&  opt.hasOptionalLongOpt())  {	  if(opt.hasOpt()    ||    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
227	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  if(opt.hasOpt())  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts!=  null)  {  if(opt.hasOpt())  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts!=  null)  {  if(opt.hasOpt())  {  requiredOpts.put(key,  opt);  }	  if(opt.hasOpt())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	101	None	replace
228	[BUG]  [BUGGY]  if(requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.hasOpt())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	101	None	replace
229	[BUG]  [BUGGY]  if(requiredOpts.contains(key)||  opt.hasLongOpt())  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.contains(key)||  opt.hasLongOpt())  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.contains(key)||  opt.hasLongOpt())  {  requiredOpts.put(key,  opt);  }	  if(opt.hasOpt())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	101	None	replace
230	[BUG]  [BUGGY]  if(key.equals(opt.getLongOpt())&&  opt.hasLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.equals(opt.getLongOpt())&&  opt.hasLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.equals(opt.getLongOpt())&&  opt.hasLongOpt())  {	  if(opt.hasLongOpt()    &&    opt.hasLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
231	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.hasLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.hasLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.hasLongOpt())  {	  if(opt.hasLongOpt()    &&    opt.hasLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
232	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isRequired())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key)||    requiredOpts.contains(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
233	[BUG]  [BUGGY]  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key)||    requiredOpts.contains(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
234	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)opt.getOption(),  key,  shortOpts);	  Option    opt    =(Option)opt.getOption(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
235	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)opt.getOption(),  key,  longOpts);	  Option    opt    =(Option)opt.getOption(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
236	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  requiredOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)opt.getOption(),  key,  requiredOpts);	  Option    opt    =(Option)opt.getOption(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
237	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  lengthOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)opt.getOption(),  key,  lengthOpts);	  Option    opt    =(Option)opt.getOption(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
238	[BUG]  [BUGGY]  if(key!=  null  ||  key.length()  ==  0  ||  opt.hasLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||  key.length()  ==  0  ||  opt.hasLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||  key.length()  ==  0  ||  opt.hasLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
239	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpts(key,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getShortOpts(key,  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getShortOpts(key,  longOpts);	  Option    shortOpts    =    opt.getShortOpts(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	116	None	replace
240	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpts(key,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getShortOpts(key,  shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getShortOpts(key,  shortOpts);	  Option    shortOpts    =    opt.getShortOpts(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	116	None	replace
241	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpts(key,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getShortOpts(key,  requiredOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getShortOpts(key,  requiredOpts);	  Option    shortOpts    =    opt.getShortOpts(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	116	None	replace
242	[BUG]  [BUGGY]  Option  longOpts  =  opt.getLongOpt(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  longOpts  =  opt.getLongOpt(),  shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  longOpts  =  opt.getLongOpt(),  shortOpts);	  Option    longOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
243	[BUG]  [BUGGY]  Option  longOpts  =  opt.getLongOpt(),  key;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  longOpts  =  opt.getLongOpt(),  key;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  longOpts  =  opt.getLongOpt(),  key;	  Option    longOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
244	[BUG]  [BUGGY]  if(key!=  null  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {	  if(key    ==    null    ||    opt.hasLongOpt()    ||    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
245	[BUG]  [BUGGY]  if(opt  ==  null  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt  ==  null  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt  ==  null  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {	  if(key    ==    null    ||    opt.hasLongOpt()    ||    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
246	[BUG]  [BUGGY]  if(key  ==  null  ||  opt.hasOpt()  ||  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  opt.hasOpt()  ||  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  opt.hasOpt()  ||  opt.hasOptionalLongOpt())  {	  if(key    ==    null    ||    opt.hasLongOpt()    ||    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
247	[BUG]  [BUGGY]  if(opt.isLongOpt()  &&!longOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  &&!longOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  &&!longOpts.contains(key))  {	  if(opt.isLongOpt()    ||!longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
248	[BUG]  [BUGGY]  if(key.isLongOpt()  ||!longOpts.contains(opt))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.isLongOpt()  ||!longOpts.contains(opt))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.isLongOpt()  ||!longOpts.contains(opt))  {	  if(opt.isLongOpt()    ||!longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
249	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpts(),  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getShortOpts(),  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getShortOpts(),  key);	  Option    shortOpts    =    opt.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
250	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpts(),  longOpts,  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getShortOpts(),  longOpts,  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getShortOpts(),  longOpts,  key);	  Option    shortOpts    =    opt.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
251	[BUG]  [BUGGY]  Option  shortOpts  =  longOpts.getShortOpts(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  longOpts.getShortOpts(),  opt);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  longOpts.getShortOpts(),  opt);	  Option    shortOpts    =    opt.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
252	[BUG]  [BUGGY]  if(opt.length()  ==  0  &&  key.hasLongOpt()  &&  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.length()  ==  0  &&  key.hasLongOpt()  &&  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.length()  ==  0  &&  key.hasLongOpt()  &&  opt.isLongOpt())  {	  if(key.length()    ==    0    &&    opt.hasLongOpt()    &&    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
253	[BUG]  [BUGGY]  if(key!=  null  &&!longOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  &&!longOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  &&!longOpts.contains(key))  {	  if(key!=    null    ||!longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
254	[BUG]  [BUGGY]  if(key  ==  null  ||!longOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||!longOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||!longOpts.contains(key))  {	  if(key!=    null    ||!longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
255	[BUG]  [BUGGY]  if(key  ==  null  &&!longOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  &&!longOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  &&!longOpts.contains(key))  {	  if(key!=    null    ||!longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
256	[BUG]  [BUGGY]  Option  opt  =(Option)key.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)key.getValue();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)key.getValue();	  Option    opt    =(Option)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
257	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getKey();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)opt.getKey();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)opt.getKey();	  Option    opt    =(Option)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
258	[BUG]  [BUGGY]  if(opt.hasLongOpt()  &&  opt.getLongOpt().equals(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  &&  opt.getLongOpt().equals(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  &&  opt.getLongOpt().equals(key))  {	  if(opt.hasLongOpt()    ||    opt.getLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
259	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.getLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.getLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.getLongOpt())  {	  if(opt.hasLongOpt()    ||    opt.getLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
260	[BUG]  [BUGGY]  if(opt.hasLongOpt()  ||  opt.getLongOpt()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  ||  opt.getLongOpt()!=  null)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  ||  opt.getLongOpt()!=  null)  {	  if(opt.hasLongOpt()    ||    opt.getLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
261	[BUG]  [BUGGY]  if(opt.hasLongOpt()  ||  opt.getLongOpt().equals(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  ||  opt.getLongOpt().equals(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  ||  opt.getLongOpt().equals(key))  {	  if(opt.hasLongOpt()    ||    opt.getLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
262	[BUG]  [BUGGY]  if(key.length()  ==  0  &&  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0  &&  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0  &&  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    ||    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
263	[BUG]  [BUGGY]  if(opt.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    ||    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
264	[BUG]  [BUGGY]  if(key!=  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    ||    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
265	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(new  Option(key));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(new  Option(key));  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(new  Option(key));  }	  if(opt.isOptional())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.add(new    Option(key));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	107	None	replace
266	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.add(new  Option(key));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.add(new  Option(key));  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.containsKey(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.add(new  Option(key));  }	  if(opt.isOptional())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.add(new    Option(key));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	107	None	replace
267	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.hasOpt())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
268	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key))  {  neededOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.containsKey(key))  {  neededOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.containsKey(key))  {  neededOpts.put(key,  opt);  }	  if(opt.hasOpt())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
269	[BUG]  [BUGGY]  if(!opt.hasLongOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(!opt.hasLongOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(!opt.hasLongOpt()  ||  opt.isLongOpt())  {	  if(!opt.hasLongOpt()    &&    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	126	None	replace
270	[BUG]  [BUGGY]  if(!opt.hasLongOpt()  &&  opt.isLongOpt()  &&  longOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(!opt.hasLongOpt()  &&  opt.isLongOpt()  &&  longOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(!opt.hasLongOpt()  &&  opt.isLongOpt()  &&  longOpts.contains(key))  {	  if(!opt.hasLongOpt()    &&    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	126	None	replace
271	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  key;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  key;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(),  key;	  Option    optionGroups    =    opt.getOptionGroups(),    shortOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
272	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  longOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(),  longOpts;	  Option    optionGroups    =    opt.getOptionGroups(),    shortOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
273	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  shortOpts,  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(),  shortOpts,  longOpts);	  Option    optionGroups    =    opt.getOptionGroups(),    shortOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
274	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.hasLongOpt())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
275	[BUG]  [BUGGY]  String  shortOpts  =(String)key.toLowerCase();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =(String)key.toLowerCase();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =(String)key.toLowerCase();	  String    shortOpts    =(String)key.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
276	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(2),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(2),  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isRequired())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(2),  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.put(key.substring(1),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
277	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.add(key.substring(1),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.add(key.substring(1),  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isRequired())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.add(key.substring(1),  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.put(key.substring(1),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
278	[BUG]  [BUGGY]  if(key!=  null  ||!longOpts.contains(key)||!longOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||!longOpts.contains(key)||!longOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||!longOpts.contains(key)||!longOpts.contains(key))  {	  if(!longOpts.contains(key)||!longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
279	[BUG]  [BUGGY]  if(key  ==  null  ||!longOpts.contains(key)||!longOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||!longOpts.contains(key)||!longOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||!longOpts.contains(key)||!longOpts.contains(key))  {	  if(!longOpts.contains(key)||!longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
280	[BUG]  [BUGGY]  longOpts  =  opt.getLongOpt(),  key,  shortOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  longOpts  =  opt.getLongOpt(),  key,  shortOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	longOpts  =  opt.getLongOpt(),  key,  shortOpts;	  longOpts    =    opt.getLongOpt(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
281	[BUG]  [BUGGY]  longOpts  =  opt.getLongOpt(),  key,  requiredOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  longOpts  =  opt.getLongOpt(),  key,  requiredOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	longOpts  =  opt.getLongOpt(),  key,  requiredOpts;	  longOpts    =    opt.getLongOpt(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
282	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(),  key);	  Option    optionGroups    =    opt.getOptionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
283	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(),  longOpts);	  Option    optionGroups    =    opt.getOptionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
284	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  shortOpts,  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  shortOpts,  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(),  shortOpts,  key);	  Option    optionGroups    =    opt.getOptionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
285	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.add(key);  }	  if(opt.isOptional())    {    if(requiredOpts.contains(key)||    requiredOpts.contains(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
286	[BUG]  [BUGGY]  Map  shortOpts  =  getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Map  shortOpts  =  getShortOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Map  shortOpts  =  getShortOpts();	  char    shortOpts    =    getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
287	[BUG]  [BUGGY]  List  shortOpts  =  getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  List  shortOpts  =  getShortOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	List  shortOpts  =  getShortOpts();	  char    shortOpts    =    getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
288	[BUG]  [BUGGY]  Character  shortOpts  =  getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Character  shortOpts  =  getShortOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Character  shortOpts  =  getShortOpts();	  char    shortOpts    =    getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
289	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOption(),  shortOpts,  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOption(),  shortOpts,  longOpts);	  Option    opt    =    opt.getOption(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
290	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOption(),  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOption(),  longOpts);	  Option    opt    =    opt.getOption(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
291	[BUG]  [BUGGY]  if(opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {	  if(opt.isLongOpt()    &&    key.equals(opt.getLongOpt()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
292	[BUG]  [BUGGY]  if(optionGroups.containsKey(key)&&  opt.isLongOpt()  &&  key.equals(opt.getLongOpt()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(optionGroups.containsKey(key)&&  opt.isLongOpt()  &&  key.equals(opt.getLongOpt()))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(optionGroups.containsKey(key)&&  opt.isLongOpt()  &&  key.equals(opt.getLongOpt()))  {	  if(opt.isLongOpt()    &&    key.equals(opt.getLongOpt()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
293	[BUG]  [BUGGY]  if(opt.isLongOpt()  &&  key.equals(opt.getLongOpt())||  key.equals(opt.getLongOpt()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  &&  key.equals(opt.getLongOpt())||  key.equals(opt.getLongOpt()))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  &&  key.equals(opt.getLongOpt())||  key.equals(opt.getLongOpt()))  {	  if(opt.isLongOpt()    &&    key.equals(opt.getLongOpt()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
294	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  shortOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  shortOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)opt.getOption(),  key,  shortOpts;	  Option    opt    =(Option)opt.getOption(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
295	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  longOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)opt.getOption(),  key,  longOpts;	  Option    opt    =(Option)opt.getOption(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
296	[BUG]  [BUGGY]  CharShortOpts  shortOpts  =  getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  CharShortOpts  shortOpts  =  getShortOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	CharShortOpts  shortOpts  =  getShortOpts();	  char    shortOpts    =    getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
297	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  ShortOpts  shortOpts  =  getShortOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	ShortOpts  shortOpts  =  getShortOpts();	  char    shortOpts    =    getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
298	[BUG]  [BUGGY]  if(!longOpts.containsKey(key)||!longOpts.containsKey(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(!longOpts.containsKey(key)||!longOpts.containsKey(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(!longOpts.containsKey(key)||!longOpts.containsKey(key))  {	  if(!longOpts.contains(key)||!longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
299	[BUG]  [BUGGY]  Option  opt  =  opt.getOptionGroup(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOptionGroup(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOptionGroup(key);	  Option    opt    =    opt.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
300	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key)||    requiredOpts.contains(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
301	[BUG]  [BUGGY]  LongOpts  shortOpts  =  opt.getLongOpt(),  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  LongOpts  shortOpts  =  opt.getLongOpt(),  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	LongOpts  shortOpts  =  opt.getLongOpt(),  key);	  longOpts    =    opt.getLongOpt(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
302	[BUG]  [BUGGY]  Option  option  =  opt.getOption();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  option  =  opt.getOption();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  option  =  opt.getOption();	  if(opt.isRequired())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.put(key.substring(1),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
303	[BUG]  [BUGGY]  Option  shortOpt  =  optionGroups.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpt  =  optionGroups.get(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpt  =  optionGroups.get(key);	  if(opt.isRequired())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.put(key.substring(1),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
304	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(1),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(1),  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(1),  opt);  }	  if(opt.hasOpt())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(1),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	117	None	replace
305	[BUG]  [BUGGY]  LongOpts  opt  =  opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  LongOpts  opt  =  opt.getLongOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	LongOpts  opt  =  opt.getLongOpt();	  longOpts    =    opt.getLongOpt()    +    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
306	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key))  {  requiredOpts.put(key.substring(0,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key))  {  requiredOpts.put(key.substring(0,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.contains(key))  {  requiredOpts.put(key.substring(0,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(0,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
307	[BUG]  [BUGGY]  String  shortOpts  =  getShortOpts().getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getShortOpts().getLongOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getShortOpts().getLongOpt();	  String    shortOpts    =    getShortOpts().toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	112	None	replace
308	[BUG]  [BUGGY]  String  shortOpts  =  getShortOpts().getString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getShortOpts().getString();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getShortOpts().getString();	  String    shortOpts    =    getShortOpts().toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	112	None	replace
309	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.put(key.substring(0,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts!=  null)  {  requiredOpts.put(key.substring(0,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts!=  null)  {  requiredOpts.put(key.substring(0,  opt);  }	  if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(0,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	119	None	replace
310	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(0,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(0,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(0,  opt);  }	  if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(0,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	119	None	replace
311	[BUG]  [BUGGY]  if(requiredOpts.contains(key)||  opt.isRequired())  {  requiredOpts.put(key.substring(0,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.contains(key)||  opt.isRequired())  {  requiredOpts.put(key.substring(0,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.contains(key)||  opt.isRequired())  {  requiredOpts.put(key.substring(0,  opt);  }	  if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(0,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	119	None	replace
312	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getFullOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getFullOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getFullOpt();	  Option    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
313	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getBaseOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getBaseOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getBaseOpt();	  Option    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
314	[BUG]  [BUGGY]  CharShortOpts  opt  =  opt.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  CharShortOpts  opt  =  opt.getShortOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	CharShortOpts  opt  =  opt.getShortOpts();	  char    shortOpts    =    opt.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	124	None	replace
315	[BUG]  [BUGGY]  Map  shortOpts  =  opt.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Map  shortOpts  =  opt.getShortOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Map  shortOpts  =  opt.getShortOpts();	  char    shortOpts    =    opt.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	124	None	replace
316	[BUG]  [BUGGY]  Option  longOpt  =  opt.getLongOpt(),  shortOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  longOpt  =  opt.getLongOpt(),  shortOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  longOpt  =  opt.getLongOpt(),  shortOpts;	  Option    longOpt    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
317	[BUG]  [BUGGY]  if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
318	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.contains(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.contains(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key)||    requiredOpts.containsKey(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
319	[BUG]  [BUGGY]  if(key!=  null  ||  opt.isLongOpt()  ||  opt.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||  opt.isLongOpt()  ||  opt.isRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||  opt.isLongOpt()  ||  opt.isRequired())  {	  if(opt.isLongOpt()    ||    opt.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
320	[BUG]  [BUGGY]  RequiredOpts  shortOpts  =  requiredOpts.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  RequiredOpts  shortOpts  =  requiredOpts.get(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	RequiredOpts  shortOpts  =  requiredOpts.get(key);	  if(requiredOpts.containsKey(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
321	[BUG]  [BUGGY]  if(key!=  null  ||  key.length()  ==  0  ||  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||  key.length()  ==  0  ||  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||  key.length()  ==  0  ||  opt.hasOptionalLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
322	[BUG]  [BUGGY]  if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasOptionalLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
323	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =(String)opt.getLongOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =(String)opt.getLongOpt();	  String    shortOpts    =(String)opt.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
324	[BUG]  [BUGGY]  if(key!=  null  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {	  if(key    ==    null    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
325	[BUG]  [BUGGY]  if(key  ==  null  ||  opt.hasOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  opt.hasOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  opt.hasOpt()  ||  opt.isLongOpt())  {	  if(key    ==    null    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
326	[BUG]  [BUGGY]  if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    ||    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
327	[BUG]  [BUGGY]  if(opt.hasLongOpt()  &&  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  &&  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  &&  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {	  if(opt.hasLongOpt()    ||    opt.isLongOpt()    ||    key.equals(opt.getLongOpt()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	125	None	replace
328	[BUG]  [BUGGY]  if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt()  ||  opt.equals(opt.getLongOpt()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt()  ||  opt.equals(opt.getLongOpt()))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt()  ||  opt.equals(opt.getLongOpt()))  {	  if(opt.hasLongOpt()    ||    opt.isLongOpt()    ||    key.equals(opt.getLongOpt()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	125	None	replace
329	[BUG]  [BUGGY]  if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {	  if(opt.hasLongOpt()    ||    opt.isLongOpt()    ||    key.equals(opt.getLongOpt()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	125	None	replace
330	[BUG]  [BUGGY]  if(key!=  null  ||  opt.isLongOpt()  &&  key.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||  opt.isLongOpt()  &&  key.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||  opt.isLongOpt()  &&  key.length()  ==  0)  {	  if(opt.isLongOpt()    &&    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
331	[BUG]  [BUGGY]  if(opt.hasLongOpt()  &&  opt.getLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  &&  opt.getLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  &&  opt.getLongOpt())  {	  if(opt.hasLongOpt()    ||    opt.getLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
332	[BUG]  [BUGGY]  if(opt.hasOpt()  ||  opt.getLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOpt()  ||  opt.getLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOpt()  ||  opt.getLongOpt())  {	  if(opt.hasLongOpt()    ||    opt.getLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
333	[BUG]  [BUGGY]  LongOpts  shortOpts  =  opt.getLongOpt(),  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  LongOpts  shortOpts  =  opt.getLongOpt(),  longOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	LongOpts  shortOpts  =  opt.getLongOpt(),  longOpts;	  LongOpts    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
334	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(longOpts.containsKey(key))  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt())  {  if(longOpts.containsKey(key))  {  requiredOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt())  {  if(longOpts.containsKey(key))  {  requiredOpts.add(key);  }	  if(opt.hasLongOpt())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	108	None	replace
335	[BUG]  [BUGGY]  if(key!=  null  &&  key.length()  ==  0  &&  opt.hasLongOpt()  &&  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  &&  key.length()  ==  0  &&  opt.hasLongOpt()  &&  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  &&  key.length()  ==  0  &&  opt.hasLongOpt()  &&  opt.isLongOpt())  {	  if(key.length()    ==    0    &&    opt.hasLongOpt()    &&    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
336	[BUG]  [BUGGY]  if(opt.hasLongOpt()  &&  key.length()  ==  0  &&  opt.hasLongOpt()  &&  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  &&  key.length()  ==  0  &&  opt.hasLongOpt()  &&  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  &&  key.length()  ==  0  &&  opt.hasLongOpt()  &&  opt.isLongOpt())  {	  if(key.length()    ==    0    &&    opt.hasLongOpt()    &&    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
337	[BUG]  [BUGGY]  String  shortOpts  =(String)key.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =(String)key.clone();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =(String)key.clone();	  String    shortOpts    =(String)key.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
338	[BUG]  [BUGGY]  Character  shortOpts  =(char)opt.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Character  shortOpts  =(char)opt.getValue();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Character  shortOpts  =(char)opt.getValue();	  char    shortOpts    =(char)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	114	None	replace
339	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  null;  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  null;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)opt.getOption(),  key,  null;	  Option    opt    =(Option)opt.getOption(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
340	[BUG]  [BUGGY]  Option  longOpts  =  opt.getLongOpt(),  shortOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  longOpts  =  opt.getLongOpt(),  shortOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  longOpts  =  opt.getLongOpt(),  shortOpts;	  Option    longOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
341	[BUG]  [BUGGY]  Options  opt  =(Option)opt.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Options  opt  =(Option)opt.clone();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Options  opt  =(Option)opt.clone();	  Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
342	[BUG]  [BUGGY]  if(key  ==  null  ||  opt.isLongOpt()  ||  opt.isOptional())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  opt.isLongOpt()  ||  opt.isOptional())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  opt.isLongOpt()  ||  opt.isOptional())  {	  if(opt.isLongOpt()    ||    opt.isOptional())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	109	None	replace
343	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key,  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key,  opt);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(key,  opt);	  Option    optionGroups    =    opt.getOptionGroups(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
344	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key,  options);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key,  options);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(key,  options);	  Option    optionGroups    =    opt.getOptionGroups(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
345	[BUG]  [BUGGY]  if(key!=  null  ||  opt.hasLongOpt()  ||  opt.hasRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||  opt.hasLongOpt()  ||  opt.hasRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||  opt.hasLongOpt()  ||  opt.hasRequired())  {	  if(key    ==    null    ||    opt.hasLongOpt()    ||    opt.hasRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
346	[BUG]  [BUGGY]  if(key  ==  null  ||  opt.isLongOpt()  ||  opt.isShortOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  opt.isLongOpt()  ||  opt.isShortOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  opt.isLongOpt()  ||  opt.isShortOpt())  {	  if(opt.isLongOpt()    ||    opt.isShortOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
347	[BUG]  [BUGGY]  String  shortOpts  =  opt.getShortOpt(),  key,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  opt.getShortOpt(),  key,  requiredOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  opt.getShortOpt(),  key,  requiredOpts);	  String    shortOpts    =    opt.getShortOpt(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
348	[BUG]  [BUGGY]  if(opt.isOpt()  &&  key.equals(opt.getLongOpt()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOpt()  &&  key.equals(opt.getLongOpt()))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOpt()  &&  key.equals(opt.getLongOpt()))  {	  if(opt.isLongOpt()    &&    key.equals(opt.getLongOpt()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
349	[BUG]  [BUGGY]  if(key!=  null  &&  opt.isLongOpt()  &&  key.equals(opt.getLongOpt()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  &&  opt.isLongOpt()  &&  key.equals(opt.getLongOpt()))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  &&  opt.isLongOpt()  &&  key.equals(opt.getLongOpt()))  {	  if(opt.isLongOpt()    &&    key.equals(opt.getLongOpt()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
350	[BUG]  [BUGGY]  Option  optionGroups  =  options.getOptionGroups(opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  options.getOptionGroups(opt);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  options.getOptionGroups(opt);	  Option    optionGroups    =    options.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	123	None	replace
351	[BUG]  [BUGGY]  Options  optionGroups  =  options.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Options  optionGroups  =  options.getOptionGroups();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Options  optionGroups  =  options.getOptionGroups();	  Option    optionGroups    =    options.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	123	None	replace
352	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(0,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(0,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(0,  opt);  }	  if(opt.hasOpt())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(0,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	120	None	replace
353	[BUG]  [BUGGY]  if(key  ==  null  ||  opt.hasOpt()  ||  opt.hasLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  opt.hasOpt()  ||  opt.hasLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  opt.hasOpt()  ||  opt.hasLongOpt())  {	  if(opt.hasOpt()    ||    opt.hasLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
354	[BUG]  [BUGGY]  if(key!=  null  ||!longOpts.containsKey(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||!longOpts.containsKey(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||!longOpts.containsKey(key))  {	  if(key!=    null    ||!longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
355	[BUG]  [BUGGY]  if(opt.hasLongOpt()  &&  opt.hasRequired()  ||  key.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  &&  opt.hasRequired()  ||  key.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  &&  opt.hasRequired()  ||  key.length()  ==  0)  {	  if(opt.hasLongOpt()    ||    opt.hasRequired()    ||    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
356	[BUG]  [BUGGY]  if(opt.hasOpt()  ||  opt.hasRequired()  ||  key.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOpt()  ||  opt.hasRequired()  ||  key.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOpt()  ||  opt.hasRequired()  ||  key.length()  ==  0)  {	  if(opt.hasLongOpt()    ||    opt.hasRequired()    ||    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
357	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(1),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(1),  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(1),  opt);  }	  if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(1),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	118	None	replace
358	[BUG]  [BUGGY]  if(requiredOpts.contains(key)||  opt.isRequired())  {  requiredOpts.put(key.substring(1),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.contains(key)||  opt.isRequired())  {  requiredOpts.put(key.substring(1),  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.contains(key)||  opt.isRequired())  {  requiredOpts.put(key.substring(1),  opt);  }	  if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(1),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	118	None	replace
359	[BUG]  [BUGGY]  String  shortOpts  =  opt.getShortOpt().toLowerCase();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  opt.getShortOpt().toLowerCase();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  opt.getShortOpt().toLowerCase();	  String    shortOpts    =    opt.getShortOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
360	[BUG]  [BUGGY]  String  shortOpts  =  opt.getShortOpt().toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  opt.getShortOpt().toString();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  opt.getShortOpt().toString();	  String    shortOpts    =    opt.getShortOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
361	[BUG]  [BUGGY]  if(opt.hasLongOpt()  &&  key.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  &&  key.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  &&  key.length()  ==  0)  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    &&    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
362	[BUG]  [BUGGY]  if(key!=  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.isLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    &&    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
363	[BUG]  [BUGGY]  if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.isLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    &&    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
364	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt!=  null  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt!=  null  ||  opt.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {	  if(key    ==    null    ||    opt.hasLongOpt()    ||    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
365	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  opt.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  ShortOpts  shortOpts  =  opt.getShortOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	ShortOpts  shortOpts  =  opt.getShortOpt();	  shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
366	[BUG]  [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  lengthOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  lengthOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpt  =  opt.getShortOpt(),  lengthOpts;	  Option    shortOpt    =    opt.getShortOpt(),    longOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
367	[BUG]  [BUGGY]  if(opt.hasOpt()  ||  opt.hasValue())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOpt()  ||  opt.hasValue())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOpt()  ||  opt.hasValue())  {	  if(opt.hasLongOpt()    ||    opt.hasValue())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
368	[BUG]  [BUGGY]  if(opt.hasLongOpt()  ||  opt.hasKey())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  ||  opt.hasKey())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  ||  opt.hasKey())  {	  if(opt.hasLongOpt()    ||    opt.hasValue())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
369	[BUG]  [BUGGY]  Option  opt  =  option.getOption(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  option.getOption(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  option.getOption(key);	  Option    opt    =    option.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
370	[BUG]  [BUGGY]  Option  opt  =  options.getOption();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  options.getOption();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  options.getOption();	  Option    opt    =    option.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
371	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  longOpts,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  longOpts,  requiredOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getShortOpt(),  longOpts,  requiredOpts);	  Option    shortOpts    =    opt.getShortOpt(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
372	[BUG]  [BUGGY]  if(key  ==  null  ||  key.length()!=  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  key.length()!=  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  key.length()!=  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {	  if(key.length()!=    0    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
373	[BUG]  [BUGGY]  if(key!=  null  ||  key.length()!=  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||  key.length()!=  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||  key.length()!=  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {	  if(key.length()!=    0    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
374	[BUG]  [BUGGY]  if(opt.hasLongOpt()  ||  key.length()!=  0  ||  opt.hasLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  ||  key.length()!=  0  ||  opt.hasLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  ||  key.length()!=  0  ||  opt.hasLongOpt())  {	  if(key.length()!=    0    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
375	[BUG]  [BUGGY]  String  shortOpts  =  key.getShortOpt(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  key.getShortOpt(),  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  key.getShortOpt(),  longOpts);	  String    shortOpts    =    key.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
376	[BUG]  [BUGGY]  if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
377	[BUG]  [BUGGY]  if(key!=  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
378	[BUG]  [BUGGY]  if(opt.hasLongOpt()  ||  key.length()  ==  0  ||  opt.hasLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  ||  key.length()  ==  0  ||  opt.hasLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  ||  key.length()  ==  0  ||  opt.hasLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
379	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts!=  null)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts!=  null)  {	  if(!longOpts.contains(key)&&!requiredOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
380	[BUG]  [BUGGY]  if(opt.hasOpt()  ||  opt.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOpt()  ||  opt.isRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOpt()  ||  opt.isRequired())  {	  if(opt.hasLongOpt()    ||    opt.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
381	[BUG]  [BUGGY]  if(key  ==  null  ||  opt.isLongOpt()  &&  key.length()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  opt.isLongOpt()  &&  key.length()!=  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  opt.isLongOpt()  &&  key.length()!=  0)  {	  if(opt.isLongOpt()    &&    key.length()!=    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
382	[BUG]  [BUGGY]  if(key!=  null  ||  opt.isLongOpt()  ||  key.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  ||  opt.isLongOpt()  ||  key.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  ||  opt.isLongOpt()  ||  key.length()  ==  0)  {	  if(opt.isLongOpt()    ||    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
383	[BUG]  [BUGGY]  if(key  ==  null  ||  key.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  key.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  key.length()  ==  0)  {	  if(opt.isLongOpt()    ||    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
384	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)this.optionGroups.get(opt);	  Option    opt    =(Option)this.optionGroups.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	122	None	replace
385	[BUG]  [BUGGY]  if(opt.hasLongOpt()  ||  opt.hasArgs())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  ||  opt.hasArgs())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  ||  opt.hasArgs())  {	  if(opt.hasLongOpt()    ||    opt.hasArg())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	121	None	replace
386	[BUG]  [BUGGY]  if(opt.isLongOpt()  ||!longOpts.contains(key)&&!longOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  ||!longOpts.contains(key)&&!longOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  ||!longOpts.contains(key)&&!longOpts.contains(key))  {	  if(!longOpts.contains(key)&&!longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
387	[BUG]  [BUGGY]  if(opt.isOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOpt()  ||  opt.isLongOpt())  {	  if(opt.isLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
388	[BUG]  [BUGGY]  if(key  ==  null  ||  opt.isLongOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  opt.isLongOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  opt.isLongOpt()  ||  opt.isLongOpt())  {	  if(opt.isLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
389	[BUG]  [BUGGY]  if(!opt.isLongOpt()  &&!longOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(!opt.isLongOpt()  &&!longOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(!opt.isLongOpt()  &&!longOpts.contains(key))  {	  if(opt.isLongOpt()    ||!longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
390	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOpt())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOpt())  {  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.hasOpt())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
391	[BUG]  [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)||  shortOpts.containsKey(key))  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  if(requiredOpts.containsKey(key)||  shortOpts.containsKey(key))  {  requiredOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  if(requiredOpts.containsKey(key)||  shortOpts.containsKey(key))  {  requiredOpts.add(key);  }	  if(opt.isOptional())    {    if(requiredOpts.containsKey(key)||    requiredOpts.containsKey(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
392	[BUG]  [BUGGY]  Option  opt  =(Option)optionGroups.get(opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)optionGroups.get(opt);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)optionGroups.get(opt);	  Option    opt    =(Option)optionGroups.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
393	[BUG]  [BUGGY]  Option  opt  =(Option)optionGroups.get(key,  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)optionGroups.get(key,  opt);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)optionGroups.get(key,  opt);	  Option    opt    =(Option)optionGroups.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
394	[BUG]  [BUGGY]  if(requiredOpts.contains(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.contains(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.contains(key)||  requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }	  if(requiredOpts.contains(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
395	[BUG]  [BUGGY]  String  shortOpts  =  getShortOpts(),  key.toLowerCase());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getShortOpts(),  key.toLowerCase());  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getShortOpts(),  key.toLowerCase());	  String    shortOpts    =    getShortOpts(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
396	[BUG]  [BUGGY]  String  shortOpts  =  getShortOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getShortOpts(),  longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getShortOpts(),  longOpts);	  String    shortOpts    =    getShortOpts(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
397	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(key,  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOption(key,  true);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOption(key,  true);	  Option    opt    =    opt.getOption(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
398	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getShortKey();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =(String)opt.getShortKey();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =(String)opt.getShortKey();	  String    shortOpts    =(String)opt.getShortValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	113	None	replace
399	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getLongValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =(String)opt.getLongValue();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =(String)opt.getLongValue();	  String    shortOpts    =(String)opt.getShortValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	113	None	replace
400	[BUG]  [BUGGY]  Option  longOpts  =(Option)optionGroups.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  longOpts  =(Option)optionGroups.get(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  longOpts  =(Option)optionGroups.get(key);	  Option    longOpts    =(Option)requiredOpts.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
401	[BUG]  [BUGGY]  if(key!=  null  &&  opt.isLongOpt()  ||  key.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  &&  opt.isLongOpt()  ||  key.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  &&  opt.isLongOpt()  ||  key.length()  ==  0)  {	  if(opt.isLongOpt()    ||    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
402	[BUG]  [BUGGY]  if(key.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key.length()  ==  0)  {	  if(opt.isLongOpt()    ||    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
403	[BUG]  [BUGGY]  if(opt.hasOptionalOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOptionalOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOptionalOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isOptional())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
404	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)this.optionGroups.clone();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)this.optionGroups.clone();	  Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
405	[BUG]  [BUGGY]  if(key!=  null  &&  opt.isLongOpt()  &&  key.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  &&  opt.isLongOpt()  &&  key.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  &&  opt.isLongOpt()  &&  key.length()  ==  0)  {	  if(opt.isLongOpt()    &&    key.length()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
406	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(true,  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(true,  key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(true,  key);	  Option    optionGroups    =    opt.getOptionGroups(true);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
407	[BUG]  [BUGGY]  if(opt.hasLongOpt()  ||  opt.hasOption(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  ||  opt.hasOption(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  ||  opt.hasOption(key))  {	  if(opt.hasLongOpt()    ||    opt.hasValue())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
408	[BUG]  [BUGGY]  if(option.hasLongOpt()  ||  opt.hasRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(option.hasLongOpt()  ||  opt.hasRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(option.hasLongOpt()  ||  opt.hasRequired())  {	  if(opt.hasLongOpt()    &&    opt.hasRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
409	[BUG]  [BUGGY]  if(opt.isLongOpt()  ||  opt.hasRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  ||  opt.hasRequired())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  ||  opt.hasRequired())  {	  if(opt.hasLongOpt()    &&    opt.hasRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
410	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key,  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key,  this);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(key,  this);	  Option    optionGroups    =    opt.getOptionGroups(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
411	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(key,  false);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  opt.getOptionGroups(key,  false);	  Option    optionGroups    =    opt.getOptionGroups(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
412	[BUG]  [BUGGY]  CharSequence  shortOpts  =  getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  CharSequence  shortOpts  =  getShortOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	CharSequence  shortOpts  =  getShortOpts();	  char    shortOpts    =    getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
413	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(1),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(1),  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key.substring(1),  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.put(key.substring(1),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
414	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(),  this.shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOption(),  this.shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOption(),  this.shortOpts);	  Option    opt    =    opt.getOption(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
415	[BUG]  [BUGGY]  Option  opt  =  opt.getOption(),  key,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  opt.getOption(),  key,  null);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  opt.getOption(),  key,  null);	  Option    opt    =    opt.getOption(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
416	[BUG]  [BUGGY]  if(opt.isOptional())  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  requiredOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  requiredOpts.add(key);  }	  if(opt.isOptional())    {    if(requiredOpts.containsKey(key))    {    neededOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
417	[BUG]  [BUGGY]  if(opt.isOptional())  {  neededOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isOptional())  {  neededOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isOptional())  {  neededOpts.add(key);  }	  if(opt.isOptional())    {    if(requiredOpts.containsKey(key))    {    neededOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
418	[BUG]  [BUGGY]  if(opt.hasLongOpt()  ||  opt.isLongOpt()  ||  key.equals(opt.getKey()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  ||  opt.isLongOpt()  ||  key.equals(opt.getKey()))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  ||  opt.isLongOpt()  ||  key.equals(opt.getKey()))  {	  if(opt.hasLongOpt()    ||    opt.isLongOpt()    ||    key.equals(opt.getLongOpt()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	125	None	replace
419	[BUG]  [BUGGY]  if(key  ==  null  ||  key.length()  ==  0  ||  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  key.length()  ==  0  ||  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  key.length()  ==  0  ||  opt.isLongOpt()  ||  key.equals(opt.getLongOpt()))  {	  if(opt.hasLongOpt()    ||    opt.isLongOpt()    ||    key.equals(opt.getLongOpt()))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	125	None	replace
420	[BUG]  [BUGGY]  if(key!=  null  &&  key.length()  ==  0  ||  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  &&  key.length()  ==  0  ||  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  &&  key.length()  ==  0  ||  opt.hasOptionalLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
421	[BUG]  [BUGGY]  Option  shortOpts  =  option.getShortOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  option.getShortOpt(),  opt);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  option.getShortOpt(),  opt);	  Option    shortOpts    =    option.getShortOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	115	None	replace
422	[BUG]  [BUGGY]  char  shortOpts  =  opt.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  char  shortOpts  =  opt.getShortOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	char  shortOpts  =  opt.getShortOpt();	  String    shortOpts    =    opt.getShortOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
423	[BUG]  [BUGGY]  Option  langOpt  =  opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  langOpt  =  opt.getLongOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  langOpt  =  opt.getLongOpt();	  Option    longOpt    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
424	[BUG]  [BUGGY]  if(opt.isLongOpt()  ||  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  ||  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  ||  opt.hasOptionalLongOpt())  {	  if(opt.hasLongOpt()    &&    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
425	[BUG]  [BUGGY]  if(option.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(option.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(option.hasLongOpt()  ||  opt.hasOptionalLongOpt())  {	  if(opt.hasLongOpt()    &&    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
426	[BUG]  [BUGGY]  if(key!=  null  &&  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  &&  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  &&  key.length()  ==  0  ||  opt.hasLongOpt()  ||  opt.isLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
427	[BUG]  [BUGGY]  if(key  ==  null  ||  opt.hasLongOpt()  ||  opt.getLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  opt.hasLongOpt()  ||  opt.getLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  opt.hasLongOpt()  ||  opt.getLongOpt())  {	  if(opt.hasLongOpt()    ||    opt.getLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
428	[BUG]  [BUGGY]  if(opt.isLongOpt()  ||!longOpts.contains(key)||  longOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  ||!longOpts.contains(key)||  longOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  ||!longOpts.contains(key)||  longOpts.contains(key))  {	  if(!longOpts.contains(key)||    longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
429	[BUG]  [BUGGY]  if(!longOpts.contains(key)||  longOpts.contains(opt.getLongOpt()))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(!longOpts.contains(key)||  longOpts.contains(opt.getLongOpt()))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(!longOpts.contains(key)||  longOpts.contains(opt.getLongOpt()))  {	  if(!longOpts.contains(key)||    longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
430	[BUG]  [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  this.longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  this.longOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpt  =  opt.getShortOpt(),  this.longOpts);	  Option    shortOpt    =    opt.getShortOpt(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
431	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  null);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)opt.getOption(),  key,  null);	  Option    opt    =(Option)opt.getOption(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
432	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  false);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)opt.getOption(),  key,  false);	  Option    opt    =(Option)opt.getOption(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
433	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  true);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)opt.getOption(),  key,  true);	  Option    opt    =(Option)opt.getOption(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
434	[BUG]  [BUGGY]  LongOpts  shortOpts  =  opt.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  LongOpts  shortOpts  =  opt.getShortOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	LongOpts  shortOpts  =  opt.getShortOpts();	  LongOpts    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
435	[BUG]  [BUGGY]  longOpts  =  opt.getLongOpt(),  key,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  longOpts  =  opt.getLongOpt(),  key,  null);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	longOpts  =  opt.getLongOpt(),  key,  null);	  longOpts    =    opt.getLongOpt(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
436	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)||  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)||  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)||  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key)||    requiredOpts.containsKey(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
437	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)&&  requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key)||    requiredOpts.containsKey(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
438	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getValue(),  key,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =(String)opt.getValue(),  key,  requiredOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =(String)opt.getValue(),  key,  requiredOpts);	  String    shortOpts    =(String)opt.getValue(),    key;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
439	[BUG]  [BUGGY]  if(opt.isLongOpt()  ||  opt.hasLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  ||  opt.hasLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  ||  opt.hasLongOpt())  {	  if(opt.hasLongOpt()    &&    opt.hasLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
440	[BUG]  [BUGGY]  if(option.hasLongOpt()  ||  opt.hasLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(option.hasLongOpt()  ||  opt.hasLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(option.hasLongOpt()  ||  opt.hasLongOpt())  {	  if(opt.hasLongOpt()    &&    opt.hasLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
441	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.add(key);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key)||    requiredOpts.contains(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
442	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.put(key.substring(2),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.put(key.substring(2),  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.put(key.substring(2),  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(2),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
443	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.put(key.substring(2,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.put(key.substring(2,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.put(key.substring(2,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(2),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
444	[BUG]  [BUGGY]  Option  optionGroups  =  options.getOptionGroupsForKey(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  optionGroups  =  options.getOptionGroupsForKey(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  optionGroups  =  options.getOptionGroupsForKey(key);	  Option    optionGroups    =    options.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	123	None	replace
445	[BUG]  [BUGGY]  if(requiredOpts.contains(key)&&  opt.isRequired())  {  requiredOpts.put(key.substring(0,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.contains(key)&&  opt.isRequired())  {  requiredOpts.put(key.substring(0,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.contains(key)&&  opt.isRequired())  {  requiredOpts.put(key.substring(0,  opt);  }	  if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(0,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	119	None	replace
446	[BUG]  [BUGGY]  if(opt.isRequired())  {  requiredOpts.put(key.substring(0,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isRequired())  {  requiredOpts.put(key.substring(0,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isRequired())  {  requiredOpts.put(key.substring(0,  opt);  }	  if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(0,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	119	None	replace
447	[BUG]  [BUGGY]  if(opt.isLongOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.add(key);  }	  if(opt.hasLongOpt())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	108	None	replace
448	[BUG]  [BUGGY]  Options  shortOpts  =  opt.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Options  shortOpts  =  opt.getShortOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Options  shortOpts  =  opt.getShortOpt();	  Option    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
449	[BUG]  [BUGGY]  char  shortOpts  =  getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  char  shortOpts  =  getLongOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	char  shortOpts  =  getLongOpts();	  String    shortOpts    =    getLongOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
450	[BUG]  [BUGGY]  String  shortOpts  =  getLongOpts().toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getLongOpts().toString();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getLongOpts().toString();	  String    shortOpts    =    getLongOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
451	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.contains(key))  {  neededOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isRequired())  {  if(requiredOpts.contains(key))  {  neededOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isRequired())  {  if(requiredOpts.contains(key))  {  neededOpts.put(key,  opt);  }	  if(opt.hasOpt())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	101	None	replace
452	[BUG]  [BUGGY]  if(opt.hasLongOpt()  ||  opt.hasOptionalArg())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  ||  opt.hasOptionalArg())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  ||  opt.hasOptionalArg())  {	  if(opt.hasLongOpt()    ||    opt.hasArg())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	121	None	replace
453	[BUG]  [BUGGY]  Option  shortOpts  =  optionsGroups.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  optionsGroups.get(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  optionsGroups.get(key);	  Option    shortOpts    =    optionGroups.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
454	[BUG]  [BUGGY]  Option  longOpts  =(Option)hortOpts.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  longOpts  =(Option)hortOpts.get(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  longOpts  =(Option)hortOpts.get(key);	  Option    longOpts    =(Option)requiredOpts.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
455	[BUG]  [BUGGY]  if(key!=  null  &&  key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  &&  key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  &&  key.length()  ==  0  ||  opt.hasLongOpt()  &&  opt.isLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    &&    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
456	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.add(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.add(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.add(key,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
457	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  opt.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  ShortOpts  shortOpts  =  opt.getShortOpts();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	ShortOpts  shortOpts  =  opt.getShortOpts();	  char    shortOpts    =    opt.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	124	None	replace
458	[BUG]  [BUGGY]  if(key  ==  null  ||  opt.hasLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key  ==  null  ||  opt.hasLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key  ==  null  ||  opt.hasLongOpt())  {	  if(key    ==    null    ||    opt.hasLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
459	[BUG]  [BUGGY]  if(opt.isLongOpt()  ||  opt.isOptionalOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  ||  opt.isOptionalOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  ||  opt.isOptionalOpt())  {	  if(opt.isLongOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
460	[BUG]  [BUGGY]  Option  opt  =  options.getOption(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  options.getOption(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  options.getOption(key);	  Option    opt    =    option.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
461	[BUG]  [BUGGY]  if(requiredOpts.contains(key))  {  requiredOpts.add(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(requiredOpts.contains(key))  {  requiredOpts.add(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(requiredOpts.contains(key))  {  requiredOpts.add(key,  opt);  }	  if(requiredOpts.contains(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
462	[BUG]  [BUGGY]  char  shortOpts  =(char)opt.getShortValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  char  shortOpts  =(char)opt.getShortValue();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	char  shortOpts  =(char)opt.getShortValue();	  String    shortOpts    =(String)opt.getShortValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	113	None	replace
463	[BUG]  [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  this.longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpt  =  opt.getShortOpt(),  this.longOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpt  =  opt.getShortOpt(),  this.longOpts;	  Option    shortOpt    =    opt.getShortOpt(),    longOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
464	[BUG]  [BUGGY]  if(opt.hasLongOpt()  &&  key.length()  ==  0  &&  opt.hasLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  &&  key.length()  ==  0  &&  opt.hasLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  &&  key.length()  ==  0  &&  opt.hasLongOpt())  {	  if(key.length()    ==    0    &&    opt.hasLongOpt()    &&    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
465	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)||  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key)||    requiredOpts.contains(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
466	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt())  {  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key)||    requiredOpts.contains(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
467	[BUG]  [BUGGY]  Character  shortOpts  =(String)opt.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Character  shortOpts  =(String)opt.getValue();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Character  shortOpts  =(String)opt.getValue();	  char    shortOpts    =(char)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	114	None	replace
468	[BUG]  [BUGGY]  char  shortOpts  =  getShortOpts(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  char  shortOpts  =  getShortOpts(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	char  shortOpts  =  getShortOpts(key);	  String    shortOpts    =    getShortOpts(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
469	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)opt.getOption(),  key,  this);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)opt.getOption(),  key,  this);	  Option    opt    =(Option)opt.getOption(),    key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
470	[BUG]  [BUGGY]  Option  opt  =(Option)requiredOpts.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)requiredOpts.get(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)requiredOpts.get(key);	  Option    opt    =(Option)optionGroups.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
471	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.put(key.substring(0,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.put(key.substring(0,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.put(key.substring(0,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(0,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
472	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.add(key.substring(0,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.add(key.substring(0,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.add(key.substring(0,  opt);  }	  if(opt.isRequired())    {    if(requiredOpts.contains(key))    {    requiredOpts.put(key.substring(0,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
473	[BUG]  [BUGGY]  if(key!=  null  &&  opt.isLongOpt()  &&  key.length()!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(key!=  null  &&  opt.isLongOpt()  &&  key.length()!=  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(key!=  null  &&  opt.isLongOpt()  &&  key.length()!=  0)  {	  if(opt.isLongOpt()    &&    key.length()!=    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
474	[BUG]  [BUGGY]  String  shortOpts  =  getShortOpts().toString(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  String  shortOpts  =  getShortOpts().toString(key);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	String  shortOpts  =  getShortOpts().toString(key);	  String    shortOpts    =    getShortOpts().toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	112	None	replace
475	[BUG]  [BUGGY]  if(!opt.hasOpt()  &&  opt.isLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(!opt.hasOpt()  &&  opt.isLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(!opt.hasOpt()  &&  opt.isLongOpt())  {	  if(opt.hasOpt()    &&    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
476	[BUG]  [BUGGY]  if(opt.hasOptionalOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOptionalOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOptionalOpt())  {  if(requiredOpts.containsKey(key))  {  requiredOpts.put(key,  opt);  }	  if(opt.isOptional())    {    if(requiredOpts.containsKey(key))    {    requiredOpts.put(key,    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
477	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.get(key,  this.optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =(Option)this.optionGroups.get(key,  this.optionGroups);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =(Option)this.optionGroups.get(key,  this.optionGroups);	  Option    opt    =(Option)this.optionGroups.get(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	122	None	replace
478	[BUG]  [BUGGY]  if(opt.isLongOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.add(key);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.add(key);  }  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt())  {  if(requiredOpts.contains(key))  {  requiredOpts.add(key);  }	  if(opt.hasLongOpt())    {    if(requiredOpts.contains(key))    {    requiredOpts.add(key);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
479	[BUG]  [BUGGY]  if(opt.isLongOpt()  ||!longOpts.contains(key)&&!requiredOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  ||!longOpts.contains(key)&&!requiredOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  ||!longOpts.contains(key)&&!requiredOpts.contains(key))  {	  if(!longOpts.contains(key)&&!requiredOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
480	[BUG]  [BUGGY]  if(opt.isLongOpt()  ||!requiredOpts.contains(key)&&!requiredOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.isLongOpt()  ||!requiredOpts.contains(key)&&!requiredOpts.contains(key))  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.isLongOpt()  ||!requiredOpts.contains(key)&&!requiredOpts.contains(key))  {	  if(!longOpts.contains(key)&&!requiredOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
481	[BUG]  [BUGGY]  Option  langOpts  =  opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  langOpts  =  opt.getLongOpt();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  langOpts  =  opt.getLongOpt();	  Option    longOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
482	[BUG]  [BUGGY]  shortOpts  =  opt.getLongOpt()  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  shortOpts  =  opt.getLongOpt()  +  1;  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	shortOpts  =  opt.getLongOpt()  +  1;	  longOpts    =    opt.getLongOpt()    +    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
483	[BUG]  [BUGGY]  Option  opt  =  option.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  opt  =  option.getOptionGroup();  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  opt  =  option.getOptionGroup();	  Option    opt    =    opt.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
484	[BUG]  [BUGGY]  if(opt.hasOpt()  ||  opt.isLongOpt()  ||  key.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasOpt()  ||  opt.isLongOpt()  ||  key.length()  ==  0)  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasOpt()  ||  opt.isLongOpt()  ||  key.length()  ==  0)  {	  if(opt.hasOpt()    ||    opt.isLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
485	[BUG]  [BUGGY]  if(opt.hasLongOpt()  ||  key.length()  ==  0  ||  opt.hasOptionalLongOpt())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  if(opt.hasLongOpt()  ||  key.length()  ==  0  ||  opt.hasOptionalLongOpt())  {  [BUGGY]      {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	if(opt.hasLongOpt()  ||  key.length()  ==  0  ||  opt.hasOptionalLongOpt())  {	  if(key.length()    ==    0    ||    opt.hasLongOpt()    ||    opt.hasOptionalLongOpt())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
486	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpts(),  longOpts,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getShortOpts(),  longOpts,  null);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getShortOpts(),  longOpts,  null);	  Option    shortOpts    =    opt.getShortOpts(),    longOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
487	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpts(),  longOpts,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {  String  key  =  opt.getKey();        [BUGGY]  Option  shortOpts  =  opt.getShortOpts(),  longOpts,  requiredOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	157	158	1	replace	Option  shortOpts  =  opt.getShortOpts(),  longOpts,  requiredOpts);	  Option    shortOpts    =    opt.getShortOpts(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
