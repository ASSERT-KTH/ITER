bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getKey();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  shortOpts  =(String)opt.getKey();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)opt.getKey();	      String    shortOpts    =(String)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
2	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getValue(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  shortOpts  =(String)opt.getValue(),  longOpts);  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)opt.getValue(),  longOpts);	      String    shortOpts    =(String)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
3	[BUG]  [BUGGY]  char  shortOpts  =(char)opt.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  char  shortOpts  =(char)opt.getValue();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	char  shortOpts  =(char)opt.getValue();	      String    shortOpts    =(String)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
4	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey());  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey());	      Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
5	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt  +  1);  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt  +  1);	      Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
6	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt  -  1);  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt  -  1);	      Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
7	[BUG]  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	longOpts.put(opt.getLongOpt(),  opt);	      if(opt.isRequired())    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
8	[BUG]  [BUGGY]  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }	      if(opt.isRequired())    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
9	[BUG]  [BUGGY]  if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  option);  }  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  option);  }	      if(opt.isRequired())    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
10	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + "_ ";  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  key  =  opt.getKey()  + "_ ";  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + "_ ";	  String    key    =    opt.getKey()    +   "n   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
11	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + ",null ";  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  key  =  opt.getKey()  + ",null ";  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + ",null ";	  String    key    =    opt.getKey()    +   "n   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
12	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + ": ";  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  key  =  opt.getKey()  + ": ";  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + ": ";	  String    key    =    opt.getKey()    +   "n   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
13	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + "/ ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  key  =  opt.getKey()  + "/ ";  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + "/ ";	  String    key    =    opt.getKey()    +   "n   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
14	[BUG]  [BUGGY]  Option  opt  =(Option)optionGroups.get(opt.getOption());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  opt  =(Option)optionGroups.get(opt.getOption());  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)optionGroups.get(opt.getOption());	      Option    opt    =(Option)opt.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
15	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getOption());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getOption());  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)this.optionGroups.get(opt.getOption());	      Option    opt    =(Option)opt.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
16	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getShortOpt();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)opt.getShortOpt();	      Option    optionGroups    =(OptionGroup)opt.getGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
17	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getImplicitRequired();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getImplicitRequired();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)opt.getImplicitRequired();	      Option    optionGroups    =(OptionGroup)opt.getGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
18	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getOptionGroup();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)opt.getOptionGroup();	      Option    optionGroups    =(OptionGroup)opt.getGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
19	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(requiredOpts);  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =  opt.getOptionGroups(requiredOpts);	      Option    optionGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
20	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  shortOpts);  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =  opt.getOptionGroups(),  shortOpts);	      Option    optionGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
21	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(this);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(this);  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =  opt.getOptionGroups(this);	      Option    optionGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
22	[BUG]  [BUGGY]  shortOpts.put(opt.getLongOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  shortOpts.put(opt.getLongOpt(),  opt);  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	shortOpts.put(opt.getLongOpt(),  opt);	      if(opt.isRequired())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
23	[BUG]  [BUGGY]  longOpts  =  opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  longOpts  =  opt.getLongOpt();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	longOpts  =  opt.getLongOpt();	      if(opt.isRequired())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
24	[BUG]  [BUGGY]  Option  opt  =(Option)optionGroups.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  opt  =(Option)optionGroups.clone();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)optionGroups.clone();	      Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
25	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  opt  =(Option)this.optionGroups.clone();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)this.optionGroups.clone();	      Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
26	[BUG]  [BUGGY]  Option  opt  =(Option)opt.clone(),  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  opt  =(Option)opt.clone(),  optionGroups);  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)opt.clone(),  optionGroups);	      Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
27	[BUG]  [BUGGY]  String  key  =  opt.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  key  =  opt.getKey(),  shortOpts);  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey(),  shortOpts);	      String    key    =    opt.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
28	[BUG]  [BUGGY]  String  key  =  opt.key(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  key  =  opt.key(),  shortOpts);  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.key(),  shortOpts);	  String    key    =    opt.key();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
29	[BUG]  [BUGGY]  String  key  =  opt.key(),  shortOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  key  =  opt.key(),  shortOpts;  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.key(),  shortOpts;	  String    key    =    opt.key();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
30	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  option);  }  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  option);  }	      if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
31	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),  opt);  }  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),  opt);  }	      if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
32	[BUG]  [BUGGY]  Option  opt  =(Option)optionGroups.get(opt.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  opt  =(Option)optionGroups.get(opt.getValue());  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)optionGroups.get(opt.getValue());	      Option    opt    =(Option)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
33	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getKey();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  opt  =(Option)opt.getKey();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)opt.getKey();	      Option    opt    =(Option)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
34	[BUG]  [BUGGY]  Option  shortOpts  =  optionGroups.get(opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  shortOpts  =  optionGroups.get(opt.getLongOpt());  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  shortOpts  =  optionGroups.get(opt.getLongOpt());	      if(opt.isRequired())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
35	[BUG]  [BUGGY]  String  key  =  opt.toString()  + ", ";  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  key  =  opt.toString()  + ", ";  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.toString()  + ", ";	  String    key    =    opt.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
36	[BUG]  [BUGGY]  String  key  =  opt.toString()  + "; ";  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  key  =  opt.toString()  + "; ";  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.toString()  + "; ";	  String    key    =    opt.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
37	[BUG]  [BUGGY]  Option  opt  =  getOption(opt,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  opt  =  getOption(opt,  shortOpts);  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt,  shortOpts);	      Option    opt    =    getOption(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
38	[BUG]  [BUGGY]  Option  opt  =  getOption(option);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  opt  =  getOption(option);  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(option);	      Option    opt    =    getOption(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
39	[BUG]  [BUGGY]  Option  opt  =  getOption(opt,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  opt  =  getOption(opt,  longOpts);  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt,  longOpts);	      Option    opt    =    getOption(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
40	[BUG]  [BUGGY]  Option  opt  =  getOptionGroup(opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  opt  =  getOptionGroup(opt);  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOptionGroup(opt);	      Option    opt    =    getOption(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
41	[BUG]  [BUGGY]  char  key  =  opt.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  char  key  =  opt.getValue();  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	char  key  =  opt.getValue();	  String    key    =    opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
42	[BUG]  [BUGGY]  String  key  =  opt.getValue()  + "; ";  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  key  =  opt.getValue()  + "; ";  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getValue()  + "; ";	  String    key    =    opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
43	[BUG]  [BUGGY]  String  key  =  option.getKey(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  key  =  option.getKey(),  opt);  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  option.getKey(),  opt);	  String    key    =    option.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
44	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  longOpts.get(opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  ShortOpts  shortOpts  =  longOpts.get(opt.getLongOpt());  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	ShortOpts  shortOpts  =  longOpts.get(opt.getLongOpt());	      if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
45	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  longOpts.contains(opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  ShortOpts  shortOpts  =  longOpts.contains(opt.getLongOpt());  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	ShortOpts  shortOpts  =  longOpts.contains(opt.getLongOpt());	      if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
46	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  shortOpts  =(String)opt.clone();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)opt.clone();	      String    shortOpts    =(String)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
47	[BUG]  [BUGGY]  String  shortOpts  =(String)optionGroups.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  shortOpts  =(String)optionGroups.getValue();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)optionGroups.getValue();	      String    shortOpts    =(String)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
48	[BUG]  [BUGGY]  Options  opt  =(Option)opt.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Options  opt  =(Option)opt.clone();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Options  opt  =(Option)opt.clone();	      Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
49	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)opt.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  optionGroups  =(OptionGroup)opt.clone();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)opt.clone();	      Option    optionGroups    =(OptionGroup)opt.getGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
50	[BUG]  [BUGGY]  char  key  =  opt.getKey();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  char  key  =  opt.getKey();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	char  key  =  opt.getKey();	      String    key    =    opt.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
51	[BUG]  [BUGGY]  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }	      if(opt.isRequired())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
52	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  opt  =  getOption(opt.getValue());  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt.getValue());	      Option    opt    =    getOption(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
53	[BUG]  [BUGGY]  Option  opt  =  getOption(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  opt  =  getOption(key);  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(key);	      Option    opt    =    getOption(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
54	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get	      if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
55	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getL  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getL  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getL	      if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
56	[BUG]  [BUGGY]  Options  optionGroups  =  opt.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Options  optionGroups  =  opt.getOptionGroups();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Options  optionGroups  =  opt.getOptionGroups();	      Option    optionGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
57	[BUG]  [BUGGY]  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }	      if(opt.isRequired())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
58	[BUG]  [BUGGY]  String  key  =  this.optionGroups.getKey(opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  key  =  this.optionGroups.getKey(opt.getKey());  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.getKey(opt.getKey());	  String    key    =    option.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
59	[BUG]  [BUGGY]  String  key  =  this.optionGroups.getKey(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  key  =  this.optionGroups.getKey(option.getKey());  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.getKey(option.getKey());	  String    key    =    option.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
60	[BUG]  [BUGGY]  if(opt.hasKey())  {  if(!longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.hasKey())  {  if(!longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasKey())  {  if(!longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }	      if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
61	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get	      if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
62	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.hasLongOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasLongOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  opt);  }	      if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
63	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  opt);  }	      if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
64	[BUG]  [BUGGY]  String  key  =  opt.keySet().iterator().next();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  key  =  opt.keySet().iterator().next();  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.keySet().iterator().next();	  String    key    =    opt.key();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
65	[BUG]  [BUGGY]  char  key  =  opt.key();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  char  key  =  opt.key();  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	char  key  =  opt.key();	  String    key    =    opt.key();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
66	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getKey());  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)this.optionGroups.get(opt.getKey());	      Option    opt    =(Option)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
67	[BUG]  [BUGGY]  Options  optionGroups  =(OptionGroup)this.optionGroups.get(opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Options  optionGroups  =(OptionGroup)this.optionGroups.get(opt);  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Options  optionGroups  =(OptionGroup)this.optionGroups.get(opt);	      Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
68	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  opt  =  getOption(opt.getKey());  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt.getKey());	      Option    opt    =    getOption(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
69	[BUG]  [BUGGY]  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }	      if(opt.isRequired())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
70	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + "null ";  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  key  =  opt.getKey()  + "null ";  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + "null ";	  String    key    =    opt.getKey()    +   "n   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
71	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }	      if(opt.isRequired())    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
72	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.hasLongOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasLongOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }	      if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
73	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }	      if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
74	[BUG]  [BUGGY]  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }	      if(opt.isRequired())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
75	[BUG]  [BUGGY]  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }	      if(opt.isRequired())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
76	[BUG]  [BUGGY]  Option  opt  =(Option)requiredOpts.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  opt  =(Option)requiredOpts.clone();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)requiredOpts.clone();	      Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
77	[BUG]  [BUGGY]  String  key  =  this.optionGroups.get(opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  String  key  =  this.optionGroups.get(opt.getKey());  [BUGGY]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.get(opt.getKey());	  String    key    =    option.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
78	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getOpt();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)opt.getOpt();	      Option    optionGroups    =(OptionGroup)opt.getGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
79	[BUG]  [BUGGY]  Option  optGroups  =  opt.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    public  Options  addOption(Option  opt)  {    [BUGGY]  Option  optGroups  =  opt.getOptionGroups();  [BUGGY]    String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optGroups  =  opt.getOptionGroups();	      Option    optionGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
