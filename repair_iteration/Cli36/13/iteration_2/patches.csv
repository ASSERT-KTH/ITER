bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  key  =  this.optionGroups.getKey(opt.getKey(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  this.optionGroups.getKey(opt.getKey(),  opt);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.getKey(opt.getKey(),  opt);	  String    key    =    this.optionGroups.getKey(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
2	[BUG]  [BUGGY]  String  key  =  this.optionGroups.getKey(opt.getKey(),  opt.getShortOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  this.optionGroups.getKey(opt.getKey(),  opt.getShortOpt());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.getKey(opt.getKey(),  opt.getShortOpt());	  String    key    =    this.optionGroups.getKey(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
3	[BUG]  [BUGGY]  String  key  =  this.optionGroups.getKey(opt.getKey(),  opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  this.optionGroups.getKey(opt.getKey(),  opt.getLongOpt());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.getKey(opt.getKey(),  opt.getLongOpt());	  String    key    =    this.optionGroups.getKey(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
4	[BUG]  [BUGGY]  Options  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Options  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Options  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey());	  Options    optionGroups    =(OptionGroup)this.optionGroups.get(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
5	[BUG]  [BUGGY]  Options  optionGroups  =(OptionGroup)this.optionGroups.get(opt,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Options  optionGroups  =(OptionGroup)this.optionGroups.get(opt,  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Options  optionGroups  =(OptionGroup)this.optionGroups.get(opt,  shortOpts);	  Options    optionGroups    =(OptionGroup)this.optionGroups.get(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
6	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey(),  opt);	  Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
7	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getValue());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getValue());	  Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
8	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getId());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getId());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getId());	  Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
9	[BUG]  [BUGGY]  Option  opt  =  getOption(option,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(option,  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(option,  shortOpts);	  Option    opt    =    getOption(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
10	[BUG]  [BUGGY]  Option  opt  =  getOption(optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(optionGroups);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(optionGroups);	  Option    opt    =    getOption(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
11	[BUG]  [BUGGY]  Option  opt  =  getOption(option,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(option,  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(option,  longOpts);	  Option    opt    =    getOption(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
12	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getImplicitRequired(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getImplicitRequired(),  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)opt.getImplicitRequired(),  shortOpts);	  Option    optionGroups    =(OptionGroup)opt.getImplicitRequired();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
13	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getImplicitRequired(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getImplicitRequired(),  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)opt.getImplicitRequired(),  longOpts);	  Option    optionGroups    =(OptionGroup)opt.getImplicitRequired();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
14	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)option.getImplicitRequired();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)option.getImplicitRequired();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)option.getImplicitRequired();	  Option    optionGroups    =(OptionGroup)opt.getImplicitRequired();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
15	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  shortOpts  =(String)opt.getShortOpt();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)opt.getShortOpt();	  String    shortOpts    =(String)opt.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
16	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  shortOpts  =(String)opt.getLongOpt();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)opt.getLongOpt();	  String    shortOpts    =(String)opt.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
17	[BUG]  [BUGGY]  Options  opt  =(Option)optionGroups.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Options  opt  =(Option)optionGroups.clone();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Options  opt  =(Option)optionGroups.clone();	  Options    opt    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
18	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + ",_ ";  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + ",_ ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + ",_ ";	  String    key    =    opt.getKey()    +   "_   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
19	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + "._ ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + "._ ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + "._ ";	  String    key    =    opt.getKey()    +   "_   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
20	[BUG]  [BUGGY]  String  key  =  opt.getKey()  /   "_ ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  /   "_ ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  /   "_ ";	  String    key    =    opt.getKey()    +   "_   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
21	[BUG]  [BUGGY]  String  key  =  option.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  option.getValue();  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  option.getValue();	  char    key    =    opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
22	[BUG]  [BUGGY]  Key  key  =  opt.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Key  key  =  opt.getValue();  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Key  key  =  opt.getValue();	  char    key    =    opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
23	[BUG]  [BUGGY]  String  key  =  opt.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getValue());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getValue());	  char    key    =    opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
24	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(opt.getKey(),  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt.getKey(),  shortOpts);	  Option    opt    =    getOption(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
25	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getKey(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(opt.getKey(),  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt.getKey(),  longOpts);	  Option    opt    =    getOption(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
26	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getShortOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(opt.getShortOpt());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt.getShortOpt());	  Option    opt    =    getOption(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
27	[BUG]  [BUGGY]  LongOpts  shortOpts  =  longOpts.get(opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  LongOpts  shortOpts  =  longOpts.get(opt.getLongOpt());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	LongOpts  shortOpts  =  longOpts.get(opt.getLongOpt());	  if(opt.hasLongOpt())    {    if(!longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
28	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.hasLongOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  option);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasLongOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  option);  }	  if(opt.hasLongOpt())    {    if(!longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
29	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  new  ShortOpts(opt.getLongOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  ShortOpts  shortOpts  =  new  ShortOpts(opt.getLongOpt(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	ShortOpts  shortOpts  =  new  ShortOpts(opt.getLongOpt(),  opt);	  if(opt.isRequired())    {    shortOpts.put(opt.getLongOpt(),    opt);    }    else    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
30	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  option);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  option);  }	  if(opt.hasOpt())    {    if(!longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
31	[BUG]  [BUGGY]  Option  opt  =(Option)optionGroups.get(opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)optionGroups.get(opt.getKey());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)optionGroups.get(opt.getKey());	  Option    opt    =(Option)optionGroups.get(opt.getValue());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
32	[BUG]  [BUGGY]  Option  opt  =(Option)requiredOpts.get(opt.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)requiredOpts.get(opt.getValue());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)requiredOpts.get(opt.getValue());	  Option    opt    =(Option)optionGroups.get(opt.getValue());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
33	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getValue());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)this.optionGroups.get(opt.getValue());	  Option    opt    =(Option)optionGroups.get(opt.getValue());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
34	[BUG]  [BUGGY]  Option  opt  =(Option)optionGroups.get(opt.getValue(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)optionGroups.get(opt.getValue(),  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)optionGroups.get(opt.getValue(),  shortOpts);	  Option    opt    =(Option)optionGroups.get(opt.getValue());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
35	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt,  opt  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt,  opt  -  1);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt,  opt  -  1);	  Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
36	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey()  -  1);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey()  -  1);	  Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
37	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(this,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(this,  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =  opt.getOptionGroups(this,  shortOpts);	  Option    optionGroups    =    opt.getOptionGroups(this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
38	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(this,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(this,  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =  opt.getOptionGroups(this,  longOpts);	  Option    optionGroups    =    opt.getOptionGroups(this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
39	[BUG]  [BUGGY]  String  shortOpts  =(String)optionGroups.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  shortOpts  =(String)optionGroups.clone();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)optionGroups.clone();	  String    shortOpts    =(String)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
40	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.clone(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  shortOpts  =(String)opt.clone(),  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)opt.clone(),  longOpts);	  String    shortOpts    =(String)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
41	[BUG]  [BUGGY]  char  shortOpts  =(char)opt.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  char  shortOpts  =(char)opt.clone();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	char  shortOpts  =(char)opt.clone();	  String    shortOpts    =(String)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
42	[BUG]  [BUGGY]  Option  opt  =  getOption(longOpts,  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(longOpts,  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(longOpts,  opt);	  Option    opt    =    getOption(opt,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
43	[BUG]  [BUGGY]  Option  opt  =  getOption(requiredOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(requiredOpts,  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(requiredOpts,  longOpts);	  Option    opt    =    getOption(opt,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
44	[BUG]  [BUGGY]  String  shortOpts  =(String)this.optionGroups.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  shortOpts  =(String)this.optionGroups.getValue();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)this.optionGroups.getValue();	  String    shortOpts    =(String)optionGroups.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
45	[BUG]  [BUGGY]  String  shortOpts  =(String)optionGroups.getKey();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  shortOpts  =(String)optionGroups.getKey();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)optionGroups.getKey();	  String    shortOpts    =(String)optionGroups.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
46	[BUG]  [BUGGY]  longOpts.put(opt.getLongOpt(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  longOpts.put(opt.getLongOpt(),  option);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	longOpts.put(opt.getLongOpt(),  option);	  if(opt.isRequired())    {    longOpts.put(opt.getLongOpt(),    option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
47	[BUG]  [BUGGY]  Key  key  =  opt.getKey();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Key  key  =  opt.getKey();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Key  key  =  opt.getKey();	  char    key    =    opt.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
48	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)option.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)option.getOptionGroup();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)option.getOptionGroup();	  Option    optionGroups    =(OptionGroup)opt.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
49	[BUG]  [BUGGY]  String  key  =  opt.toString()  + ",; ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.toString()  + ",; ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.toString()  + ",; ";	  String    key    =    opt.toString()    +   ";   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
50	[BUG]  [BUGGY]  String  key  =  opt.toString()  + ";n ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.toString()  + ";n ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.toString()  + ";n ";	  String    key    =    opt.toString()    +   ";   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
51	[BUG]  [BUGGY]  longOpts.put(opt.getUpperOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  longOpts.put(opt.getUpperOpt(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	longOpts.put(opt.getUpperOpt(),  opt);	  longOpts.put(opt.getLongOpt(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
52	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getRequiredOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getRequiredOpt();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)opt.getRequiredOpt();	  Option    optionGroups    =(OptionGroup)opt.getShortOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
53	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  getShortOpts(opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  ShortOpts  shortOpts  =  getShortOpts(opt.getLongOpt());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	ShortOpts  shortOpts  =  getShortOpts(opt.getLongOpt());	  if(opt.isRequired())    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
54	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)optionGroups.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)optionGroups.clone();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)optionGroups.clone();	  Option    optionGroups    =(OptionGroup)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
55	[BUG]  [BUGGY]  Options  optionGroups  =(OptionGroup)opt.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Options  optionGroups  =(OptionGroup)opt.clone();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Options  optionGroups  =(OptionGroup)opt.clone();	  Option    optionGroups    =(OptionGroup)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
56	[BUG]  [BUGGY]  optionGroups  =(OptionGroup)opt.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  optionGroups  =(OptionGroup)opt.clone();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	optionGroups  =(OptionGroup)opt.clone();	  Option    optionGroups    =(OptionGroup)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
57	[BUG]  [BUGGY]  if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),  opt);  }	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
58	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||!longOpts.contains(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||!longOpts.contains(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||!longOpts.contains(opt.getLongOpt(),  opt);  }	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
59	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getObject();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getObject();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)opt.getObject();	  Option    optionGroups    =(OptionGroup)opt.getOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
60	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getOr();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getOr();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)opt.getOr();	  Option    optionGroups    =(OptionGroup)opt.getOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
61	[BUG]  [BUGGY]  String  key  =  Opcodes.KEYWORD(opt.key());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  Opcodes.KEYWORD(opt.key());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  Opcodes.KEYWORD(opt.key());	  char    key    =    opt.key();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
62	[BUG]  [BUGGY]  String  key  =  Opcodes.KEY,  opt.key();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  Opcodes.KEY,  opt.key();  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  Opcodes.KEY,  opt.key();	  char    key    =    opt.key();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
63	[BUG]  [BUGGY]  String  key  =  Opcodes.KEY_STRING;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  Opcodes.KEY_STRING;  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  Opcodes.KEY_STRING;	  char    key    =    opt.key();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
64	[BUG]  [BUGGY]  String  key  =  this.optionGroups.getKey(option.getKey(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  this.optionGroups.getKey(option.getKey(),  opt);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.getKey(option.getKey(),  opt);	  String    key    =    this.optionGroups.getKey(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
65	[BUG]  [BUGGY]  String  key  =  this.optionGroups.getValue(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  this.optionGroups.getValue(option.getKey());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.getValue(option.getKey());	  String    key    =    this.optionGroups.getKey(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
66	[BUG]  [BUGGY]  String  key  =  this.optionGroups.getValue(opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  this.optionGroups.getValue(opt.getKey());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.getValue(opt.getKey());	  String    key    =    this.optionGroups.getKey(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
67	[BUG]  [BUGGY]  shortOpts.put(opt.getLongOpt(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  shortOpts.put(opt.getLongOpt(),  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	shortOpts.put(opt.getLongOpt(),  longOpts);	  shortOpts.put(opt.getLongOpt(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
68	[BUG]  [BUGGY]  shortOpts.put(opt.getShortOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  shortOpts.put(opt.getShortOpt(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	shortOpts.put(opt.getShortOpt(),  opt);	  shortOpts.put(opt.getLongOpt(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
69	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())&&  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())&&  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())&&  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getL    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
70	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getL    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
71	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getL    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
72	[BUG]  [BUGGY]  String  key  =  this.optionGroups.get(opt.getKey(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  this.optionGroups.get(opt.getKey(),  opt);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.get(opt.getKey(),  opt);	  String    key    =    this.optionGroups.get(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
73	[BUG]  [BUGGY]  String  key  =  this.optionGroups.get(opt.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  this.optionGroups.get(opt.getKey(),  shortOpts);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.get(opt.getKey(),  shortOpts);	  String    key    =    this.optionGroups.get(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
74	[BUG]  [BUGGY]  String  key  =  this.optionGroups.get(opt.getKey(),  opt.isRequired());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  this.optionGroups.get(opt.getKey(),  opt.isRequired());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.get(opt.getKey(),  opt.isRequired());	  String    key    =    this.optionGroups.get(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
75	[BUG]  [BUGGY]  Option  optGroups  =  opt.getOptionGroups(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optGroups  =  opt.getOptionGroups(requiredOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optGroups  =  opt.getOptionGroups(requiredOpts);	  Option    optGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
76	[BUG]  [BUGGY]  Option  optGroups  =  opt.getOptionGroups(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optGroups  =  opt.getOptionGroups(),  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optGroups  =  opt.getOptionGroups(),  shortOpts);	  Option    optGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
77	[BUG]  [BUGGY]  Option  optGroups  =  opt.getOptionGroups(this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optGroups  =  opt.getOptionGroups(this);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optGroups  =  opt.getOptionGroups(this);	  Option    optGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
78	[BUG]  [BUGGY]  Option  opt  =(Option)optionGroups.clone(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)optionGroups.clone(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)optionGroups.clone(),  opt);	  Option    opt    =(Option)opt.clone(),    optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
79	[BUG]  [BUGGY]  Option  opt  =(Option)opt.clone(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)opt.clone(),  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)opt.clone(),  shortOpts);	  Option    opt    =(Option)opt.clone(),    optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
80	[BUG]  [BUGGY]  Option  opt  =(Option)opt.clone(),  optionGroups,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)opt.clone(),  optionGroups,  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)opt.clone(),  optionGroups,  shortOpts);	  Option    opt    =(Option)opt.clone(),    optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
81	[BUG]  [BUGGY]  Option  opt  =(Option)opt.clone(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)opt.clone(),  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)opt.clone(),  longOpts);	  Option    opt    =(Option)opt.clone(),    optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
82	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getValue(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(opt.getValue(),  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt.getValue(),  longOpts);	  Option    opt    =    getOption(opt.getValue());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
83	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getValue(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(opt.getValue(),  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt.getValue(),  shortOpts);	  Option    opt    =    getOption(opt.getValue());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
84	[BUG]  [BUGGY]  Option  opt  =  getOption(option.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(option.getValue());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(option.getValue());	  Option    opt    =    getOption(opt.getValue());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
85	[BUG]  [BUGGY]  String  key  =  opt.getKey()  /   "null ";  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  /   "null ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  /   "null ";	  String    key    =    opt.getKey()    +   "null   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
86	[BUG]  [BUGGY]  String  key  =  opt.getKey().iterator().next();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey().iterator().next();  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey().iterator().next();	  String    key    =    opt.keySet().iterator().next();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
87	[BUG]  [BUGGY]  String  key  =  opt.keySet().iterator().next(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.keySet().iterator().next(),  shortOpts);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.keySet().iterator().next(),  shortOpts);	  String    key    =    opt.keySet().iterator().next();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
88	[BUG]  [BUGGY]  String  key  =  opt.keySet().iterator();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.keySet().iterator();  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.keySet().iterator();	  String    key    =    opt.keySet().iterator().next();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
89	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.clone(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)this.optionGroups.clone(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)this.optionGroups.clone(),  opt);	  Option    opt    =(Option)this.optionGroups.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
90	[BUG]  [BUGGY]  Options  opt  =(Option)this.optionGroups.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Options  opt  =(Option)this.optionGroups.clone();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Options  opt  =(Option)this.optionGroups.clone();	  Option    opt    =(Option)this.optionGroups.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
91	[BUG]  [BUGGY]  Option  opt  =(Option)longOpts.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)longOpts.clone();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)longOpts.clone();	  Option    opt    =(Option)requiredOpts.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
92	[BUG]  [BUGGY]  Option  opt  =(Option)shortOpts.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)shortOpts.clone();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)shortOpts.clone();	  Option    opt    =(Option)requiredOpts.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
93	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + ",/ ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + ",/ ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + ",/ ";	  String    key    =    opt.getKey()    +   "/   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
94	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + "/ ".equals(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + "/ ".equals(key);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + "/ ".equals(key);	  String    key    =    opt.getKey()    +   "/   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
95	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + "./ ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + "./ ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + "./ ";	  String    key    =    opt.getKey()    +   "/   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
96	[BUG]  [BUGGY]  LongOpts  shortOpts  =  opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  LongOpts  shortOpts  =  opt.getLongOpt();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	LongOpts  shortOpts  =  opt.getLongOpt();	  if(opt.hasOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
97	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getOption(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getOption(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)this.optionGroups.get(opt.getOption(),  opt);	  Option    opt    =(Option)this.optionGroups.get(opt.getOption());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
98	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getOpt());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)this.optionGroups.get(opt.getOpt());	  Option    opt    =(Option)this.optionGroups.get(opt.getOption());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
99	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + "; ";  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + "; ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + "; ";	  String    key    =    opt.getValue()    +   ";   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
100	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + ".; ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + ".; ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + ".; ";	  String    key    =    opt.getValue()    +   ";   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
101	[BUG]  [BUGGY]  Option  opt  =(Option)requiredOpts.get(opt.getOption());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)requiredOpts.get(opt.getOption());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)requiredOpts.get(opt.getOption());	  Option    opt    =(Option)optionGroups.get(opt.getOption());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
102	[BUG]  [BUGGY]  Option  opt  =(Option)optionGroups.get(opt.getOption(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)optionGroups.get(opt.getOption(),  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)optionGroups.get(opt.getOption(),  shortOpts);	  Option    opt    =(Option)optionGroups.get(opt.getOption());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
103	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(requiredOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(requiredOpts,  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =  opt.getOptionGroups(requiredOpts,  shortOpts);	  Option    optionGroups    =    opt.getOptionGroups(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
104	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =  opt.getOptionGroups(longOpts);	  Option    optionGroups    =    opt.getOptionGroups(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
105	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(requiredOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(requiredOpts,  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =  opt.getOptionGroups(requiredOpts,  longOpts);	  Option    optionGroups    =    opt.getOptionGroups(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
106	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getValue(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  shortOpts  =(String)opt.getValue(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)opt.getValue(),  opt);	  String    shortOpts    =(String)opt.getValue(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
107	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getValue(),  opt.longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  shortOpts  =(String)opt.getValue(),  opt.longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)opt.getValue(),  opt.longOpts);	  String    shortOpts    =(String)opt.getValue(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
108	[BUG]  [BUGGY]  String  shortOpts  =(String)longOpts.getValue(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  shortOpts  =(String)longOpts.getValue(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)longOpts.getValue(),  opt);	  String    shortOpts    =(String)opt.getValue(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
109	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getValue(),  longOpts,  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  shortOpts  =(String)opt.getValue(),  longOpts,  optionGroups);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)opt.getValue(),  longOpts,  optionGroups);	  String    shortOpts    =(String)opt.getValue(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
110	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  longOpts.get(opt.getLongOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  ShortOpts  shortOpts  =  longOpts.get(opt.getLongOpt(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	ShortOpts  shortOpts  =  longOpts.get(opt.getLongOpt(),  opt);	  ShortOpts    shortOpts    =    longOpts.get(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
111	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  longOpts.get(opt.getLongOpt(),  opt.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  ShortOpts  shortOpts  =  longOpts.get(opt.getLongOpt(),  opt.getValue());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	ShortOpts  shortOpts  =  longOpts.get(opt.getLongOpt(),  opt.getValue());	  ShortOpts    shortOpts    =    longOpts.get(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
112	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  longOpts.get(opt.getLongOpt(),  opt.isRequired());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  ShortOpts  shortOpts  =  longOpts.get(opt.getLongOpt(),  opt.isRequired());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	ShortOpts  shortOpts  =  longOpts.get(opt.getLongOpt(),  opt.isRequired());	  ShortOpts    shortOpts    =    longOpts.get(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
113	[BUG]  [BUGGY]  Option  opt  =  getOption(key,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(key,  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(key,  shortOpts);	  Option    opt    =    getOption(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
114	[BUG]  [BUGGY]  Option  opt  =  getOption(key,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(key,  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(key,  longOpts);	  Option    opt    =    getOption(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
115	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.get    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
116	[BUG]  [BUGGY]  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.get    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
117	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())&&  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())&&  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())&&  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.get    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
118	[BUG]  [BUGGY]  longOpts  =(longOpts  ==  null)?  null  :  longOpts.get(opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  longOpts  =(longOpts  ==  null)?  null  :  longOpts.get(opt.getLongOpt());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	longOpts  =(longOpts  ==  null)?  null  :  longOpts.get(opt.getLongOpt());	  if(opt.hasOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
119	[BUG]  [BUGGY]  Option  shortOpts  =  optionGroups.get(opt.getLongOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  shortOpts  =  optionGroups.get(opt.getLongOpt(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  shortOpts  =  optionGroups.get(opt.getLongOpt(),  opt);	  Option    shortOpts    =    optionGroups.get(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
120	[BUG]  [BUGGY]  Option  shortOpts  =  optionGroups.get(opt.getShortOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  shortOpts  =  optionGroups.get(opt.getShortOpt());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  shortOpts  =  optionGroups.get(opt.getShortOpt());	  Option    shortOpts    =    optionGroups.get(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
121	[BUG]  [BUGGY]  Option  shortOpts  =  optionGroups.get(opt.getLongOpt(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  shortOpts  =  optionGroups.get(opt.getLongOpt(),  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  shortOpts  =  optionGroups.get(opt.getLongOpt(),  longOpts);	  Option    shortOpts    =    optionGroups.get(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
122	[BUG]  [BUGGY]  Option  shortOpts  =  options.get(opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  shortOpts  =  options.get(opt.getLongOpt());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  shortOpts  =  options.get(opt.getLongOpt());	  Option    shortOpts    =    optionGroups.get(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
123	[BUG]  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	longOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }	  if(opt.hasOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
124	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + ",null ",  null;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + ",null ",  null;  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + ",null ",  null;	  String    key    =    opt.getKey()    +   ",null   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
125	[BUG]  [BUGGY]  String  key  =  opt.toString()  + ",, ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.toString()  + ",, ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.toString()  + ",, ";	  String    key    =    opt.toString()    +   ",   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
126	[BUG]  [BUGGY]  String  key  =  opt.getKey(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey(),  option);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey(),  option);	  String    key    =    option.getKey(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
127	[BUG]  [BUGGY]  String  key  =  option.getKey(),  opt,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  option.getKey(),  opt,  shortOpts);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  option.getKey(),  opt,  shortOpts);	  String    key    =    option.getKey(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
128	[BUG]  [BUGGY]  String  key  =  option.getKey(),  opt,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  option.getKey(),  opt,  longOpts);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  option.getKey(),  opt,  longOpts);	  String    key    =    option.getKey(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
129	[BUG]  [BUGGY]  String  key  =  option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  option.getKey(),  shortOpts);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  option.getKey(),  shortOpts);	  String    key    =    option.getKey(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
130	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt,  opt  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt,  opt  +  1);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt,  opt  +  1);	  Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
131	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey()  +  1);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey()  +  1);	  Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
132	[BUG]  [BUGGY]  Option  opt  =  getOptionGroup(opt,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOptionGroup(opt,  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOptionGroup(opt,  shortOpts);	  Option    opt    =    getOptionGroup(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
133	[BUG]  [BUGGY]  Option  opt  =  getOptionGroup(opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOptionGroup(opt.getKey());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOptionGroup(opt.getKey());	  Option    opt    =    getOptionGroup(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
134	[BUG]  [BUGGY]  Option  opt  =  getOptionGroup(option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOptionGroup(option);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOptionGroup(option);	  Option    opt    =    getOptionGroup(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
135	[BUG]  [BUGGY]  Option  opt  =  getOptionGroup(opt,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOptionGroup(opt,  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOptionGroup(opt,  longOpts);	  Option    opt    =    getOptionGroup(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
136	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())&&  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())&&  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())&&  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.get    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
137	[BUG]  [BUGGY]  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.get    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
138	[BUG]  [BUGGY]  String  key  =  opt.getKey(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey(),  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey(),  longOpts);	  String    key    =    opt.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
139	[BUG]  [BUGGY]  String  key  =  opt.getKey(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey(),  shortOpts,  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey(),  shortOpts,  longOpts);	  String    key    =    opt.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
140	[BUG]  [BUGGY]  String  key  =  opt.getKey(),  stringOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey(),  stringOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey(),  stringOpts);	  String    key    =    opt.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
141	[BUG]  [BUGGY]  longOpts  =  opt.getLongOpt(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  longOpts  =  opt.getLongOpt(),  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	longOpts  =  opt.getLongOpt(),  shortOpts);	  longOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
142	[BUG]  [BUGGY]  longOpts  =  opt.getLongOpt()  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  longOpts  =  opt.getLongOpt()  +  1;  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	longOpts  =  opt.getLongOpt()  +  1;	  longOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
143	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getKey(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getKey(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)this.optionGroups.get(opt.getKey(),  opt);	  Option    opt    =(Option)this.optionGroups.get(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
144	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getKey(),  this.shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getKey(),  this.shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)this.optionGroups.get(opt.getKey(),  this.shortOpts);	  Option    opt    =(Option)this.optionGroups.get(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
145	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + ",: ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + ",: ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + ",: ";	  String    key    =    opt.getKey()    +   ":   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
146	[BUG]  [BUGGY]  String  key  =  opt.getValue()  + ": ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getValue()  + ": ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getValue()  + ": ";	  String    key    =    opt.getKey()    +   ":   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
147	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + ": "  +  optionGroups.size();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + ": "  +  optionGroups.size();  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + ": "  +  optionGroups.size();	  String    key    =    opt.getKey()    +   ":   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
148	[BUG]  [BUGGY]  Options  optionGroups  =  opt.getOptionGroups(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Options  optionGroups  =  opt.getOptionGroups(requiredOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Options  optionGroups  =  opt.getOptionGroups(requiredOpts);	  Options    optionGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
149	[BUG]  [BUGGY]  Options  optionGroups  =  opt.getOptionGroups(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Options  optionGroups  =  opt.getOptionGroups(),  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Options  optionGroups  =  opt.getOptionGroups(),  shortOpts);	  Options    optionGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
150	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  longOpts.contains(opt.getLongOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  ShortOpts  shortOpts  =  longOpts.contains(opt.getLongOpt(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	ShortOpts  shortOpts  =  longOpts.contains(opt.getLongOpt(),  opt);	  ShortOpts    shortOpts    =    longOpts.contains(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
151	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  longOpts.contains(opt.getShortOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  ShortOpts  shortOpts  =  longOpts.contains(opt.getShortOpt());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	ShortOpts  shortOpts  =  longOpts.contains(opt.getShortOpt());	  ShortOpts    shortOpts    =    longOpts.contains(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
152	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  longOpts.add(opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  ShortOpts  shortOpts  =  longOpts.add(opt.getLongOpt());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	ShortOpts  shortOpts  =  longOpts.add(opt.getLongOpt());	  ShortOpts    shortOpts    =    longOpts.contains(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
153	[BUG]  [BUGGY]  CharSequence  shortOpts  =(char)opt.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  CharSequence  shortOpts  =(char)opt.getValue();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	CharSequence  shortOpts  =(char)opt.getValue();	  char    shortOpts    =(char)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
154	[BUG]  [BUGGY]  Chart  shortOpts  =(Character)opt.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Chart  shortOpts  =(Character)opt.getValue();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Chart  shortOpts  =(Character)opt.getValue();	  char    shortOpts    =(char)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
155	[BUG]  [BUGGY]  String  key  =  opt.key(),  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.key(),  longOpts;  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.key(),  longOpts;	  String    key    =    opt.key(),    shortOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
156	[BUG]  [BUGGY]  String  key  =  opt.key(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.key(),  shortOpts,  longOpts);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.key(),  shortOpts,  longOpts);	  String    key    =    opt.key(),    shortOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
157	[BUG]  [BUGGY]  String  key  =  opt.key(),  shortOpts,  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.key(),  shortOpts,  longOpts;  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.key(),  shortOpts,  longOpts;	  String    key    =    opt.key(),    shortOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
158	[BUG]  [BUGGY]  String  key  =  opt.key(),  lengthOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.key(),  lengthOpts;  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.key(),  lengthOpts;	  String    key    =    opt.key(),    shortOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
159	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =  opt.getOptionGroups(),  longOpts);	  Option    optionGroups    =    opt.getOptionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
160	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  shortOpts,  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =  opt.getOptionGroups(),  shortOpts,  longOpts);	  Option    optionGroups    =    opt.getOptionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
161	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  longOpts,  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =  opt.getOptionGroups(),  longOpts,  shortOpts);	  Option    optionGroups    =    opt.getOptionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
162	[BUG]  [BUGGY]  Option  opt  =  getOption(opt,  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(opt,  shortOpts,  longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt,  shortOpts,  longOpts);	  Option    opt    =    getOption(opt,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
163	[BUG]  [BUGGY]  Option  opt  =  getOption(longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(longOpts,  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(longOpts,  shortOpts);	  Option    opt    =    getOption(opt,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
164	[BUG]  [BUGGY]  String  key  =  opt.key(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.key(),  longOpts);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.key(),  longOpts);	  String    key    =    opt.key(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
165	[BUG]  [BUGGY]  String  key  =  opt.key(),  lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.key(),  lengthOpts);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.key(),  lengthOpts);	  String    key    =    opt.key(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
166	[BUG]  [BUGGY]  String  key  =  opt.key(),  stringOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.key(),  stringOpts);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.key(),  stringOpts);	  String    key    =    opt.key(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
167	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getValue(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(opt.getValue(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt.getValue(),  opt);	  Option    opt    =    getOption(opt.getValue());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
168	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getValue(),  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(opt.getValue(),  key);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt.getValue(),  key);	  Option    opt    =    getOption(opt.getValue());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
169	[BUG]  [BUGGY]  Options  optionGroups  =(OptionGroup)opt.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Options  optionGroups  =(OptionGroup)opt.getOptionGroup();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Options  optionGroups  =(OptionGroup)opt.getOptionGroup();	  Option    optionGroups    =(OptionGroup)opt.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
170	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getKey(),  key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(opt.getKey(),  key);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt.getKey(),  key);	  Option    opt    =    getOption(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
171	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getKey(),  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(opt.getKey(),  this);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt.getKey(),  this);	  Option    opt    =    getOption(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
172	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  opt.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  ShortOpts  shortOpts  =  opt.getShortOpts();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	ShortOpts  shortOpts  =  opt.getShortOpts();	  ShortOpts    shortOpts    =    longOpts.get(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
173	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  ShortOpts  shortOpts  =  opt.getLongOpt();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	ShortOpts  shortOpts  =  opt.getLongOpt();	  ShortOpts    shortOpts    =    longOpts.get(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
174	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getKey()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getKey()  -  1);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)this.optionGroups.get(opt.getKey()  -  1);	  Option    opt    =(Option)this.optionGroups.get(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
175	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }	  if(opt.hasOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
176	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }	  if(opt.hasOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
177	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt()  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt()	  if(opt.hasOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
178	[BUG]  [BUGGY]  Option  opt  =(Option)optionGroups.get(opt.getOption(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)optionGroups.get(opt.getOption(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)optionGroups.get(opt.getOption(),  opt);	  Option    opt    =(Option)optionGroups.get(opt.getOption());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
179	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + ".null ";  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + ".null ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + ".null ";	  String    key    =    opt.getKey()    +   "null   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
180	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt()  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt()	  if(opt.hasLongOpt())    {    if(!longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
181	[BUG]  [BUGGY]  String  shortOpts  =(String)optionGroups.get(opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  shortOpts  =(String)optionGroups.get(opt.getKey());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)optionGroups.get(opt.getKey());	  String    shortOpts    =(String)optionGroups.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
182	[BUG]  [BUGGY]  if(opt!=  null)  {  if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt!=  null)  {  if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt!=  null)  {  if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),  opt);  }	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
183	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.hasLongOpt())  {  if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasLongOpt())  {  if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),  opt);  }	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
184	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),  opt);  }	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())&&!longOpts.contains(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
185	[BUG]  [BUGGY]  if(opt!=  null)  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt!=  null)  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt!=  null)  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.get    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
186	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.get    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
187	[BUG]  [BUGGY]  String  key  =  opt.toString()  + ".; ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.toString()  + ".; ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.toString()  + ".; ";	  String    key    =    opt.toString()    +   ";   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
188	[BUG]  [BUGGY]  if(opt!=  null)  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt!=  null)  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt!=  null)  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.get    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
189	[BUG]  [BUGGY]  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt()  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt()	  if(opt.isRequired())    {    shortOpts.put(opt.getLongOpt(),    opt);    }    else    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
190	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getAssignedOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)opt.getAssignedOpt();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)opt.getAssignedOpt();	  Option    opt    =(Option)opt.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
191	[BUG]  [BUGGY]  String  key  =  opt.key(),  shortOpts,  longOpts.size();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.key(),  shortOpts,  longOpts.size();  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.key(),  shortOpts,  longOpts.size();	  String    key    =    opt.key(),    shortOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
192	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + ".: ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + ".: ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + ".: ";	  String    key    =    opt.getKey()    +   ":   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
193	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + ": "+key;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + ": "+key;  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + ": "+key;	  String    key    =    opt.getKey()    +   ":   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
194	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + ": "  +  this.shortOpts.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + ": "  +  this.shortOpts.get(key);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + ": "  +  this.shortOpts.get(key);	  String    key    =    opt.getKey()    +   ":   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
195	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getOption();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getOption();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)opt.getOption();	  Option    optionGroups    =(OptionGroup)opt.getShortOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
196	[BUG]  [BUGGY]  Option  opt  =(Option)optionGroups.get(opt.getValue(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)optionGroups.get(opt.getValue(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)optionGroups.get(opt.getValue(),  opt);	  Option    opt    =(Option)optionGroups.get(opt.getValue());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
197	[BUG]  [BUGGY]  Option  opt  =(Option)optGroups.get(opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)optGroups.get(opt.getKey());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)optGroups.get(opt.getKey());	  Option    opt    =(Option)optionGroups.get(opt.getValue());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
198	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt()  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt()	  if(opt.hasKey())    {    if(!longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
199	[BUG]  [BUGGY]  String  shortOpts  =(longOpts  instanceof  String)?(String)longOpts  :(String)opt.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  shortOpts  =(longOpts  instanceof  String)?(String)longOpts  :(String)opt.getValue());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(longOpts  instanceof  String)?(String)longOpts  :(String)opt.getValue());	  String    shortOpts    =(String)opt.getValue(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
200	[BUG]  [BUGGY]  String  shortOpts  =(longOpts  instanceof  String)?(String)longOpts  :(String)opt.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  shortOpts  =(longOpts  instanceof  String)?(String)longOpts  :(String)opt.getValue();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(longOpts  instanceof  String)?(String)longOpts  :(String)opt.getValue();	  String    shortOpts    =(String)opt.getValue(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
201	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  lengthOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =  opt.getOptionGroups(),  lengthOpts);	  Option    optionGroups    =    opt.getOptionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
202	[BUG]  [BUGGY]  Object  shortOpts  =(Object)opt.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Object  shortOpts  =(Object)opt.clone();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Object  shortOpts  =(Object)opt.clone();	  String    shortOpts    =(String)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
203	[BUG]  [BUGGY]  Option  opt  =  getOption(opt,  longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(opt,  longOpts,  shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt,  longOpts,  shortOpts);	  Option    opt    =    getOption(opt,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
204	[BUG]  [BUGGY]  Option  opt  =(Option)requiredOpts.get(opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)requiredOpts.get(opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)requiredOpts.get(opt);	  Option    opt    =(Option)requiredOpts.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
205	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!shortOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(!shortOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!shortOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  opt);  }	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getLongOpt(),    option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
206	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!shortOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(!shortOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  option);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!shortOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getLongOpt(),  option);  }	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getLongOpt(),    option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
207	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getImplicitOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getImplicitOpt();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)opt.getImplicitOpt();	  Option    optionGroups    =(OptionGroup)opt.getImplicitRequired();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
208	[BUG]  [BUGGY]  Options  optionGroups  =(OptionGroup)opt.getImplicitRequired();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Options  optionGroups  =(OptionGroup)opt.getImplicitRequired();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Options  optionGroups  =(OptionGroup)opt.getImplicitRequired();	  Option    optionGroups    =(OptionGroup)opt.getImplicitRequired();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
209	[BUG]  [BUGGY]  String  key  =  option.key();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  option.key();  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  option.key();	  char    key    =    opt.key();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
210	[BUG]  [BUGGY]  Key  key  =  opt.key();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Key  key  =  opt.key();  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Key  key  =  opt.key();	  char    key    =    opt.key();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
211	[BUG]  [BUGGY]  String  keys  =  opt.key();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  keys  =  opt.key();  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  keys  =  opt.key();	  char    key    =    opt.key();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
212	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt  *  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt  *  1);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt  *  1);	  Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
213	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)opt.optionGroups.get(opt  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)opt.optionGroups.get(opt  -  1);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)opt.optionGroups.get(opt  -  1);	  Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
214	[BUG]  [BUGGY]  Character  shortOpts  =(char)opt.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Character  shortOpts  =(char)opt.getValue();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Character  shortOpts  =(char)opt.getValue();	  char    shortOpts    =(char)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
215	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)opt.optionGroups.get(opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)opt.optionGroups.get(opt.getKey());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)opt.optionGroups.get(opt.getKey());	  Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
216	[BUG]  [BUGGY]  String  key  =  this.optionGroups.getKey(opt.getKey(),  opt.isRequired());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  this.optionGroups.getKey(opt.getKey(),  opt.isRequired());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.getKey(opt.getKey(),  opt.isRequired());	  String    key    =    this.optionGroups.getKey(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
217	[BUG]  [BUGGY]  String  key  =  this.optionGroups.getKey(opt.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  this.optionGroups.getKey(opt.getValue());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.getKey(opt.getValue());	  String    key    =    this.optionGroups.getKey(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
218	[BUG]  [BUGGY]  shortOpts  =  opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  shortOpts  =  opt.getLongOpt();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	shortOpts  =  opt.getLongOpt();	  longOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
219	[BUG]  [BUGGY]  String  key  =  Opcodes.getValue(opt.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  Opcodes.getValue(opt.getValue());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  Opcodes.getValue(opt.getValue());	  char    key    =    opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
220	[BUG]  [BUGGY]  String  key  =  Opcodes.getValue(opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  Opcodes.getValue(opt.getKey());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  Opcodes.getValue(opt.getKey());	  char    key    =    opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
221	[BUG]  [BUGGY]  shortOpts.put(opt.getUpperOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  shortOpts.put(opt.getUpperOpt(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	shortOpts.put(opt.getUpperOpt(),  opt);	  shortOpts.put(opt.getLongOpt(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
222	[BUG]  [BUGGY]  Options  optGroups  =  opt.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Options  optGroups  =  opt.getOptionGroups();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Options  optGroups  =  opt.getOptionGroups();	  Option    optGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
223	[BUG]  [BUGGY]  Option  opt  =  getOption(opt,  lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(opt,  lengthOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt,  lengthOpts);	  Option    opt    =    getOption(opt,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
224	[BUG]  [BUGGY]  if(opt.hasRequired())  {  if(!longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.hasRequired())  {  if(!longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasRequired())  {  if(!longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }	  if(opt.hasLongOpt())    {    if(!longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
225	[BUG]  [BUGGY]  Option  opt  =(Option)opt.clone(),  options);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)opt.clone(),  options);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)opt.clone(),  options);	  Option    opt    =(Option)opt.clone(),    optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
226	[BUG]  [BUGGY]  Option  opt  =(Option)optionGroups.get(opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)optionGroups.get(opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)optionGroups.get(opt);	  Option    opt    =(Option)optionGroups.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
227	[BUG]  [BUGGY]  Option  optionGroup  =(OptionGroup)opt.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroup  =(OptionGroup)opt.clone();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroup  =(OptionGroup)opt.clone();	  Option    optionGroups    =(OptionGroup)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
228	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)this.optionGroups.get(opt);	  Option    opt    =(Option)this.optionGroups.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
229	[BUG]  [BUGGY]  String  key  =  this.optionGroups.getValueKey(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  this.optionGroups.getValueKey(option.getKey());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.getValueKey(option.getKey());	  String    key    =    this.optionGroups.getKey(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
230	[BUG]  [BUGGY]  String  key  =  options.getKey(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  options.getKey(option.getKey());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  options.getKey(option.getKey());	  String    key    =    this.optionGroups.getKey(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
231	[BUG]  [BUGGY]  Options  optionGroups  =(OptionGroup)this.optionGroups.get(opt,  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Options  optionGroups  =(OptionGroup)this.optionGroups.get(opt,  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Options  optionGroups  =(OptionGroup)this.optionGroups.get(opt,  opt);	  Options    optionGroups    =(OptionGroup)this.optionGroups.get(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
232	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + "/. ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + "/. ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + "/. ";	  String    key    =    opt.getKey()    +   "/   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
233	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(this,  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(this,  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =  opt.getOptionGroups(this,  opt);	  Option    optionGroups    =    opt.getOptionGroups(this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
234	[BUG]  [BUGGY]  if(opt!=  null)  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getL  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt!=  null)  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getL  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt!=  null)  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.getL	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getL    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
235	[BUG]  [BUGGY]  Option  opt  =  getOptionGroup(opt.getImplicitRequired());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOptionGroup(opt.getImplicitRequired());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOptionGroup(opt.getImplicitRequired());	  Option    opt    =    getOptionGroup(opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
236	[BUG]  [BUGGY]  String  key  =  this.optionGroups.get(opt.getKey(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  this.optionGroups.get(opt.getKey(),  option);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.get(opt.getKey(),  option);	  String    key    =    this.optionGroups.get(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
237	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())&&  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())&&  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLongOpt())&&  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.get    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
238	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.get    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
239	[BUG]  [BUGGY]  if(!longOpts.contains(opt.getLongOpt())&&  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(!longOpts.contains(opt.getLongOpt())&&  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(!longOpts.contains(opt.getLongOpt())&&  longOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.get	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.get    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
240	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.size()  -  1);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.size()  -  1);	  Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
241	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + ",; ";  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + ",; ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + ",; ";	  String    key    =    opt.getValue()    +   ";   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
242	[BUG]  [BUGGY]  Character  shortOpts  =(String)opt.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Character  shortOpts  =(String)opt.getValue();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Character  shortOpts  =(String)opt.getValue();	  char    shortOpts    =(char)opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
243	[BUG]  [BUGGY]  if(opt.hasKey())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.hasKey())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasKey())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.get    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
244	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLongOpt())||  longOpts.contains(opt.getLongOpt()))  {  longOpts.put(opt.get	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.get    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
245	[BUG]  [BUGGY]  if(opt.hasLongOpt())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.hasLongOpt())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasLongOpt())  {  shortOpts.put(opt.getLongOpt(),  opt);  }	  if(opt.isRequired())    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
246	[BUG]  [BUGGY]  if(shortOpts.contains(opt))  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(shortOpts.contains(opt))  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(shortOpts.contains(opt))  {  shortOpts.put(opt.getLongOpt(),  opt);  }	  if(opt.isRequired())    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
247	[BUG]  [BUGGY]  String  key  =  Opcodes.US_ASCII.keySet().iterator().next();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  Opcodes.US_ASCII.keySet().iterator().next();  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  Opcodes.US_ASCII.keySet().iterator().next();	  char    key    =    opt.key();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
248	[BUG]  [BUGGY]  String  key  =  Opcodes.US_ASCII.keyword(opt.key());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  Opcodes.US_ASCII.keyword(opt.key());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  Opcodes.US_ASCII.keyword(opt.key());	  char    key    =    opt.key();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
249	[BUG]  [BUGGY]  String  key  =  Opcodes.US_ASCII.keySet().key();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  Opcodes.US_ASCII.keySet().key();  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  Opcodes.US_ASCII.keySet().key();	  char    key    =    opt.key();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
250	[BUG]  [BUGGY]  String  key  =  opt.key(),  this.shortOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.key(),  this.shortOpts;  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.key(),  this.shortOpts;	  String    key    =    opt.key(),    shortOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
251	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + ", ";  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey()  + ", ";  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey()  + ", ";	  String    key    =    opt.toString()    +   ",   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
252	[BUG]  [BUGGY]  if(!shortOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(!shortOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(!shortOpts.contains(opt.getLongOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }	  if(opt.hasLongOpt())    {    if(!longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
253	[BUG]  [BUGGY]  if(!shortOpts.contains(opt.getShortOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(!shortOpts.contains(opt.getShortOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(!shortOpts.contains(opt.getShortOpt()))  {  shortOpts.put(opt.getLongOpt(),  opt);  }	  if(opt.hasLongOpt())    {    if(!longOpts.contains(opt.getLongOpt()))    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
254	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getKey(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(opt.getKey(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt.getKey(),  opt);	  Option    opt    =    getOption(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
255	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getOpt());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getOpt());	  Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
256	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  shortOpts.contains(opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  ShortOpts  shortOpts  =  shortOpts.contains(opt.getLongOpt());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	ShortOpts  shortOpts  =  shortOpts.contains(opt.getLongOpt());	  ShortOpts    shortOpts    =    longOpts.contains(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
257	[BUG]  [BUGGY]  char  key  =  this.optionGroups.getKey(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  char  key  =  this.optionGroups.getKey(option.getKey());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	char  key  =  this.optionGroups.getKey(option.getKey());	  String    key    =    this.optionGroups.getKey(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
258	[BUG]  [BUGGY]  Key  key  =  this.optionGroups.getKey(opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Key  key  =  this.optionGroups.getKey(opt.getKey());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Key  key  =  this.optionGroups.getKey(opt.getKey());	  String    key    =    this.optionGroups.getKey(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
259	[BUG]  [BUGGY]  Option  opt  =(Option)opt.clone(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)opt.clone(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)opt.clone(),  opt);	  Option    opt    =(Option)opt.clone(),    optionGroups);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
260	[BUG]  [BUGGY]  String  key  =  Opcodes.US_ASCII.getString( "java.util.Locale ");  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  Opcodes.US_ASCII.getString( "java.util.Locale ");  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  Opcodes.US_ASCII.getString( "java.util.Locale ");	  char    key    =    opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
261	[BUG]  [BUGGY]  String  key  =  Opcodes.US_ASCII.getValue(opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  Opcodes.US_ASCII.getValue(opt.getKey());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  Opcodes.US_ASCII.getValue(opt.getKey());	  char    key    =    opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
262	[BUG]  [BUGGY]  String  key  =  Opcodes.US_ASCII.getString( "java.util.Number ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  Opcodes.US_ASCII.getString( "java.util.Number ");  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  Opcodes.US_ASCII.getString( "java.util.Number ");	  char    key    =    opt.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
263	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.clone();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)this.optionGroups.clone();	  Option    optionGroups    =(OptionGroup)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
264	[BUG]  [BUGGY]  String  key  =  opt.key(),  this.shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.key(),  this.shortOpts);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.key(),  this.shortOpts);	  String    key    =    opt.key(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
265	[BUG]  [BUGGY]  String  key  =  opt.key(),  opt.longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.key(),  opt.longOpts);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.key(),  opt.longOpts);	  String    key    =    opt.key(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
266	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getValue(),  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(opt.getValue(),  this);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt.getValue(),  this);	  Option    opt    =    getOption(opt.getValue());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
267	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getValue(),  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(opt.getValue(),  true);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(opt.getValue(),  true);	  Option    opt    =    getOption(opt.getValue());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
268	[BUG]  [BUGGY]  String  shortOpts  =(String)optionGroups.get(key);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  shortOpts  =(String)optionGroups.get(key);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)optionGroups.get(key);	  String    shortOpts    =(String)optionGroups.getValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
269	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  longOpts.get(opt.getShortOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  ShortOpts  shortOpts  =  longOpts.get(opt.getShortOpt());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	ShortOpts  shortOpts  =  longOpts.get(opt.getShortOpt());	  ShortOpts    shortOpts    =    longOpts.get(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
270	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  shortOpts.get(opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  ShortOpts  shortOpts  =  shortOpts.get(opt.getLongOpt());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	ShortOpts  shortOpts  =  shortOpts.get(opt.getLongOpt());	  ShortOpts    shortOpts    =    longOpts.get(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
271	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getImplicitRequired(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)opt.getImplicitRequired(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)opt.getImplicitRequired(),  opt);	  Option    optionGroups    =(OptionGroup)opt.getImplicitRequired();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
272	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getKey(),  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getKey(),  this);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)this.optionGroups.get(opt.getKey(),  this);	  Option    opt    =(Option)this.optionGroups.get(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
273	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  shortOpts  =  opt.getLongOpt();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  shortOpts  =  opt.getLongOpt();	  if(opt.hasOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
274	[BUG]  [BUGGY]  Options  optionGroups  =  opt.getOptionGroups(this);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Options  optionGroups  =  opt.getOptionGroups(this);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Options  optionGroups  =  opt.getOptionGroups(this);	  Options    optionGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
275	[BUG]  [BUGGY]  if(opt.isRequired()  ||  opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired()  ||  opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired()  ||  opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }	  if(opt.isRequired())    {    longOpts.put(opt.getLongOpt(),    option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
276	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey(),  opt  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey(),  opt  +  1);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)this.optionGroups.get(opt.getKey(),  opt  +  1);	  Option    optionGroups    =(OptionGroup)this.optionGroups.get(opt    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
277	[BUG]  [BUGGY]  Option  optGroups  =  option.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optGroups  =  option.getOptionGroups();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optGroups  =  option.getOptionGroups();	  Option    optGroups    =    opt.getOptionGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
278	[BUG]  [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getImplicitRequired());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)this.optionGroups.get(opt.getImplicitRequired());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)this.optionGroups.get(opt.getImplicitRequired());	  Option    opt    =(Option)this.optionGroups.get(opt.getOption());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
279	[BUG]  [BUGGY]  String  key  =  opt.getKey(),  optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey(),  optionGroups);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey(),  optionGroups);	  String    key    =    option.getKey(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
280	[BUG]  [BUGGY]  char  key  =  this.optionGroups.get(opt.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  char  key  =  this.optionGroups.get(opt.getKey());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	char  key  =  this.optionGroups.get(opt.getKey());	  String    key    =    this.optionGroups.get(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
281	[BUG]  [BUGGY]  String  key  =  this.optionGroups.get(opt.getKey(),  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  this.optionGroups.get(opt.getKey(),  true);  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.get(opt.getKey(),  true);	  String    key    =    this.optionGroups.get(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
282	[BUG]  [BUGGY]  Option  opt  =(Option)this.requiredOpts.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =(Option)this.requiredOpts.clone();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =(Option)this.requiredOpts.clone();	  Option    opt    =(Option)requiredOpts.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
283	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(opt.hasOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }	  if(opt.hasOpt())    {    longOpts.put(opt.getLongOpt(),    opt);    }    else    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
284	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.hasOpt())  {  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasOpt())  {  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  longOpts.put(opt.getLongOpt(),  opt);  }	  if(opt.isRequired())    {    shortOpts.put(opt.getLongOpt(),    opt);    }    else    {    longOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
285	[BUG]  [BUGGY]  Option  opt  =  opt.keySet().iterator().next();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  opt.keySet().iterator().next();  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  opt.keySet().iterator().next();	  String    key    =    opt.keySet().iterator().next();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
286	[BUG]  [BUGGY]  Option  opt  =  getOption(key,  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(key,  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(key,  opt);	  Option    opt    =    getOption(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
287	[BUG]  [BUGGY]  Option  opt  =  getOption(key.toLowerCase());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(key.toLowerCase());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(key.toLowerCase());	  Option    opt    =    getOption(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
288	[BUG]  [BUGGY]  Option  opt  =  getOption(key,  opt.optionGroups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(key,  opt.optionGroups);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(key,  opt.optionGroups);	  Option    opt    =    getOption(key);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
289	[BUG]  [BUGGY]  String  key  =  this.optionGroups.getKey(opt.getKey(),  opt.getValue());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  this.optionGroups.getKey(opt.getKey(),  opt.getValue());  [BUGGY]        if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  this.optionGroups.getKey(opt.getKey(),  opt.getValue());	  String    key    =    this.optionGroups.getKey(opt.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
290	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLocation())||  longOpts.contains(opt.getLocation()))  {  longOpts.put(opt.get  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLocation())||  longOpts.contains(opt.getLocation()))  {  longOpts.put(opt.get  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLocation())||  longOpts.contains(opt.getLocation()))  {  longOpts.put(opt.get	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getL    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
291	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLOpt())||  longOpts.contains(opt.getLOpt()))  {  longOpts.put(opt.get  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLOpt())||  longOpts.contains(opt.getLOpt()))  {  longOpts.put(opt.get  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLOpt())||  longOpts.contains(opt.getLOpt()))  {  longOpts.put(opt.get	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getL    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
292	[BUG]  [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLocalOpt())||  longOpts.contains(opt.getLocalOpt()))  {  longOpts.put(opt.  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.isRequired())  {  if(!longOpts.contains(opt.getLocalOpt())||  longOpts.contains(opt.getLocalOpt()))  {  longOpts.put(opt.  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.isRequired())  {  if(!longOpts.contains(opt.getLocalOpt())||  longOpts.contains(opt.getLocalOpt()))  {  longOpts.put(opt.	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getL    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
293	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLOpt())||  longOpts.contains(opt.getLopt()))  {  longOpts.put(opt.get  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLOpt())||  longOpts.contains(opt.getLopt()))  {  longOpts.put(opt.get  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasOpt())  {  if(!longOpts.contains(opt.getLOpt())||  longOpts.contains(opt.getLopt()))  {  longOpts.put(opt.get	  if(opt.isRequired())    {    if(!longOpts.contains(opt.getLongOpt())||    longOpts.contains(opt.getLongOpt()))    {    longOpts.put(opt.getL    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
294	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  this.longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =  opt.getOptionGroups(),  this.longOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =  opt.getOptionGroups(),  this.longOpts);	  Option    optionGroups    =    opt.getOptionGroups(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
295	[BUG]  [BUGGY]  Option  opt  =  getOption(shortOpts,  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  opt  =  getOption(shortOpts,  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  opt  =  getOption(shortOpts,  opt);	  Option    opt    =    getOption(opt,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
296	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.hasOpt())  {  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasOpt())  {  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }	  if(opt.isRequired())    {    shortOpts.put(opt.getLongOpt(),    opt);    }    else    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
297	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.hasOpt())  {  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasOpt())  {  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }	  if(opt.isRequired())    {    shortOpts.put(opt.getLongOpt(),    opt);    }    else    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
298	[BUG]  [BUGGY]  if(opt.hasOpt())  {  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt()  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  if(opt.hasOpt())  {  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt()  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	if(opt.hasOpt())  {  if(opt.isRequired())  {  shortOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt()	  if(opt.isRequired())    {    shortOpts.put(opt.getLongOpt(),    opt);    }    else    {    shortOpts.put(opt.getLongOpt(),    opt);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
299	[BUG]  [BUGGY]  String  shortOpts  =(String)opt.getValue(),  opt.getShortOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  shortOpts  =(String)opt.getValue(),  opt.getShortOpt());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  shortOpts  =(String)opt.getValue(),  opt.getShortOpt());	  String    shortOpts    =(String)opt.getValue(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
300	[BUG]  [BUGGY]  String  key  =  opt.getKey(),  this.shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  String  key  =  opt.getKey(),  this.shortOpts);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	String  key  =  opt.getKey(),  this.shortOpts);	  String    key    =    opt.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
301	[BUG]  [BUGGY]  Option  shortOpts  =  longOpts.get(opt.getLongOpt());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  shortOpts  =  longOpts.get(opt.getLongOpt());  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  shortOpts  =  longOpts.get(opt.getLongOpt());	  Option    shortOpts    =    optionGroups.get(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
302	[BUG]  [BUGGY]  Option  shortOpts  =  options.get(opt.getLongOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  shortOpts  =  options.get(opt.getLongOpt(),  opt);  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  shortOpts  =  options.get(opt.getLongOpt(),  opt);	  Option    shortOpts    =    optionGroups.get(opt.getLongOpt());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
303	[BUG]  [BUGGY]  Option  optionGroups  =(OptionGroup)option.getOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  Options  addOption(Option  opt)  {      [BUGGY]  Option  optionGroups  =(OptionGroup)option.getOpt();  [BUGGY]      String  key  =  opt.getKey();  if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	154	154	1	replace	Option  optionGroups  =(OptionGroup)option.getOpt();	  Option    optionGroups    =(OptionGroup)opt.getOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
