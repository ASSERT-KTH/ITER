bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  group.addOption(option,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.addOption(option,  shortOpts);  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.addOption(option,  shortOpts);	      group.addOption(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
2	[BUG]  [BUGGY]  group.addOption(option,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.addOption(option,  requiredOpts);  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.addOption(option,  requiredOpts);	      group.addOption(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
3	[BUG]  [BUGGY]  group.addOption(option,  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.addOption(option,  this);  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.addOption(option,  this);	      group.addOption(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
4	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	      if(group.getShortOpts()    ==    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
5	[BUG]  [BUGGY]  group.getShortOpts()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getShortOpts()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getShortOpts()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	      if(group.getShortOpts()    ==    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
6	[BUG]  [BUGGY]  group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	      if(group.getShortOpts()    ==    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
7	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  for(Option  option  :  shortOpts)  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  for(Option  option  :  shortOpts)  {  option.setRequired(false);  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  shortOpts  =  group.getShortOpts();  for(Option  option  :  shortOpts)  {  option.setRequired(false);  addOption(option);  }	      if(group.getShortOpts()    ==    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
8	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }	      if(group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
9	[BUG]  [BUGGY]  group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }	      if(group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
10	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
11	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOption(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
12	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  optionGroups.put(option.getKey(),  group,  shortOpts);  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  group,  shortOpts);	      optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
13	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
14	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
15	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
16	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
17	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  shortOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  shortOpts));  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  new  OptionGroup(group,  shortOpts));	  optionGroups.put(option.getKey(),    new    OptionGroup(group));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
18	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  new  OptionGroup(option));  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  optionGroups.put(group.getKey(),  new  OptionGroup(option));  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getKey(),  new  OptionGroup(option));	  optionGroups.put(option.getKey(),    new    OptionGroup(group));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
19	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group),  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  new  OptionGroup(group),  shortOpts);	  optionGroups.put(option.getKey(),    new    OptionGroup(group));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
20	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  OptionGroup  group  =  option.getOptionGroups();  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroups();	      OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
21	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  options.getOptionGroup();	      OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
22	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  optionGroups.put(group.getKey(),  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getKey(),  shortOpts);	  optionGroups.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
23	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  optionGroups.put(option.getKey(),  shortOpts,  longOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  shortOpts,  longOpts);	  optionGroups.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
24	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  shortOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  optionGroups.put(option.getKey(),  shortOpts,  group);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  shortOpts,  group);	  optionGroups.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
25	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
26	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
27	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
28	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOptionGroup(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOptionGroup(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
29	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  OptionGroup  group  =  option.getGroups();  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroups();	      OptionGroup    group    =    option.getGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
30	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  OptionGroup  group  =  option.getGroup(),  shortOpts);  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(),  shortOpts);	      OptionGroup    group    =    option.getGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
31	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(),  shortOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  OptionGroup  group  =  option.getGroup(),  shortOpts;  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(),  shortOpts;	      OptionGroup    group    =    option.getGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
32	[BUG]  [BUGGY]  optionGroups.put(group.getName(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  optionGroups.put(group.getName(),  option);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getName(),  option);	  optionGroups.put(option.getName(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
33	[BUG]  [BUGGY]  optionGroups.put(option.getName(),  group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  optionGroups.put(option.getName(),  group,  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getName(),  group,  shortOpts);	  optionGroups.put(option.getName(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
34	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
35	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
36	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
37	[BUG]  [BUGGY]  group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	      if(group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
38	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  for(Option  option  :  shortOpts)  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  for(Option  option  :  shortOpts)  {  option.setRequired(false);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  shortOpts  =  group.getShortOpts();  for(Option  option  :  shortOpts)  {  option.setRequired(false);  }	      if(group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
39	[BUG]  [BUGGY]  group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }	      if(group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
40	[BUG]  [BUGGY]  optionGroups.put(group.getValue(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  optionGroups.put(group.getValue(),  option);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getValue(),  option);	  optionGroups.put(option.getValue(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
41	[BUG]  [BUGGY]  optionGroups.put(option.getValue(),  group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  optionGroups.put(option.getValue(),  group,  shortOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getValue(),  group,  shortOpts);	  optionGroups.put(option.getValue(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
42	[BUG]  [BUGGY]  options.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  options.put(option.getKey(),  group);  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	options.put(option.getKey(),  group);	      optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
43	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  group  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  optionGroups.put(option.getKey(),  group  +  1);  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  group  +  1);	      optionGroups.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
44	[BUG]  [BUGGY]  OptionGroup  group  =  option.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  OptionGroup  group  =  option.getShortOpts();  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getShortOpts();	      OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
45	[BUG]  [BUGGY]  options.put(option.getName(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  options.put(option.getName(),  group);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	options.put(option.getName(),  group);	  optionGroups.put(option.getName(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
46	[BUG]  [BUGGY]  optionGroups.put(option.getName(),  group  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  optionGroups.put(option.getName(),  group  +  1);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getName(),  group  +  1);	  optionGroups.put(option.getName(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
47	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOptionGroup(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOptionGroup(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
48	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOptionGroup(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOptionGroup(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
49	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOption(option);  }	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
50	[BUG]  [BUGGY]  group.getShortOpts()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getShortOpts()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getShortOpts()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }	      if(group.getShortOpts()    ==    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
51	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts();  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  shortOpts  =  group.getShortOpts();	      if(group.getShortOpts()    ==    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
52	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  false));  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  false));  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  new  OptionGroup(group,  false));	  optionGroups.put(option.getKey(),    new    OptionGroup(group));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
53	[BUG]  [BUGGY]  group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }	      if(group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
54	[BUG]  [BUGGY]  OptionGroup  longOpts  =  group.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  OptionGroup  longOpts  =  group.getShortOpts();  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  longOpts  =  group.getShortOpts();	      if(group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
55	[BUG]  [BUGGY]  group.addOption(option,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  group.addOption(option,  group);  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.addOption(option,  group);	      group.addOption(option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
56	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  OptionGroup  group  =  option.getGroup(requiredOpts);  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(requiredOpts);	      OptionGroup    group    =    option.getGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
57	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  OptionGroup  group  =  option.getGroup(option.getKey());  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(option.getKey());	      OptionGroup    group    =    option.getGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
58	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  optionGroups.put(option.getKey(),  longOpts);  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  longOpts);	  optionGroups.put(option.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
59	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group);  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(group);	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
60	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group.getKey());  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(group.getKey());	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
61	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  requiredOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  requiredOpts));  [BUGGY]    }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  new  OptionGroup(group,  requiredOpts));	  optionGroups.put(option.getKey(),    new    OptionGroup(group));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
62	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptions();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  OptionGroup  group  =  option.getOptions();  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptions();	      if(group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
63	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option.getKey());  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(option.getKey());	      OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
64	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);    [BUGGY]  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]    optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }	      if(group.getShortOpts()    ==    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
