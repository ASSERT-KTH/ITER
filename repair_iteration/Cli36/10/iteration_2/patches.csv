bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  group.addOption(option,  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.addOption(option,  shortOpts,  longOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.addOption(option,  shortOpts,  longOpts);	  group.addOption(option,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
2	[BUG]  [BUGGY]  group.addOption(longOpts,  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.addOption(longOpts,  option);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.addOption(longOpts,  option);	  group.addOption(option,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
3	[BUG]  [BUGGY]  group.addOption(option,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.addOption(option,  longOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.addOption(option,  longOpts);	  group.addOption(option,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
4	[BUG]  [BUGGY]  group.addOption(longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.addOption(longOpts,  shortOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.addOption(longOpts,  shortOpts);	  group.addOption(option,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
5	[BUG]  [BUGGY]  group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
6	[BUG]  [BUGGY]  group.getOptionGroups()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptionGroups()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptionGroups()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
7	[BUG]  [BUGGY]  options.put(option.getKey(),  group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  options.put(option.getKey(),  group,  shortOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	options.put(option.getKey(),  group,  shortOpts);	  options.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
8	[BUG]  [BUGGY]  OptionGroup  longOpts  =  group.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  longOpts  =  group.getLongOpts();  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  longOpts  =  group.getLongOpts();	  OptionGroup    longOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
9	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  shortOpts  =  group.getLongOpts();  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  shortOpts  =  group.getLongOpts();	  OptionGroup    longOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
10	[BUG]  [BUGGY]  group.addOption(this,  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.addOption(this,  option);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.addOption(this,  option);	  group.addOption(option,    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
11	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(longOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(longOpts);	  OptionGroup    group    =    option.getGroup(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
12	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(requiredOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(requiredOpts,  shortOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(requiredOpts,  shortOpts);	  OptionGroup    group    =    option.getGroup(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
13	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(requiredOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(requiredOpts,  longOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(requiredOpts,  longOpts);	  OptionGroup    group    =    option.getGroup(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
14	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(shortOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(shortOpts);	  OptionGroup    group    =    option.getGroup(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
15	[BUG]  [BUGGY]  for(Option  option  :  group.getOpts())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  for(Option  option  :  group.getOpts())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  group.getOpts())  {  option.setRequired(false);  addOption(option);  }	  for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
16	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group.getKey(),  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group.getKey(),  false);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(group.getKey(),  false);	  OptionGroup    group    =    option.getOptionGroup(group.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
17	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group.getKey(),  shortOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(group.getKey(),  shortOpts);	  OptionGroup    group    =    option.getOptionGroup(group.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
18	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group.getKey(),  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group.getKey(),  this);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(group.getKey(),  this);	  OptionGroup    group    =    option.getOptionGroup(group.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
19	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  shortOpts,  group,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  shortOpts,  group,  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  shortOpts,  group,  longOpts);	  optionGroups.put(option.getKey(),    shortOpts,    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
20	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  shortOpts,  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(group.getKey(),  shortOpts,  option);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getKey(),  shortOpts,  option);	  optionGroups.put(option.getKey(),    shortOpts,    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
21	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  new  OptionGroup(option,  shortOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(group.getKey(),  new  OptionGroup(option,  shortOpts));  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getKey(),  new  OptionGroup(option,  shortOpts));	  optionGroups.put(group.getKey(),    new    OptionGroup(option));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
22	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  new  OptionGroup(option),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(group.getKey(),  new  OptionGroup(option),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getKey(),  new  OptionGroup(option),  shortOpts);	  optionGroups.put(group.getKey(),    new    OptionGroup(option));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
23	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  shortOpts  =  group.getShortOpts(),  longOpts);	  OptionGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
24	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  shortOpts  =  option.getShortOpts();	  OptionGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
25	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(option.getKey(),  shortOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(option.getKey(),  shortOpts);	  OptionGroup    group    =    option.getGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
26	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(option.getKey(),  group);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(option.getKey(),  group);	  OptionGroup    group    =    option.getGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
27	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(option.getShortOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(option.getShortOpts());  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(option.getShortOpts());	  OptionGroup    group    =    option.getGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
28	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  for(Option  option  :  shortOpts)  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  for(Option  option  :  shortOpts)  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  shortOpts  =  option.getShortOpts();  for(Option  option  :  shortOpts)  {  option.setRequired(false);  addOption(option);  }	  OptionGroup    shortOpts    =    group.getShortOpts();    for(Option    option    :    shortOpts)    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
29	[BUG]  [BUGGY]  for(Option  option  :  longOpts)  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  for(Option  option  :  longOpts)  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  longOpts)  {  option.setRequired(false);  addOption(option);  }	  OptionGroup    shortOpts    =    group.getShortOpts();    for(Option    option    :    shortOpts)    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
30	[BUG]  [BUGGY]  group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(true);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
31	[BUG]  [BUGGY]  optionGroups.put(option.getName(),  group,  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getName(),  group,  shortOpts,  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getName(),  group,  shortOpts,  longOpts);	  optionGroups.put(option.getName(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
32	[BUG]  [BUGGY]  optionGroups.put(option.getName(),  group,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getName(),  group,  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getName(),  group,  longOpts);	  optionGroups.put(option.getName(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
33	[BUG]  [BUGGY]  optionGroups.put(group.getName(),  option,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(group.getName(),  option,  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getName(),  option,  shortOpts);	  optionGroups.put(option.getName(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
34	[BUG]  [BUGGY]  optionGroups.put(option.getName(),  shortOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getName(),  shortOpts,  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getName(),  shortOpts,  group);	  optionGroups.put(option.getName(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
35	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }	  group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
36	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }	  group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
37	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }	  group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
38	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  group,  shortOpts  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  group,  shortOpts  +  1);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  group,  shortOpts  +  1);	  optionGroups.put(option.getKey(),    group    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
39	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  shortOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(group,  shortOpts);	  OptionGroup    group    =    option.getOptionGroup(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
40	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  false);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(group,  false);	  OptionGroup    group    =    option.getOptionGroup(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
41	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group,  0);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(group,  0);	  OptionGroup    group    =    option.getOptionGroup(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
42	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  group,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  group,  longOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  group,  longOpts);	  optionGroups.put(option.getKey(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
43	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  group,  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  group,  shortOpts,  longOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  group,  shortOpts,  longOpts);	  optionGroups.put(option.getKey(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
44	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(group.getKey(),  shortOpts,  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getKey(),  shortOpts,  longOpts);	  optionGroups.put(group.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
45	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(group.getKey(),  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getKey(),  longOpts);	  optionGroups.put(group.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
46	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(group.getKey(),  requiredOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getKey(),  requiredOpts);	  optionGroups.put(group.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
47	[BUG]  [BUGGY]  group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getShortOpts()    ==    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
48	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  true));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  true));  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  new  OptionGroup(group,  true));	  optionGroups.put(option.getKey(),    new    OptionGroup(group,    false));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
49	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  new  OptionGroup(option,  false));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(group.getKey(),  new  OptionGroup(option,  false));  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getKey(),  new  OptionGroup(option,  false));	  optionGroups.put(option.getKey(),    new    OptionGroup(group,    false));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
50	[BUG]  [BUGGY]  group.addOption(this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.addOption(this);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.addOption(this);	  group.addOption(option,    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
51	[BUG]  [BUGGY]  group.addOption(option,  this,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.addOption(option,  this,  shortOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.addOption(option,  this,  shortOpts);	  group.addOption(option,    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
52	[BUG]  [BUGGY]  group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
53	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(),  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(),  longOpts;  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(),  longOpts;	  OptionGroup    group    =    option.getGroup(),    shortOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
54	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(),  shortOpts,  longOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(),  shortOpts,  longOpts);	  OptionGroup    group    =    option.getGroup(),    shortOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
55	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(),  shortOpts,  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(),  shortOpts,  longOpts;  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(),  shortOpts,  longOpts;	  OptionGroup    group    =    option.getGroup(),    shortOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
56	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(),  shortOpts,  this.longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(),  shortOpts,  this.longOpts;  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(),  shortOpts,  this.longOpts;	  OptionGroup    group    =    option.getGroup(),    shortOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
57	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }	  for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
58	[BUG]  [BUGGY]  for(Option  group  :  option.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  for(Option  group  :  option.getOptions())  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  group  :  option.getOptions())  {  option.setRequired(false);  }	  for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
59	[BUG]  [BUGGY]  for(Option  option  :  this.groups.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  for(Option  option  :  this.groups.getOptions())  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  this.groups.getOptions())  {  option.setRequired(false);  }	  for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
60	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(),  longOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(),  longOpts);	  OptionGroup    group    =    option.getGroup(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
61	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(),  shortOpts,  lengthOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(),  shortOpts,  lengthOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(),  shortOpts,  lengthOpts);	  OptionGroup    group    =    option.getGroup(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
62	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(),  shortOpts,  langOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(),  shortOpts,  langOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(),  shortOpts,  langOpts);	  OptionGroup    group    =    option.getGroup(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
63	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  new  OptionGroup(option,  requiredOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(group.getKey(),  new  OptionGroup(option,  requiredOpts));  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getKey(),  new  OptionGroup(option,  requiredOpts));	  optionGroups.put(option.getKey(),    new    OptionGroup(group,    requiredOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
64	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(requiredOpts,  group));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(requiredOpts,  group));  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  new  OptionGroup(requiredOpts,  group));	  optionGroups.put(option.getKey(),    new    OptionGroup(group,    requiredOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
65	[BUG]  [BUGGY]  for(Option  option  :  this.longOpts.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  for(Option  option  :  this.longOpts.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  this.longOpts.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }	  for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
66	[BUG]  [BUGGY]  group.getShortOpts()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getShortOpts()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getShortOpts()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	  group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
67	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  longOpts),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  longOpts),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  new  OptionGroup(group,  longOpts),  shortOpts);	  optionGroups.put(option.getKey(),    new    OptionGroup(group),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
68	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  longOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  longOpts));  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  new  OptionGroup(group,  longOpts));	  optionGroups.put(option.getKey(),    new    OptionGroup(group),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
69	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroups(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroups(),  shortOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroups(),  shortOpts);	  OptionGroup    group    =    option.getGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
70	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroups(requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroups(requiredOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroups(requiredOpts);	  OptionGroup    group    =    option.getGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
71	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroups(),  shortOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroups(),  shortOpts;  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroups(),  shortOpts;	  OptionGroup    group    =    option.getGroups();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
72	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  options.getGroup();  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  options.getGroup();	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
73	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  options.getOptionGroup(option);	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
74	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  for(Option  option  :  shortOpts)  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  for(Option  option  :  shortOpts)  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  shortOpts  =  option.getShortOpts();  for(Option  option  :  shortOpts)  {  option.setRequired(false);  }	  OptionGroup    shortOpts    =    group.getShortOpts();    for(Option    option    :    shortOpts)    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
75	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  for(Option  shortOpt  :  shortOpts)  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  shortOpts  =  option.getShortOpts();  for(Option  shortOpt  :  shortOpts)  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  shortOpts  =  option.getShortOpts();  for(Option  shortOpt  :  shortOpts)  {  option.setRequired(false);  }	  OptionGroup    shortOpts    =    group.getShortOpts();    for(Option    option    :    shortOpts)    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
76	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  shortOpts,  longOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  shortOpts,  longOpts));  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  new  OptionGroup(group,  shortOpts,  longOpts));	  optionGroups.put(option.getKey(),    new    OptionGroup(group,    shortOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
77	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(longOpts,  group));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(longOpts,  group));  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  new  OptionGroup(longOpts,  group));	  optionGroups.put(option.getKey(),    new    OptionGroup(group,    shortOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
78	[BUG]  [BUGGY]  group.addOption(requiredOpts,  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.addOption(requiredOpts,  option);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.addOption(requiredOpts,  option);	  group.addOption(option,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
79	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  group.addOption(option,  requiredOpts);  }  else  {  shortOpts.put(option.getKey(),  shortOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  if(requiredOpts!=  null)  {  group.addOption(option,  requiredOpts);  }  else  {  shortOpts.put(option.getKey(),  shortOpts);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	if(requiredOpts!=  null)  {  group.addOption(option,  requiredOpts);  }  else  {  shortOpts.put(option.getKey(),  shortOpts);  }	  group.addOption(option,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
80	[BUG]  [BUGGY]  if(requiredOpts!=  null)  {  group.addOption(option,  requiredOpts);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  if(requiredOpts!=  null)  {  group.addOption(option,  requiredOpts);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	if(requiredOpts!=  null)  {  group.addOption(option,  requiredOpts);  }	  group.addOption(option,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
81	[BUG]  [BUGGY]  optionGroups.put(option.getName(),  group,  shortOpts  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getName(),  group,  shortOpts  +  1);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getName(),  group,  shortOpts  +  1);	  optionGroups.put(option.getName(),    group    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
82	[BUG]  [BUGGY]  optionGroups.put(group.getName(),  group  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(group.getName(),  group  +  1);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getName(),  group  +  1);	  optionGroups.put(option.getName(),    group    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
83	[BUG]  [BUGGY]  OptionGroup  group  =  option.getShortOpts(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getShortOpts(),  shortOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getShortOpts(),  shortOpts);	  OptionGroup    group    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
84	[BUG]  [BUGGY]  OptionGroup  group  =  option.getShortOpts(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getShortOpts(),  longOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getShortOpts(),  longOpts);	  OptionGroup    group    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
85	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option.getKey(),  shortOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(option.getKey(),  shortOpts);	  OptionGroup    group    =    option.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
86	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option.getKey(),  group);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(option.getKey(),  group);	  OptionGroup    group    =    option.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
87	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option.getShortOpts());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option.getShortOpts());  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(option.getShortOpts());	  OptionGroup    group    =    option.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
88	[BUG]  [BUGGY]  options.put(group.getName(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  options.put(group.getName(),  option);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	options.put(group.getName(),  option);	  options.put(option.getName(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
89	[BUG]  [BUGGY]  options.put(option.getName(),  group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  options.put(option.getName(),  group,  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	options.put(option.getName(),  group,  shortOpts);	  options.put(option.getName(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
90	[BUG]  [BUGGY]  options.put(option.getName(),  group,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  options.put(option.getName(),  group,  requiredOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	options.put(option.getName(),  group,  requiredOpts);	  options.put(option.getName(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
91	[BUG]  [BUGGY]  group.getShortOpts()  ==  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getShortOpts()  ==  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getShortOpts()  ==  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }	  group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
92	[BUG]  [BUGGY]  group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getShortOpts()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOption(option);  }	  group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
93	[BUG]  [BUGGY]  group.getShortOpts()!=  null)  {  for(Option  option  :  group.getGroups())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getShortOpts()!=  null)  {  for(Option  option  :  group.getGroups())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getShortOpts()!=  null)  {  for(Option  option  :  group.getGroups())  {  option.setRequired(false);  addOption(option);  }	  group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
94	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	  group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
95	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	  group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
96	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	  group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
97	[BUG]  [BUGGY]  for(Option  option  :  this.groups.getOptions())  {  option.setRequired(true);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  for(Option  option  :  this.groups.getOptions())  {  option.setRequired(true);  addOptionGroup(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  this.groups.getOptions())  {  option.setRequired(true);  addOptionGroup(option);  }	  for(Option    option    :    group.getOptions())    {    option.setRequired(true);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
98	[BUG]  [BUGGY]  group.getKey()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getKey()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getKey()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
99	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  ==  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
100	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  >  1)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
101	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  >=  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
102	[BUG]  [BUGGY]  optionGroups.put(option.getValue(),  group,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getValue(),  group,  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getValue(),  group,  longOpts);	  optionGroups.put(option.getValue(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
103	[BUG]  [BUGGY]  optionGroups.put(option.getValue(),  group,  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getValue(),  group,  shortOpts,  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getValue(),  group,  shortOpts,  longOpts);	  optionGroups.put(option.getValue(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
104	[BUG]  [BUGGY]  optionGroups.put(option.getValue(),  shortOpts,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getValue(),  shortOpts,  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getValue(),  shortOpts,  group);	  optionGroups.put(option.getValue(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
105	[BUG]  [BUGGY]  optionGroups.put(group.getValue(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(group.getValue(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getValue(),  shortOpts);	  optionGroups.put(option.getValue(),    group,    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
106	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOptionGroup(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  group.getOptionGroups())  {  option.setRequired(true);  addOptionGroup(option);  }	  for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
107	[BUG]  [BUGGY]  group.getShortOpts()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getShortOpts()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getShortOpts()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }	  group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(true);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
108	[BUG]  [BUGGY]  for(Option  option  :  this.groups.getOptions())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  for(Option  option  :  this.groups.getOptions())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  this.groups.getOptions())  {  option.setRequired(true);  addOption(option);  }	  for(Option    option    :    group.getOptions())    {    option.setRequired(true);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
109	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option.getKey(),  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option.getKey(),  this);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(option.getKey(),  this);	  OptionGroup    group    =    option.getOptionGroup(group.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
110	[BUG]  [BUGGY]  group.addOption(opt,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.addOption(opt,  requiredOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.addOption(opt,  requiredOpts);	  group.addOption(option,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
111	[BUG]  [BUGGY]  OptionGroup  group  =  option.getLongOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getLongOpts();  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getLongOpts();	  OptionGroup    group    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
112	[BUG]  [BUGGY]  OptionGroup  group  =  option.getShortOpts(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getShortOpts(longOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getShortOpts(longOpts);	  OptionGroup    group    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
113	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(true);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
114	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option.getKey());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option.getKey());  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  options.getOptionGroup(option.getKey());	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
115	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option.getKey(),  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option.getKey(),  false);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(option.getKey(),  false);	  OptionGroup    group    =    option.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
116	[BUG]  [BUGGY]  optionGroups.put(option.getName(),  group  +  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getName(),  group  +  2);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getName(),  group  +  2);	  optionGroups.put(option.getName(),    group    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
117	[BUG]  [BUGGY]  OptionGroup  longOpts  =  group.getShortOpts();  for(Option  option  :  longOpts)  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  longOpts  =  group.getShortOpts();  for(Option  option  :  longOpts)  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  longOpts  =  group.getShortOpts();  for(Option  option  :  longOpts)  {  option.setRequired(false);  addOption(option);  }	  OptionGroup    shortOpts    =    group.getShortOpts();    for(Option    option    :    shortOpts)    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
118	[BUG]  [BUGGY]  group.getKey()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getKey()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getKey()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOption(option);  }	  group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(true);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
119	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  options.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  for(Option  option  :  group.getOptions())  {  options.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  group.getOptions())  {  options.setRequired(false);  addOption(option);  }	  for(Option    option    :    group.getOptions())    {    option.setRequired(true);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
120	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  options.getOptions())  {  option.setRequired(false);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
121	[BUG]  [BUGGY]  group.getOptionGroups()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptionGroups()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptionGroups()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(true);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
122	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  options.setRequired(false);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  for(Option  option  :  group.getOptions())  {  options.setRequired(false);  addOptionGroup(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  group.getOptions())  {  options.setRequired(false);  addOptionGroup(option);  }	  for(Option    option    :    group.getOptions())    {    option.setRequired(true);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
123	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  longOpts,  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  longOpts,  shortOpts);	  optionGroups.put(option.getKey(),    shortOpts,    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
124	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group),  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  new  OptionGroup(group),  longOpts);	  optionGroups.put(option.getKey(),    new    OptionGroup(group),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
125	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group),  shortOpts,  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group),  shortOpts,  longOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  new  OptionGroup(group),  shortOpts,  longOpts);	  optionGroups.put(option.getKey(),    new    OptionGroup(group),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
126	[BUG]  [BUGGY]  options.put(option.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  options.put(option.getKey(),  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	options.put(option.getKey(),  shortOpts);	  optionGroups.put(option.getKey(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
127	[BUG]  [BUGGY]  group.getKey()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getKey()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getKey()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }	  group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
128	[BUG]  [BUGGY]  group.getOpts()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOpts()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOpts()!=  null)  {  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }	  group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
129	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  option);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  option);	  optionGroups.put(group.getValue(),    option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
130	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(option);	  OptionGroup    group    =    option.getOptionGroup(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
131	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(groups);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(groups);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(groups);	  OptionGroup    group    =    option.getOptionGroup(group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
132	[BUG]  [BUGGY]  optionGroups.put(option.getName(),  option);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getName(),  option);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getName(),  option);	  optionGroups.put(group.getName(),    option);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
133	[BUG]  [BUGGY]  option.put(option.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  option.put(option.getKey(),  group);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	option.put(option.getKey(),  group);	  options.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
134	[BUG]  [BUGGY]  options.put(option.getKey(),  group,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  options.put(option.getKey(),  group,  requiredOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	options.put(option.getKey(),  group,  requiredOpts);	  options.put(option.getKey(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
135	[BUG]  [BUGGY]  option.put(option.getName(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  option.put(option.getName(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	option.put(option.getName(),  group);	  options.put(option.getName(),    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
136	[BUG]  [BUGGY]  OptionGroup  longOpts  =  group.getShortOpts();  for(Option  option  :  longOpts)  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  longOpts  =  group.getShortOpts();  for(Option  option  :  longOpts)  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  longOpts  =  group.getShortOpts();  for(Option  option  :  longOpts)  {  option.setRequired(false);  }	  OptionGroup    shortOpts    =    group.getShortOpts();    for(Option    option    :    shortOpts)    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
137	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().size()  >  0)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);	  group.getOptions()!=    null    &&    group.getOptions().size()    >    0)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
138	[BUG]  [BUGGY]  group.getOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	  group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(true);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
139	[BUG]  [BUGGY]  group.getKey()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getKey()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getKey()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getShortOpts()    ==    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
140	[BUG]  [BUGGY]  group.getOpts()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOpts()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOpts()  ==  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getShortOpts()    ==    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
141	[BUG]  [BUGGY]  group.getOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOpts()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
142	[BUG]  [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  group.getOptionGroups())  {  option.setRequired(false);  }	  for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
143	[BUG]  [BUGGY]  for(Option  option  :  group.getOptions())  {  options.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  for(Option  option  :  group.getOptions())  {  options.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  group.getOptions())  {  options.setRequired(false);  }	  for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
144	[BUG]  [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  shortOpts  =  group.getShortOpts(longOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  shortOpts  =  group.getShortOpts(longOpts);	  OptionGroup    shortOpts    =    group.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
145	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(option.getKey(),  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(option.getKey(),  false);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(option.getKey(),  false);	  OptionGroup    group    =    option.getGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
146	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(option.getKey(),  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(option.getKey(),  this);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(option.getKey(),  this);	  OptionGroup    group    =    option.getGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
147	[BUG]  [BUGGY]  group.addOption(option,  this,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.addOption(option,  this,  requiredOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.addOption(option,  this,  requiredOpts);	  group.addOption(option,    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
148	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  option.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  option.getOptions())  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  option.getOptions())  {  option.setRequired(false);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(true);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
149	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(true);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
150	[BUG]  [BUGGY]  for(Option  option  :  group.getOpts())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  for(Option  option  :  group.getOpts())  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	for(Option  option  :  group.getOpts())  {  option.setRequired(false);  }	  for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
151	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
152	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  option.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  option.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  option.getOptions())  {  option.setRequired(false);  addOptionGroup(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
153	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option.getKey(),  options);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(option.getKey(),  options);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(option.getKey(),  options);	  OptionGroup    group    =    option.getOptionGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
154	[BUG]  [BUGGY]  group.getKey()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getKey()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getKey()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  }	  group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(true);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
155	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(requiredOpts,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(requiredOpts,  requiredOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(requiredOpts,  requiredOpts);	  OptionGroup    group    =    option.getGroup(requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
156	[BUG]  [BUGGY]  options.put(option.getKey(),  new  OptionGroup(group,  true));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  options.put(option.getKey(),  new  OptionGroup(group,  true));  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	options.put(option.getKey(),  new  OptionGroup(group,  true));	  optionGroups.put(option.getKey(),    new    OptionGroup(group,    false));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
157	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(option.getKey(),  options);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(option.getKey(),  options);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(option.getKey(),  options);	  OptionGroup    group    =    option.getGroup(option.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
158	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
159	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(),  longOpts,  shortOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(),  longOpts,  shortOpts;  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(),  longOpts,  shortOpts;	  OptionGroup    group    =    option.getGroup(),    shortOpts;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
160	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  blockOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  blockOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  blockOpts);	  optionGroups.put(option.getKey(),    longOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
161	[BUG]  [BUGGY]  group.addOption(this,  option,  requiredOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.addOption(this,  option,  requiredOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.addOption(this,  option,  requiredOpts);	  group.addOption(option,    requiredOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
162	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
163	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  shortOpts,  requiredOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  shortOpts,  requiredOpts));  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  new  OptionGroup(group,  shortOpts,  requiredOpts));	  optionGroups.put(option.getKey(),    new    OptionGroup(group,    requiredOpts));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
164	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group.getKey(),  options);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getOptionGroup(group.getKey(),  options);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getOptionGroup(group.getKey(),  options);	  OptionGroup    group    =    option.getOptionGroup(group.getKey());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
165	[BUG]  [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOptionGroup(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOptionGroup(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null  &&  group.getOptions().contains(option.getKey()))  {  for(Option  option  :  group.getOptions())  {  option.setRequired(true);  addOptionGroup(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(true);    addOptionGroup(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
166	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup(),  longOpts,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroup(),  longOpts,  shortOpts);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroup(),  longOpts,  shortOpts);	  OptionGroup    group    =    option.getGroup(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
167	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  new  OptionGroup(longOpts));  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(group.getKey(),  new  OptionGroup(longOpts));  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getKey(),  new  OptionGroup(longOpts));	  optionGroups.put(group.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
168	[BUG]  [BUGGY]  optionGroups.put(group.getKey(),  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(group.getKey(),  group);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(group.getKey(),  group);	  optionGroups.put(group.getKey(),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
169	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(option));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(option));  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  new  OptionGroup(option));	  optionGroups.put(group.getKey(),    new    OptionGroup(option));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
170	[BUG]  [BUGGY]  group.addOption(opt,  group);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.addOption(opt,  group);  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.addOption(opt,  group);	  group.addOption(option,    group);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
171	[BUG]  [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getOptions()!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getOptions()!=  null)  {  for(Option  option  :  options.getOptionGroups())  {  option.setRequired(false);  addOption(option);  }	  group.getOptions()!=    null)    {    for(Option    option    :    group.getOptionGroups())    {    option.setRequired(false);    addOption(option);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
172	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroupOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  OptionGroup  group  =  option.getGroupOpts();  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	OptionGroup  group  =  option.getGroupOpts();	  OptionGroup    group    =    option.getShortOpts();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
173	[BUG]  [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  optionGroups.put(option.getKey(),  new  OptionGroup(group,  shortOpts);  [BUGGY]      }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	optionGroups.put(option.getKey(),  new  OptionGroup(group,  shortOpts);	  optionGroups.put(option.getKey(),    new    OptionGroup(group),    shortOpts);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
174	[BUG]  [BUGGY]  group.getKey()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  for  (Option  option  :  group.getOptions())  {    option.setRequired(false);  addOption(option);      [BUGGY]  group.getKey()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }  [BUGGY]      optionGroups.put(option.getKey(),  group);  }  return  this;  }  [CLASS]  Options  [METHOD]  addOptionGroup  [RETURN_TYPE]  Options  OptionGroup  group  [VARIABLES]  List  requiredOpts  Option  option  OptionGroup  group  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	84	84	1	replace	group.getKey()!=  null)  {  for(Option  option  :  group.getOptions())  {  option.setRequired(false);  }	  group.getShortOpts()!=    null)    {    for(Option    option    :    group.getOptions())    {    option.setRequired(false);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
