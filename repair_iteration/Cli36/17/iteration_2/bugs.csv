bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(longOpts.contains(key)||  requiredOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(longOpts.contains(key)||  requiredOpts.contains(key))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(longOpts.contains(key)||  requiredOpts.contains(key))  {	  if(requiredOpts.contains(key)||    longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
2	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key)||  longOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.containsKey(key)||  longOpts.contains(key))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.containsKey(key)||  longOpts.contains(key))  {	  if(requiredOpts.contains(key)||    longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
3	[BUG]  [BUGGY]  if(requiredOpts.contains(key)&&  longOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.contains(key)&&  longOpts.contains(key))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.contains(key)&&  longOpts.contains(key))  {	  if(requiredOpts.contains(key)||    longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
4	[BUG]  [BUGGY]  Option  requiredOpts  =(Option)opt.getRequiredOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =(Option)opt.getRequiredOpt();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =(Option)opt.getRequiredOpt();	      Option    requiredOpts    =(Option)opt.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
5	[BUG]  [BUGGY]  Option  requiredOpts  =(Option)opt.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =(Option)opt.getLongOpt();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =(Option)opt.getLongOpt();	      Option    requiredOpts    =(Option)opt.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
6	[BUG]  [BUGGY]  Option  requiredOpts  =(Option)opt.getRequired();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =(Option)opt.getRequired();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =(Option)opt.getRequired();	      Option    requiredOpts    =(Option)opt.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
7	[BUG]  [BUGGY]  Option  requiredOpts  =  opt.getRequiredOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =  opt.getRequiredOpt();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =  opt.getRequiredOpt();	      Option    requiredOpts    =    opt.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
8	[BUG]  [BUGGY]  Option  requiredOpts  =  opt.getOption(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =  opt.getOption(),  shortOpts);  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =  opt.getOption(),  shortOpts);	      Option    requiredOpts    =    opt.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
9	[BUG]  [BUGGY]  Map  <  String,  Option>  shortOpts  =  longOpts.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Map  <  String,  Option>  shortOpts  =  longOpts.getLongOpt();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Map  <  String,  Option>  shortOpts  =  longOpts.getLongOpt();	      Map    <    String,    Option>    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
10	[BUG]  [BUGGY]  Map  <  String,  Option>  shortOpts  =  opt.getLongOpt(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Map  <  String,  Option>  shortOpts  =  opt.getLongOpt(),  longOpts);  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Map  <  String,  Option>  shortOpts  =  opt.getLongOpt(),  longOpts);	      Map    <    String,    Option>    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
11	[BUG]  [BUGGY]  Map  <  String,  Option>  shortOpts  =  opt.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Map  <  String,  Option>  shortOpts  =  opt.getShortOpt();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Map  <  String,  Option>  shortOpts  =  opt.getShortOpt();	      Map    <    String,    Option>    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
12	[BUG]  [BUGGY]  Option  requiredOpts  =  opt.getRequiredOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =  opt.getRequiredOptionGroup();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =  opt.getRequiredOptionGroup();	      Option    requiredOpts    =    opt.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
13	[BUG]  [BUGGY]  Option  requiredOpts  =  opt.getRequiredOption();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =  opt.getRequiredOption();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =  opt.getRequiredOption();	      Option    requiredOpts    =    opt.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
14	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  optionGroups  =  opt.getOptionGroup();  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  optionGroups  =  opt.getOptionGroup();	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
15	[BUG]  [BUGGY]  String  key  =  opt.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  String  key  =  opt.getValue();  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	String  key  =  opt.getValue();	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
16	[BUG]  [BUGGY]  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.contains(key)&&  requiredOpts.contains(key))  {	  if(requiredOpts.contains(key)||    requiredOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
17	[BUG]  [BUGGY]  if(requiredOpts.contains(key)||  shortOpts.contains(opt))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.contains(key)||  shortOpts.contains(opt))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.contains(key)||  shortOpts.contains(opt))  {	  if(requiredOpts.contains(key)||    shortOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
18	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key)||  shortOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.containsKey(key)||  shortOpts.contains(key))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.containsKey(key)||  shortOpts.contains(key))  {	  if(requiredOpts.contains(key)||    shortOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
19	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.containsKey(key)||  requiredOpts.containsKey(key))  {	  if(requiredOpts.containsKey(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
20	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key)||  shortOpts.containsKey(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.containsKey(key)||  shortOpts.containsKey(key))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.containsKey(key)||  shortOpts.containsKey(key))  {	  if(requiredOpts.containsKey(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
21	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key)||  longOpts.containsKey(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.containsKey(key)||  longOpts.containsKey(key))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.containsKey(key)||  longOpts.containsKey(key))  {	  if(requiredOpts.containsKey(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
22	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key)||  opt.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.containsKey(key)||  opt.isRequired())  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.containsKey(key)||  opt.isRequired())  {	  if(requiredOpts.containsKey(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
23	[BUG]  [BUGGY]  Option  requiredOpts  =(Option)opt.getOption(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =(Option)opt.getOption(),  opt);  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =(Option)opt.getOption(),  opt);	      Option    requiredOpts    =(Option)opt.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
24	[BUG]  [BUGGY]  Option  requiredOpts  =(Option)opt.getOption(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =(Option)opt.getOption(),  longOpts);  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =(Option)opt.getOption(),  longOpts);	      Option    requiredOpts    =(Option)opt.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
25	[BUG]  [BUGGY]  Option  requiredOpts  =(Option)opt.getOption(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =(Option)opt.getOption(),  shortOpts);  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =(Option)opt.getOption(),  shortOpts);	      Option    requiredOpts    =(Option)opt.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
26	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  longOpts.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  ShortOpts  shortOpts  =  longOpts.getLongOpt();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	ShortOpts  shortOpts  =  longOpts.getLongOpt();	      ShortOpts    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
27	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  opt.getLongOpt(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  ShortOpts  shortOpts  =  opt.getLongOpt(),  longOpts);  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	ShortOpts  shortOpts  =  opt.getLongOpt(),  longOpts);	      ShortOpts    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
28	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  opt.getShortOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  ShortOpts  shortOpts  =  opt.getShortOpt();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	ShortOpts  shortOpts  =  opt.getShortOpt();	      ShortOpts    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
29	[BUG]  [BUGGY]  if(requiredOpts.contains(key)&&  opt.isRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.contains(key)&&  opt.isRequired())  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.contains(key)&&  opt.isRequired())  {	  if(requiredOpts.contains(key)||    opt.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
30	[BUG]  [BUGGY]  if(requiredOpts.contains(key)||  opt.isRequired()  ||  shortOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.contains(key)||  opt.isRequired()  ||  shortOpts.contains(key))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.contains(key)||  opt.isRequired()  ||  shortOpts.contains(key))  {	  if(requiredOpts.contains(key)||    opt.isRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
31	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  longOpts);  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  shortOpts  =  opt.getShortOpt(),  longOpts);	      Option    shortOpts    =    opt.getShortOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
32	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  longOpts;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  shortOpts  =  opt.getShortOpt(),  longOpts;  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  shortOpts  =  opt.getShortOpt(),  longOpts;	      Option    shortOpts    =    opt.getShortOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
33	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getLongOpt(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  shortOpts  =  opt.getLongOpt(),  longOpts);  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  shortOpts  =  opt.getLongOpt(),  longOpts);	      Option    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
34	[BUG]  [BUGGY]  Option  shortOpts  =  longOpts.getLongOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  shortOpts  =  longOpts.getLongOpt();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  shortOpts  =  longOpts.getLongOpt();	      Option    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
35	[BUG]  [BUGGY]  if(requiredOpts.contains(key)&&  preferredOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.contains(key)&&  preferredOpts.contains(key))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.contains(key)&&  preferredOpts.contains(key))  {	  if(requiredOpts.contains(key)||    preferredOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
36	[BUG]  [BUGGY]  if(preferredOpts.contains(key)||  preferredOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(preferredOpts.contains(key)||  preferredOpts.contains(key))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(preferredOpts.contains(key)||  preferredOpts.contains(key))  {	  if(requiredOpts.contains(key)||    preferredOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
37	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key)||  preferredOpts.containsKey(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.containsKey(key)||  preferredOpts.containsKey(key))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.containsKey(key)||  preferredOpts.containsKey(key))  {	  if(requiredOpts.contains(key)||    preferredOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
38	[BUG]  [BUGGY]  if(requiredOpts.contains(key)&&  opt.hasRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.contains(key)&&  opt.hasRequired())  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.contains(key)&&  opt.hasRequired())  {	  if(requiredOpts.contains(key)||    opt.hasRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
39	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key)||  opt.hasRequired())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.containsKey(key)||  opt.hasRequired())  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.containsKey(key)||  opt.hasRequired())  {	  if(requiredOpts.contains(key)||    opt.hasRequired())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
40	[BUG]  [BUGGY]  shortOpts.put(opt.getLongOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  shortOpts.put(opt.getLongOpt(),  opt);  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	shortOpts.put(opt.getLongOpt(),  opt);	      longOpts.put(opt.getLongOpt(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
41	[BUG]  [BUGGY]  longOpts.put(opt.getLongOpt(),  opt)  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  longOpts.put(opt.getLongOpt(),  opt)  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	longOpts.put(opt.getLongOpt(),  opt)	      longOpts.put(opt.getLongOpt(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
42	[BUG]  [BUGGY]  longOpts.put(opt.getUpperOpt(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  longOpts.put(opt.getUpperOpt(),  opt);  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	longOpts.put(opt.getUpperOpt(),  opt);	      longOpts.put(opt.getLongOpt(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
43	[BUG]  [BUGGY]  Option  requiredOpts  =(Option)opt.clone(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =(Option)opt.clone(),  shortOpts);  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =(Option)opt.clone(),  shortOpts);	      Option    requiredOpts    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
44	[BUG]  [BUGGY]  Option  requiredOpts  =(Option)opt.clone(),  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =(Option)opt.clone(),  opt);  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =(Option)opt.clone(),  opt);	      Option    requiredOpts    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
45	[BUG]  [BUGGY]  Option  requiredOpts  =(Option)opt.clone(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =(Option)opt.clone(),  longOpts);  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =(Option)opt.clone(),  longOpts);	      Option    requiredOpts    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
46	[BUG]  [BUGGY]  String  key  =  opt.getKey(),  shortOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  String  key  =  opt.getKey(),  shortOpts);  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	String  key  =  opt.getKey(),  shortOpts);	      String    key    =    opt.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
47	[BUG]  [BUGGY]  String  key  =  opt.getKey()  + "; ";  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  String  key  =  opt.getKey()  + "; ";  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	String  key  =  opt.getKey()  + "; ";	      String    key    =    opt.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
48	[BUG]  [BUGGY]  Option  requiredOpts  =(Option)opt.getRequiredOptionGroup();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =(Option)opt.getRequiredOptionGroup();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =(Option)opt.getRequiredOptionGroup();	      Option    requiredOpts    =(Option)opt.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
49	[BUG]  [BUGGY]  Option  requiredOpts  =(Option)opt.getRequiredOption();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =(Option)opt.getRequiredOption();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =(Option)opt.getRequiredOption();	      Option    requiredOpts    =(Option)opt.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
50	[BUG]  [BUGGY]  Option  requiredOpts  =(Option)opt.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =(Option)opt.getValue();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =(Option)opt.getValue();	      Option    requiredOpts    =(Option)opt.getOption();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
51	[BUG]  [BUGGY]  Option  neededOpts  =(Option)opt.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  neededOpts  =(Option)opt.clone();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  neededOpts  =(Option)opt.clone();	      Option    requiredOpts    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
52	[BUG]  [BUGGY]  ShortOpts  shortOpts  =  opt.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  ShortOpts  shortOpts  =  opt.getShortOpts();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	ShortOpts  shortOpts  =  opt.getShortOpts();	      ShortOpts    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
53	[BUG]  [BUGGY]  Option  requiredOpts  =  opt.getRequiredOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =  opt.getRequiredOpts();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =  opt.getRequiredOpts();	      Option    requiredOpts    =    opt.getOptionGroup();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
54	[BUG]  [BUGGY]  Map  <  String,  Option>  shortOpts  =  opt.getShortOpts();  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Map  <  String,  Option>  shortOpts  =  opt.getShortOpts();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Map  <  String,  Option>  shortOpts  =  opt.getShortOpts();	      Map    <    String,    Option>    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
55	[BUG]  [BUGGY]  if(requiredOpts.contains(key)&&  shortOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.contains(key)&&  shortOpts.contains(key))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.contains(key)&&  shortOpts.contains(key))  {	  if(requiredOpts.contains(key)||    shortOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
56	[BUG]  [BUGGY]  Option  optionGroups  =  opt.getOptionGroups();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  optionGroups  =  opt.getOptionGroups();  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  optionGroups  =  opt.getOptionGroups();	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
57	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getRequiredOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  shortOpts  =  opt.getRequiredOpt();  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  shortOpts  =  opt.getRequiredOpt();	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
58	[BUG]  [BUGGY]  if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  opt);  }	      longOpts.put(opt.getLongOpt(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
59	[BUG]  [BUGGY]  String  key  =  opt.getKey(),  longOpts);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  String  key  =  opt.getKey(),  longOpts);  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	String  key  =  opt.getKey(),  longOpts);	      String    key    =    opt.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
60	[BUG]  [BUGGY]  if(requiredOpts.contains(key)||  longOpts.contains(opt))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.contains(key)||  longOpts.contains(opt))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.contains(key)||  longOpts.contains(opt))  {	  if(requiredOpts.contains(key)||    longOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
61	[BUG]  [BUGGY]  if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(opt.isRequired())  {  longOpts.put(opt.getLongOpt(),  opt);  }  else  {  shortOpts.put(opt.getLongOpt(),  opt);  }	      longOpts.put(opt.getLongOpt(),    opt);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
62	[BUG]  [BUGGY]  if(requiredOpts.containsKey(key)||  preferredOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(requiredOpts.containsKey(key)||  preferredOpts.contains(key))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(requiredOpts.containsKey(key)||  preferredOpts.contains(key))  {	  if(requiredOpts.contains(key)||    preferredOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
63	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getShortOpt().remove(shortOpt);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  shortOpts  =  opt.getShortOpt().remove(shortOpt);  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  shortOpts  =  opt.getShortOpt().remove(shortOpt);	      Option    shortOpts    =    opt.getShortOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
64	[BUG]  [BUGGY]  if(opt.isRequired())  {  longOpts.remove(opt.getLongOpt());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(opt.isRequired())  {  longOpts.remove(opt.getLongOpt());  }  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(opt.isRequired())  {  longOpts.remove(opt.getLongOpt());  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
65	[BUG]  [BUGGY]  if(opt.isRequired())  {  longOpts.add(opt.getLongOpt());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(opt.isRequired())  {  longOpts.add(opt.getLongOpt());  }  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(opt.isRequired())  {  longOpts.add(opt.getLongOpt());  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
66	[BUG]  [BUGGY]  Option  requiredOpts  =(Option)optionGroups.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =(Option)optionGroups.clone();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =(Option)optionGroups.clone();	      Option    requiredOpts    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
67	[BUG]  [BUGGY]  Option  requiredOpts  =(Option)opt.clone()  :  null;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  requiredOpts  =(Option)opt.clone()  :  null;  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  requiredOpts  =(Option)opt.clone()  :  null;	      Option    requiredOpts    =(Option)opt.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
68	[BUG]  [BUGGY]  Option  shortOpts  =  opt.getBaseOpt();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  Option  shortOpts  =  opt.getBaseOpt();  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	Option  shortOpts  =  opt.getBaseOpt();	      Option    shortOpts    =    opt.getLongOpt();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
69	[BUG]  [BUGGY]  if(shortOpts.contains(key)||  requiredOpts.contains(key))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  if(shortOpts.contains(key)||  requiredOpts.contains(key))  {  [BUGGY]    {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	if(shortOpts.contains(key)||  requiredOpts.contains(key))  {	  if(requiredOpts.contains(key)||    shortOpts.contains(key))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
70	[BUG]  [BUGGY]  String  key  =  opt.getKey()  : " ";  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]      if  (opt.hasLongOpt())  {  longOpts.put(opt.getLongOpt(),  opt);  }  if  (opt.isRequired())  {    [BUGGY]  String  key  =  opt.getKey()  : " ";  [BUGGY]    if  (requiredOpts.contains(key))    {  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	165	166	1	replace	String  key  =  opt.getKey()  : " ";	      String    key    =    opt.getKey();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
