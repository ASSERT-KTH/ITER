bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  null;  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]  return  null;  [BUGGY]  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	return  null;	return  this;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
2	[BUG]  [BUGGY]  return(optionGroups  ==  null)?  null  :  optionGroups.get(optionGroups.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]  return(optionGroups  ==  null)?  null  :  optionGroups.get(optionGroups.size()  -  1);  [BUGGY]  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	return(optionGroups  ==  null)?  null  :  optionGroups.get(optionGroups.size()  -  1);	return  this;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
3	[BUG]  [BUGGY]  return(optionGroups  ==  null)?  null  :  optGroups.get(optionGroups.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]  return(optionGroups  ==  null)?  null  :  optGroups.get(optionGroups.size()  -  1);  [BUGGY]  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	return(optionGroups  ==  null)?  null  :  optGroups.get(optionGroups.size()  -  1);	return  this;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
4	[BUG]  [BUGGY]  return(optionGroups!=  null)?  null  :  optionGroups.get(optionGroups.size()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]  return(optionGroups!=  null)?  null  :  optionGroups.get(optionGroups.size()  -  1);  [BUGGY]  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	return(optionGroups!=  null)?  null  :  optionGroups.get(optionGroups.size()  -  1);	return  this;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
5	[BUG]  [BUGGY]    [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]    [BUGGY]  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	  	return  this;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
6	[BUG]  [BUGGY]    shortOpts.put(key,  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]    shortOpts.put(key,  opt);  [BUGGY]  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	    shortOpts.put(key,  opt);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	add
7	[BUG]  [BUGGY]    if(opt!=  null)  {  shortOpts.put(opt.getKey(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]    if(opt!=  null)  {  shortOpts.put(opt.getKey(),  opt);  }  [BUGGY]  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	    if(opt!=  null)  {  shortOpts.put(opt.getKey(),  opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	add
8	[BUG]  [BUGGY]    if(opt!=  null)  {  shortOpts  =  new  ArrayList  <  Option>(longOpts.size());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]    if(opt!=  null)  {  shortOpts  =  new  ArrayList  <  Option>(longOpts.size());  }  [BUGGY]  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	    if(opt!=  null)  {  shortOpts  =  new  ArrayList  <  Option>(longOpts.size());  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	add
9	[BUG]  [BUGGY]    if(opt!=  null)  {  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]    if(opt!=  null)  {  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  }  [BUGGY]  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	    if(opt!=  null)  {  shortOpts  =  new  ArrayList  <  Option>(lengthOpts.size());  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	add
10	[BUG]  [BUGGY]    shortOpts.put(opt,  opt);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]    shortOpts.put(opt,  opt);  [BUGGY]  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	    shortOpts.put(opt,  opt);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	add
11	[BUG]  [BUGGY]  return(optionGroups  ==  null)?  null  :  optionGroups.get(optionGroups.indexOf(opt));  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]  return(optionGroups  ==  null)?  null  :  optionGroups.get(optionGroups.indexOf(opt));  [BUGGY]  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	return(optionGroups  ==  null)?  null  :  optionGroups.get(optionGroups.indexOf(opt));	return  this;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
12	[BUG]  [BUGGY]    if(opt!=  null)  {  for(Option  opt  :  opt.getOptionGroups())  {  shortOpts.add(opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]    if(opt!=  null)  {  for(Option  opt  :  opt.getOptionGroups())  {  shortOpts.add(opt);  }  [BUGGY]  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	    if(opt!=  null)  {  for(Option  opt  :  opt.getOptionGroups())  {  shortOpts.add(opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	add
13	[BUG]  [BUGGY]    if(opt!=  null)  {  for(Option  option  :  opt.getOptions())  {  shortOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]    if(opt!=  null)  {  for(Option  option  :  opt.getOptions())  {  shortOpts.add(option);  }  [BUGGY]  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	    if(opt!=  null)  {  for(Option  option  :  opt.getOptions())  {  shortOpts.add(option);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	add
14	[BUG]  [BUGGY]    if(opt!=  null)  {  for(Option  option  :  opt.getOptionGroups())  {  requiredOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]    if(opt!=  null)  {  for(Option  option  :  opt.getOptionGroups())  {  requiredOpts.add(option);  }  [BUGGY]  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	    if(opt!=  null)  {  for(Option  option  :  opt.getOptionGroups())  {  requiredOpts.add(option);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	add
15	[BUG]  [BUGGY]    if(opt!=  null)  {  for(Option  option  :  opt.getOptionGroups())  {  shortOpts.add(option);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]    if(opt!=  null)  {  for(Option  option  :  opt.getOptionGroups())  {  shortOpts.add(option);  }  [BUGGY]  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	    if(opt!=  null)  {  for(Option  option  :  opt.getOptionGroups())  {  shortOpts.add(option);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	add
16	[BUG]  [BUGGY]  return(optionGroups  ==  null)?  null  :  optionGroups.get(0);  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]  return(optionGroups  ==  null)?  null  :  optionGroups.get(0);  [BUGGY]  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	return(optionGroups  ==  null)?  null  :  optionGroups.get(0);	return  this;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
17	[BUG]  [BUGGY]  return(optionGroups  ==  null)?  null  :  optGroups.get(0);  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]  return(optionGroups  ==  null)?  null  :  optGroups.get(0);  [BUGGY]  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	return(optionGroups  ==  null)?  null  :  optGroups.get(0);	return  this;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
18	[BUG]  [BUGGY]  return(optionGroups  ==  null)?  null  :  optionGroups.get(optionGroup);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]  return(optionGroups  ==  null)?  null  :  optionGroups.get(optionGroup);  [BUGGY]  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	return(optionGroups  ==  null)?  null  :  optionGroups.get(optionGroup);	return  this;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
19	[BUG]  [BUGGY]    if(opt!=  null)  {  for(Map.Entry  <  String,  Option>  entry  :  shortOpts.entrySet())  {  shortOpts.put(entry.getKey(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]    if(opt!=  null)  {  for(Map.Entry  <  String,  Option>  entry  :  shortOpts.entrySet())  {  shortOpts.put(entry.getKey(),  opt);  }  [BUGGY]  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	    if(opt!=  null)  {  for(Map.Entry  <  String,  Option>  entry  :  shortOpts.entrySet())  {  shortOpts.put(entry.getKey(),  opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	add
20	[BUG]  [BUGGY]    if(opt!=  null)  {  for(Map.Entry  <  String,  Option>  shortOpts  :  shortOpts.entrySet())  {  shortOpts.put(key,  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]    if(opt!=  null)  {  for(Map.Entry  <  String,  Option>  shortOpts  :  shortOpts.entrySet())  {  shortOpts.put(key,  opt);  }  [BUGGY]  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	    if(opt!=  null)  {  for(Map.Entry  <  String,  Option>  shortOpts  :  shortOpts.entrySet())  {  shortOpts.put(key,  opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	add
21	[BUG]  [BUGGY]    if(opt!=  null)  {  for(Map.Entry  <  String,  Option>  entry  :  shortOpts.entrySet())  {  shortOpts.add(entry.getKey());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]    if(opt!=  null)  {  for(Map.Entry  <  String,  Option>  entry  :  shortOpts.entrySet())  {  shortOpts.add(entry.getKey());  }  [BUGGY]  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	    if(opt!=  null)  {  for(Map.Entry  <  String,  Option>  entry  :  shortOpts.entrySet())  {  shortOpts.add(entry.getKey());  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	add
22	[BUG]  [BUGGY]    if(opt!=  null)  {  for(Map.Entry  <  String,  Option>  entry  :  shortOpts.entrySet())  {  requiredOpts.put(entry.getKey(),  opt);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]    if(opt!=  null)  {  for(Map.Entry  <  String,  Option>  entry  :  shortOpts.entrySet())  {  requiredOpts.put(entry.getKey(),  opt);  }  [BUGGY]  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	    if(opt!=  null)  {  for(Map.Entry  <  String,  Option>  entry  :  shortOpts.entrySet())  {  requiredOpts.put(entry.getKey(),  opt);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	add
23	[BUG]  [BUGGY]    if(opt!=  null)  {  for(Map.Entry  <  String,  Option>  shortOpts  :  shortOpts.entrySet())  {  shortOpts.add(opt.getKey());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  {  if  (requiredOpts.contains(key))  {  requiredOpts.remove(requiredOpts.indexOf(key));  }  requiredOpts.add(key);  }  shortOpts.put(key,  opt);  [BUGGY]    if(opt!=  null)  {  for(Map.Entry  <  String,  Option>  shortOpts  :  shortOpts.entrySet())  {  shortOpts.add(opt.getKey());  }  [BUGGY]  return  this;  }  [CLASS]  Options  [METHOD]  addOption  [RETURN_TYPE]  Options  Option  opt  [VARIABLES]  List  requiredOpts  Option  opt  String  key  boolean  Map  longOpts  optionGroups  shortOpts  long  serialVersionUID  	projects/Cli36/src/main/java/org/apache/commons/cli/Options.java	0.7071067811865475	174	174	1	replace	    if(opt!=  null)  {  for(Map.Entry  <  String,  Option>  shortOpts  :  shortOpts.entrySet())  {  shortOpts.add(opt.getKey());  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	add
