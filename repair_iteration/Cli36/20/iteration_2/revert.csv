projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174returnthis;
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174returnnull;
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optGroups.get(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups!=null)?null:optionGroups.get(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(key,opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(opt.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts=newArrayList<Option>(longOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts=newArrayList<Option>(lengthOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(opt,opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(optionGroups.indexOf(opt));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionopt:opt.getOptionGroups()){shortOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionoption:opt.getOptions()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionoption:opt.getOptionGroups()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionoption:opt.getOptionGroups()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(0);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optGroups.get(0);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(optionGroup);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Map.Entry<String,Option>entry:shortOpts.entrySet()){shortOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){shortOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Map.Entry<String,Option>entry:shortOpts.entrySet()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Map.Entry<String,Option>entry:shortOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){shortOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(opt,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174longOpts.put(opt,opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(opt,preferred);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>entry:shortOpts.entrySet()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>entry:shortOpts.entrySet()){requiredOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>iterator:shortOpts.entrySet()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optGroups.get(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt==null)?null:optGroups.get(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:options.get(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(lengthOpts!=null){shortOpts=newArrayList<Option>(lengthOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts=newArrayList<Option>(lengthOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174OptionshortOpts=newArrayList<Option>(lengthOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){shortOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){shortOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){requiredOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.getOptionGroups()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Optionoption:opt.getOptionGroups()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.getOptionGroups()){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>entry:shortOpts.entrySet()){shortOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>entry:shortOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Map.Entry<String,Option>entry:shortOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts=newArrayList<Option>(longOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174OptionshortOpts=newArrayList<Option>(longOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.getOptionGroups()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:opt.getOptionGroups()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:opt.getOptionGroups()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:longOpts.getOptionGroups()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(optionGroups.indexOf(opt),shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(optionGroups.indexOf(opt)+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:options.get(optionGroups.indexOf(opt));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt==null)?null:optGroups.get(0);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt!=null)?null:optGroups.get(0);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt==null)?null:optGroups.get(1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){shortOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){requiredOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){requiredOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups!=null)?null:optionGroups.get(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174returnoptionGroups==null?null:optionGroups.get(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.getOptions()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:opt.getOptions()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:opt.getOptions()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:shortOpts.getOptionGroups()){shortOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:longOpts.getOptionGroups()){shortOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:opt.getOptionGroups()){shortOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Optionopt:opt.getOptionGroups()){shortOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:optionGroups.get(optionGroup);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:optionGroups.get(opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:optionGroups.get(option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(opt,key);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(option,key);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts=newArrayList<Option>(requiredOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>opt:shortOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null){shortOpts.put(opt.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null){shortOpts.put(opt.getKey(),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(opt.getKey(),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:options.get(0);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups!=null)?null:options.get(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:shortOpts.values()){if(opt.getOptions().contains(opt)){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts=newArrayList<Option>();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.values()){if(opt.getOptions().contains(option)){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:optionGroups.get(optionName);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:optionGroups.get(optionOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionopt:opt.getOptionGroups()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt==null){shortOpts=newArrayList<Option>(longOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174Optionopt=(Option)longOpts.get(opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(opt,opt);}else{longOpts.put(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt==null){shortOpts=newArrayList<Option>(lengthOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(shortOpts!=null){shortOpts=newArrayList<Option>(lengthOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionoption:opt.getOptions()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt==null)?null:optionGroups.get(optionGroups.indexOf(opt));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:opt.entrySet()){shortOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Map.Entry<String,Option>key:shortOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){requiredOpts.put(opt.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174optionGroups.put(opt.getKey(),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(key,opt);}else{longOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(optionGroups.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null){for(Optionopt:opt.getOptionGroups()){shortOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionopt:opt.getOptionGroups()){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>opt:shortOpts.entrySet()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:shortOpts.getOptionGroups()){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionopt:opt.getOptionGroups()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){shortOpts.put(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt!=null)?null:optGroups.get(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174opt!=null&&shortOpts.contains(opt)){for(Map.Entry<String,Option>entry:shortOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Map.Entry<String,Option>entry:longOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionoption:opt.getOptionGroups()){requiredOpts.add(option,shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(key,opt);}else{shortOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:options.get(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(shortOpts!=null){shortOpts=newArrayList<Option>(longOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(optionGroups!=null){shortOpts=newArrayList<Option>(longOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(opt,opt);}else{thrownewIllegalArgumentException("");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174opt!=null&&shortOpts.put(opt.getKey(),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:shortOpts.get(shortOpts.indexOf(opt));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:shortOpts.get(shortOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:shortOpts.toArray(newOption[shortOpts.size()]);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionoption:opt.getOptions()){shortOpts.put(option.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup!=null)?null:optionGroups.get(optionGroup);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){requiredOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:opt.getOptionGroups()){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(shortOpts==null){shortOpts=newArrayList<Option>(lengthOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(optionGroups.indexOf(opt),requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174opt!=null&&for(Map.Entry<String,Option>entry:shortOpts.entrySet()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(shortOpts!=null){for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){shortOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(key,opt);}else{requiredOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null){requiredOpts.put(key,opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:shortOpts.get(shortOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:shortOpts.get(shortOpts.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:shortOpts.get(shortOpts.size()-2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:shortOpts.get(opt.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(option,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.getOptions()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Optionoption:opt.getOptions()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.getOptions()){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:requiredOpts.entrySet()){shortOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:longOpts.entrySet()){shortOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>opt:longOpts.entrySet()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>opt:shortOpts.entrySet()){requiredOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>opt:shortOpts.keySet()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(OptionshortOpts:longOpts.getOptionGroups()){shortOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.getOptionGroups()){shortOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:longOpts.getOptionGroups()){shortOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Map.Entry<String,Option>shortOpts:longOpts.entrySet()){requiredOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Map.Entry<String,Option>shortOpts:requiredOpts.entrySet()){requiredOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){requiredOpts.put(opt,key);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:longOpts.getOptionGroups()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:longOpts.entrySet()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:shortOpts.keySet()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){requiredOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(OptionshortOpts:longOpts.getOptionGroups()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt==null)?null:optGroups.get(opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(OptionshortOpt:shortOpts.getOptionGroups()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174opt!=null&&shortOpts.contains(opt)){for(Map.Entry<String,Option>entry:shortOpts.entrySet()){requiredOpts.put(entry.getKey()
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){opt!=null&&shortOpts.contains(opt)){for(Map.Entry<String,Option>entry:shortOpts.entrySet()){requiredOpts.put(entry.getKey()
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174optionGroups.put(opt.getKey(),shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174optionGroups.put(opt.getKey(),opt,shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174optionGroups.put(opt.getKey(),requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174&&for(Map.Entry<String,Option>entry:shortOpts.entrySet()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174opt!=null&&for(Map.Entry<String,Option>entry:shortOpts.entrySet()){requiredOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:opt.keySet()){shortOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:longOpts.entrySet()){shortOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(lengthOpts==null){shortOpts=newArrayList<Option>(lengthOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Optionoption:shortOpts.getOptionGroups()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Optionopt:shortOpts.getOptionGroups()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Optionopt:shortOpts.getOptionGroups()){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:shortOpts.toArray(newOption[longOpts.size()]);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:shortOpts.toArray(newOption[shortOpts.size()+1]);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:shortOpts.toArray(newOption[shortOpts.size()],opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:optionGroups.get(optionGroup,shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>key:shortOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>key:longOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>key:shortOpts.keySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null){for(Optionopt:opt.getOptionGroups()){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(optionGroups!=null){for(Optionopt:opt.getOptionGroups()){shortOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null){for(Optionoption:opt.getOptionGroups()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(option,preferred);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(opt,preferred,longOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:longOpts.getOptions()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Optionopt:opt.getOptionGroups()){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>entry:longOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>entry:requiredOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>entry:selectedOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Map.Entry<String,Option>shortOpts:opt.entrySet()){shortOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Map.Entry<String,Option>shortOpts:opt.keySet()){shortOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Map.Entry<String,Option>shortOpts:opt.list()){shortOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Map.Entry<String,Option>shortOpts:longOpts.entrySet()){shortOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(opt,shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:options.get(opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt==null)?null:optionGroups.get(opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(optionGroups.indexOf(opt),shortOpts,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:options.get(optionGroups.indexOf(opt),requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(optionGroups.indexOf(opt),requiredOpts,shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:shortOpts.values()){if(opt.getOptions().contains(option)){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.values()){if(option.getOptions().contains(option)){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:longOpts.values()){if(opt.getOptions().contains(option)){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:options.get(optionGroup);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(optionGroups.indexOf(opt),shortOpts,longOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:optionGroups.get(optionGroups.indexOf(opt),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:options.get(optionGroups.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:options.get(optionGroups.size()-2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null){requiredOpts.put(opt.getKey(),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null){requiredOpts.put(opt.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null){for(Optionoption:opt.getOptions()){shortOpts.put(option.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Optionoption:opt.getOptions()){requiredOpts.put(option.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:opt.getOptions()){requiredOpts.put(option.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:opt.getOptions()){shortOpts.put(option.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(option,opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(key,option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(option,optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(option==null)?null:optionGroups.get(option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(option!=null)?null:optionGroups.get(option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(option==null)?null:optionGroups.get(opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(OptionshortOpt:shortOpts.getOptions()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionName==null)?null:optionGroups.get(optionName);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:optionGroups.get(optionName,shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup!=null)?null:optionGroups.get(optionName);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt==null)?null:shortOpts.get(1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174Optionopt=(Option)requiredOpts.get(opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174Optionopt=(Option)shortOpts.get(opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174Optionopt=(Option)longOpts.get(opt,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){if(lengthOpts!=null){shortOpts=newArrayList<Option>(lengthOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(optionGroups!=null){shortOpts=newArrayList<Option>(lengthOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(opt,key,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174returnoptionGroups==null?null:optionGroups.get(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174returnoptionGroups==null?null:optionGroups.get(optionGroups.size()-2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(opt,requiredOpts);}else{thrownewIllegalArgumentException("");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(opt,requiredOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null){shortOpts.put(opt,opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>iterator:longOpts.entrySet()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>iterator:shortOpts.keySet()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>iterator:shortOpts.entrySet()){shortOpts.add(entry.getValue());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(shortOpts==null){shortOpts=newArrayList<Option>();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(shortOpts!=null){shortOpts=newArrayList<Option>();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts=newArrayList<Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts=newArrayList<Option>(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174OptionshortOpts=newArrayList<Option>(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174ShortOptsshortOpts=newArrayList<Option>(requiredOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt!=null)?null:optGroups.get(1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt!=null)?null:optGroups.get(opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(options==null)?null:options.get(0);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:options.get(1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>entry:longOpts.entrySet()){shortOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>entry:requiredOpts.entrySet()){shortOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:options.get(optionGroups.indexOf(opt)+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(optionGroups.indexOf(opt)/1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(optionGroups.indexOf(opt)+2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174longOpts.put(opt.getKey(),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(opt.getKey(),option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(opt.getValue(),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(optionGroups!=null){shortOpts.put(opt.getKey(),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:opt.entrySet()){requiredOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:opt.keySet()){requiredOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:opt.entrySet()){requiredOpts.add(shortOpts.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt==null)?null:optGroups.get(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt!=null)?null:optGroups.get(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt==null)?null:optGroups.get(optionGroups.size()-2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>opt:longOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>opt:shortOpts.keySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>opt:requiredOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Optionopt:longOpts.getOptionGroups()){shortOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Optionopt:shortOpts.getOptionGroups()){shortOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(OptionshortOpts:opt.getOptionGroups()){shortOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt==null){if(shortOpts==null){shortOpts=newArrayList<Option>(lengthOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174ShortOptsshortOpts=newArrayList<Option>(lengthOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:requiredOpts.entrySet()){requiredOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(optionGroups.size()-2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>entry:shortOpts.entrySet()){requiredOpts.add(entry.getValue());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>entry:shortOpts.keySet()){requiredOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>entry:longOpts.entrySet()){requiredOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){if(shortOpts!=null){shortOpts=newArrayList<Option>(lengthOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optGroups.get(optionGroups.size()-2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174OptionshortOpts=newArrayList<Option>(longOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174OptionshortOpts=newLinkedList<Option>(longOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){if(shortOpts!=null){shortOpts=newArrayList<Option>(longOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(longOpts!=null){shortOpts=newArrayList<Option>(longOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:longOpts.values()){if(opt.getOptions().contains(opt)){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:shortOpts.values()){if(requiredOpts.contains(opt)){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(OptionshortOpt:opt.getOptionGroups()){shortOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174OptionshortOpts=newArrayList<Option>(lengthOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174OptionshortOpts=newArrayList<Option>(lengthOpts.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174OptionshortOpts=newLinkedList<Option>(lengthOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174OptionshortOpts=newArrayList<Option>(lengthOpts.size(),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt==null)?null:optionGroups.get(optionGroups.indexOf(opt),shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt==null)?null:optionGroups.get(optionGroups.indexOf(opt)+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Map.Entry<String,Option>entry:longOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Map.Entry<String,Option>entry:requiredOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.getOptionGroups()){requiredOpts.add(option,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups!=null)?null:optGroups.get(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:longOpts.entrySet()){shortOpts.put(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){shortOpts.put(opt,longOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:requiredOpts.entrySet()){shortOpts.put(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:longOpts.getOptionGroups()){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.getOptionGroups()){requiredOpts.add(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:opt.getOptionGroups()){requiredOpts.add(option,shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Optionoption:opt.getOptionGroups()){requiredOpts.add(option,shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.getOptionGroups()){requiredOpts.add(option,null);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(optionGroups!=null){shortOpts.put(opt.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null){shortOpts.put(opt.getKey(),option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:longOpts.entrySet()){requiredOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){requiredOpts.put(opt,key);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null){shortOpts.put(opt,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:optionGroups.get(optionOpts,shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:optionGroups.get(optionOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:shortOpts.getOptions()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null){shortOpts.put(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null){shortOpts.put(key,opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null){shortOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174longOpts.put(opt,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174longOpts.put(opt,optionGroups);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(shortOpts!=null){for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){shortOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:shortOpts.get(shortOpts.indexOf(opt)+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:shortOpts.get(shortOpts.indexOf(opt),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:shortOpts.get(shortOpts.indexOf(option));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts=newLinkedList<Option>(longOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts=newArrayList<Option>(longOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){opt!=null&&shortOpts.put(opt.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174option!=null&&shortOpts.put(opt.getKey(),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174opt!=null&&shortOpts.put(opt.getKey(),option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(longOpts!=null){shortOpts=newArrayList<Option>(optionGroups.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:optionGroups.get(opt,shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:longOpts.getOptionGroups()){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:opt.entrySet()){shortOpts.add(opt.getValue());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:options.get(optionGroups.indexOf(opt),shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups!=null)?null:options.get(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(key,requiredOpts);}else{longOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:shortOpts.getOptionGroups()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null){for(Optionopt:opt.getOptionGroups()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts=newArrayList<Option>(lengthOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts=newLinkedList<Option>(lengthOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts=newArrayList<Option>(lengthOpts.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>entry:longOpts.entrySet()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>entry:shortOpts.entrySet()){shortOpts.add(entry.getValue());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>entry:shortOpts.keySet()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>option:shortOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts=newArrayList<Option>(lengthOpts.size()+1);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174optionGroups.put(opt.getKey(),preferredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>iterator:shortOpts.values()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(opt,option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){shortOpts.put(opt,shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(opt,preferredOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:opt.keySet()){requiredOpts.add(shortOpts.entrySet());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){requiredOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(opt,requiredOpts);}else{shortOpts.put(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){requiredOpts.put(key,opt);}else{requiredOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174optionGroups!=null&&shortOpts.contains(opt)){for(Map.Entry<String,Option>opt:shortOpts.entrySet()){requiredOpts.put(entry.getKey()
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts=newArrayList<Option>(longOpts.size()+1);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){requiredOpts.put(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:shortOpts.getOptionGroups()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:shortOpts.get(requiredOpts.indexOf(opt));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts!=null)?null:shortOpts.get(shortOpts.indexOf(opt));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.values()){if(opt.getOptions().contains(opt)){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt==null)?null:optionGroups.get(1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:options.get(optionName);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(opt,result);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(opt,requiredOpts);}else{longOpts.put(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(opt,preferredOpts);}else{longOpts.put(opt,preferredOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts!=null)?null:shortOpts.get(shortOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){requiredOpts.put(key,opt);}else{longOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt==null){shortOpts=newArrayList<Option>(requiredOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null&&opt.getOptionGroups()!=null){for(Optionopt:opt.getOptionGroups()){shortOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174&&shortOpts.put(opt.getKey(),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:opt.getOptions()){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:longOpts.getOptions()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt!=null)?null:optionGroups.get(optionGroups.indexOf(opt));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){longOpts.put(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:opt.list()){shortOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174optionGroups!=null&&for(Map.Entry<String,Option>entry:shortOpts.entrySet()){shortOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt.getOption()!=null){shortOpts.put(opt.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt.getOption()!=null){shortOpts.put(opt.getKey(),opt);}else{longOpts.put(opt.getValue(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt.getOption()!=null){shortOpts.put(opt.getKey(),opt);}else{longOpts.put(opt.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:opt.getOptionGroups()){requiredOpts.add(opt,shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:optionGroups.get(optionOpts.indexOf(opt));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:optionGroups.get(optionOpts.toString());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionopt:opt.getOptions()){requiredOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(opt,preferredOpts);}else{thrownewIllegalArgumentException("");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:optionGroups.get(optionGroups.indexOf(opt),shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(optionGroups.indexOf(opt)+1,shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.getOptions()){shortOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174electedOpts.put(opt.getKey(),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174Optionopt=(Option)requiredOpts.get(opt.getKey());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts.put(opt,preferredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionopt:opt.getOptionGroups()){requiredOpts.add(option,shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionoption:opt.getOptionGroups()){requiredOpts.add(option,longOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:optionGroups.get(optionGroup,opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Map.Entry<String,Option>key:longOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Map.Entry<String,Option>key:shortOpts.keySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174Optionopt=(Option)longOpts.get(opt-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(shortOpts==null){shortOpts=newArrayList<Option>(longOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:shortOpts.getOptionGroups()){requiredOpts.add(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt==null){shortOpts=newArrayList<Option>();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(shortOpts==null){if(opt!=null){shortOpts=newArrayList<Option>();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){shortOpts.put(opt,key);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){shortOpts.put(opt,requiredOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt==null)?null:shortOpts.get(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionopt:opt.getOptionGroups()){requiredOpts.remove(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionoption:opt.getOptionGroups()){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts!=null)?null:shortOpts.toArray(newOption[shortOpts.size()]);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts!=null)?null:shortOpts.toArray(newOption[longOpts.size()]);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:optionGroups.get(optionGroups.indexOf(opt)+1,requiredOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(requiredOpts==null)?null:optionGroups.get(optionGroups.indexOf(opt),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174returnoptionGroups!=null?null:optionGroups.get(optionGroups.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:options.get(opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionoption:opt.getOptions()){requiredOpts.put(option.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionopt:opt.getOptions()){shortOpts.put(option.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionopt:opt.getOptions()){requiredOpts.put(option.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:opt.getOptionGroups()){shortOpts.add(opt,requiredOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null&&opt.hasKey()){shortOpts.put(opt.getKey(),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){longOpts.put(opt,opt);}else{shortOpts.put(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){longOpts.put(opt,opt);}else{thrownewIllegalArgumentException("");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174Optionopt=(Option)requiredOpts.get(opt.getKey(),opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174while(opt!=null&&opt.hasKey()){shortOpts.put(opt.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(shortOpts!=null){shortOpts=newArrayList<Option>(requiredOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts=newArrayList<Option>(requiredOpts.size()+1);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>entry:selectedOpts.entrySet()){shortOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroup==null)?null:optionGroups.get(optionName,opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174OptionshortOpts=newArrayList<Option>(shortOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Map.Entry<String,Option>shortOpts:opt.shortOpts.entrySet()){shortOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt.getKey()!=null){shortOpts.put(opt.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt.getValue()==null){shortOpts.put(opt.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt.getKey()==null){shortOpts.put(opt.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174shortOpts=newArrayList<Option>(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionoption:opt.getOptionGroups()){requiredOpts.add(option,newOption(shortOpts));}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174opt!=null&&shortOpts.put(key,opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174optionGroups.put(key,opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.getOptions()){shortOpts.add(option,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.keySet()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(shortOpts!=null){shortOpts.put(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174opt!=null&&shortOpts.put(opt,opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){requiredOpts.put(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(key,opt);}else{longOpts.put(longOpts.indexOf(opt));}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(key,option);}else{longOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt==null)?null:shortOpts.get(0);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts!=null)?null:shortOpts.get(shortOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){requiredOpts.put(opt,opt);}else{thrownewIllegalArgumentException("");}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){shortOpts.put(opt,key);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:shortOpts.getOptionGroups()){shortOpts.add(option,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:opt.shortOpts.entrySet()){requiredOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){requiredOpts.add(opt.getValue());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt!=null)?null:shortOpts.get(0);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(shortOpts==null)?null:shortOpts.toArray(newOption[shortOpts.size()-1]);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:shortOpts.keySet()){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:shortOpts.values()){requiredOpts.add(opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:opt.getOptions()){requiredOpts.add(option,shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>opt:shortOpts.entrySet()){shortOpts.add(entry.getValue());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Optionoption:opt.getOptions()){requiredOpts.add(option,shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionoption:options.getOptionGroups()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174returnoptionGroups!=null?null:optionGroups.get(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:opt.getOptionGroups()){shortOpts.add(option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(optionGroups==null){shortOpts=newArrayList<Option>(lengthOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups!=null)?null:options.get(optionGroups.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups!=null)?null:options.get(optionGroups.size()-2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups!=null)?null:optionGroups.get(optionGroups.size()-2);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:opt.shortOpts.entrySet()){shortOpts.add(opt.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Map.Entry<String,Option>opt:shortOpts.entrySet()){requiredOpts.put(entry.getKey(),opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){requiredOpts.put(key,option);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){requiredOpts.add(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(optionGroups==null)?null:options.get(optionGroup);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){requiredOpts.put(key,opt);}else{shortOpts.put(key,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(shortOpts!=null){shortOpts=newArrayList<Option>(shortOpts.size());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174For(Optionopt:opt.getOptionGroups()){shortOpts.add(opt,requiredOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Optionopt:shortOpts.getOptionGroups()){shortOpts.add(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt!=null)?null:shortOpts.get(optionGroups.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(optionGroups!=null){shortOpts.put(opt,opt);}else{longOpts.put(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174if(opt!=null){requiredOpts.put(opt,opt);}else{longOpts.put(opt,opt);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>iterator:shortOpts.entrySet()){requiredOpts.add(entry.getKey());}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174Optionopt=options.getOption(opt.getKey());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174Optionopt=option.getOption(opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174Optionoption=options.getOption(opt);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(option>=null)?null:optionGroups.get(option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174return(opt==null)?null:optionGroups.get(option);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java174for(Map.Entry<String,Option>shortOpts:shortOpts.entrySet()){shortOpts.add(entry.getValue());}
