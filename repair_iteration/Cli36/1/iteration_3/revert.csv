projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts==null){shortOpts.putAll(Arrays.asList(shortOpts));}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts==null){shortOpts=newHashMap<String,Option>();}else{shortOpts.putAll(shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts==null){shortOpts=newHashMap<String,Option>();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newTreeMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newArrayMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts));}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedfinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Set<String>shortOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Set<String>shortOpts=Sets.newHashSet();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalSet<String>shortOpts=Sets.newHashSet();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50ArrayList<String>shortOpts=Sets.newArrayList();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Set<String>shortOpts=Sets.newHashSet();shortOpts.putAll(ShortOpts.EMPTY);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50staticfinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newArrayMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newTreeMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50staticfinalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newTreeMap<String,Option>(String.class);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(shortOpts,shortOpts.length);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(shortOpts,shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(shortOpts,shortOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(this.shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50while(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50while(shortOpts!=null&&shortOpts.size()>0){shortOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50this.shortOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50shortOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedfinalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedfinalMap<String,Option>shortOpts=newArrayMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedfinalMap<String,Option>shortOpts=newTreeMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50List<String>shortOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50ArrayList<String>shortOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50LinkedHashMap<String,Option>shortOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privateMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50this.shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinallongserialVersionUID=System.identityHashCode(SOURCENAME_VERSION);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinallongserialVersionUID=System.identityHashCode(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newLinkedMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts));}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null&&shortOpts.size()>0){shortOpts.putAll(Arrays.asList(shortOpts));}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null&&shortOpts.size()>0){shortOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeMultiply(shortOpts){this.shortOpts=newHashMap<String,Option>();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeShortOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeShortOpts=Arrays.asList(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeShortOpts.putAll(Arrays.asList(this.shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newArrayHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalSet<String>shortOpts=Sets.newHashSet();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalSet<String>shortOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts!=null){Arrays.sort(shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedstaticfinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50publicfinalMap<String,Option>shortOpts=newTreeMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50pendOpts.putAll(Arrays.asList(pendOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safePaths.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50ShortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50LinkedHashMap<String,Option>shortOpts=Sets.newHashMap();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Map<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeMultiply(this.shortOpts){this.shortOpts=newHashMap<String,Option>();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeMultiply(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalLinkedHashMap<String,Option>shortOpts=Sets.newHashMap();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalLinkedHashMap<String,Option>shortOpts=Sets.newHashMap();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts!=null){LinkedHashMap<String,Option>shortOpts=Sets.newHashMap();shortOpts.putAll(shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts!=null){LinkedHashMap<String,Option>shortOpts=Sets.newHashMap();shortOpts.putAll(shortOpts);}else{shortOpts.putAll(shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50this.shortOpts.putAll(Arrays.asList(shortOpts),shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50this.shortOpts.putAll(Arrays.asList(this.shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50this.shortOpts.putAll(Arrays.asList(shortOpts),ShortOpts.EMPTY);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50whilst(shortOpts!=null&&shortOpts.size()>0){shortOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50while(shortOpts!=null||shortOpts.size()>0){shortOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50while(shortOpts!=null&&shortOpts.size()>1){shortOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinallongserialVersionUID=System.identityHashCode(SOURCENAME_VERSION,SOURCENAME_VERSION);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinallongserialVersionUID=System.identityHashCode(SOURCENAME_VERSION,ShortOpts.class);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinallongserialVersionUID=System.identityHashCode(System.identityHashCode(SOURCENAME_VERSION));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50publicstaticfinalMap<String,Option>shortOpts=newTreeMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50publicfinalMap<String,Option>shortOpts=newTreeMap<String,Option>(String.class);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50publicfinalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50pendOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50PendOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50pendOpts.putAll(Arrays.asList(this.pendOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalHashMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts!=null){finalSet<String>shortOpts=Sets.newHashSet();shortOpts.putAll(shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(this.shortOpts,shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(this.shortOpts,this.shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(this.shortOpts,this.shortOpts.length);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(this.shortOpts!=null){Arrays.sort(this.shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedstaticfinalMap<String,Option>shortOpts=newTreeMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedfinalMap<String,Option>shortOpts=newTreeMap<String,Option>(String.class);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedfinalMap<String,Option>shortOpts=newTreeMap<String,Option>(System.identityHashCode(this));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safePaths.putAll(Arrays.asList(shortOpts),false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safePaths.putAll(Arrays.asList(shortOpts),true);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalSet<String>shortOpts=Sets.newHashSet();shortOpts.putAll(ShortOpts.EMPTY);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalSet<String>shortOpts=Sets.newHashSet();shortOpts.putAll(ShortOpts.EMPTY);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50ArrayList<String>shortOpts=Sets.newArrayList();shortOpts.putAll(ShortOpts.EMPTY);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50while(shortOpts!=null&&shortOpts.size()>0){shortOpts.putAll(Arrays.asList(shortOpts));}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null||shortOpts.size()>0){shortOpts.putAll(Arrays.asList(shortOpts));}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalList<String>shortOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Collection<String>shortOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newTreeMap<String,Option>(String.class);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newTreeMap<String,Option>(Short.class);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newTreeMap<String,Option>(String.class,options);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalLinkedHashMap<String,Option>shortOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalLinkedHashMap<String>shortOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50ShortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50ShortOpts=newSimpleHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50ShortOpts=newShortMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedstaticfinalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeShortOpts.putAll(Arrays.asList(this.shortOpts),shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50LinkedHashMap<String,Option>shortOpts=Sets.newHashMap();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Maps.<String,Option>shortOpts=Sets.newHashMap();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newjava.util.ArrayHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(shortOpts,shortOpts.size()-1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(shortOpts,shortOpts.size()+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(this.shortOpts,shortOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedstaticfinalMap<String,Option>shortOpts=newArrayMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts));}else{shortOpts.putAll(Arrays.asList(shortOpts));}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null&&shortOpts.size()>0){shortOpts.putAll(Arrays.asList(shortOpts),type);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalArrayList<String>shortOpts=Sets.newArrayList();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50List<String>shortOpts=Sets.newArrayList();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinallongserialVersionUID=System.identityHashCode(shortOpts,shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinallongserialVersionUID=System.identityHashCode(shortOpts,shortOpts.length);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinallongserialVersionUID=System.identityHashCode(shortOpts,Short.MAX_VALUE);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedfinalMap<String,Option>shortOpts=newLinkedMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalSet<String>shortOpts=Sets.newHashSet();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50publicfinalSet<String>shortOpts=Sets.newHashSet();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalHashMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newLinkedMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50while(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts),false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeShortOpts=Arrays.asList(shortOpts,shortOpts.length);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeShortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50staticfinalMap<String,Option>shortOpts=newTreeMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newTreeMap<String,Option>(System.identityHashCode(this));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50while(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts),type);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50while(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts));}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts),type);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeShortOpts.putAll(Arrays.asList(shortOpts),false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeShortOpts.putAll(Arrays.asList(shortOpts),true);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50this.shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50this.shortOpts=newTreeMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalArrayList<String>shortOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(shortOpts,shortOpts.length+1);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(this.shortOpts,shortOpts.length);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null){Arrays.sort(shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null){shortOpts.sort(shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts==null){Arrays.sort(shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinallongserialVersionUID=System.identityHashCode(SOURCENAME_VARIABLE);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50List<String>shortOpts=Sets.newHashMap();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50shortOpts.putAll(Arrays.asList(this.shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50this.shortOpts.putAll(Arrays.asList(shortOpts),false);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50PrivatestaticfinalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts==null){LinkedHashMap<String,Option>shortOpts=Sets.newHashMap();shortOpts.putAll(shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Set<String,Option>shortOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Map<String,Option>shortOpts=Sets.newHashMap();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50ShortOpts=newLongMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts==null){shortOpts=newHashMap<String,Option>();}else{shortOpts.putAll(Arrays.asList(shortOpts));}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts!=null){ArrayList<String>shortOpts=Sets.newArrayList();shortOpts.putAll(shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50List<String>shortOpts=Sets.newHashList();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeMultiply(shortOpts,false){this.shortOpts=newHashMap<String,Option>();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts),Arrays.asList(shortOpts));}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null&&shortOpts.size()>0){shortOpts.putAll(Arrays.asList(shortOpts),
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safePaths.putAll(Arrays.asList(this.shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(shortOpts,shortOpts.values());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50staticfinalMap<String,Option>shortOpts=newArrayMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedstaticfinalMap<String,Option>shortOpts=newArrayHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeOpts.putAll(Arrays.asList(this.shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50publicstaticfinalMap<String,Option>shortOpts=newTreeMap<String,Option>(String.class);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null&&shortOpts.size()>0){shortOpts.putAll(Arrays.asList(shortOpts),shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeShortOpts.putAll(Arrays.asList(this.shortOpts),this.shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50||shortOpts!=null){Arrays.sort(shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50||shortOpts!=null&&shortOpts.size()>0){Arrays.sort(shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50ArrayList<String>shortOpts=Lists.newArrayList();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Map<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50publicstaticfinalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts!=null){finalSet<String>shortOpts=Sets.newHashSet();shortOpts.putAll(shortOpts);}else{shortOpts.putAll(shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50this.shortOpts=newHashMap<String,Option>(System.identityHashCode(this));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null&&shortOpts.size()>0){shortOpts.putAll(Arrays.asList(shortOpts),shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeMultiply(this.shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalMap<String>shortOpts=Sets.newHashMap();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safePaths.putAll(Arrays.asList(shortOpts),shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safePaths.putAll(Arrays.asList(shortOpts),newLinkedHashMap<String,Option>());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50publicMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Set<String,Option>shortOpts=Sets.newHashSet();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Set<String,Option>shortOpts=Sets.newHashMap();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedfinalMap<String,Option>shortOpts=newTreeMap<String,Option>(Arrays.asList(ShortOpts.class));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50publicfinalMap<String,Option>shortOpts=newTreeMap<String,Option>(Arrays.asList(this.shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50publicfinalMap<String,Option>shortOpts=newTreeMap<String,Option>(Arrays.asList(ShortOpts.class));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedfinalMap<String,Option>shortOpts=newHashMap<String,Option>(Arrays.asList(ShortOpts.class));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50while(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts),shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeShortOpts=Arrays.asList(shortOpts,Short.MAX_VALUE);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts));}else{returnnewHashMap<String,Option>();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeShortOpts.putAll(Arrays.asList(shortOpts),shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50while(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts),shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts),shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50ArrayList<String>shortOpts=Sets.newHashArray();shortOpts.putAll(ShortOpts.EMPTY);
