projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts==null){shortOpts.putAll(Arrays.asList(shortOpts));}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts==null){shortOpts=newHashMap<String,Option>();}else{shortOpts.putAll(shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts==null){shortOpts=newHashMap<String,Option>();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newTreeMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newArrayMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts));}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedfinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Set<String>shortOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Set<String>shortOpts=Sets.newHashSet();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalSet<String>shortOpts=Sets.newHashSet();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50ArrayList<String>shortOpts=Sets.newArrayList();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Set<String>shortOpts=Sets.newHashSet();shortOpts.putAll(ShortOpts.EMPTY);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50staticfinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newArrayMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newTreeMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50staticfinalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newTreeMap<String,Option>(String.class);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(shortOpts,shortOpts.length);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(shortOpts,shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(shortOpts,shortOpts.size());
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Arrays.sort(this.shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50while(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50while(shortOpts!=null&&shortOpts.size()>0){shortOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50this.shortOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50shortOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedfinalMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedfinalMap<String,Option>shortOpts=newArrayMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedfinalMap<String,Option>shortOpts=newTreeMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50List<String>shortOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50ArrayList<String>shortOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50LinkedHashMap<String,Option>shortOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privateMap<String,Option>shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50this.shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50shortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinallongserialVersionUID=System.identityHashCode(SOURCENAME_VERSION);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinallongserialVersionUID=System.identityHashCode(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalMap<String,Option>shortOpts=newLinkedMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null){shortOpts.putAll(Arrays.asList(shortOpts));}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null&&shortOpts.size()>0){shortOpts.putAll(Arrays.asList(shortOpts));}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50While(shortOpts!=null&&shortOpts.size()>0){shortOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeMultiply(shortOpts){this.shortOpts=newHashMap<String,Option>();}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeShortOpts.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeShortOpts=Arrays.asList(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safeShortOpts.putAll(Arrays.asList(this.shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatestaticfinalMap<String,Option>shortOpts=newArrayHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50privatefinalSet<String>shortOpts=Sets.newHashSet();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50finalSet<String>shortOpts=Sets.newHashSet();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50if(shortOpts!=null){Arrays.sort(shortOpts);}
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50protectedstaticfinalMap<String,Option>shortOpts=newLinkedHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50publicfinalMap<String,Option>shortOpts=newTreeMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50pendOpts.putAll(Arrays.asList(pendOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50safePaths.putAll(Arrays.asList(shortOpts));
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50ShortOpts=newHashMap<String,Option>();
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50LinkedHashMap<String,Option>shortOpts=Sets.newHashMap();shortOpts.putAll(shortOpts);
projects/Cli36/src/main/java/org/apache/commons/cli/Options.java50Map<String,Option>shortOpts=newLinkedHashMap<String,Option>();
