projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&(paxHeaders.size()>0)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}else{buffer.writeRecord(paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntry(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.get(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntry();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.writeRecord(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipBytes.put(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,arrayBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){if(addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames||paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.containsKey(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(recordBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,nameLen);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,entryName,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders[i]);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();i++){buffer.writeRecord(paxHeaders[i]);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(recordBuf);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){buffer.writeRecord(paxHeaders);}else{buffer.writeRecord(paxHeaders.get(paxHeaders.size()-1));}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(len);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0,len=paxHeaders.size();i<len;++i){cachedPaxHeaders.put("path",entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswritePaxHeadersForNonAsciiNames(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||paxHeaders.size()>0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames){writePaxHeaders(paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(paxHeaders,addPaxHeadersForNonAsciiNames);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames){writePaxHeaders(paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames||paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>1){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()==0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames||paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,file);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,0,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,dataBuffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,0);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)||writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)||writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){buffer.writeRecord(paxHeaders.get(paxHeaders.size()-1));}else{buffer.writeRecord(paxHeaders.get(paxHeaders
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){buffer.writeRecord(paxHeaders.get(paxHeaders.size()-1));}else{buffer.writeRecord(paxHeaders.get(paxHeaders.size()-1));}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),bigNumberMode);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){paxHeaders.put("path",entryName);}else{buffer.writeRecord(paxHeaders.get(paxHeaders.size()-1));}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(path,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeaders(path,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writeRecord(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.get(0)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()<4){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).recordSize);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).getName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).encoding);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeadersForNonAsciiNames(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314rewritePaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&(paxHeaders.size()>0)&&paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&(paxHeaders.size()>1)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeadersForNonAsciiNames(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()<2){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,archiveEntry.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.get(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,registerPaxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=entry.getValue();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,file);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,file);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.isEmpty()){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||paxHeaders.size()==0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||paxHeaders.size()<0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||paxHeaders.size()<=0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||paxHeaders.size()>=0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||paxHeaders.size()!=0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||paxHeaders.size()<2){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.get(0));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.get(paxHeaders.size()-1));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.writeRecord(paxHeaders.get(paxHeaders.size()-1));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.writeRecord(paxHeaders.get(0));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314hopBuffer.writeRecord(paxHeaders.get(0));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.get(paxHeaders.size()));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(array,paxHeaders,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(entryName,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,buffer,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(buffer,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(assemBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(recordBuf,currBytes);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(assemBuf,recordSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(recordBuf,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(recordBuf,assemBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeadersForNonAsciiNames(paxHeaders,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeadersForNonAsciiNames(paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeadersForNonAsciiNames(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeadersForNonAsciiNames(paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeadersForNonAsciiNames(paxHeaders,encoding,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeadersForNonAsciiNames(paxHeaders,entryName,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeadersForNonAsciiNames(paxHeaders,nameLen);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(fileHeaders,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,fileHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,encoding,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.get(encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.get(entryName+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.get(paxHeaderName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.get(entryName.toLowerCase());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.get(entryName-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.get(entryName)+1;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314StaxUtil.writePaxHeaders(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(array,entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(currName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314hopBuffer.writeRecord(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaths.put(entryName,paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,arrayBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,fileBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,registerPaxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,anchorBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,paxHeaders,nameLen);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders,nameLen);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,0);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(array,paxHeaders,nameLen);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,nameLen+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).encoding);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).encoding);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(0).encoding);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(0).encoding);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(1).encoding);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(PaxHeaders.get(i).encoding);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.get(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames||paxHeaders.get(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(recordBuf);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders.remove(paxHeaders.size()-1)){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(recordBuf);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders.remove(paxHeaders.size()-1)){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(recordBu
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders.remove(paxHeaders.size()-1)){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders.remove(paxHeaders.size()-1)){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders.remove(paxHeaders.size()-1)){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(recordBuf
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){if(!addPaxHeadersForNonAsciiNames&&paxHeaders.get(0)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames||paxHeaders.get(0)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(arrayBuf,addPaxHeadersForNonAsciiNames);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(paxHeaders,entryName,addPaxHeadersForNonAsciiNames);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(array,paxHeaders,addPaxHeadersForNonAsciiNames);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(paxHeaders,encoding,addPaxHeadersForNonAsciiNames);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(paxHeaders,addPaxHeadersForNonAsciiNames,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(paxHeaders,updatePaxHeadersForNonAsciiNames);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(paxHeaders,addPaxHeadersForNonAsciiNames,true);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,registerPaxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){writePaxHeaders(paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames||addPaxHeadersForNonAsciiNames){writePaxHeaders(paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||addPaxHeadersForNonAsciiNames){writePaxHeaders(paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames){writePaxHeaders(paxHeaders,currName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,fileName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileName,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,paxHeaders,fileName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileName,recordSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,fileName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuffer,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,dataBuffer,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,paxHeaders,dataBuffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,dataBuffer,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(recordBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();i++){buffer.writeRecord(paxHeaders[i]);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();i++){buffer.writeRecord(paxHeaders[i]);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeaders(){for(inti=0;i<paxHeaders.size();i++){buffer.writeRecord(paxHeaders[i]);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();i++){buffer.writeRecord(paxHeaders[i]);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders[i]);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();i++){buffer.writeRecord(paxHeaders[i]);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();i++){buffer.writeRecord(paxHeaders[i].getName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314rewritePaxHeaders(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314allowUnclosedEntry(paxHeaders.size()-1)){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendingTargets.add(paxHeaders.size()-1){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314racks.add(paxHeaders.size()-1){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314allowUnclosedEntry(paxHeaders.size()-1){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314allowUnclosedEntry(paxHeaders.size()-1)){thrownewIllegalArgumentException("");
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314allowUnclosedEntry(paxHeaders.size()-2)){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendingTargets.add(paxHeaders.size()-1){thrownewIllegalArgumentException("");
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(recordBuf,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,encoding,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,cachedName,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,cachedName,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(array,paxHeaders,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,fullName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)&&writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames||paxHeaders.contains(entryName)||writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)||writePaxHeaders(entryName,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)||writePaxHeaders(entryName,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)||writePaxHeaders(entryName,entries);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)||writePaxHeaders(entryName,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(paxHeaders,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(paxHeaders,entryName,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(paxHeaders,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(arrayBuf,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,mapHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders.size()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,recordBuf.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileBuf.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeadersForNonAsciiNames(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeadersForNonAsciiNames(path,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeadersForNonAsciiNames(encoding,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeadersForNonAsciiNames(currName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeadersForNonAsciiNames(entryName,paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeadersForNonAsciiNames(entryName,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntry(0);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntryBytes();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntryBytes(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntryByName(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntryCount();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(file,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,file,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,file.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,file.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,file,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,file);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.get(entryName).iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.get(paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.entrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.get(paxHeaders.size()-2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.size()-1;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.size();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,encoding,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,paxHeaders,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,entryName,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,entryName,blockSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,paxHeaders.size(),bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,currName,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,fullName,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders.size()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders.size()-2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders.size()-4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders.get(0));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(paxHeaders,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(array,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(paxHeaders,cachedName,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(paxHeaders,currName,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(paxHeaders,encoding,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(file,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,file,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,file,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,file.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders,file);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,path);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(path,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,fileMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(path,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders(entryName,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders(entryName,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders(entryName,paxHeaders.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(0),entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(0),entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipBytes=!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipBytes=!addPaxHeadersForNonAsciiNames&&buffer.writeRecord(paxHeaders.get(i),entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(PaxHeaders.get(i),entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(arrayBuf,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders.size(),entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipBytes.put(entryName,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipBytes.put(encodedName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipBytes.put(entryName,currSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipBytes.put(encoding,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipBytes.put(entryName,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipBytes.put(entryName,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames||addPaxHeadersForNonAsciiNames){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||addPaxHeadersForNonAsciiNames){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders,entryName,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders,entryName,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(arrayBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders,recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0,len=paxHeaders.size();i<len;++i){cachedPaxHeaders.put("path",entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0,len=paxHeaders.size();i<len;++i){cachedPaxHeaders.put(".path",entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314cachedPaxHeaders.put("path",entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>1){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()<=0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()<2){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(assemBuf,recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,assemBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,assemBuf,recordSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,0,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,0,paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,0,paxHeaders.size()-2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders.size(),0,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,0,paxHeaders.size()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,0,paxHeaders.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,0,paxHeaders.size()-4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,paxHeaders,entryName,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,paxHeaders,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,paxHeaders,entryName,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,paxHeaders,entryName,BigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,entry.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,paxHeaders.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,entryName.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,paxHeaders.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(path,archiveEntry.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(entryName,paxHeaders.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(entry,paxHeaders.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,cachedName,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()<0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>4){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()<2){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314board.writeRecord(paxHeaders.get(paxHeaders.size()-1));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.get(paxHeaders.size()+1));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&(paxHeaders.size()>0)||paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0&&paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders.size()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders.size()-2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders.size()-4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeaders(paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(currName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,currName,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,currSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,currName,recordSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()==0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()==0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames||paxHeaders.size()==0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(entryName,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeaders(entryName,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writePaxHeaders(entryName,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(entryName,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,paxHeaders,entryName,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,paxHeaders,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,paxHeaders,path);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,paxHeaders,entryName,BigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,paxHeaders.size()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,buffer.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,paxHeaders.size()-2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,paxHeaders.size()-4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()<1){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames||paxHeaders.size()>1){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>2){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(currBytes);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.size()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(path,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntry(encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntry(entryName+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntry(encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntry(entryName,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntry(encodingName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntry(entryName,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeaders(recordBuf,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeaders(recordBuf,paxHeaders);}else{buffer.writeRecord(recordBuf);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeaders(recordBuf,paxHeaders);}else{buffer.writeRecord(paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>2){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()<0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||paxHeaders.size()<2){writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||paxHeaders.size()<2){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,paxHeaders,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(buffer,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,buffer,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,buffer,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames){writePaxHeaders(paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames){writePaxHeaders(paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames){writePaxHeaders(path,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314&&!addPaxHeadersForNonAsciiNames){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeadersForNonAsciiNames(paxHeaders,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeadersForNonAsciiNames(paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeadersForNonAsciiNames(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeadersForNonAsciiNames(paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeadersForNonAsciiNames(paxHeaders,file);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeadersForNonAsciiNames(arrayBuf,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisips.put(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipas.put(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders.size(),entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,cachedName,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames||paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writePaxHeaders(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writePaxHeaders(currName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writePaxHeaders(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.copyPaxHeaders(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writePaxHeaders(path,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writePaxHeaders(entryName,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writePaxHeaders(patxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames||addPaxHeadersForNonAsciiNames){writePaxHeaders(paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames){writePaxHeaders(paxHeaders,currName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.writeRecord(recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.writeRecord(paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.writeRecord(currBytes);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.writeRecord(currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.writeRecord(paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,entryName,recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,entryName,arrayBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,entryName,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(arrayBuf,entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,entryName,displayBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,pixHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeaders(arrayBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){if(!addPaxHeadersForNonAsciiNames&&paxHeaders.containsKey(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames||paxHeaders.containsKey(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.containsKey(key)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.containsKey(currName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>1){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames&&paxHeaders.size()<2){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames&&paxHeaders.size()==0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames&&paxHeaders.size()<=0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeaders(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeaders(array,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(path,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(path,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderspaxHeaders=paxHeaders.size();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeaders(path,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writePaxHeaders(path,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames||paxHeaders.size()==0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames||paxHeaders.size()>1){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(currName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,currName,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(entryName,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(array,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeaders(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeaders(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeaders(array,entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314ReadPaxHeaders(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,encoding,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders,encoding,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,arrayBuf,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,recordBuf,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,buffer,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,paxHeaders,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(buffer,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,cache);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(path,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(encoding,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders.size(),entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(patxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314rewritePaxHeadersForNonAsciiNames(paxHeaders,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314rewritePaxHeadersForNonAsciiNames(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314rewritePaxHeadersForNonAsciiNames(paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314rewritePaxHeadersForNonAsciiNames(arrayBuf,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314rewritePaxHeadersForNonAsciiNames(path,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314rewritePaxHeadersForNonAsciiNames(paxHeaders,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314rewritePaxHeadersForNonAsciiNames(paxHeaders,entryName,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,paxHeaders,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(fileBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileBuf,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileBuf,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,fileBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileBuf,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,fileBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writeRecord(currBytes);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writeRecord(currBytes,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writeRecord(paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writeRecord(currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.copyCurrentStructure(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writeRecord(paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writeRecord(recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,assemBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,assemBuf,recordSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).recordSize);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).recordSize);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(0).recordSize);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(0).recordSize);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).recordSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(1).recordSize);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.get(0).recordSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getValue();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=pathHeaders.getValue();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=entries.getValue();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=archiveEntry.getValue();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames.size()){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames.size()<2){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames.size()<1){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames.size(){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames.size()<2){writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),bigNumberMode);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),bigNumberMode);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),BIGNUMBER_STAR);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),BIGNUMBER_STAR);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.get(i),bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),BIGNUMBER_START);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),BigNumberMode);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeadersForNonAsciiNames(arrayBuf);}else{buffer.writeRecord(arrayBuf);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeadersForNonAsciiNames(arrayBuf);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(arrayBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,mapHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(len);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(currBytes);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(currSize);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(0);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(currName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(long);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,file,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(file,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,paxHeaders,file);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,file,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,file.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeaders(paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswritePaxHeaders(paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,encoding,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(recordBuf,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,encoding,BIGNUMBER_STAR);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders[i]);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders[i]);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeaders(){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders[i]);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders[i]);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders[i]);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders[i].getName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders.put("path",entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314hopHeaders.put(entryName,paxHeaders.size()-1));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.put("path",entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314hopHeaders.put(entryName,paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314hopHeaders.put("path",entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,paxHeaders,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,paxHeaders,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,arrayBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,dataBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,map);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)&&writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames||paxHeaders.contains(entryName)||writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.get(entryName)||writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswritePaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswritePaxHeadersForNonAsciiNames(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswritePaxHeadersForNonAsciiNames(entryName,paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswritePaxHeadersForNonAsciiNames(path,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswritePaxHeadersForNonAsciiNames(encoding,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswritePaxHeadersForNonAsciiNames(entryName,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswritePaxHeadersForNonAsciiNames(paxHeaders.size(),entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>1){writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames&&paxHeaders.size()<2){writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames&&paxHeaders.size()<=0){writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames&&paxHeaders.size()==0){writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,cachedName,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(array,paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,0);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeaders(arrayBuf,0,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).getName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).getName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(0).getName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(0).getName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(PaxHeaders.get(i).getName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314For(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(1).getName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(currName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,currName,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,currSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(currName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,archiveEntry);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,fileBuffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuffer,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,dataBuffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.get(paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,0,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,dataBuffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>=0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeaders(arrayBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswritePaxHeadersForNonAsciiNames(path,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswritePaxHeadersForNonAsciiNames(encodedName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswritePaxHeadersForNonAsciiNames(arrayBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders[i]);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders[i]
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders[i]);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders[i
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders.toArray(newString[paxHeaders.size()]));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders.get(entryName));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswritePaxHeadersForNonAsciiNames(arrayBuf,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,paxHeaders.size(),entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,fileEncoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,fileName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileName,recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()==0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).getName()
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).getname());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,nameLen);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,currSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames.size()==0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames.size()>0){writePaxHeaders(paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeadersForNonAsciiNames(paxHeaders,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeadersForNonAsciiNames(arrayBuf,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeadersForNonAsciiNames(paxHeaders,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeadersForNonAsciiNames(paxHeaders,file);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,paxHeaders,fileName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(entryName,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeaders(path,paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,recordHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){writePaxHeaders(paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)){writePaxHeaders(paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames){writePaxHeaders(paxHeaders,path);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DescimalPathUtil.writePaxHeaders(path,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderspaxHeaders=paxHeaders.get(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.get(paxHeaders));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(PaxHeaders.get(paxHeaders.size()-1));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.get(paxHeaders)-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.containsKey(entryName)){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&!ASCII.canEncode(entry.getName())){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders.get(0));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders.get(entryName));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,paxHeaders.get(entryName));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders.size(),recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.containsKey(entryName)||writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames){writePaxHeaders(entryName,paxHeaders.size());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)||writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.containsKey(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeaders(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeaders(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)){writePaxHeaders(paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&(paxHeaders.size()>0)){writePaxHeaders(paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>=0){writePaxHeaders(paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&PaxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,file.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,paxHeaders,file);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,file,recordSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,file.reset());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314rewritePaxHeadersForNonAsciiNames(arrayBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(arrayBuf,entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(patxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeader(paxHeaders,recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(arrayBuf,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(paxHeaders,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(paxHeaders,cacheEncoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>2){writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames(paxHeaders.size())){writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.writeRecord(paxHeaders.get(paxHeaders.size()));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,file);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,file.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paramHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeadersForNonAsciiNames(paxHeaders,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeadersForNonAsciiNames(paxHeaders,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(array,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,buffer,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.containsKey(entryName)||writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeadersarchiveEntry=paxHeaders.get(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders(entryName,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders(arrayBuf,entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders(entryName,currBytes);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders.size(),entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&(paxHeaders.size()>0)){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRe
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(recordBuf);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames||paxHeaders.size()>0){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.get(1)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.get(0)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.get(0)previous){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.get(0)run()){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314rewritePaxHeadersForNonAsciiNames(paxHeaders,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314rewritePaxHeadersForNonAsciiNames(paxHeaders,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314rewritePaxHeadersForNonAsciiNames(paxHeaders,nameLen);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,archiveEntry.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,buffer.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(entryName,archiveEntry.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.copyCurrentStructure(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.copyCurrentStructure(recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeaders(paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeadersForNonAsciiNames(path,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeadersForNonAsciiNames(encodedName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeadersForNonAsciiNames(arrayBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.get(i).encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).encoding,bigNumberMode);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(paxHeaders,fileBuf,addPaxHeadersForNonAsciiNames);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(paxHeaders,0);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(paxHeaders,addPaxHeadersForNonAsciiNames,recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(paxHeaders,addPaxHeadersForNonAsciiNames,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeadersForNonAsciiNames(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileBuffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,dataBuffer.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuffer,dataHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders.size(),0);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();i++){buffer.writeRecord(paxHeaders[i]);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();i++){buffer.writeRecord(paxHeaders[i]
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();i++){buffer.writeRecord(paxHeaders
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();i++){buffer.writeRecord(paxHeaders[i
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();i++){buffer.writeRecord
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames){for(inti=0;i<paxHeaders.size();i++){buffer.writeRecord(paxHeaders[i]);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),bigNumberMod
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),bigNumb
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),bigNumber
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),bigNumberMode
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,fileEncoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,registerPaxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()==4){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writePaxHeaders(arrayBuf,entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writePaxHeaders(recordBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writePaxHeaders(array,entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(arrayBuf,entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(recordBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(arrayBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(paxHeaders,archiveEntry.getRecordName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeaders(arrayBuf,entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeaders(recordBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.iterator();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.entrySet().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,archiveBuf.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,buffer.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,fileHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,fileHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileHeaders.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0,len=paxHeaders.size();i<len;++i){cachedPaxHeaders.put(",path",entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314allowNonAsciiNames(paxHeaders.size()-1){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314allowNonAsciiNames(paxHeaders.size()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314allowInvalidArchiveEntry(paxHeaders.size()-1){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314allowNonAsciiNames(paxHeaders.size()-2){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314allowNonAsciiNames(paxHeaders.size()-1)){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314allowNonAsciiNames(paxHeaders.get(0)){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()==1){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>=1){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.get(i).recordSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(PaxHeaders.get(i).recordSize);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),recordSize);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(headers.get(i).recordSize);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.copyRecord(recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.copyCurrentStructure(recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames||(paxHeaders.size()>0)&&paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&(paxHeaders.size()>0)&&paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,0,buffer.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,0,recordBuf.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,0,fileHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,0,arrayBuf.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(recordBuf,0);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(recordBuf,currSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.canEncode(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(len);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipBytes.put(entryName,currBytes);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipBytes.put(entryName,currBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders,0);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders.size(),encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,0,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,file);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeadersfile=paxHeaders.get(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.get(i),entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),entryName,bigNumberMode);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),entryName,BIGNUMBER_POSIX);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=cacheEntry.getValue();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=this.archiveEntry.getValue();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,bigNumberMode,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,fileName,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,nameLen,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)||writePaxHeaders(entryName,paxHeaders.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=archiveEntry.getEntry(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntry(path);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(paxHeaders,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(paxHeaders,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(path,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileBuf,recordSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileBuf,currSize);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileBuf,0);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,paxHeaders,0);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,paxHeaders,path);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,buffer,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames||paxHeaders.size()>0){writePaxHeaders(paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames(paxHeaders.size())){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.get(entryName).next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.values().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.get(entry.getValue());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.values().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeadersForNonAsciiNames(patxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(recordBuf,assemLen);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders,true);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(paxHeaders,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(arrayBuf,paxHeaders,addPaxHeadersForNonAsciiNames);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(paxHeaders,b,addPaxHeadersForNonAsciiNames);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(paxHeaders,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314[Delete]
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314allowInvalidArchiveEntry(entryName,paxHeaders.size()-1)){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314allowInvalidArchiveEntry(entryName,paxHeaders.size())){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314allowInvalidArchiveEntry(entryName,paxHeaders.size()-1){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314allowUnclosedEntry(entry.getName(),entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314allowInvalidArchiveEntry(entry.getName(),entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314allowInvalidArchiveEntry(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames.size()<4){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames.size()>1){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)||writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,fileHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314finalbooleanaddPaxHeadersForNonAsciiNames=paxHeaders.size()>0;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeadersForNonAsciiNames(entryName,paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders(entryName,paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileName,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileName,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.get(entryName.toString());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(entryName!=null){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders[i]);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.writeRecord(paxHeaders[i]);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders[i].getEntryName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();i++){buffer.writeRecord(paxHeaders[i].getEntryName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();i++){buffer.writeRecord(PaxHeaders[i]);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(path,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(array,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,entryName,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileEncoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,archiveEntry);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)||writePaxHeaders(entryName,4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendingRecords=buffer.writeRecord(paxHeaders.get(paxHeaders.size()-1));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendingPath=paxHeaders.get(paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendingPath=buffer.writeRecord(paxHeaders.get(paxHeaders.size()-1));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendingRecords=buffer.writeRecord(paxHeaders.get(0));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeader(paxHeaders,entry.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,entryName.toString());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntry(currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writePaxHeaders(entryName,paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,entryName,BIGNUMBER_STAR);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(headers.get(i).getName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(patxHeaders.get(i).getName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&PaxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.writeRecord(paxHeaders.get(0),entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.writeRecord(paxHeaders.get(entryName));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.writeRecord(paxHeaders.get(paxHeaders.size()-1),entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaderForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writer.writePaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames.contains(paxHeaders.size())){writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writeRecord(paxHeaders.get(0));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314EncoderUtil.writePaxHeaders(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,file.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,file.getParent());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,archiveEntry.getEncoding());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0,len=recordHeaders.size();i<len;++i){buffer.writeRecord(recordBuf);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0,len=paxHeaders.size();i<len;--i){buffer.writeRecord(recordBuf);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<String,ArchiveEntry>entry=paxHeaders.get(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeader(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,file.getParent());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,file,nameLen);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswritePaxHeadersForNonAsciiNames(patxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswrapPaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeadersForNonAsciiNames(paxHeaders,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(paxHeaders,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(paxHeaders,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(paxHeaders,archiveEntry.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,archiveEntry.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,encoding,BIGNUMBER_STAR);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(paxHeaders,file);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(paxHeaders,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(paxHeaders,entryName,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders,entryName,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders,entryName,BigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeaders(paxHeaders,0,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(entry.isDirectory()){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),bigNumberMode);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.get(entryName),bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),BIGNUMBER_POSIX);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(0),bigNumberMode);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314parsePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(patxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,cachedName,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,cachedName,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeadersForNonAsciiNames(array,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),entries.getEntryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,recordBuf,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,b);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,cachedName,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.get(paxHeaders
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(entry.isDirectory()){if(paxHeaders.size()>0){buffer.writeRecord(paxHeaders.get(paxHeaders.size()-1));}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(entry.isDirectory()){if(paxHeaders.size()>0){buffer.writeRecord(paxHeaders.get(0));}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(entry.isDirectory()){if(paxHeaders.size()>1){buffer.writeRecord(paxHeaders.get(paxHeaders.size()-1));}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders.get(paxHeaders,entryName));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeaders(path,recordBuf);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswritePaxHeaders(path,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeaders(path,archiveEntry.getPath());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileBuf,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileBuf,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(headers.get(i).encoding);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,cachedName,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeaders(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(patxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||paxHeaders.size()<4){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(recordBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(recordHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,entryName,fileHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeadersForNonAsciiNames(arrayBuf,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314rewritePaxHeadersForNonAsciiNames(paxHeaders,file);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314rewritePaxHeadersForNonAsciiNames(paxHeaders,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames||paxHeaders.size()>0){writePaxHeaders(paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,paxHeaders.toArray(newString[paxHeaders.size()]));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,paxHeaders.get(0));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&PaxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames.contains(entryName)&&paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders,entryName,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314sweepPaxHeaders(entryName,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeaders(currName,paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.writeRecord(recordHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,dataBuffer,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders.get(entryName),entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_verifyValueWrite("writepath'"+paxHeaders.size()+"'");
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,file.getParent());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,file.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames(paxHeaders)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,paxHeaders,entryName,BIGNUMBER_POSIX);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendingRecord=buffer.writeRecord(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendingPath=buffer.writeRecord(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPath();
