projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&(paxHeaders.size()>0)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}else{buffer.writeRecord(paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntry(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.get(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.getEntry();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314paint.writeRecord(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipBytes.put(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,arrayBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){if(addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames||paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.containsKey(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(recordBuf,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,nameLen);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(arrayBuf,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(array,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,entryName,bigNumberMode);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders[i]);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();i++){buffer.writeRecord(paxHeaders[i]);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(recordBuf);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){buffer.writeRecord(paxHeaders);}else{buffer.writeRecord(paxHeaders.get(paxHeaders.size()-1));}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0,len=paxHeaders.size();i<len;++i){buffer.writeRecord(len);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0,len=paxHeaders.size();i<len;++i){cachedPaxHeaders.put("path",entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,currName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,cachedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaderswritePaxHeadersForNonAsciiNames(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeadersForNonAsciiNames(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314scanPaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||paxHeaders.size()>0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames){writePaxHeaders(paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeaders(paxHeaders,addPaxHeadersForNonAsciiNames);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames){writePaxHeaders(paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames||paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()>1){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314||!addPaxHeadersForNonAsciiNames.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()==0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(array,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames||paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,encodedName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,file);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,0,paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,dataBuffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf,0);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)||writePaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.contains(entryName)||writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){buffer.writeRecord(paxHeaders.get(paxHeaders.size()-1));}else{buffer.writeRecord(paxHeaders.get(paxHeaders
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){buffer.writeRecord(paxHeaders.get(paxHeaders.size()-1));}else{buffer.writeRecord(paxHeaders.get(paxHeaders.size()-1));}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314buffer.writeRecord(recordBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),bigNumberMode);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){paxHeaders.put("path",entryName);}else{buffer.writeRecord(paxHeaders.get(paxHeaders.size()-1));}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(arrayBuf);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(arrayBuf,entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(path,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314WritePaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeaders(path,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314DeserializationPlugin.writePaxHeaders(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314pendPaxHeaders(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314nisipByteBuffer.writeRecord(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.get(0)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.size()<4){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).recordSize);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).getName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i),entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){for(inti=0;i<paxHeaders.size();++i){buffer.writeRecord(paxHeaders.get(i).encoding);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314PaxHeaders.writePaxHeadersForNonAsciiNames(entryName,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314rewritePaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314readPaxHeadersForNonAsciiNames(paxHeaders,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&(paxHeaders.size()>0)&&paxHeaders.contains(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&(paxHeaders.size()>1)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeadersForNonAsciiNames(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()<2){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(paxHeaders.size()>0){writePaxHeaders(entryName,paxHeaders,entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314_writePaxHeaders(paxHeaders,archiveEntry.getName());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314if(!addPaxHeadersForNonAsciiNames&&paxHeaders.get(entryName)){writePaxHeaders(entryName,paxHeaders);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,registerPaxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=entry.getValue();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314Entry<K,V>entry=paxHeaders.iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,file);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeaders(paxHeaders,fileName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,file);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java314writePaxHeadersForNonAsciiNames(paxHeaders,buffer);
