bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  currSize  =  0L;  [CE]  illegal  start  of  type  [FE]    IOException  [CONTEXT]  writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  [BUGGY]  currSize  =  0L;  [BUGGY]  }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  0L;	currSize  =  0;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  currSize  =  BigInteger.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]      IOException  [CONTEXT]  writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  [BUGGY]  currSize  =  BigInteger.MAX_VALUE;  [BUGGY]  }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigInteger.MAX_VALUE;	currSize  =  0;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  currSize  =  1;  [CE]  illegal  start  of  type  [FE]        IOException  [CONTEXT]  writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  [BUGGY]  currSize  =  1;  [BUGGY]  }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  1;	currSize  =  0;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  currSize  =  BigInteger.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]          IOException  [CONTEXT]  writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  [BUGGY]  currSize  =  BigInteger.MIN_VALUE;  [BUGGY]  }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigInteger.MIN_VALUE;	currSize  =  0;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  currSize  =  BigInteger.parseBigInteger(entryName);  [CE]  illegal  start  of  type  [FE]            IOException  [CONTEXT]  writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  [BUGGY]  currSize  =  BigInteger.parseBigInteger(entryName);  [BUGGY]  }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigInteger.parseBigInteger(entryName);	currSize  =  0;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]  currSize  =  BigDecimal.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]              IOException  [CONTEXT]  writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  [BUGGY]  currSize  =  BigDecimal.MAX_VALUE;  [BUGGY]  }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigDecimal.MAX_VALUE;	currSize  =  0;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                IOException  [CONTEXT]  writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  [BUGGY]    [BUGGY]  }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	  	currSize  =  0;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
8	[BUG]  [BUGGY]  currSize  =  4;  [CE]  illegal  start  of  type  [FE]    IOException  [CONTEXT]  writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  [BUGGY]  currSize  =  4;  [BUGGY]  }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  4;	currSize  =  0;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  currSize  =  LONGFILE_GNU;  [CE]  illegal  start  of  type  [FE]    IOException  [CONTEXT]  writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  [BUGGY]  currSize  =  LONGFILE_GNU;  [BUGGY]  }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  LONGFILE_GNU;	currSize  =  0;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
