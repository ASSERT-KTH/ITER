bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  currSize  =  BigDecimal.MAX_VALUE  +  1;  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BigDecimal.MAX_VALUE  +  1;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigDecimal.MAX_VALUE  +  1;	  currSize    =    BigDecimal.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2	[BUG]  [BUGGY]  currSize  =  BigDecimal.MAX_VALUE  -  1;  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BigDecimal.MAX_VALUE  -  1;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigDecimal.MAX_VALUE  -  1;	  currSize    =    BigDecimal.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
3	[BUG]  [BUGGY]  currSize  =  BigDecimal.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BigDecimal.MIN_VALUE;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigDecimal.MIN_VALUE;	  currSize    =    BigDecimal.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  currSize  =  BigDecimal.MAX_VALUE  /  2;  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BigDecimal.MAX_VALUE  /  2;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigDecimal.MAX_VALUE  /  2;	  currSize    =    BigDecimal.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  currSize  =  entry.getSize();  [CE]  illegal  start  of  type  [FE]                          IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  entry.getSize();  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  entry.getSize();	  currSize    =    BigDecimal.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
6	[BUG]  [BUGGY]  currSize  =  2;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  2;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  2;	  currSize    =    4;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  currSize  -=  4;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  -=  4;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  -=  4;	  currSize    =    4;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  currSize  =  recordSize;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  recordSize;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  recordSize;	  currSize    =    4;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  currSize  =  BigInteger.MIN_VALUE  +  1;  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BigInteger.MIN_VALUE  +  1;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigInteger.MIN_VALUE  +  1;	  currSize    =    BigInteger.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  currSize  =  BigInteger.MIN_VALUE  -  1;  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BigInteger.MIN_VALUE  -  1;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigInteger.MIN_VALUE  -  1;	  currSize    =    BigInteger.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  currSize  =  BigInteger.MIN_VALUE  /  2;  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BigInteger.MIN_VALUE  /  2;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigInteger.MIN_VALUE  /  2;	  currSize    =    BigInteger.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  currSize  =  Integer.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  Integer.MIN_VALUE;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  Integer.MIN_VALUE;	  currSize    =    BigInteger.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  currSize  =  BigInteger.MAX_VALUE  +  1;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BigInteger.MAX_VALUE  +  1;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigInteger.MAX_VALUE  +  1;	  currSize    =    BigInteger.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  currSize  =  BigInteger.MAX_VALUE  -  1;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BigInteger.MAX_VALUE  -  1;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigInteger.MAX_VALUE  -  1;	  currSize    =    BigInteger.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  currSize  =  BigInteger.MAX_VALUE  /  2;  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BigInteger.MAX_VALUE  /  2;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigInteger.MAX_VALUE  /  2;	  currSize    =    BigInteger.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  currSize  =  0l;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  0l;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  0l;	  currSize    =    0L;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  currSize  -=  0L;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  -=  0L;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  -=  0L;	  currSize    =    0L;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  currSize  =  0x7F;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  0x7F;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  0x7F;	  currSize    =    0L;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
19	[BUG]  [BUGGY]  currSize  =  entry.parseBigInteger(currName);  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  entry.parseBigInteger(currName);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  entry.parseBigInteger(currName);	  currSize    =    BigInteger.parseBigInteger(entryName);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  currSize  =  entryName.parseBigInteger(BigInteger.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  entryName.parseBigInteger(BigInteger.MAX_VALUE);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  entryName.parseBigInteger(BigInteger.MAX_VALUE);	  currSize    =    BigInteger.parseBigInteger(entryName);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  currSize  =  BigInteger.parseBigInteger(currName);  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BigInteger.parseBigInteger(currName);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigInteger.parseBigInteger(currName);	  currSize    =    BigInteger.parseBigInteger(entryName);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  currSize  =  BigInteger.parseBigDecimal(entryName);  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BigInteger.parseBigDecimal(entryName);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigInteger.parseBigDecimal(entryName);	  currSize    =    BigInteger.parseBigInteger(entryName);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  int  currSize  =  BigInteger.parseBigInteger(entryName);  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  int  currSize  =  BigInteger.parseBigInteger(entryName);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	int  currSize  =  BigInteger.parseBigInteger(entryName);	  currSize    =    BigInteger.parseBigInteger(entryName);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  currSize  =  entry.parseBigInteger(entryName);  [CE]  illegal  start  of  type  [FE]                          IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  entry.parseBigInteger(entryName);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  entry.parseBigInteger(entryName);	  currSize    =    BigInteger.parseBigInteger(entryName);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  writePaxHeaders(currName,  paxHeaders);  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  writePaxHeaders(currName,  paxHeaders);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	writePaxHeaders(currName,  paxHeaders);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
26	[BUG]  [BUGGY]  writePaxHeadersForNonAsciiNames(currName,  paxHeaders);  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  writePaxHeadersForNonAsciiNames(currName,  paxHeaders);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	writePaxHeadersForNonAsciiNames(currName,  paxHeaders);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  writePaxHeaders(currName,  paxHeaders);  buffer.writeRecord(currBytes);  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  writePaxHeaders(currName,  paxHeaders);  buffer.writeRecord(currBytes);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	writePaxHeaders(currName,  paxHeaders);  buffer.writeRecord(currBytes);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  writePaxHeadersForNonAsciiNames(currName);  [CE]  illegal  start  of  type  [FE]                          IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  writePaxHeadersForNonAsciiNames(currName);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	writePaxHeadersForNonAsciiNames(currName);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
29	[BUG]  [BUGGY]  writePaxHeadersForNonAsciiNames(currName,  hasUnclosedEntry);  [CE]  illegal  start  of  type  [FE]                            IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  writePaxHeadersForNonAsciiNames(currName,  hasUnclosedEntry);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	writePaxHeadersForNonAsciiNames(currName,  hasUnclosedEntry);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  writePaxHeadersForNonAsciiNames(entryName,  paxHeaders);  [CE]  illegal  start  of  type  [FE]                              IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  writePaxHeadersForNonAsciiNames(entryName,  paxHeaders);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	writePaxHeadersForNonAsciiNames(entryName,  paxHeaders);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
31	[BUG]  [BUGGY]  writePaxHeaders(currName,  encoding,  bigNumberMode);  [CE]  illegal  start  of  type  [FE]                                IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  writePaxHeaders(currName,  encoding,  bigNumberMode);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	writePaxHeaders(currName,  encoding,  bigNumberMode);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  currSize  =  1L;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  1L;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  1L;	  currSize    =    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  currSize  =  MAX_QUOTE;  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  MAX_QUOTE;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  MAX_QUOTE;	  currSize    =    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
34	[BUG]  [BUGGY]  currSize  =  LONGFILE_GNU  +  1;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  LONGFILE_GNU  +  1;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  LONGFILE_GNU  +  1;	  currSize    =    LONGFILE_GNU;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  currSize  =  BIGNUMBER_POSIX;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BIGNUMBER_POSIX;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BIGNUMBER_POSIX;	  currSize    =    LONGFILE_GNU;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
36	[BUG]  [BUGGY]  currSize  =  LONGFILE_GNU  -  1;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  LONGFILE_GNU  -  1;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  LONGFILE_GNU  -  1;	  currSize    =    LONGFILE_GNU;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
37	[BUG]  [BUGGY]  currSize  =  BigDecimal.MAX_VALUE  +  4;  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BigDecimal.MAX_VALUE  +  4;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigDecimal.MAX_VALUE  +  4;	  currSize    =    BigDecimal.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
38	[BUG]  [BUGGY]  currSize  =  BigDecimal.MAX_VALUE  +  2;  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BigDecimal.MAX_VALUE  +  2;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigDecimal.MAX_VALUE  +  2;	  currSize    =    BigDecimal.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
39	[BUG]  [BUGGY]  currSize  =  Long.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  Long.MAX_VALUE;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  Long.MAX_VALUE;	  currSize    =    BigDecimal.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
40	[BUG]  [BUGGY]  currSize  =  BigInteger.parseBigDecimal(currName);  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BigInteger.parseBigDecimal(currName);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigInteger.parseBigDecimal(currName);	  currSize    =    BigInteger.parseBigInteger(entryName);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  currSize  =  BigDecimal.parseBigInteger(currName);  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  BigDecimal.parseBigInteger(currName);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  BigDecimal.parseBigInteger(currName);	  currSize    =    BigInteger.parseBigInteger(entryName);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  currSize  =  fileLength;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  fileLength;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  fileLength;	  currSize    =    4;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
43	[BUG]  [BUGGY]  buffer.writeDirectory(currBytes);  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  buffer.writeDirectory(currBytes);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	buffer.writeDirectory(currBytes);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  writePaxHeadersForNonAsciiNames(currName,  haveUnclosedEntry);  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  writePaxHeadersForNonAsciiNames(currName,  haveUnclosedEntry);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	writePaxHeadersForNonAsciiNames(currName,  haveUnclosedEntry);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
45	[BUG]  [BUGGY]  currSize  =  0F;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  0F;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  0F;	  currSize    =    0L;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
46	[BUG]  [BUGGY]  currSize  =  Long.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  Long.MIN_VALUE;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  Long.MIN_VALUE;	  currSize    =    BigInteger.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
47	[BUG]  [BUGGY]  currSize  =  bigNumberMode;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  bigNumberMode;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  bigNumberMode;	  currSize    =    LONGFILE_GNU;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
48	[BUG]  [BUGGY]  writePaxHeadersForNonAsciiNames(entryName);  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  writePaxHeadersForNonAsciiNames(entryName);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	writePaxHeadersForNonAsciiNames(entryName);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
49	[BUG]  [BUGGY]  writePaxHeadersForNonAsciiNames(entryName,  haveUnclosedEntry);  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  writePaxHeadersForNonAsciiNames(entryName,  haveUnclosedEntry);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	writePaxHeadersForNonAsciiNames(entryName,  haveUnclosedEntry);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
50	[BUG]  [BUGGY]  writePaxHeadersForNonAsciiNames(entryName,  hasUnclosedEntry);  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  writePaxHeadersForNonAsciiNames(entryName,  hasUnclosedEntry);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	writePaxHeadersForNonAsciiNames(entryName,  hasUnclosedEntry);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
51	[BUG]  [BUGGY]  currSize  =  LONGFILE_TRUNCATE;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  LONGFILE_TRUNCATE;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  LONGFILE_TRUNCATE;	  currSize    =    0L;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  currSize  =  LONGFILE_GNU.length;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  LONGFILE_GNU.length;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  LONGFILE_GNU.length;	  currSize    =    0L;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
53	[BUG]  [BUGGY]  currSize  =  LONGFILE_GNU,  haveUnclosedEntry;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  LONGFILE_GNU,  haveUnclosedEntry;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  LONGFILE_GNU,  haveUnclosedEntry;	  currSize    =    LONGFILE_GNU;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
54	[BUG]  [BUGGY]  currSize  =  entry.size();  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  entry.size();  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  entry.size();	  currSize    =    BigDecimal.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
55	[BUG]  [BUGGY]  currSize  =  entry.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  entry.MAX_VALUE;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  entry.MAX_VALUE;	  currSize    =    BigDecimal.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
56	[BUG]  [BUGGY]  currSize  =  entryName.parseBigInteger(bigNumberMode);  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  entryName.parseBigInteger(bigNumberMode);  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  entryName.parseBigInteger(bigNumberMode);	  currSize    =    BigInteger.parseBigInteger(entryName);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
57	[BUG]  [BUGGY]  currSize  =  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    writePaxHeaders(entryName,  paxHeaders);  }  entry.writeEntryHeader(recordBuf,  encoding,  bigNumberMode  ==  BIGNUMBER_STAR);  buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {    [BUGGY]  currSize  =  Integer.MAX_VALUE;  [BUGGY]    }  else  {  currSize  =  entry.getSize();  }  currName  =  entryName;  haveUnclosedEntry  =  true;  }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  encoding  entryName  Map  paxHeaders  ByteBuffer  encodedName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  nameLen  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.5773502691896258	324	324	1	replace	currSize  =  Integer.MAX_VALUE;	  currSize    =    BigInteger.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
