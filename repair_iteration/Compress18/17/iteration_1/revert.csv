projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(64);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(100);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(16);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length()+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(0,name.length()-1));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(0,name.length()));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length()+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length()+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.getBytes());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,separator);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator+name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getKey();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){addPaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(100,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(10);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(128);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(100,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName),TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.HARD_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.BASE_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()*2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(32);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(40);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(60);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(1080);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(4096);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(buffer,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(512);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256L);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()+10);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,headers.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames(entry);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entryName=headers.entrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+10);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length()+10);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(1));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){headers.put(entryName,pex);}else{headers.put(entryName,pex);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){pex.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(entry.getKey().equals(entryName)){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeadersForNonAsciiNames);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.toString());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1,headers.length());
