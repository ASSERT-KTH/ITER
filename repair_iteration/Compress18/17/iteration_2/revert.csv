projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(64);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(100);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(16);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length()+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(0,name.length()-1));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(0,name.length()));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length()+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length()+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.getBytes());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,separator);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator+name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getKey();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){addPaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(100,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(10);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(128);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(100,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName),TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.HARD_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.BASE_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()*2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(32);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(40);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(60);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(1080);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(4096);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(buffer,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(512);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256L);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()+10);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,headers.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames(entry);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entryName=headers.entrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+10);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length()+10);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(1));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){headers.put(entryName,pex);}else{headers.put(entryName,pex);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){pex.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(entry.getKey().equals(entryName)){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeadersForNonAsciiNames);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.toString());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1,headers.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()*1,headers.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1,pex.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length()+1,headers.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(0,headers.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1,names.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1,headers.length()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName),TarConstants.LF_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName),TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(name),TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName),TarConstants.LF_PAX_EXTENDED_HEADER_LC,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465finalStringWriterw=newStringWriter(stripTo7Bits(entryName),TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName),TarConstants.LP_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(Name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(bean.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(geometry.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(10000);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(1024);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(6496);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(3296);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){addPaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465For(Map.Entry<String,String>entry:headers.entrySet()){addPaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465For(Map.Entry<String,String>entry:headers.entrySet()){for(Map.Entry<String,String>entry:headers.entrySet()){addPaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.keySet()){addPaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:pex.entrySet()){addPaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465For(Map.Entry<String,String>entry:headers.entrySet()){for(Map.Entry<String,String>entry:headers.entrySet()){addPaxHeadersForNonAsciiNames(entryName
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()*4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator,name,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator,name,TarConstants.ALLOW_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator,name,TarConstants.FOR_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,segment);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator,name,TarConstants.DEFAULT_SEPARATOR);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(buffer,name,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName),name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(buffer,name,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(buffer,name,TarConstants.DEFAULT_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(buffer,name,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(buffer,name,TarConstants.BASE_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entryName=headers.get(0).iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entryName=headers.get(name).iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entryName=headers.keySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entryName=headers.get(entryName).iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entryName=pex.entrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entryName=headers.iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name+1,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName,name));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(name));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName),headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName),pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName,headers));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName,pex));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(segments.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()*4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(segmentCount());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(segment.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()*1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()*1000);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()*2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(1080,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(1080,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(1096);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.FIRST_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.DEFAULT_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.FOR_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.LF_PAX_EXTENDED_WARNING);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.LF_PAX_EXTENDED_HeADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465finalStringWriterw=newStringWriter(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.LP_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.WRITE_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(0,name.length()+1));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(0,name.length()1));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(0,name.length()),name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(0,name.length()-2));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(0,name.length()*1));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(40,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,name+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(10,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,name,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(4096,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(pex.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.length()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(pax.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(headers.length()));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName),headers.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,name.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,headers.length+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(40,headers.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(100,headers.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,headers.length-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,pex.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(10,headers.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,pex.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,pex.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers.size()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,pex.headers.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers.size()-2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers.size()+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator.length()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator,pex.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator.toString());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator.length()+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.size()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.size()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(pex.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(paxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.size()+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(64,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(32,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name,TarConstants.BASE_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name,TarConstants.DEFAULT_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.BASE_PAX_EXTENDED_HEADER_LC,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.BASE_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.BASE_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465finalStringWriterw=newStringWriter(name,TarConstants.BASE_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.BASE_PAX_EXTENDED_HEADER_LC+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.toString()+"n");
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.toString()+":");
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(10,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length+5);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length+8);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465finalMap.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:pex.entrySet()){if(!addPaxHeadersForNonAsciiNames){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465For(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(addPaxHeadersForNonAsciiNames){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()*3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(pex.getBytes());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.getBytes(),name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.getBytes("UTF-8"));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.getBytes(CharsetNames.UTF_8));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.getBytes(CharacterEncodingNames.UTF_8));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.getBytes()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.getBytes(),pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name+separator);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator+name,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name+separatator);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator+name,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator+entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator+name,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*1000);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(100,name+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(500,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(50,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:pex.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames(entry);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465For(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames(entry);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465finalMap.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames(entry);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames(entry);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length()*1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(10,10);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*4+name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*4+name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*4+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*8);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(1,name.length()));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(0,pex.length()));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(0,name.length()+2));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(2,name.length()));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1,name.length()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1,name.length()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()*1,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1,name.length()+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length()+1,length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()*10);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:pex.entrySet()){if(!addPaxHeadersForNonAsciiNames){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465For(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465finalMap.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(addPaxHeadersForNonAsciiNames){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){thrownewIllegalArgumentException("".);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeadersForNonAsciiNames,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeadersForNonAsciiNames,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465finalStringWriterw=newStringWriter(writePaxHeadersForNonAsciiNames);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeadersForPaxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeadersForNonAsciiNames,headers.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeadersForNonAsciiNames,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.HARD_PAX_EXTENDED_HEADER_LC,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.HARD_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.HARD_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465finalStringWriterw=newStringWriter(name,TarConstants.HARD_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getKey();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers==null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getKey();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers==null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entry=headers.entrySet();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers,separator);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(entryName,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(buffer,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()*1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){headers.put(entryName,pex);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entry=headers.entrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){headers.put(entryName,name);}else{headers.put(entryName,pex);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465headers.put(entryName,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465For(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()+1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(1,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(1,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,pex.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers.length+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,pex.headers.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,name.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,pex.getHeaders().length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers.length+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(100,name.length()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(100,name.length()+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(40,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(100,name.length()+10);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(500,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(50,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465For(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(1,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()*2+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()*2+name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()*2+name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*2+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*2+name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*2+name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*2+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsci
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:pex.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465For(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.keySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465finalMap.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){pex.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){pex.append(entry.getValue());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){pex.append(entry.getValue());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>pex:headers.entrySet()){pex.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){Pex.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){pex.append(entry.getName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length,name,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length,pex.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465w=newStringWriter(name,length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(entry.getValue().equals(entryName)){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465finalMap.Entry<String,String>entry:headers.entrySet()){if(entry.getKey().equals(entryName)){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465For(Map.Entry<String,String>entry:headers.entrySet()){if(entry.getKey().equals(entryName)){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){if(entry.getKey().equals(entryName)){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(entry.getKey().equals(entryName)||entry.getValue().equals(entryName)){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entry:headers.entrySet()){if(entry.getKey().equals(entryName)){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(60,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(entryName!=null){for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465while(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getValue());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getValue());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465while(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getValue());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name.length()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name.length()+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(32,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name.length()+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(64,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name.length()+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name.length()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.SECOND_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.HARD_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(0,TarConstants.LF_PAX_EXTENDED_HEADER_LC));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(2));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(1,TarConstants.LF_PAX_EXTENDED_HEADER_LC));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(1),name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(0,len));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(255);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,len);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()*10);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length().length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()*3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(sep.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName),TarConstants.DEFAULT_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName),TarConstants.ALLOW_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers.length-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers.length+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers.length+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.charAt(0));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name.length()+10);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,headers.length+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,headers.length+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsci
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.keySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames(entry);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.values()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames(entry);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>header:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames(header);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator,name,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,separatator);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>header:headers.entrySet()){pex.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>header:headers.entrySet()){pex.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.keySet()){if(!addPaxHeadersForNonAsciiNames){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){thrownewIllegalArgumentException(".");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.ALLOW_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*2+name.charAt(0));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.length()+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.length()+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.length()+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.length()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers==null){for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>header:headers.entrySet()){buffer.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Preconditions.checkState(headers!=null);for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>header:headers.entrySet()){buffer.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(width,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length()*10);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1,name.length(),pex.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length()+1,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(buffer,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(buffer,name+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length,headers.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length,name+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.HARD_PAX_EXTENDED_HEADER_LC+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1,headers.length(),pex.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1,headers.length(),name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers==null){for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.keySet()){if(!addPaxHeadersForNonAsciiNames){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()/2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeadersForNonAsciiNames());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeadersForNonAsciiNames(name));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeadersForNonAsciiNames.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeaders.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeadersForNonAsciiNames.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.LB_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarBuffer.DEFAULT_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarBuffer.WRITE_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>header:headers.entrySet()){addPaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.values()){addPaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.iterator()){addPaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){removePaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator.length()+name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entryName=headers.entrySet().iterator();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entryName=headers.entrySet().iterator().first();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entryName=headers.getValue().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entryName=headers.values().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465FileWriterw=newStringWriter(length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>headers=headers.get(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Headers.put(entryName,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(0,name.length()-1)+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeadersForNonAsciiNames+name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){Map.Entry<String,String>entry:headers.entrySet()){if(entry.getKey().equals(entryName)){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(entry.getName().equals(entryName)){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.keySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>header:headers.entrySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.values()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name+8);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name+5);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(headers));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName,headers.length));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(40*headers.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.keySet()){name=entry.getKey();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.values()){name=entry.getKey();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>header:headers.entrySet()){name=entry.getKey();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,name+10);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,name+100);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiName
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(6096);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(500);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.trim());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers.size()+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers.get(0));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.keySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.size()+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.size()+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.get(0));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(60*headers.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.keySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entries.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(1,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeadersForNonAsciiNames+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeadersForNonAsciiNames,headers.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(0,pex.length()-1));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1,name.length()+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeadersForNonAsciiNames.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,Entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length*2+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(zipHeaders,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,name,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(16,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(256,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(100,headers.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(16,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(mean.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.getBytes(CharacterNames.UTF_8));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeaders.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stack.size());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size()*2+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(0,name.length()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames||!addPaxHeadersForNonAsciiNames){addP
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.RB_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.FT_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(zipHeaders.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.toString()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames(entry
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!this.addPaxHeadersForNonAsciiNames){addPaxHeadersForNonAsciiNames(entry);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){Pex.append(entry.getValue());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(separator,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(zipHeaders,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()*headers.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length()+1,headers.length()+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,pex.getHeaders());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,pex.toString());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.BIG_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(size+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entryName=headers.entrySet().iterator().remove();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>entryName=headers.sentrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){addPaxHeaderForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){addingPaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){AddPaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName),TarConstants.HALF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,headers.length*2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.length()10);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(100,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(buffer,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465Entry<String,String>headers=headers.entrySet();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getString());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){thrownewIllegalArgumentException(""));}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers==null){for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stripTo7Bits(entryName,headers.size()));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers.size()-2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,Entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,pex.headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(headers,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(length+1,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(name.substring(4,name.length()));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(stack.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(entry.getKey().equals(entryName)||entry.getValue()!=null){return;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(80,headers.length+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(writePaxHeadersForNonAsciiNames,pex+name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465StringWriterw=newStringWriter(paxHeaders.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames){continue;}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java465for(Map.Entry<String,String>entry:headers.entrySet()){if(!addPaxHeadersForNonAsciiNames||!headers.containsKey(entryName)){return;}
