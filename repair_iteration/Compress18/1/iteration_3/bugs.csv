bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
2	[BUG]  [BUGGY]  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
3	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
4	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  if(numToWrite!=    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
5	[BUG]  [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite!=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  if(numToWrite!=    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
6	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  if(numToWrite!=    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
7	[BUG]  [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  +  currName  +  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  +  currName  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  +  currName  +	  if(numToWrite!=    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
8	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  currBytes  +   "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  currBytes  +   "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  currBytes  +   "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currBytes    +       "'    bytes    exceeds    size    in    header    of    '   "    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
9	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  currBytes  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  currBytes  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  currBytes  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currBytes    +       "'    bytes    exceeds    size    in    header    of    '   "    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
10	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currBytes    +       "'    bytes    exceeds    size    in    header    of    '   "    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
11	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  if(numToWrite    >=    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
12	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  if(numToWrite    >=    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
13	[BUG]  [BUGGY]  ||  numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  ||  numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  if(numToWrite    >=    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
14	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
15	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
16	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
17	[BUG]  [BUGGY]  write(wBuf,  wOffset,  currSize);  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  write(wBuf,  wOffset,  currSize);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	write(wBuf,  wOffset,  currSize);	  write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
18	[BUG]  [BUGGY]  write(wBuf,  wOffset,  numToWrite,  currBytes);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  write(wBuf,  wOffset,  numToWrite,  currBytes);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	write(wBuf,  wOffset,  numToWrite,  currBytes);	  write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
19	[BUG]  [BUGGY]  write(wBuf,  wOffset,  currBytes,  numToWrite);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  write(wBuf,  wOffset,  currBytes,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	write(wBuf,  wOffset,  currBytes,  numToWrite);	  write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
20	[BUG]  [BUGGY]  write(wBuf,  wOffset,  currBytes);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  write(wBuf,  wOffset,  currBytes);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	write(wBuf,  wOffset,  currBytes);	  write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
21	[BUG]  [BUGGY]  write(wBuf,  wOffset,  numToWrite,  currSize);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  write(wBuf,  wOffset,  numToWrite,  currSize);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	write(wBuf,  wOffset,  numToWrite,  currSize);	  write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
22	[BUG]  [BUGGY]  _verifyValueWrite(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  _verifyValueWrite(wBuf,  wOffset,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	_verifyValueWrite(wBuf,  wOffset,  numToWrite);	  write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
23	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
24	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBuf    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
25	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  numToWrite  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  numToWrite  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  numToWrite  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBuf    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
26	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBuf    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
27	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
28	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
29	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
30	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry  ' "  +  currName  +  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry  ' "  +  currName  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry  ' "  +  currName  +	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
31	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
32	[BUG]  [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
33	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
34	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  if(numToWrite    <    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
38	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  if(numToWrite    <    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
39	[BUG]  [BUGGY]  ||  numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  ||  numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  if(numToWrite    <    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
40	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
41	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
42	[BUG]  [BUGGY]  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
43	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "	  if(numToWrite    <    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
44	[BUG]  [BUGGY]  ||  numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  ||  numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  if(numToWrite    <    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
45	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "	  if(numToWrite    <    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
46	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize  +  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize  +	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    +    currName    +    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
47	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  +  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  +	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    +    currName    +    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
48	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  curr  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  curr  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  curr	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    +    currName    +    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
49	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    +    currName    +    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
50	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize  +  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize  +	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    +    currName    +    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
51	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  [CE]  illegal  start  of  type  [FE]        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
52	[BUG]  [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
53	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
54	[BUG]  [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
56	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    +    currName    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
57	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    +    currName    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
58	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currS  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currS  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currS	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    +    currName    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
59	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
60	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
61	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(wBuf,  wOffset,  numToWrite);  addPaxHeadersForNonAsciiNames(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(wBuf,  wOffset,  numToWrite);  addPaxHeadersForNonAsciiNames(wBuf,  wOffset,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	OutputStream  out  =  new  OutputStreamWriter(wBuf,  wOffset,  numToWrite);  addPaxHeadersForNonAsciiNames(wBuf,  wOffset,  numToWrite);	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
62	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
63	[BUG]  [BUGGY]  OutputStream  out  =  encoding.output(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  OutputStream  out  =  encoding.output(wBuf,  wOffset,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	OutputStream  out  =  encoding.output(wBuf,  wOffset,  numToWrite);	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
64	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStream(wBuf,  wOffset,  numToWrite);  addPaxHeadersForNonAsciiNames(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  OutputStream  out  =  new  OutputStream(wBuf,  wOffset,  numToWrite);  addPaxHeadersForNonAsciiNames(wBuf,  wOffset,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	OutputStream  out  =  new  OutputStream(wBuf,  wOffset,  numToWrite);  addPaxHeadersForNonAsciiNames(wBuf,  wOffset,  numToWrite);	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
65	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   ",'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
66	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
67	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
68	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
69	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ".'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ".'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ".'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   ".'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
70	[BUG]  [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  currBytes  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  currBytes  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  currBytes  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  ||    numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
71	[BUG]  [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  ||    numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
72	[BUG]  [BUGGY]  ||  numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  ||  numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  ||    numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
73	[BUG]  [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  currBytes  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  +  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  currBytes  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  currBytes  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  +	  ||    numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
74	[BUG]  [BUGGY]  os.write(wBuf,  wOffset,  currSize,  numToWrite);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  os.write(wBuf,  wOffset,  currSize,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	os.write(wBuf,  wOffset,  currSize,  numToWrite);	  os.write(wBuf,    wOffset,    currSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
75	[BUG]  [BUGGY]  os.write(wBuf,  wOffset,  currBytes);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  os.write(wBuf,  wOffset,  currBytes);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	os.write(wBuf,  wOffset,  currBytes);	  os.write(wBuf,    wOffset,    currSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
76	[BUG]  [BUGGY]  os.write(wBuf,  wOffset,  currName);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  os.write(wBuf,  wOffset,  currName);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	os.write(wBuf,  wOffset,  currName);	  os.write(wBuf,    wOffset,    currSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
77	[BUG]  [BUGGY]  os.write(wBuf,  wOffset,  0,  currSize);  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  os.write(wBuf,  wOffset,  0,  currSize);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	os.write(wBuf,  wOffset,  0,  currSize);	  os.write(wBuf,    wOffset,    currSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
78	[BUG]  [BUGGY]  Os.write(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  Os.write(wBuf,  wOffset,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	Os.write(wBuf,  wOffset,  numToWrite);	  os.write(wBuf,    wOffset,    currSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
79	[BUG]  [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
80	[BUG]  [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
81	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
82	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  currBytes);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  wOffset,  currBytes);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  currBytes);	  out.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
83	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  numToWrite,  currBytes);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  wOffset,  numToWrite,  currBytes);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  numToWrite,  currBytes);	  out.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
84	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  currBytes,  numToWrite);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  wOffset,  currBytes,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  currBytes,  numToWrite);	  out.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
85	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  numToWrite,  currSize);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  wOffset,  numToWrite,  currSize);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  numToWrite,  currSize);	  out.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
86	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  currBytes  +  numToWrite);  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  wOffset,  currBytes  +  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  currBytes  +  numToWrite);	  out.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
87	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currName    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
88	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currName    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
89	[BUG]  [BUGGY]  if(currName!=  null)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(currName!=  null)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(currName!=  null)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currName    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
90	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currName    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
91	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currName    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
92	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currName    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
93	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
94	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
95	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
96	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
97	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
98	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
99	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
100	[BUG]  [BUGGY]  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    IOException(       "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
101	[BUG]  [BUGGY]  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    IOException(       "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
102	[BUG]  [BUGGY]  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    IOException(       "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
103	[BUG]  [BUGGY]  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    IOException(       "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
104	[BUG]  [BUGGY]  IOException( "request  to  write  ' "  +  currName  +   "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  IOException( "request  to  write  ' "  +  currName  +   "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	IOException( "request  to  write  ' "  +  currName  +   "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    IOException(       "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
105	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
106	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  + "'  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  + "'  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  + "'	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
107	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
108	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  + "'  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  + "'  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  + "'	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
109	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  curr  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  curr  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  curr	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
110	[BUG]  [BUGGY]  throw  new  IOException( "Can  not  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Can  not  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Can  not  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currBytes    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
111	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBuf    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
112	[BUG]  [BUGGY]  encoding.encode(wBuf,  wOffset,  currSize);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  encoding.encode(wBuf,  wOffset,  currSize);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	encoding.encode(wBuf,  wOffset,  currSize);	  encoding.encode(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
113	[BUG]  [BUGGY]  encoding.encode(wBuf,  wOffset,  numToWrite,  currBytes);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  encoding.encode(wBuf,  wOffset,  numToWrite,  currBytes);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	encoding.encode(wBuf,  wOffset,  numToWrite,  currBytes);	  encoding.encode(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
114	[BUG]  [BUGGY]  encoding.encode(wBuf,  wOffset,  currBytes,  numToWrite);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  encoding.encode(wBuf,  wOffset,  currBytes,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	encoding.encode(wBuf,  wOffset,  currBytes,  numToWrite);	  encoding.encode(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
115	[BUG]  [BUGGY]  encoding.encode(wBuf,  wOffset,  currBytes);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  encoding.encode(wBuf,  wOffset,  currBytes);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	encoding.encode(wBuf,  wOffset,  currBytes);	  encoding.encode(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
116	[BUG]  [BUGGY]  encoding.encode(wBuf,  wOffset,  numToWrite,  currSize);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  encoding.encode(wBuf,  wOffset,  numToWrite,  currSize);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	encoding.encode(wBuf,  wOffset,  numToWrite,  currSize);	  encoding.encode(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
117	[BUG]  [BUGGY]  encoding.write(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  encoding.write(wBuf,  wOffset,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	encoding.write(wBuf,  wOffset,  numToWrite);	  encoding.encode(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
118	[BUG]  [BUGGY]  encoding.encode(wBuf,  wOffset,  currBytes  +  numToWrite);  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  encoding.encode(wBuf,  wOffset,  currBytes  +  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	encoding.encode(wBuf,  wOffset,  currBytes  +  numToWrite);	  encoding.encode(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
119	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   ",'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
120	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   ",'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
121	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    else    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
122	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  if(numToWrite  >  0)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  if(numToWrite  >  0)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  if(numToWrite  >  0)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    else    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
123	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  if(addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  if(addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  if(addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    else    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
124	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    else    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
125	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(w  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(w  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(w	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    else    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
126	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   ",'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
127	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
128	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
129	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
130	[BUG]  [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
131	[BUG]  [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
132	[BUG]  [BUGGY]  if(currName!=  null)  {  throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(currName!=  null)  {  throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(currName!=  null)  {  throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    currName    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
133	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    currName    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
134	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    currName    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
135	[BUG]  [BUGGY]  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    currName    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
136	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  currSize,  numToWrite);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  wOffset,  currSize,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  currSize,  numToWrite);	  out.write(wBuf,    wOffset,    currSize);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
137	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  currName);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  wOffset,  currName);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  currName);	  out.write(wBuf,    wOffset,    currSize);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
138	[BUG]  [BUGGY]  out.write(wBuf,  0,  currSize);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  0,  currSize);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  0,  currSize);	  out.write(wBuf,    wOffset,    currSize);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
139	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  currSize  +  numToWrite);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  wOffset,  currSize  +  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  currSize  +  numToWrite);	  out.write(wBuf,    wOffset,    currSize);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
140	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currName    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
141	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currName    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
142	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  wOffset  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  wOffset  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  wOffset  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currName    +   "'    bytes    exceeds    size    in    header    of    '   "    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
143	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currName    +   "'    bytes    exceeds    size    in    header    of    '   "    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
144	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   ",'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
145	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  numToWrite;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  numToWrite;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  numToWrite;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    for(int    i    =    0;    i    <    numToWrite;    ++i)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
146	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    for(int    i    =    0;    i    <    numToWrite;    ++i)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
147	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    for(int    i    =    0;    i    <    numToWrite;    ++i)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
148	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  numToWrite;  ++i)  {  buffer.write(wBuf,  wOff  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  numToWrite;  ++i)  {  buffer.write(wBuf,  wOff  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  numToWrite;  ++i)  {  buffer.write(wBuf,  wOff	  if(!addPaxHeadersForNonAsciiNames)    {    for(int    i    =    0;    i    <    numToWrite;    ++i)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
149	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  currSize;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  currSize;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  currSize;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    for(int    i    =    0;    i    <    numToWrite;    ++i)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
150	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  currSize;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  currSize;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  currSize;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    for(int    i    =    0;    i    <    numToWrite;    ++i)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
151	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  if(numToWrite    <    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
152	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }	  out.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
153	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }	  out.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
154	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  ==  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }	  out.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
155	[BUG]  [BUGGY]  if(numToWrite!=  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite!=  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite!=  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }	  out.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
156	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  currSize);  write(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  wOffset,  currSize);  write(wBuf,  wOffset,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  currSize);  write(wBuf,  wOffset,  numToWrite);	  out.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
157	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  out.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
158	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }	  b.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
159	[BUG]  [BUGGY]  b.write(wBuf,  wOffset,  currSize);  write(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  b.write(wBuf,  wOffset,  currSize);  write(wBuf,  wOffset,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	b.write(wBuf,  wOffset,  currSize);  write(wBuf,  wOffset,  numToWrite);	  b.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
160	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }	  b.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
161	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  ==  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }	  b.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
162	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    wOffset    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
163	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    wOffset    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
164	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    wOffset    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
165	[BUG]  [BUGGY]  b.write(wBuf,  wOffset,  currSize);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  b.write(wBuf,  wOffset,  currSize);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	b.write(wBuf,  wOffset,  currSize);	  b.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
166	[BUG]  [BUGGY]  b.write(wBuf,  wOffset,  numToWrite,  currBytes);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  b.write(wBuf,  wOffset,  numToWrite,  currBytes);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	b.write(wBuf,  wOffset,  numToWrite,  currBytes);	  b.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
167	[BUG]  [BUGGY]  b.write(wBuf,  wOffset,  numToWrite,  currSize);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  b.write(wBuf,  wOffset,  numToWrite,  currSize);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	b.write(wBuf,  wOffset,  numToWrite,  currSize);	  b.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
168	[BUG]  [BUGGY]  b.write(wBuf,  wOffset,  currBytes);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  b.write(wBuf,  wOffset,  currBytes);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	b.write(wBuf,  wOffset,  currBytes);	  b.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
169	[BUG]  [BUGGY]  b.write(wBuf,  wOffset,  currBytes,  numToWrite);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  b.write(wBuf,  wOffset,  currBytes,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	b.write(wBuf,  wOffset,  currBytes,  numToWrite);	  b.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
170	[BUG]  [BUGGY]  b.write(wBuf,  wOffset,  numToWrite  +  1);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  b.write(wBuf,  wOffset,  numToWrite  +  1);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	b.write(wBuf,  wOffset,  numToWrite  +  1);	  b.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
171	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
172	[BUG]  [BUGGY]  ||  numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  ||  numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
173	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  +  currName  +  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  +  currName  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  +  currName  +	  if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
174	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  +  currName  +  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  +  currName  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  +  currName  +	  if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
175	[BUG]  [BUGGY]  buffer.write(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  buffer.write(wBuf,  wOffset,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	buffer.write(wBuf,  wOffset,  numToWrite);	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
176	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
177	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
178	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  wOffset;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  wOffset;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  wOffset;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
179	[BUG]  [BUGGY]  if(numToWrite  <  =  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  =  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  =  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  if(numToWrite    <    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
180	[BUG]  [BUGGY]  ||  numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  ||  numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  if(numToWrite    <    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
181	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  [CE]  illegal  start  of  type  [FE]        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currSize    +       "'    bytes    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
182	[BUG]  [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currSize    +       "'    bytes    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
183	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currSize    +       "'    bytes    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
184	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currSize    +       "'    bytes    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
185	[BUG]  [BUGGY]  os.write(wBuf,  wOffset,  numToWrite,  currBytes);  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  os.write(wBuf,  wOffset,  numToWrite,  currBytes);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	os.write(wBuf,  wOffset,  numToWrite,  currBytes);	  os.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
186	[BUG]  [BUGGY]  os.write(wBuf,  wOffset,  currBytes,  numToWrite);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  os.write(wBuf,  wOffset,  currBytes,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	os.write(wBuf,  wOffset,  currBytes,  numToWrite);	  os.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
187	[BUG]  [BUGGY]  os.write(wBuf,  wOffset,  numToWrite,  currSize);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  os.write(wBuf,  wOffset,  numToWrite,  currSize);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	os.write(wBuf,  wOffset,  numToWrite,  currSize);	  os.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
188	[BUG]  [BUGGY]  os.write(wBuf,  wOffset,  numToWrite  +  1);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  os.write(wBuf,  wOffset,  numToWrite  +  1);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	os.write(wBuf,  wOffset,  numToWrite  +  1);	  os.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
189	[BUG]  [BUGGY]  ||  numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  ||  numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  if(numToWrite    >=    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
190	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    +    currSize    +    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
191	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    +    currSize    +    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
192	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    +    currSize    +    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
193	[BUG]  [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    +    currSize    +    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
194	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    +    currSize    +    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
195	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    +    currSize    +    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
196	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  }	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    +    currSize    +    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
197	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrit  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrit  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrit	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    else    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
198	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    else    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
199	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  if(numToWrite    >=    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
200	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
201	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  currBytes  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "request  to  write  ' "  +  currBytes  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  currBytes  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
202	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +   "'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
203	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
204	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  wOffset  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  wOffset  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  wOffset  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBuf    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
205	[BUG]  [BUGGY]  if(currBytes  +  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(currBytes  +  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(currBytes  +  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
206	[BUG]  [BUGGY]  if(currBytes  +  numToWrite)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(currBytes  +  numToWrite)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(currBytes  +  numToWrite)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
207	[BUG]  [BUGGY]  if(currBytes  +  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  +  currSize  +  [CE]  illegal  start  of  type  [FE]        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(currBytes  +  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  +  currSize  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(currBytes  +  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  +  currSize  +	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
208	[BUG]  [BUGGY]  if(currBytes  +  numToWrite)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  +  currSize  +  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(currBytes  +  numToWrite)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  +  currSize  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(currBytes  +  numToWrite)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  +  currSize  +	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
209	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    else    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
210	[BUG]  [BUGGY]  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
211	[BUG]  [BUGGY]  os.write(wBuf,  wOffset,  currBytes  +  numToWrite);  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  os.write(wBuf,  wOffset,  currBytes  +  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	os.write(wBuf,  wOffset,  currBytes  +  numToWrite);	  os.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
212	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
213	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
214	[BUG]  [BUGGY]  new  IOException(wBuf,  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException(wBuf,  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException(wBuf,  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
215	[BUG]  [BUGGY]  new  IOException(wOffset  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException(wOffset  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException(wOffset  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
216	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
217	[BUG]  [BUGGY]  if(currBytes  ==  currSize)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(currBytes  ==  currSize)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(currBytes  ==  currSize)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    else    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
218	[BUG]  [BUGGY]  if(currBytes!=  currSize)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(currBytes!=  currSize)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(currBytes!=  currSize)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    else    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
219	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    else    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
220	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  out.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
221	[BUG]  [BUGGY]  if(currBytes  ==  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(currBytes  ==  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(currBytes  ==  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }	  out.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
222	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite	  out.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
223	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   ",'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
224	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   ",'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
225	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  numToWrite  +  1);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  wOffset,  numToWrite  +  1);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  numToWrite  +  1);	  out.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
226	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrit  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrit  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrit	  if(!addPaxHeadersForNonAsciiNames)    {    for(int    i    =    0;    i    <    numToWrite;    ++i)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
227	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStream(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  OutputStream  out  =  new  OutputStream(wBuf,  wOffset,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	OutputStream  out  =  new  OutputStream(wBuf,  wOffset,  numToWrite);	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
228	[BUG]  [BUGGY]  OutputStream  out  =  buffer.write(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  OutputStream  out  =  buffer.write(wBuf,  wOffset,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	OutputStream  out  =  buffer.write(wBuf,  wOffset,  numToWrite);	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
229	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(wBuf,  wOffset,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	OutputStream  out  =  new  OutputStreamWriter(wBuf,  wOffset,  numToWrite);	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
230	[BUG]  [BUGGY]  OutputStream  os  =  out.read(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  OutputStream  os  =  out.read(wBuf,  wOffset,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	OutputStream  os  =  out.read(wBuf,  wOffset,  numToWrite);	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
231	[BUG]  [BUGGY]  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    currName    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
232	[BUG]  [BUGGY]  new  IOException(wBuf,  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException(wBuf,  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException(wBuf,  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
233	[BUG]  [BUGGY]  new  IOException(wOffset  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException(wOffset  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException(wOffset  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
234	[BUG]  [BUGGY]  new  IOException(wBuf,  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException(wBuf,  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException(wBuf,  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
235	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
236	[BUG]  [BUGGY]  encoding.encode(wBuf,  wOffset,  currName);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  encoding.encode(wBuf,  wOffset,  currName);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	encoding.encode(wBuf,  wOffset,  currName);	  encoding.encode(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
237	[BUG]  [BUGGY]  encoding.encode(wBuf,  wOffset,  numToWrite  +  1);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  encoding.encode(wBuf,  wOffset,  numToWrite  +  1);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	encoding.encode(wBuf,  wOffset,  numToWrite  +  1);	  encoding.encode(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
238	[BUG]  [BUGGY]  os.write(wBuf,  wOffset,  numToRead);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  os.write(wBuf,  wOffset,  numToRead);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	os.write(wBuf,  wOffset,  numToRead);	  os.write(wBuf,    wOffset,    currSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
239	[BUG]  [BUGGY]  if(numToWrite  >  currSize)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  currSize)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  currSize)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
240	[BUG]  [BUGGY]  b.write(wBuf,  wOffset,  currName);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  b.write(wBuf,  wOffset,  currName);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	b.write(wBuf,  wOffset,  currName);	  b.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
241	[BUG]  [BUGGY]  b.write(wBuf,  wOffset,  currBytes  +  numToWrite);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  b.write(wBuf,  wOffset,  currBytes  +  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	b.write(wBuf,  wOffset,  currBytes  +  numToWrite);	  b.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
242	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currName    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
243	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  wOffset  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currName    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
244	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
245	[BUG]  [BUGGY]  if(b!=  null)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(b!=  null)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(b!=  null)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  b.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
246	[BUG]  [BUGGY]  if(b!=  null)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(b!=  null)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(b!=  null)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }	  b.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
247	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrit  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrit  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrit	  b.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
248	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrit  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrit  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrit	  b.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
249	[BUG]  [BUGGY]  new  IOException(wBuf,  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException(wBuf,  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException(wBuf,  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
250	[BUG]  [BUGGY]  write(wBuf,  wOffset,  currName);  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  write(wBuf,  wOffset,  currName);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	write(wBuf,  wOffset,  currName);	  write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
251	[BUG]  [BUGGY]  write(wBuf,  wOffset,  currBytes  +  numToWrite);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  write(wBuf,  wOffset,  currBytes  +  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	write(wBuf,  wOffset,  currBytes  +  numToWrite);	  write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
252	[BUG]  [BUGGY]  write(wBuf,  wOffset,  numToWrite  +  1);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  write(wBuf,  wOffset,  numToWrite  +  1);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	write(wBuf,  wOffset,  numToWrite  +  1);	  write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
253	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  numToRead);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  wOffset,  numToRead);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  numToRead);	  out.write(wBuf,    wOffset,    currSize);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
254	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  0,  numToWrite);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  wOffset,  0,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  0,  numToWrite);	  out.write(wBuf,    wOffset,    currSize);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
255	[BUG]  [BUGGY]  out.write(wBuf,  0,  numToWrite);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  0,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  0,  numToWrite);	  out.write(wBuf,    wOffset,    currSize);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
256	[BUG]  [BUGGY]  out.write(wBuf,  woffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  woffset,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  woffset,  numToWrite);	  out.write(wBuf,    wOffset,    currSize);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
257	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "','  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "','  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "','  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   ",'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
258	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
259	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  +  currSize  +  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  +  currSize  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  +  currSize  +	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    +    currName    +    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
260	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize  +  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize  +	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    +    currName    +    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
261	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    wOffset    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
262	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    wOffset    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
263	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  currBytes  +   "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  currBytes  +   "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  currBytes  +   "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currBytes    +       "'    bytes    exceeds    size    in    header    of    '   "    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
264	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  currSize);  }  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  currSize);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  currSize);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
265	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  currSize);  }  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  currSize);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  currSize);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
266	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite  +  1);  }  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite  +  1);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite  +  1);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
267	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames  ||  currSize  >  0)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(!addPaxHeadersForNonAsciiNames  ||  currSize  >  0)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames  ||  currSize  >  0)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
268	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  +  currSize  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  +  currSize  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  +  currSize	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    +    currName    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
269	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  cur  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  cur  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  cur	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    +    currName    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
270	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    +    currName    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
271	[BUG]  [BUGGY]  ||  numToWrite  >  1)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  ||  numToWrite  >  1)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  >  1)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  ||    numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
272	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
273	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    else    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
274	[BUG]  [BUGGY]  if(currBytes  <  numToWrite)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(currBytes  <  numToWrite)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(currBytes  <  numToWrite)  {  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    else    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
275	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  currBytes);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  currBytes);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  currBytes);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    else    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
276	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currBytes  +  numToWrite  + "'  bytes  [CE]  illegal  start  of  type  [FE]        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currBytes  +  numToWrite  + "'  bytes  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currBytes  +  numToWrite  + "'  bytes	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currSize    +       "'    bytes    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
277	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currSize    +       "'    bytes    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
278	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames  &&  currBytes  <  numToWrite)  {  for(int  i  =  0;  i  <  numToWrite;  ++i)  {  buffer.write(wBuf,  wOff  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(!addPaxHeadersForNonAsciiNames  &&  currBytes  <  numToWrite)  {  for(int  i  =  0;  i  <  numToWrite;  ++i)  {  buffer.write(wBuf,  wOff  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames  &&  currBytes  <  numToWrite)  {  for(int  i  =  0;  i  <  numToWrite;  ++i)  {  buffer.write(wBuf,  wOff	  if(!addPaxHeadersForNonAsciiNames)    {    for(int    i    =    0;    i    <    numToWrite;    ++i)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
279	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  numToWrite;  ++i)  {  buffer.write(wBuf,  w  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  numToWrite;  ++i)  {  buffer.write(wBuf,  w  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  numToWrite;  ++i)  {  buffer.write(wBuf,  w	  if(!addPaxHeadersForNonAsciiNames)    {    for(int    i    =    0;    i    <    numToWrite;    ++i)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
280	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "	  if(numToWrite    >=    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
281	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "	  if(numToWrite    >=    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
282	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite	  out.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
283	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrit  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrit  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrit	  out.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
284	[BUG]  [BUGGY]  if(numToWrite  <  wBuf.length)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  wBuf.length)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  wBuf.length)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }	  out.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
285	[BUG]  [BUGGY]  if(currBytes  <  numToWrite)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(currBytes  <  numToWrite)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(currBytes  <  numToWrite)  {  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }	  out.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
286	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  currBytes);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  currBytes);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  currBytes);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    else    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
287	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  currBytes);  }  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  currBytes);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  currBytes);  }	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    else    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
288	[BUG]  [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  ||    numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
289	[BUG]  [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + ",'  bytes  for  entry  ' "	  ||    numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
290	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  numToWrite  + "'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
291	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
292	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  currBytes  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "request  to  write  ' "  +  currBytes  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  currBytes  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
293	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
294	[BUG]  [BUGGY]  if(numToWrite  <  =  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  <identifier>  expected  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  =  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  =  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  if(numToWrite    <    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  <identifier>  expected	33	None	replace
295	[BUG]  [BUGGY]  if(numToWrite  <  1)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  1)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  1)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  if(numToWrite    <    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  <identifier>  expected	33	None	replace
296	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    currName    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  <identifier>  expected	7	None	replace
297	[BUG]  [BUGGY]  if(numToWrite  <  =  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  =  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  =  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  if(numToWrite    <    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  <identifier>  expected	13	None	replace
298	[BUG]  [BUGGY]  if(numToWrite  <  1)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  1)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  1)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  if(numToWrite    <    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  <identifier>  expected	13	None	replace
299	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize  +  [CE]  <identifier>  expected  [FE]          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currSize  +	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    +    currName    +    	non-compiled	[CE]  <identifier>  expected	58	None	replace
300	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  +  currName  +  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  +  currName  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  +  currName  +	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    +    currName    +    	non-compiled	[CE]  <identifier>  expected	58	None	replace
301	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite	  b.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
302	[BUG]  [BUGGY]  if(numToWrite  <  wBuf.length)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  wBuf.length)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  wBuf.length)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }	  b.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
303	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  b.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
304	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.append(currBytes  +  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.append(currBytes  +  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.append(currBytes  +  numToWrite);  }	  b.write(wBuf,    wOffset,    numToWrite);    write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
305	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry' "  +  currSize  + "'  bytes  for  entry  ' "	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write'   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry'   "    +    currName    +       "'    bytes    for    entry'   "    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
306	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  wOffset  +   "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  wOffset  +   "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  wOffset  +   "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBuf    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
307	[BUG]  [BUGGY]  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    IOException(       "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
308	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  +  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  +	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    +    currSize    +    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
309	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currSize  +	  throw    new    IOException(       "request    to    write    '       "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '       "    +    currName    +       "'    bytes    for    entry    '       "    if(numToWrite    ==    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +       "'    bytes    for    entry    '   "    +    currSize    +    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
310	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    wOffset    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
311	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  +  currName  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  +  currName  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  +  currName	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    +    currName    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
312	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBuf    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
313	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "	  new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
314	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  numToWrite  +  currSize);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  wOffset,  numToWrite  +  currSize);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  numToWrite  +  currSize);	  out.write(wBuf,    wOffset,    currSize);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
315	[BUG]  [BUGGY]  write(wBuf,  wOffset,  numToWrite  +  1,  currBytes);  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  write(wBuf,  wOffset,  numToWrite  +  1,  currBytes);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	write(wBuf,  wOffset,  numToWrite  +  1,  currBytes);	  write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
316	[BUG]  [BUGGY]  if(numToWrite  <  =  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  <  =  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  =  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  if(numToWrite    <    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
317	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   ",'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
318	[BUG]  [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  if(numToWrite!=    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
319	[BUG]  [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  if(numToWrite!=    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
320	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames  &&  currBytes  <  numToWrite)  {  out.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(!addPaxHeadersForNonAsciiNames  &&  currBytes  <  numToWrite)  {  out.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames  &&  currBytes  <  numToWrite)  {  out.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
321	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  currBytes  +  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  currBytes  +  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  currBytes  +  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
322	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  currBytes  +  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  currBytes  +  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  currBytes  +  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    out.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
323	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "Request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
324	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames  &&  currBytes  <  numToWrite)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(!addPaxHeadersForNonAsciiNames  &&  currBytes  <  numToWrite)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames  &&  currBytes  <  numToWrite)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
325	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  currBytes);  }  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  currBytes);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  currBytes);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
326	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  currBytes);  }  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  currBytes);  }  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  currBytes);  }	  if(!addPaxHeadersForNonAsciiNames)    {    buffer.write(wBuf,    wOffset,    numToWrite);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
327	[BUG]  [BUGGY]  os.write(wBuf,  wOffset,  numToWrite  +  1,  currBytes);  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  os.write(wBuf,  wOffset,  numToWrite  +  1,  currBytes);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	os.write(wBuf,  wOffset,  numToWrite  +  1,  currBytes);	  os.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
328	[BUG]  [BUGGY]  os.write(wBuf,  wOffset,  numToWrite  +  2);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  os.write(wBuf,  wOffset,  numToWrite  +  2);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	os.write(wBuf,  wOffset,  numToWrite  +  2);	  os.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
329	[BUG]  [BUGGY]  os.write(wBuf,  woffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  os.write(wBuf,  woffset,  numToWrite);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	os.write(wBuf,  woffset,  numToWrite);	  os.write(wBuf,    wOffset,    currSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
330	[BUG]  [BUGGY]  b.write(wBuf,  wOffset,  numToWrite  +  1,  currBytes);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  b.write(wBuf,  wOffset,  numToWrite  +  1,  currBytes);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	b.write(wBuf,  wOffset,  numToWrite  +  1,  currBytes);	  b.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
331	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + ",'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + ",'  bytes  for  entry  ' "	  if(numToWrite    >=    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
332	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  numToWrite  +  1,  currBytes);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  out.write(wBuf,  wOffset,  numToWrite  +  1,  currBytes);  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  numToWrite  +  1,  currBytes);	  out.write(wBuf,    wOffset,    numToWrite);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
333	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]        IOException      [CONTEXT]      public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {      [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]      +       "'  bytes  exceeds  size  in  header  of  '     "  +  currSize  +       "'  bytes  for  entry  '     "  +  currName  +       "'     ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + ",'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
