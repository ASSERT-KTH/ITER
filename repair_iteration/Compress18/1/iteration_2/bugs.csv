bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]    IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]      IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currBytes    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  currName  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currBytes    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currBytes  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currBytes  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  currBytes  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currBytes    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   ",'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   ",'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
11	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
15	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
16	[BUG]  [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite!=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
20	[BUG]  [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  ||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	||  numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  if(numToWrite    >    0)    {    throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  write(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  write(wBuf,  wOffset,  numToWrite);  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	write(wBuf,  wOffset,  numToWrite);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  else  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  out.write(wBuf,  wOffset,  numToWrite);  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  numToWrite);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames)  {  out.write(wBuf,  wOffset,  numToWrite);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  numToWrite;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [CE]  illegal  start  of  type  [FE]                          IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(!addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  numToWrite;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(!addPaxHeadersForNonAsciiNames)  {  for(int  i  =  0;  i  <  numToWrite;  ++i)  {  buffer.write(wBuf,  wOffset,  numToWrite);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  throw  new  IOException(   "request  to  write  '   "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  '   "  +  currName  +   "'  bytes  for  entry  '   "  new  IOException(   "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]    IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException(   "request  to  write  '   "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  '   "  +  currName  +   "'  bytes  for  entry  '   "  new  IOException(   "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    new  IOException(   "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
29	[BUG]  [BUGGY]  throw  new  IOException(   "request  to  write  '   "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  '   "  +  currName  +   "'  bytes  for  entry  '   "  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]      IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException(   "request  to  write  '   "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  '   "  +  currName  +   "'  bytes  for  entry  '   "  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
30	[BUG]  [BUGGY]  throw  new  IOException(   "request  to  write  '   "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  '   "  +  currName  +   "'  bytes  for  entry  '   "  IOException(   "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException(   "request  to  write  '   "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  '   "  +  currName  +   "'  bytes  for  entry  '   "  IOException(   "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    IOException(   "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
31	[BUG]  [BUGGY]  throw  new  IOException(   "request  to  write  '   "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  '   "  +  currName  +   "'  bytes  for  entry  '   "  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "  +  currSize  +  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException(   "request  to  write  '   "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  '   "  +  currName  +   "'  bytes  for  entry  '   "  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "  +  currSize  +  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry  ' "  +  currSize  +	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
32	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]    IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
33	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]      IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
34	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
36	[BUG]  [BUGGY]  throw  new  IOException(   "request  to  write  '   "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  '   "  +  currName  +   "'  bytes  for  entry  '   "  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  +  currSize  +   "'  bytes  [CE]  illegal  start  of  type  [FE]    IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException(   "request  to  write  '   "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  '   "  +  currName  +   "'  bytes  for  entry  '   "  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  +  currSize  +   "'  bytes  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  +  currSize  +   "'  bytes	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
37	[BUG]  [BUGGY]  os.write(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  os.write(wBuf,  wOffset,  numToWrite);  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	os.write(wBuf,  wOffset,  numToWrite);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  b.write(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  b.write(wBuf,  wOffset,  numToWrite);  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	b.write(wBuf,  wOffset,  numToWrite);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  encoding.encode(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  encoding.encode(wBuf,  wOffset,  numToWrite);  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	encoding.encode(wBuf,  wOffset,  numToWrite);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  currSize);  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  out.write(wBuf,  wOffset,  currSize);  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  currSize);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  os.write(wBuf,  wOffset,  currSize);  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  os.write(wBuf,  wOffset,  currSize);  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	os.write(wBuf,  wOffset,  currSize);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
45	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  wOffset  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currBytes    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
46	[BUG]  [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currBytes    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
47	[BUG]  [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "Request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currBytes    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  <  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
49	[BUG]  [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >=  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
50	[BUG]  [BUGGY]  throw  new  IOException(   "request  to  write  '   "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  '   "  +  currName  +   "'  bytes  for  entry  '   "  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  +  currName  +   "'  bytes  for  entry' "  [CE]  illegal  start  of  type  [FE]    IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException(   "request  to  write  '   "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  '   "  +  currName  +   "'  bytes  for  entry  '   "  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  +  currName  +   "'  bytes  for  entry' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  +  currName  +   "'  bytes  for  entry' "	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
51	[BUG]  [BUGGY]  throw  new  IOException(   "request  to  write  '   "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  '   "  +  currName  +   "'  bytes  for  entry  '   "  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  [CE]  illegal  start  of  type  [FE]      IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException(   "request  to  write  '   "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  '   "  +  currName  +   "'  bytes  for  entry  '   "  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
52	[BUG]  [BUGGY]  throw  new  IOException(   "request  to  write  '   "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  '   "  +  currName  +   "'  bytes  for  entry  '   "  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  +  currName  +   "'  bytes  for  entry' "  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException(   "request  to  write  '   "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  '   "  +  currName  +   "'  bytes  for  entry  '   "  if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  +  currName  +   "'  bytes  for  entry' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    if(numToWrite  ==  0)  {  throw  new  IOException( "request  to  write' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  +   "'  bytes  for  entry' "  +  currName  +   "'  bytes  for  entry' "	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
53	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currBytes  +   "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currBytes  +   "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  currBytes  +   "'  bytes  exceeds  size  in  header  of  ' "  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currBytes    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
54	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  currName  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    currBytes    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currSize    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
55	[BUG]  [BUGGY]  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	b.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
56	[BUG]  [BUGGY]  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	out.write(wBuf,  wOffset,  numToWrite);  write(wBuf,  wOffset,  numToWrite);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
57	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]    IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
58	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currName  +  [CE]  illegal  start  of  type  [FE]      IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currName  +  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currName  +	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
59	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currName  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currName  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  +  currName	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currName    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
60	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBuf  +  numToWrite  + "'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
61	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   ",'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
62	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ".'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ".'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ".'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +       "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +    numToWrite    +   ",'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
63	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + ",'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
64	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {    [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + ",'  bytes  for  entry  ' "  [BUGGY]    +     "'  bytes  exceeds  size  in  header  of  '   "  +  currSize  +     "'  bytes  for  entry  '   "  +  currName  +     "'   ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + ",'  bytes  for  entry  ' "	  throw    new    IOException(   "request    to    write    '   "    +    numToWrite    +   "'    bytes    exceeds    size    in    header    of    '   "    +    currBytes    +   "'    bytes    for    entry    '   "    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
