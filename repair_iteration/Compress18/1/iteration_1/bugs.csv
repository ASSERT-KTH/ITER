bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException  [CONTEXT]  public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  +   "'  bytes  for  entry  ' "  +  currName  +   "' ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	add	throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	throw  new  IOException( "request  to  write  ' "  +  numToWrite      +   "'  bytes  exceeds  size  in  header  of  ' "          +  currSize  +   "'  bytes  for  entry  ' "  	compilable	  [FE]  IOException  	1	1	replace
2	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [FE]  IOException  [FE]    IOException  [CONTEXT]  public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "  [BUGGY]  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  +   "'  bytes  for  entry  ' "  +  currName  +   "' ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currName  + "'  bytes  for  entry  ' "	throw  new  IOException( "request  to  write  ' "  +  numToWrite      +   "'  bytes  exceeds  size  in  header  of  ' "          +  currSize  +   "'  bytes  for  entry  ' "  	compilable	  [FE]  IOException  	1	1	replace
3	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]      IOException  [CONTEXT]  public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "  [BUGGY]  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  +   "'  bytes  for  entry  ' "  +  currName  +   "' ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  + "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  + "'  bytes  for  entry  ' "	throw  new  IOException( "request  to  write  ' "  +  numToWrite      +   "'  bytes  exceeds  size  in  header  of  ' "          +  currSize  +   "'  bytes  for  entry  ' "  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
4	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currBytes  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]        IOException  [CONTEXT]  public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  currBytes  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  +   "'  bytes  for  entry  ' "  +  currName  +   "' ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  currBytes  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	throw  new  IOException( "request  to  write  ' "  +  numToWrite      +   "'  bytes  exceeds  size  in  header  of  ' "          +  currSize  +   "'  bytes  for  entry  ' "  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          IOException  [CONTEXT]  public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {  [BUGGY]    [BUGGY]  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  +   "'  bytes  for  entry  ' "  +  currName  +   "' ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	  	throw  new  IOException( "request  to  write  ' "  +  numToWrite      +   "'  bytes  exceeds  size  in  header  of  ' "          +  currSize  +   "'  bytes  for  entry  ' "  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]    IOException  [CONTEXT]  public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {  [BUGGY]  if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "  [BUGGY]  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  +   "'  bytes  for  entry  ' "  +  currName  +   "' ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	if(numToWrite  >  0)  {  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  + "'  bytes  for  entry  ' "	throw  new  IOException( "request  to  write  ' "  +  numToWrite      +   "'  bytes  exceeds  size  in  header  of  ' "          +  currSize  +   "'  bytes  for  entry  ' "  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]    IOException  [CONTEXT]  public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  +   "'  bytes  for  entry  ' "  +  currName  +   "' ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	throw  new  IOException( "request  to  write  ' "  +  numToWrite      +   "'  bytes  exceeds  size  in  header  of  ' "          +  currSize  +   "'  bytes  for  entry  ' "  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]      IOException  [CONTEXT]  public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "  [BUGGY]  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  +   "'  bytes  for  entry  ' "  +  currName  +   "' ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  + ",'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + "'  bytes  for  entry  ' "	throw  new  IOException( "request  to  write  ' "  +  numToWrite      +   "'  bytes  exceeds  size  in  header  of  ' "          +  currSize  +   "'  bytes  for  entry  ' "  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [CE]  illegal  start  of  type  [FE]        IOException  [CONTEXT]  public  void  write(byte[]  wBuf,  int  wOffset,  int  numToWrite)  throws  IOException  {  if  ((currBytes  +  numToWrite)  >  currSize)  {  [BUGGY]  throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "  [BUGGY]  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currSize  +   "'  bytes  for  entry  ' "  +  currName  +   "' ");        [CLASS]  TarArchiveOutputStream  [METHOD]  write  [RETURN_TYPE]  void  byte[]  wBuf  int  wOffset  int  numToWrite  [VARIABLES]  byte[]  assemBuf  recordBuf  wBuf  boolean  addPaxHeadersForNonAsciiNames  b  closed  finished  haveUnclosedEntry  paxHeaderContainsPath  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  entryName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  aLen  assemLen  bigNumberMode  blockSize  i  longFileMode  nameLen  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	387	389	1	replace	throw  new  IOException( "request  to  write  ' "  +  numToWrite  +   "'  bytes  exceeds  size  in  header  of  ' "  +  currBytes  +  numToWrite  + ",'  bytes  for  entry  ' "	throw  new  IOException( "request  to  write  ' "  +  numToWrite      +   "'  bytes  exceeds  size  in  header  of  ' "          +  currSize  +   "'  bytes  for  entry  ' "  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
