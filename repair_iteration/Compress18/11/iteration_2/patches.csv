bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
2	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  -  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  -  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
6	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  1;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    1;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
7	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  +  1;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    1;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
8	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  3;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  3;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  3;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    1;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
9	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(true);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(true);	  this.addPaxHeadersForNonAsciiNames    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
10	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(recordBuf);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(recordBuf);	  this.addPaxHeadersForNonAsciiNames    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
11	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
12	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(trBuf);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(trBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(trBuf);	  this.addPaxHeadersForNonAsciiNames    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
13	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(CharacterEncoding.UTF8);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(CharacterEncoding.UTF8);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(CharacterEncoding.UTF8);	  this.addPaxHeadersForNonAsciiNames    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
14	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(false);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(false);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(true);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
15	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(true,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(true,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(true,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(true);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
16	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(true,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(true,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(true,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(true);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
17	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(false,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(false,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(false,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(true);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
18	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(false,  true);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(false,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(false,  true);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(true);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
19	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(false,  false);  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(false,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(false,  false);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(true);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
20	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
21	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDS  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDS  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDS	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
22	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(buff,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(buff,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(buff,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
23	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getAbsolutePaxHeaders();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getAbsolutePaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getAbsolutePaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getOutputPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	152	None	replace
24	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getInputBuffer();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getInputBuffer();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getInputBuffer();	  this.addPaxHeadersForNonAsciiNames    =    os.getOutputPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	152	None	replace
25	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRawPaxHeaders();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRawPaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRawPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getOutputPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	152	None	replace
26	[BUG]  [BUGGY]  this.assemBuf  =  buffer.toByteArray()  &&!addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  buffer.toByteArray()  &&!addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  buffer.toByteArray()  &&!addPaxHeadersForNonAsciiNames;	  this.assemBuf    =    buffer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
27	[BUG]  [BUGGY]  this.assemBuf  =  buffer.toByteArray(),  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  buffer.toByteArray(),  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  buffer.toByteArray(),  TarBuffer.DEFAULT_RCDSIZE);	  this.assemBuf    =    buffer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
28	[BUG]  [BUGGY]  this.assemBuf  =  buffer.toByteArray(),  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  buffer.toByteArray(),  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  buffer.toByteArray(),  TarBuffer.DEFAULT_BLKSIZE);	  this.assemBuf    =    buffer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
29	[BUG]  [BUGGY]  this.assemBuf  =  buffer.toByteArray()  &&  TarBuffer.DEFAULT_BLKSIZE  <  =  TarBuffer.DEFAULT_RCDSIZE;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  buffer.toByteArray()  &&  TarBuffer.DEFAULT_BLKSIZE  <  =  TarBuffer.DEFAULT_RCDSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  buffer.toByteArray()  &&  TarBuffer.DEFAULT_BLKSIZE  <  =  TarBuffer.DEFAULT_RCDSIZE;	  this.assemBuf    =    buffer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
30	[BUG]  [BUGGY]  this.assemBuf  =  buffer.toByteArray()  &&!addPaxHeadersForNonAsciiNames(os);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  buffer.toByteArray()  &&!addPaxHeadersForNonAsciiNames(os);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  buffer.toByteArray()  &&!addPaxHeadersForNonAsciiNames(os);	  this.assemBuf    =    buffer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
31	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	66	None	replace
32	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  ||  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  ||  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  true  ||  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	66	None	replace
33	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0  ||  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0  ||  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  0  ||  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	66	None	replace
34	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  ||  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  ||  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding  ||  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	66	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  2);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  /  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  /  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  /  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
38	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.read(TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.read(TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.read(TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.read();    	non-compiled	[CE]  <identifier>  expected	87	None	replace
39	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readOnly();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readOnly();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readOnly();	  this.addPaxHeadersForNonAsciiNames    =    os.read();    	non-compiled	[CE]  <identifier>  expected	87	None	replace
40	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  out);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  out);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  out);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(out);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
41	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(true);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(true);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(out);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
42	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(recordBuf);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(recordBuf);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(out);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
43	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(out,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(out,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(out,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(out);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
44	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(out);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
45	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(out,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(out,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(out,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(out);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
46	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  8;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  8;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  8;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    8;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
47	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  8;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  8;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  8;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    8;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
49	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  2);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  2);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
50	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray()  ];  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray()  ];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[os.toByteArray()  ];	  this.assemBuf    =    os.toByteArray()    +    1;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
51	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray()  +  1];  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray()  +  1];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[os.toByteArray()  +  1];	  this.assemBuf    =    os.toByteArray()    +    1;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
52	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray()  [0];  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray()  [0];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray()  [0];	  this.assemBuf    =    os.toByteArray()    +    1;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
53	[BUG]  [BUGGY]  this.assemBuf  =  os.getByteArray();  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.getByteArray();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.getByteArray();	  this.assemBuf    =    os.toByteArray()    +    1;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
54	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE  -  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE  -  1);	  System.arraycopy(assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE    -    1);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);	  System.arraycopy(assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE    -    1);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
56	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE  -  1);	  System.arraycopy(assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE    -    1);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
57	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemLen,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
58	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFully(true);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFully(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readFully(true);	  this.addPaxHeadersForNonAsciiNames    =    os.readFully();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
59	[BUG]  [BUGGY]  This.assemLen  =  os.readLine();  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  This.assemLen  =  os.readLine();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	This.assemLen  =  os.readLine();	  this.assemLen    =    os.readLine()    +    1;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
60	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  *  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readLine()  *  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLine()  *  1;	  this.assemLen    =    os.readLine()    +    1;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
61	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE    +    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
62	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_GNU);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_GNU);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_GNU);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE    +    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
63	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE    +    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
64	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BACKSLASH  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BACKSLASH  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BACKSLASH  +  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE    +    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  *  4);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  *  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  *  4);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen    +    4);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  5);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  5);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  5);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen    +    4);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
67	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readEndFileHeader();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readEndFileHeader();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readEndFileHeader();	  this.addPaxHeadersForNonAsciiNames    =    os.readFileHeader();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
68	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;	  System.arraycopy(this.assemBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
69	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(this.assemBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
70	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;	  System.arraycopy(this.assemBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
71	[BUG]  [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer.arraycopy(this.assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(this.assemBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
72	[BUG]  [BUGGY]  os  =  buffer.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  buffer.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	93	None	replace
73	[BUG]  [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
74	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  out;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  out;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  out;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
75	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  os;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  os;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
76	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen  +  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen  +  2);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen  +  2);	  System.arraycopy(assemBuf,    0,    buffer,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    buffer,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
79	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen  +  4);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen  +  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen  +  4);	  System.arraycopy(assemBuf,    0,    buffer,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
80	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen  +  3);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen  +  3);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen  +  3);	  System.arraycopy(assemBuf,    0,    buffer,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
81	[BUG]  [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
82	[BUG]  [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
83	[BUG]  [BUGGY]  this.assemLen  =  os.read(BarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(BarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(BarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
84	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE.read(os,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE.read(os,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE.read(os,  TarBuffer.DEFAULT_BLKSIZE);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
85	[BUG]  [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_BIGNUMBER_POSIX,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_BIGNUMBER_POSIX,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(TarBuffer.DEFAULT_BIGNUMBER_POSIX,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
86	[BUG]  [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  4);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  4);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
87	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
88	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_GNU  +  TarBuffer.DEFAULT_RCDSIZE;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_GNU  +  TarBuffer.DEFAULT_RCDSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_GNU  +  TarBuffer.DEFAULT_RCDSIZE;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    TarBuffer.DEFAULT_GNU;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
89	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  TarBuffer.DEFAULT_GNU;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  TarBuffer.DEFAULT_GNU;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  TarBuffer.DEFAULT_GNU;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    TarBuffer.DEFAULT_GNU;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
90	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_GNU;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_GNU;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_GNU;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    TarBuffer.DEFAULT_GNU;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
91	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  /  TarBuffer.DEFAULT_GNU;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  /  TarBuffer.DEFAULT_GNU;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  /  TarBuffer.DEFAULT_GNU;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    TarBuffer.DEFAULT_GNU;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
92	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_GLOBAL;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_GLOBAL;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_GLOBAL;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    TarBuffer.DEFAULT_GNU;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
93	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_GNU;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_GNU;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_GNU;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    TarBuffer.DEFAULT_GNU;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
94	[BUG]  [BUGGY]  os  =  this.assemBuf.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  this.assemBuf.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  this.assemBuf.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  os    =    buffer.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
95	[BUG]  [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemLen,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemLen,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemLen,  0,  TarBuffer.DEFAULT_RCDSIZE);	  os    =    buffer.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
96	[BUG]  [BUGGY]  os  =  buffer.arraycopy(recordBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  buffer.arraycopy(recordBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer.arraycopy(recordBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  os    =    buffer.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
97	[BUG]  [BUGGY]  os  =  buffer.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  buffer.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);	  os    =    buffer.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
98	[BUG]  [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BACKSLASH);	  os    =    buffer.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
99	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  +  2;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  +  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  +  2;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    /    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
100	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  +  4;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  +  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  +  4;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    /    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
101	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  +  8;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  +  8;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  +  8;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    /    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
102	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  buffer.length);	  System.arraycopy(os,    0,    this.assemBuf,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
103	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  buffer.length  -  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  buffer.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  buffer.length  -  1);	  System.arraycopy(os,    0,    this.assemBuf,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
104	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  this.assemBuf,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(buffer,  0,  this.assemBuf,  0,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(buffer,  0,  this.assemBuf,  0,  buffer.length);	  System.arraycopy(os,    0,    this.assemBuf,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
105	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  buffer.length);	  System.arraycopy(os,    0,    this.assemBuf,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
106	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  buffer.length  -  2);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  buffer.length  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  buffer.length  -  2);	  System.arraycopy(os,    0,    this.assemBuf,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
107	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  buffer.length  +  1);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  buffer.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  buffer.length  +  1);	  System.arraycopy(os,    0,    this.assemBuf,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(tarBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
109	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuf,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuf,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(tarBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(tarBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuf,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuf,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(tarBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(tarBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
113	[BUG]  [BUGGY]  this.assemLen  =  os.readCharacters(true);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readCharacters(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readCharacters(true);	  this.assemLen    =    os.readCharacters();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
114	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE;	  this.assemLen    =    os.readCharacters();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
115	[BUG]  [BUGGY]  this.assemLen  =  os.readFile();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readFile();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readFile();	  this.assemLen    =    os.readCharacters();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
116	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  *  3);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  *  3);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  *  3);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen    +    3);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
117	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_ARGSIZE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
118	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_ARGSIZE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
119	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_BRIDGE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_BRIDGE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_BRIDGE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_ARGSIZE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
120	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
121	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
122	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_GNU);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_GNU);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_GNU);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
123	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFA  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFA  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFA	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
124	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  0);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  0);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
125	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RANGE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RANGE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RANGE,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_RANGE);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
126	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RANGE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RANGE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RANGE,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_RANGE);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
127	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RANGE,  TarBuffer.DEFAULT_RCDIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RANGE,  TarBuffer.DEFAULT_RCDIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RANGE,  TarBuffer.DEFAULT_RCDIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_RANGE);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
128	[BUG]  [BUGGY]  This.addPaxHeadersForNonAsciiNames  =  os.readPax();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  This.addPaxHeadersForNonAsciiNames  =  os.readPax();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	This.addPaxHeadersForNonAsciiNames  =  os.readPax();	  this.addPaxHeadersForNonAsciiNames    =    os.readPax()    +    1;    	non-compiled	[CE]  <identifier>  expected	90	None	replace
129	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  out.readPax()  +  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  out.readPax()  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  out.readPax()  +  1;	  this.addPaxHeadersForNonAsciiNames    =    os.readPax()    +    1;    	non-compiled	[CE]  <identifier>  expected	90	None	replace
130	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getPax();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getPax();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getPax();	  this.addPaxHeadersForNonAsciiNames    =    os.readPax()    +    1;    	non-compiled	[CE]  <identifier>  expected	90	None	replace
131	[BUG]  [BUGGY]  this.assemLen  =  os.readLineBytes(true);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readLineBytes(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLineBytes(true);	  this.assemLen    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	106	None	replace
132	[BUG]  [BUGGY]  this.assemLen  =  os.readLineBytes(TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readLineBytes(TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLineBytes(TarBuffer.DEFAULT_BLKSIZE);	  this.assemLen    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	106	None	replace
133	[BUG]  [BUGGY]  this.assemLen  =  os.readLineBytes(TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readLineBytes(TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLineBytes(TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	106	None	replace
134	[BUG]  [BUGGY]  this.assemLen  =  os.readLineBytes(recordBuf);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readLineBytes(recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLineBytes(recordBuf);	  this.assemLen    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	106	None	replace
135	[BUG]  [BUGGY]  this.assemLen  =  os.readLineBytes(TRUNCATE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readLineBytes(TRUNCATE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLineBytes(TRUNCATE);	  this.assemLen    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	106	None	replace
136	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
137	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
138	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
139	[BUG]  [BUGGY]  System.arraycopy(file,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(file,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(file,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
140	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  os.length);	  System.arraycopy(osBuf,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
141	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  /  2);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  /  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  /  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    -    2);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
142	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  *  2);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  *  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  *  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    -    2);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
143	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  -  2);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  -  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    -    2);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
144	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_SNAPSHOT);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
145	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_SNAPSHOT);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
146	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_GNU);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_GNU);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_GNU);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_SNAPSHOT);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
147	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_RANGE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_RANGE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_RANGE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_SNAPSHOT);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
148	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_GLOBAL);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_GLOBAL);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_GLOBAL);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_SNAPSHOT);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
149	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
150	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
151	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BACKSLASH  +  1,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BACKSLASH  +  1,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BACKSLASH  +  1,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
152	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!this.addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!this.addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =!this.addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
153	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  +  1;	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
154	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!recordPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!recordPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =!recordPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
155	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames(true);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames(true);	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
156	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  os;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  os;	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
157	[BUG]  [BUGGY]  this.assemLen  =  os.readByte();  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readByte();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readByte();	  this.assemLen    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	158	None	replace
158	[BUG]  [BUGGY]  this.assemLen  =  os.readUnsignedByte();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readUnsignedByte();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readUnsignedByte();	  this.assemLen    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	158	None	replace
159	[BUG]  [BUGGY]  this.assemLen  =  os.readLong();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readLong();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLong();	  this.assemLen    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	158	None	replace
160	[BUG]  [BUGGY]  this.assemLen  =  os.readBigNumber();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readBigNumber();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readBigNumber();	  this.assemLen    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	158	None	replace
161	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(buffer,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(buffer,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
162	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
163	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
164	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BACKSLASH);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
165	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_RCDIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_RCDIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_RCDIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BACKSLASH);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
166	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BACKSLASH);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
167	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFileHeaders(true);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFileHeaders(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readFileHeaders(true);	  this.addPaxHeadersForNonAsciiNames    =    os.readFileHeaders();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
168	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readEndFileHeaders();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readEndFileHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readEndFileHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.readFileHeaders();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
169	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
170	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getAllPaxHeaders()  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getAllPaxHeaders()  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getAllPaxHeaders()  +  1;	  this.addPaxHeadersForNonAsciiNames    =    os.getAllPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	151	None	replace
171	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getCurrentPaxHeaders();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getCurrentPaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getCurrentPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getAllPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	151	None	replace
172	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getAllPaxHeaders(true);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getAllPaxHeaders(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getAllPaxHeaders(true);	  this.addPaxHeadersForNonAsciiNames    =    os.getAllPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	151	None	replace
173	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getAllPaxHeaders(),  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getAllPaxHeaders(),  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getAllPaxHeaders(),  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getAllPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	151	None	replace
174	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray().length  +  1];  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray().length  +  1];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[os.toByteArray().length  +  1];	  this.assemBuf    =    new    byte[os.toByteArray().length];    	non-compiled	[CE]  <identifier>  expected	147	None	replace
175	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray().length  +  2];  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray().length  +  2];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[os.toByteArray().length  +  2];	  this.assemBuf    =    new    byte[os.toByteArray().length];    	non-compiled	[CE]  <identifier>  expected	147	None	replace
176	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[os.getBytes().length];  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[os.getBytes().length];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[os.getBytes().length];	  this.assemBuf    =    new    byte[os.toByteArray().length];    	non-compiled	[CE]  <identifier>  expected	147	None	replace
177	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray().length  +  4];  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray().length  +  4];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[os.toByteArray().length  +  4];	  this.assemBuf    =    new    byte[os.toByteArray().length];    	non-compiled	[CE]  <identifier>  expected	147	None	replace
178	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray().length  *  2];  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray().length  *  2];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[os.toByteArray().length  *  2];	  this.assemBuf    =    new    byte[os.toByteArray().length];    	non-compiled	[CE]  <identifier>  expected	147	None	replace
179	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray().length  +  3];  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray().length  +  3];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[os.toByteArray().length  +  3];	  this.assemBuf    =    new    byte[os.toByteArray().length];    	non-compiled	[CE]  <identifier>  expected	147	None	replace
180	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  2;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  2;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    *    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
181	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  4;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  4;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    *    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
182	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  -  TarBuffer.DEFAULT_RCDSIZE;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  -  TarBuffer.DEFAULT_RCDSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  -  TarBuffer.DEFAULT_RCDSIZE;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    *    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
183	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
184	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  2);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  2);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
185	[BUG]  [BUGGY]  this.assemBuf  =  TarBuffer.DEFAULT_BLKSIZE;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  TarBuffer.DEFAULT_BLKSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  TarBuffer.DEFAULT_BLKSIZE;	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
186	[BUG]  [BUGGY]  this.assemBuf  =  buffer.toByteArray(TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  buffer.toByteArray(TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  buffer.toByteArray(TarBuffer.DEFAULT_BLKSIZE);	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
187	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray(RecordBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray(RecordBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray(RecordBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
188	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
189	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray(RawBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray(RawBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray(RawBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
190	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray(RawBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray(RawBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray(RawBuffer.DEFAULT_RCDSIZE);	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
191	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  2);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  2);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
192	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  *  2);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  *  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  *  2);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
193	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  4);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  4);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
194	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_BLKSIZE  +  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_BLKSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_BLKSIZE  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
195	[BUG]  [BUGGY]  this.assemBuf  =  buffer.toByteArray(TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  buffer.toByteArray(TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  buffer.toByteArray(TarBuffer.DEFAULT_RCDSIZE);	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
196	[BUG]  [BUGGY]  this.assemBuf  =  TarBuffer.DEFAULT_RCDSIZE;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  TarBuffer.DEFAULT_RCDSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  TarBuffer.DEFAULT_RCDSIZE;	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
197	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[TarBuffer.DEFAULT_RCDSIZE];  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[TarBuffer.DEFAULT_RCDSIZE];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[TarBuffer.DEFAULT_RCDSIZE];	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
198	[BUG]  [BUGGY]  this.assemBuf  =  TarBuffer.DEFAULT_RCDSIZE  +  os.toByteArray(TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  TarBuffer.DEFAULT_RCDSIZE  +  os.toByteArray(TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  TarBuffer.DEFAULT_RCDSIZE  +  os.toByteArray(TarBuffer.DEFAULT_BLKSIZE);	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
199	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
200	[BUG]  [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
201	[BUG]  [BUGGY]  os  =  buffer.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  buffer.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
202	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  2,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  2,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  2,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
203	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_ROOT);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_ROOT);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_ROOT);  os  =  buffer;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_ROOT);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	139	None	replace
204	[BUG]  [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_ROOT);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	139	None	replace
205	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT);  os  =  out;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT);  os  =  out;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT);  os  =  out;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_ROOT);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	139	None	replace
206	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT);  os  =  os;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT);  os  =  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT);  os  =  os;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_ROOT);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	139	None	replace
207	[BUG]  [BUGGY]  os  =  out;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  out;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  out;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    out;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
208	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  out;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  out;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  out;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    out;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
209	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  os;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  os;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    out;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
210	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  out;  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  out;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  out;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    out;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
211	[BUG]  [BUGGY]  os  =  TarBuffer.DEFAULT_RCDSIZE;  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  TarBuffer.DEFAULT_RCDSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  TarBuffer.DEFAULT_RCDSIZE;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    out;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
212	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  os;  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  os;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    out;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
213	[BUG]  [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  this.assemLen    =    os.read(ByteBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
214	[BUG]  [BUGGY]  this.assemLen  =  buffer.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  buffer.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  buffer.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(ByteBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
215	[BUG]  [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  4);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  4);	  this.assemLen    =    os.read(ByteBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
216	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize  -  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize  -  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen    -    1);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
217	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  -  2);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  -  2);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen    -    1);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
218	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemLen  -  1);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemLen  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemLen  -  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen    -    1);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
219	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen  -  1);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen  -  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen    -    1);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
220	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(tarBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
221	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(tarBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
222	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINS,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINS,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINS,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BIGINTS);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
223	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINTS,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINTS,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINTS,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BIGINTS);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
224	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINS,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINS,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINS,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BIGINTS);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
225	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BRIDGE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BRIDGE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BRIDGE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BIGINTS);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
226	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  2,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  2,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  2,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
227	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  4,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  4,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  4,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
228	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
229	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen  +  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen  +  1);	  System.arraycopy(assemBuf,    0,    recordBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
230	[BUG]  [BUGGY]  System.arraycopy(file,  0,  this.file,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(file,  0,  this.file,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(file,  0,  this.file,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(file,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
231	[BUG]  [BUGGY]  System.arraycopy(file,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(file,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(file,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(file,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
232	[BUG]  [BUGGY]  System.arraycopy(file,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(file,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(file,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(file,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
233	[BUG]  [BUGGY]  System.arraycopy(file,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(file,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(file,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(file,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
234	[BUG]  [BUGGY]  System.arraycopy(file,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(file,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(file,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(file,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
235	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(),  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(),  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(),  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(),    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
236	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_BLKSIZE,  os.getRecordPaxHeaders());  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_BLKSIZE,  os.getRecordPaxHeaders());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_BLKSIZE,  os.getRecordPaxHeaders());	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(),    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
237	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBuxHeaders(),  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBuxHeaders(),  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBuxHeaders(),  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(),    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
238	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufHeaders(),  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufHeaders(),  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufHeaders(),  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(),    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
239	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(),  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(),  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(),  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(),    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
240	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(),  TarBuffer.DEFAULT_RCDIZE);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(),  TarBuffer.DEFAULT_RCDIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(),  TarBuffer.DEFAULT_RCDIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(),    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
241	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(recordBuf,  os,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(recordBuf,  os,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(recordBuf,  os,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
242	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(buff,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(buff,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(buff,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
243	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
244	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separator  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separator  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separator  +  1;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    File.separator;    	non-compiled	[CE]  <identifier>  expected	109	None	replace
245	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  File.separator;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  File.separator;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  File.separator;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    File.separator;    	non-compiled	[CE]  <identifier>  expected	109	None	replace
246	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  File.separator;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  File.separator;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  File.separator;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    File.separator;    	non-compiled	[CE]  <identifier>  expected	109	None	replace
247	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separatorChar;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separatorChar;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separatorChar;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    File.separator;    	non-compiled	[CE]  <identifier>  expected	109	None	replace
248	[BUG]  [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(ByteBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(ByteBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	117	None	replace
249	[BUG]  [BUGGY]  this.assemLen  =  os.readByteBuffer(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readByteBuffer(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readByteBuffer(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(ByteBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	117	None	replace
250	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE.read();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE.read();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE.read();	  this.assemLen    =    os.read(ByteBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	117	None	replace
251	[BUG]  [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(ByteBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  this.assemLen    =    os.read(ByteBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	117	None	replace
252	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  |=  false;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  |=  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  |=  false;	  this.addPaxHeadersForNonAsciiNames    =    true;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
253	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  null;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  null;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  null;	  this.addPaxHeadersForNonAsciiNames    =    true;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
254	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  = " ";  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  = " ";  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  = " ";	  this.addPaxHeadersForNonAsciiNames    =    true;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
255	[BUG]  [BUGGY]  This.addPaxHeadersForNonAsciiNames  =  false;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  This.addPaxHeadersForNonAsciiNames  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	This.addPaxHeadersForNonAsciiNames  =  false;	  this.addPaxHeadersForNonAsciiNames    =    true;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
256	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_LAST_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_LAST_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_LAST_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_LAST_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
257	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_LAST_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
258	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_LAST  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_LAST  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_LAST	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_LAST_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
259	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_LAST_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
260	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_LAST_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
261	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  4);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  4);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    4);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
262	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  /  4);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  /  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  /  4);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    4);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
263	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  *  4);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  *  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  *  4);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    4);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
264	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(recordBuf);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
265	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(assemBuf);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(assemBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(assemBuf);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(recordBuf);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
266	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(recordBuf);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
267	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(tarBuf);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(tarBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(tarBuf);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(recordBuf);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
268	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(assemBuf,  recordBuf);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(assemBuf,  recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(assemBuf,  recordBuf);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(recordBuf);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
269	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  out);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  out);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  out);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(recordBuf);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
270	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
271	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
272	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
273	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||!addPaxHeadersForNonAsciiNames);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||!addPaxHeadersForNonAsciiNames);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||!addPaxHeadersForNonAsciiNames);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
274	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames  +  1);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames  +  1);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
275	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
276	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemLen,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemLen,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  assemLen,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
277	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
278	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
279	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
280	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  -  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  -  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  -  1;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    -    1;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
281	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  /  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  /  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  /  1;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    -    1;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
282	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  2  -  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  2  -  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  2  -  1;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    -    1;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
283	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  -  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  -  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE  -  1;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    -    1;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
284	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordLocalFileHeaders();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordLocalFileHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordLocalFileHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordFileHeaders();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
285	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getInputStream();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getInputStream();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getInputStream();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordFileHeaders();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
286	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  os.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  buffer,  0,  os.length  +  1);	  System.arraycopy(os,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
287	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  os.length  -  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  os.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  buffer,  0,  os.length  -  1);	  System.arraycopy(os,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
288	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  os.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  this.buffer,  0,  os.length);	  System.arraycopy(os,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
289	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  1,  os.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  buffer,  1,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  buffer,  1,  os.length);	  System.arraycopy(os,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
290	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  os.length  +  1,  os.length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  os.length  +  1,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  buffer,  0,  os.length  +  1,  os.length);	  System.arraycopy(os,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
291	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  os.length  +  2);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  os.length  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  buffer,  0,  os.length  +  2);	  System.arraycopy(os,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
292	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine()  +  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine()  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLine()  +  1;	  this.addPaxHeadersForNonAsciiNames    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
293	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  buffer.readLine();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  buffer.readLine();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  buffer.readLine();	  this.addPaxHeadersForNonAsciiNames    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
294	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  out.readLine();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  out.readLine();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  out.readLine();	  this.addPaxHeadersForNonAsciiNames    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
295	[BUG]  [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
296	[BUG]  [BUGGY]  this.assemLen  =  os.readBytes(TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readBytes(TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readBytes(TarBuffer.DEFAULT_BLKSIZE);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
297	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  &&  os.readPaxHeaders();  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  &&  os.readPaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  &&  os.readPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders()    ||    os.readPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	137	None	replace
298	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  ||  buffer.readPaxHeaders();  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  ||  buffer.readPaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  ||  buffer.readPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders()    ||    os.readPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	137	None	replace
299	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  ||  out.readPaxHeaders();  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  ||  out.readPaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  ||  out.readPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders()    ||    os.readPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	137	None	replace
300	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeader()  &&  os.readPaxHeaders();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeader()  &&  os.readPaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeader()  &&  os.readPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders()    ||    os.readPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	137	None	replace
301	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  ||  os.writePaxHeaders();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  ||  os.writePaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  ||  os.writePaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders()    ||    os.readPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	137	None	replace
302	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  buffer.length);	  System.arraycopy(assemBuf,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
303	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  os.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  os.length  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
304	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  os.length);	  System.arraycopy(assemBuf,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
305	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  os.length  -  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  os.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  os.length  -  1);	  System.arraycopy(assemBuf,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
306	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  os.length  -  2);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  os.length  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  os.length  -  2);	  System.arraycopy(assemBuf,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
307	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    -    1);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
308	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  *  2);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  *  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  *  2);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
309	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemLen  +  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemLen  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemLen  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
310	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
311	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  *  2);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  *  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  *  2);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
312	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(tarBuffer,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
313	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(tarBuffer,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
314	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  this.tarBuffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  this.tarBuffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  this.tarBuffer,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(tarBuffer,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
315	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(tarBuffer,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
316	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(tarBuffer,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
317	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(tarBuffer,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
318	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(tarBuffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
319	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(tarBuffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
320	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  this.tarBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  this.tarBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  this.tarBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(tarBuffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
321	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  os.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  os.length  +  1);	  System.arraycopy(os,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
322	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  os.length  -  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  os.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  os.length  -  1);	  System.arraycopy(os,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
323	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  os,  0,  os.length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  os,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  os,  0,  os.length);	  System.arraycopy(os,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
324	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
325	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
326	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  true  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
327	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  false  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
328	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  0  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
329	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames  +  1;  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames  +  1;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
330	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
331	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
332	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize  +  2);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize  +  2);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
333	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
334	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize  +  4);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize  +  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize  +  4);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
335	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(false);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(false);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(true);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
336	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(true);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
337	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(true);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
338	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true,  TarBuffer.DEFAULT_BACKSLASH);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(true);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
339	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordTrueHeaders();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordTrueHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordTrueHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordTarHeaders();    	non-compiled	[CE]  <identifier>  expected	101	None	replace
340	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRawHeaders();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRawHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRawHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordTarHeaders();    	non-compiled	[CE]  <identifier>  expected	101	None	replace
341	[BUG]  [BUGGY]  this.assemLen  =  os.readFully(true);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readFully(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readFully(true);	  this.assemLen    =    os.readFully();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
342	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE.readFully();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE.readFully();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE.readFully();	  this.assemLen    =    os.readFully();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
343	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  -  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  -  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    os.length    +    1);    	non-compiled	[CE]  <identifier>  expected	150	None	replace
344	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  +  2);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  +  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    os.length    +    1);    	non-compiled	[CE]  <identifier>  expected	150	None	replace
345	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  os.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  os.length  +  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    os.length    +    1);    	non-compiled	[CE]  <identifier>  expected	150	None	replace
346	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  *  2);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  *  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  *  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    os.length    +    1);    	non-compiled	[CE]  <identifier>  expected	150	None	replace
347	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  +  3);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  +  3);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  +  3);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    os.length    +    1);    	non-compiled	[CE]  <identifier>  expected	150	None	replace
348	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray()  &&  os.toByteArray();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray()  &&  os.toByteArray();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray()  &&  os.toByteArray();	  this.assemBuf    =    os.toByteArray()    ||    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
349	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray()  ||  buffer.toByteArray();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray()  ||  buffer.toByteArray();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray()  ||  buffer.toByteArray();	  this.assemBuf    =    os.toByteArray()    ||    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
350	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray()  ||  TarBuffer.DEFAULT_RCDSIZE;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray()  ||  TarBuffer.DEFAULT_RCDSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray()  ||  TarBuffer.DEFAULT_RCDSIZE;	  this.assemBuf    =    os.toByteArray()    ||    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
351	[BUG]  [BUGGY]  this.assemBuf  =  buffer.toByteArray()  ||  os.toByteArray();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  buffer.toByteArray()  ||  os.toByteArray();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  buffer.toByteArray()  ||  os.toByteArray();	  this.assemBuf    =    os.toByteArray()    ||    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
352	[BUG]  [BUGGY]  this.assemBuf  =  os.toBytes()  ||  os.toByteArray();  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toBytes()  ||  os.toByteArray();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toBytes()  ||  os.toByteArray();	  this.assemBuf    =    os.toByteArray()    ||    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
353	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray()  ||  TarBuffer.DEFAULT_BLKSIZE;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray()  ||  TarBuffer.DEFAULT_BLKSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray()  ||  TarBuffer.DEFAULT_BLKSIZE;	  this.assemBuf    =    os.toByteArray()    ||    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
354	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemLen,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
355	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemLen,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemLen,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  assemLen,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemLen,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
356	[BUG]  [BUGGY]  os  =  buffer.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  buffer.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	120	None	replace
357	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  2,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  2,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  2,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(assemBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	120	None	replace
358	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  4,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  4,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  4,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(assemBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	120	None	replace
359	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  this.assemBuf.length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  this.assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  this.assemBuf.length);	  System.arraycopy(assemBuf,    0,    os,    0,    this.assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	149	None	replace
360	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.assemBuf.length);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.assemBuf.length);	  System.arraycopy(assemBuf,    0,    os,    0,    this.assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	149	None	replace
361	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  this.assemLen);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  this.assemLen);	  System.arraycopy(assemBuf,    0,    os,    0,    this.assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	149	None	replace
362	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  this.assemBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  this.assemBuf.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  this.assemBuf.length  -  1);	  System.arraycopy(assemBuf,    0,    os,    0,    this.assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	149	None	replace
363	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  os,  0,  this.assemBuf.length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  os,  0,  this.assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  os,  0,  this.assemBuf.length);	  System.arraycopy(assemBuf,    0,    os,    0,    this.assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	149	None	replace
364	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
365	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  buffer.readUTF();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  buffer.readUTF();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  buffer.readUTF();	  this.addPaxHeadersForNonAsciiNames    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
366	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  out.readUTF();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  out.readUTF();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  out.readUTF();	  this.addPaxHeadersForNonAsciiNames    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
367	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readUTF()  +  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readUTF()  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readUTF()  +  1;	  this.addPaxHeadersForNonAsciiNames    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
368	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE.readUTF();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE.readUTF();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE.readUTF();	  this.assemLen    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
369	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE;	  this.assemLen    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
370	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE.readUTF();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE.readUTF();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE.readUTF();	  this.assemLen    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
371	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE  +  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE  +  1;	  this.addPaxHeadersForNonAsciiNames    =    TarBuffer.DEFAULT_ADD_PATH_SIZE;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
372	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    TarBuffer.DEFAULT_ADD_PATH_SIZE;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
373	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE,  TarBuffer.DEFAULT_BLKSIZE;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE,  TarBuffer.DEFAULT_BLKSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE,  TarBuffer.DEFAULT_BLKSIZE;	  this.addPaxHeadersForNonAsciiNames    =    TarBuffer.DEFAULT_ADD_PATH_SIZE;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
374	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ARRAY_SIZE;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ARRAY_SIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ARRAY_SIZE;	  this.addPaxHeadersForNonAsciiNames    =    TarBuffer.DEFAULT_ADD_PATH_SIZE;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
375	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    TarBuffer.DEFAULT_ADD_PATH_SIZE;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
376	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_BLKSIZE;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_BLKSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_BLKSIZE;	  this.addPaxHeadersForNonAsciiNames    =    TarBuffer.DEFAULT_ADD_PATH_SIZE;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
377	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
378	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
379	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  2);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  2);	  System.arraycopy(assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
380	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  2,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  2,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  2,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
381	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  4,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  4,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  4,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
382	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  1,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  1,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  1,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
383	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
384	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  &=  false;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  &=  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  &=  false;	  this.addPaxHeadersForNonAsciiNames    =    false;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
385	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LBKSIZE  +  1);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LBKSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LBKSIZE  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LBKSIZE);    	non-compiled	[CE]  <identifier>  expected	154	None	replace
386	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RBKSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RBKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RBKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LBKSIZE);    	non-compiled	[CE]  <identifier>  expected	154	None	replace
387	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RRDSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RRDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RRDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LBKSIZE);    	non-compiled	[CE]  <identifier>  expected	154	None	replace
388	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_LBKSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_LBKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_LBKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LBKSIZE);    	non-compiled	[CE]  <identifier>  expected	154	None	replace
389	[BUG]  [BUGGY]  System.arraycopy(ttarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(ttarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(ttarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(ttarBuffer,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	143	None	replace
390	[BUG]  [BUGGY]  System.arraycopy(assemBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(ttarBuffer,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	143	None	replace
391	[BUG]  [BUGGY]  System.arraycopy(ttarBuffer,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(ttarBuffer,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(ttarBuffer,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(ttarBuffer,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	143	None	replace
392	[BUG]  [BUGGY]  System.arraycopy(ttarBuffer,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(ttarBuffer,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(ttarBuffer,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(ttarBuffer,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	143	None	replace
393	[BUG]  [BUGGY]  this.assemLen  =  os.readBytes(true);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readBytes(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readBytes(true);	  this.assemLen    =    os.readBytes();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
394	[BUG]  [BUGGY]  this.assemLen  =  os.readBytes(recordBuf);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readBytes(recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readBytes(recordBuf);	  this.assemLen    =    os.readBytes();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
395	[BUG]  [BUGGY]  this.assemLen  =  os.readBytes(currSize);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readBytes(currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readBytes(currSize);	  this.assemLen    =    os.readBytes();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
396	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufferHeaders(true);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufferHeaders(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufferHeaders(true);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordBufferHeaders();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
397	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBuffer();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBuffer();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBuffer();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordBufferHeaders();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
398	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.toByteArray();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.toByteArray();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.toByteArray();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordBufferHeaders();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
399	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufferHeaders()  +  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufferHeaders()  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufferHeaders()  +  1;	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordBufferHeaders();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
400	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;	  System.arraycopy(this.assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
401	[BUG]  [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer.arraycopy(this.assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(this.assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
402	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  -  2);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  -  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
403	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  os.length  -  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  os.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  os.length  -  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    os.length);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
404	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  os.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  os.length  +  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    os.length);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
405	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  1,  os.length);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  1,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  1,  os.length);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    os.length);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
406	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  2,  os.length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  2,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  2,  os.length);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    os.length);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
407	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  os.length  -  2);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  os.length  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  os.length  -  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    os.length);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
408	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  /  2;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  /  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  /  2;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    2;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
409	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  2;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  2;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    2;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
410	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readBytes(true);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readBytes(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readBytes(true);	  this.addPaxHeadersForNonAsciiNames    =    os.readBytes();    	non-compiled	[CE]  <identifier>  expected	136	None	replace
411	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readBytes(recordBuf);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readBytes(recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readBytes(recordBuf);	  this.addPaxHeadersForNonAsciiNames    =    os.readBytes();    	non-compiled	[CE]  <identifier>  expected	136	None	replace
412	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readBytes(TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readBytes(TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readBytes(TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.readBytes();    	non-compiled	[CE]  <identifier>  expected	136	None	replace
413	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_CRDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_CRDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_CRDSIZE  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_CRDSIZE);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
414	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_CRDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_CRDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_CRDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_CRDSIZE);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
415	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_CRDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_CRDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_CRDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_CRDSIZE);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
416	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_CRDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_CRDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_CRDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_CRDSIZE);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
417	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  2,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  2,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  2,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
418	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
419	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
420	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE  +  1);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LONGFILE_POSIZE);    	non-compiled	[CE]  <identifier>  expected	155	None	replace
421	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LONGFILE_POSIZE);    	non-compiled	[CE]  <identifier>  expected	155	None	replace
422	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_GNU);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LONGFILE_POSIZE);    	non-compiled	[CE]  <identifier>  expected	155	None	replace
423	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_GLOBAL_POSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_GLOBAL_POSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_GLOBAL_POSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LONGFILE_POSIZE);    	non-compiled	[CE]  <identifier>  expected	155	None	replace
424	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE  +  4);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE  +  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE  +  4);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LONGFILE_POSIZE);    	non-compiled	[CE]  <identifier>  expected	155	None	replace
425	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[TarBuffer.DEFAULT_BLKSIZE];  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[TarBuffer.DEFAULT_BLKSIZE];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[TarBuffer.DEFAULT_BLKSIZE];	  this.assemBuf    =    recordBuf.toByteArray();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
426	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[RecordBuf.DEFAULT_BLKSIZE];  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[RecordBuf.DEFAULT_BLKSIZE];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[RecordBuf.DEFAULT_BLKSIZE];	  this.assemBuf    =    recordBuf.toByteArray();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
427	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordBuf.toByteArray()  ];  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[recordBuf.toByteArray()  ];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[recordBuf.toByteArray()  ];	  this.assemBuf    =    recordBuf.toByteArray();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
428	[BUG]  [BUGGY]  System.arraycopy(ttarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(ttarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(ttarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(ttarBuffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
429	[BUG]  [BUGGY]  System.arraycopy(assemBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(ttarBuffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
430	[BUG]  [BUGGY]  System.arraycopy(os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(ttarBuffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
431	[BUG]  [BUGGY]  this.assemLen  =  os.readString();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readString();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readString();	  this.assemLen    =    os.readRoot();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
432	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders()  [0];  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders()  [0];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders()  [0];	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders()    +    1;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
433	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders()  *  1;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders()  *  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders()  *  1;	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders()    +    1;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
434	[BUG]  [BUGGY]  This.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders();  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  This.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	This.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders()    +    1;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
435	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readByte();  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readByte();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readByte();	  this.addPaxHeadersForNonAsciiNames    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	124	None	replace
436	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readUnclosedEntry();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readUnclosedEntry();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readUnclosedEntry();	  this.addPaxHeadersForNonAsciiNames    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	124	None	replace
437	[BUG]  [BUGGY]  assemBuf  =  buffer.toByteArray();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  assemBuf  =  buffer.toByteArray();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	assemBuf  =  buffer.toByteArray();	  assemBuf    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
438	[BUG]  [BUGGY]  assemBuf  =  os.toByteArray()  +  1;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  assemBuf  =  os.toByteArray()  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	assemBuf  =  os.toByteArray()  +  1;	  assemBuf    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
439	[BUG]  [BUGGY]  assemBuf  =  os.getBytes( "UTF-8 ");  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  assemBuf  =  os.getBytes( "UTF-8 ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	assemBuf  =  os.getBytes( "UTF-8 ");	  assemBuf    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
440	[BUG]  [BUGGY]  this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_BLKSIZE);	  this.assemLen    =    os.read(tarBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
441	[BUG]  [BUGGY]  this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(tarBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
442	[BUG]  [BUGGY]  this.assemLen  =  os.readBytes(tarBuf);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readBytes(tarBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readBytes(tarBuf);	  this.assemLen    =    os.read(tarBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
443	[BUG]  [BUGGY]  this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_TRUNCATE);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_TRUNCATE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_TRUNCATE);	  this.assemLen    =    os.read(tarBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
444	[BUG]  [BUGGY]  this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_GNU);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_GNU);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_GNU);	  this.assemLen    =    os.read(tarBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
445	[BUG]  [BUGGY]  this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_BACKSLASH);	  this.assemLen    =    os.read(tarBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
446	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames(true);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames(true);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordByNames();    	non-compiled	[CE]  <identifier>  expected	102	None	replace
447	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames(TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames(TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames(TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordByNames();    	non-compiled	[CE]  <identifier>  expected	102	None	replace
448	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames()  +  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames()  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames()  +  1;	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordByNames();    	non-compiled	[CE]  <identifier>  expected	102	None	replace
449	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames(recordBuf);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames(recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames(recordBuf);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordByNames();    	non-compiled	[CE]  <identifier>  expected	102	None	replace
450	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordBytes();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
451	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(true);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(true);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordBytes();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
452	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(recordBuf);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(recordBuf);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordBytes();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
453	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordBytes();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
454	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readOnlyPaxHeader(true);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readOnlyPaxHeader(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readOnlyPaxHeader(true);	  this.addPaxHeadersForNonAsciiNames    =    os.readOnlyPaxHeader();    	non-compiled	[CE]  <identifier>  expected	123	None	replace
455	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readOnlyPax();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readOnlyPax();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readOnlyPax();	  this.addPaxHeadersForNonAsciiNames    =    os.readOnlyPaxHeader();    	non-compiled	[CE]  <identifier>  expected	123	None	replace
456	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_RCDSIZE,  addPaxHeadersForNonAsciiNames);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_RCDSIZE,  addPaxHeadersForNonAsciiNames);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_RCDSIZE,  addPaxHeadersForNonAsciiNames);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
457	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  false,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
458	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
459	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  true,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
460	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
461	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
462	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_BLKSIZE,  addPaxHeadersForNonAsciiNames);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_BLKSIZE,  addPaxHeadersForNonAsciiNames);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_BLKSIZE,  addPaxHeadersForNonAsciiNames);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
463	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_RCDIZE);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
464	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDIZE,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_RCDIZE);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
465	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCD  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCD  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCD	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_RCDIZE);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
466	[BUG]  [BUGGY]  os  =  buffer.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  buffer.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	138	None	replace
467	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	138	None	replace
468	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  [0];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  [0];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  [0];	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders()    +    1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
469	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  *  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  *  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  *  1;	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders()    +    1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
470	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getPaxHeaders();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getPaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders()    +    1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
471	[BUG]  [BUGGY]  This.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  This.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	This.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders()    +    1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
472	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  2,  assemLen);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  2,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  2,  assemLen);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    assemLen);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
473	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemLen  +  2);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemLen  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemLen  +  2);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    assemLen);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
474	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  -  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  -  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  -  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
475	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
476	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  /  2,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  /  2,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  /  2,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
477	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  /  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  /  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  /  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
478	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(this.assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
479	[BUG]  [BUGGY]  os  =  os;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  os;	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
480	[BUG]  [BUGGY]  os  =  TarBuffer.DEFAULT_TRUNCATE;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  TarBuffer.DEFAULT_TRUNCATE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  TarBuffer.DEFAULT_TRUNCATE;	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
481	[BUG]  [BUGGY]  os  =  TarBuffer.DEFAULT_BLKSIZE;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  TarBuffer.DEFAULT_BLKSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  TarBuffer.DEFAULT_BLKSIZE;	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
482	[BUG]  [BUGGY]  os  =  TarBuffer.DEFAULT_ARRAY;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  TarBuffer.DEFAULT_ARRAY;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  TarBuffer.DEFAULT_ARRAY;	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
483	[BUG]  [BUGGY]  os  =  TarBuffer.DEFAULT_ROOT;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  TarBuffer.DEFAULT_ROOT;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  TarBuffer.DEFAULT_ROOT;	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
484	[BUG]  [BUGGY]  os  =  TarBuffer.DEFAULT_BACKSLASH;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  TarBuffer.DEFAULT_BACKSLASH;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  TarBuffer.DEFAULT_BACKSLASH;	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
485	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  1;	  this.addPaxHeadersForNonAsciiNames    =    0;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
486	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0L;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0L;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  0L;	  this.addPaxHeadersForNonAsciiNames    =    0;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
487	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  4;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  4;	  this.addPaxHeadersForNonAsciiNames    =    0;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
488	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  2;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  2;	  this.addPaxHeadersForNonAsciiNames    =    0;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
489	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
490	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
491	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
492	[BUG]  [BUGGY]  this.assemLen  =  os.ReadLine();  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.ReadLine();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.ReadLine();	  this.assemLen    =    os.readLine()    +    1;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
493	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(this.assemBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
494	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
495	[BUG]  [BUGGY]  this.assemLen  =  os.read(buffer);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(buffer);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(buffer);	  this.assemLen    =    os.read(tarBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
496	[BUG]  [BUGGY]  this.assemLen  =  os.read(recordBuf);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(recordBuf);	  this.assemLen    =    os.read(tarBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
497	[BUG]  [BUGGY]  this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_ARGSIZE);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_ARGSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(tarBuf,  TarBuffer.DEFAULT_ARGSIZE);	  this.assemLen    =    os.read(tarBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
498	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT,  os);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT,  os);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT,  os);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_ROOT);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	139	None	replace
499	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_ROOT);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_ROOT);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_ROOT);  os  =  buffer;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_ROOT);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	139	None	replace
500	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT);  os  =  buffer;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_ROOT);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	139	None	replace
501	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT  +  1);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT  +  1);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT  +  1);  os  =  buffer;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_ROOT);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	139	None	replace
502	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_LBKSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_LBKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_LBKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
503	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(tarBuffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
504	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE  +  4);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE  +  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE  +  4);	  System.arraycopy(tarBuffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
505	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!updatePaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!updatePaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =!updatePaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
506	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);	  System.arraycopy(assemBuf,    0,    recordBuf,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
507	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);	  System.arraycopy(assemBuf,    0,    recordBuf,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
508	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
509	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  -  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  -  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
510	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||!addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||!addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||!addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	66	None	replace
511	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||!addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||!addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||!addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
512	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  os;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  os;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
513	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
514	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
515	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  /  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  /  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  /  1);	  System.arraycopy(assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
516	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  *  2);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  *  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  *  2);	  System.arraycopy(assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
517	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  4);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  4);	  System.arraycopy(assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
518	[BUG]  [BUGGY]  System.arraycopy(ttarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(ttarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(ttarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(ttarBuffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
519	[BUG]  [BUGGY]  System.arraycopy(ttarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(ttarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(ttarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(ttarBuffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
520	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  recordBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  recordBuf.length);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(recordBuf);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
521	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  recordBuf);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  recordBuf);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(recordBuf);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
522	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  buffer.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf,  buffer.length);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(recordBuf);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
523	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(false,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(false,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(false,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(true);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
524	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getBytes( "UTF-8 ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getBytes( "UTF-8 ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getBytes( "UTF-8 ");	  this.addPaxHeadersForNonAsciiNames    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
525	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getUTF();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getUTF();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getUTF();	  this.addPaxHeadersForNonAsciiNames    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
526	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RNAPSHOT,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RNAPSHOT,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RNAPSHOT,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_SNAPSHOT);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
527	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_CRDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_CRDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT,  TarBuffer.DEFAULT_CRDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_SNAPSHOT);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
528	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getOutputFileHeaders();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getOutputFileHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getOutputFileHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordFileHeaders();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
529	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_GNU  +  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_BLKSIZE;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_GNU  +  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_BLKSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_GNU  +  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_BLKSIZE;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    TarBuffer.DEFAULT_GNU;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
530	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_LBKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_GNU;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_LBKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_GNU;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_LBKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_GNU;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    TarBuffer.DEFAULT_GNU;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
531	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE    +    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
532	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine()  &  TarBuffer.DEFAULT_RCDSIZE;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine()  &  TarBuffer.DEFAULT_RCDSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLine()  &  TarBuffer.DEFAULT_RCDSIZE;	  this.addPaxHeadersForNonAsciiNames    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
533	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine()  +  4;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine()  +  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLine()  +  4;	  this.addPaxHeadersForNonAsciiNames    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
534	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine()  +  2;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine()  +  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLine()  +  2;	  this.addPaxHeadersForNonAsciiNames    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
535	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine()  -  1;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine()  -  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLine()  -  1;	  this.addPaxHeadersForNonAsciiNames    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
536	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  -  1);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
537	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  2);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE  +  2);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
538	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_BACKSLASH);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_BACKSLASH);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_BACKSLASH);  os  =  buffer;	  System.arraycopy(assemBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	120	None	replace
539	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true,  TarBuffer.DEFAULT_ARGSIZE);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true,  TarBuffer.DEFAULT_ARGSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true,  TarBuffer.DEFAULT_ARGSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(true);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
540	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true,  TarBuffer.DEFAULT_RANGE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true,  TarBuffer.DEFAULT_RANGE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true,  TarBuffer.DEFAULT_RANGE);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(true);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
541	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  ZipEncoding();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  ZipEncoding();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  ZipEncoding();	  this.addPaxHeadersForNonAsciiNames    =    encoding;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
542	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_RCDSIZE;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_RCDSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_RCDSIZE;	  this.addPaxHeadersForNonAsciiNames    =    encoding;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
543	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[os.getByteArray().length];  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[os.getByteArray().length];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[os.getByteArray().length];	  this.assemBuf    =    new    byte[os.toByteArray().length];    	non-compiled	[CE]  <identifier>  expected	147	None	replace
544	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray().length  -  1];  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray().length  -  1];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[os.toByteArray().length  -  1];	  this.assemBuf    =    new    byte[os.toByteArray().length];    	non-compiled	[CE]  <identifier>  expected	147	None	replace
545	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_BLKSIZE  +  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_BLKSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_BLKSIZE  +  1);	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
546	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_BUFFER);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_BUFFER);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_BUFFER);	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
547	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_LBKSIZE);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_LBKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_LBKSIZE);	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
548	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLOCKSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLOCKSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLOCKSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
549	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  out;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  out;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  out;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    out;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
550	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  os.length);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
551	[BUG]  [BUGGY]  this.assemLen  =  Os.readLine();  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  Os.readLine();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  Os.readLine();	  this.assemLen    =    os.readLine()    +    4;    	non-compiled	[CE]  <identifier>  expected	104	None	replace
552	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBuxHeaders(),  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBuxHeaders(),  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBuxHeaders(),  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(),    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
553	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames(),  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames(),  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames(),  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(),    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
554	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordFileHeaders(),  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordFileHeaders(),  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordFileHeaders(),  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(),    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
555	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordTarGNUHeaders(),  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordTarGNUHeaders(),  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordTarGNUHeaders(),  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(),    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
556	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BACKSLASH);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BACKSLASH);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BACKSLASH);  os  =  buffer;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	93	None	replace
557	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
558	[BUG]  [BUGGY]  this.assemBuf  =  buffer.toByteArray()  &  TarBuffer.DEFAULT_RCDSIZE;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  buffer.toByteArray()  &  TarBuffer.DEFAULT_RCDSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  buffer.toByteArray()  &  TarBuffer.DEFAULT_RCDSIZE;	  this.assemBuf    =    buffer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
559	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[buffer.toByteArray().length];  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[buffer.toByteArray().length];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[buffer.toByteArray().length];	  this.assemBuf    =    buffer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
560	[BUG]  [BUGGY]  this.assemBuf  =  buffer.toByteArray()  &&!addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  buffer.toByteArray()  &&!addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  buffer.toByteArray()  &&!addPaxHeadersForNonAsciiNames	  this.assemBuf    =    buffer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
561	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE,  TarBuffer.DEFAULT_RCDSIZE;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE,  TarBuffer.DEFAULT_RCDSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE,  TarBuffer.DEFAULT_RCDSIZE;	  this.addPaxHeadersForNonAsciiNames    =    TarBuffer.DEFAULT_ADD_PATH_SIZE;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
562	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE  +  2;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE  +  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE  +  2;	  this.addPaxHeadersForNonAsciiNames    =    TarBuffer.DEFAULT_ADD_PATH_SIZE;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
563	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE  -  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE  -  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE  -  1;	  this.addPaxHeadersForNonAsciiNames    =    TarBuffer.DEFAULT_ADD_PATH_SIZE;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
564	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE  +  4;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE  +  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE  +  4;	  this.addPaxHeadersForNonAsciiNames    =    TarBuffer.DEFAULT_ADD_PATH_SIZE;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
565	[BUG]  [BUGGY]  this.assemLen  =  os.readFLASIZE();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readFLASIZE();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readFLASIZE();	  this.assemLen    =    os.readFully();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
566	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);	  System.arraycopy(assemBuf,    0,    recordBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
567	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE  /  TarBuffer.DEFAULT_BLKSIZE;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE  /  TarBuffer.DEFAULT_BLKSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE  /  TarBuffer.DEFAULT_BLKSIZE;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    /    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
568	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(this.assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
569	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
570	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  assemSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
571	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordBuf.length);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
572	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  1,  assemLen);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  1,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  1,  assemLen);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    assemLen);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
573	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  assemLen);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  1,  assemLen);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    assemLen);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
574	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
575	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
576	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLOCKSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLOCKSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLOCKSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
577	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
578	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
579	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
580	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(null,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(null,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(null,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
581	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_CRDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_CRDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_CRDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_CRDSIZE);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
582	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFile(true);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFile(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readFile(true);	  this.addPaxHeadersForNonAsciiNames    =    os.readFile();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
583	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
584	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
585	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
586	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  1,  os.length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  1,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  this.assemBuf,  1,  os.length);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    os.length);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
587	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  1,  os.length);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  1,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  1,  os.length);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    os.length);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
588	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.ReadPax();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.ReadPax();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.ReadPax();	  this.addPaxHeadersForNonAsciiNames    =    os.readPax()    +    1;    	non-compiled	[CE]  <identifier>  expected	90	None	replace
589	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  this.assemBuf.length);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  this.assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  buffer,  0,  this.assemBuf.length);	  System.arraycopy(this.assemBuf,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
590	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  buffer,  0,  os.length  -  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  buffer,  0,  os.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  buffer,  0,  os.length  -  1);	  System.arraycopy(this.assemBuf,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
591	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  buffer,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  buffer,  0,  os.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  buffer,  0,  os.length  +  1);	  System.arraycopy(this.assemBuf,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
592	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE  *  TarBuffer.DEFAULT_BLKSIZE;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE  *  TarBuffer.DEFAULT_BLKSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE  *  TarBuffer.DEFAULT_BLKSIZE;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    *    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
593	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BACKSLASH);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BACKSLASH);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BACKSLASH);  os  =  buffer;	  System.arraycopy(assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	138	None	replace
594	[BUG]  [BUGGY]  this.assemLen  =  os.readLineBytes(currSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readLineBytes(currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLineBytes(currSize);	  this.assemLen    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	106	None	replace
595	[BUG]  [BUGGY]  this.assemLen  =  os.readLineBytes(tarBuf);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readLineBytes(tarBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLineBytes(tarBuf);	  this.assemLen    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	106	None	replace
596	[BUG]  [BUGGY]  this.assemLen  =  os.readLineBytes(TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readLineBytes(TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLineBytes(TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	106	None	replace
597	[BUG]  [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
598	[BUG]  [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_RANGE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_RANGE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(TarBuffer.DEFAULT_RANGE,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
599	[BUG]  [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_ROOT,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_ROOT,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(TarBuffer.DEFAULT_ROOT,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
600	[BUG]  [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_ARRAY,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_ARRAY,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(TarBuffer.DEFAULT_ARRAY,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
601	[BUG]  [BUGGY]  this.addPaxHeadersForNonceAsciiNames  =  true;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonceAsciiNames  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonceAsciiNames  =  true;	  this.addPaxHeadersForNonAsciiNames    =    false;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
602	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen  +  3);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen  +  3);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen  +  3);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen    +    3);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
603	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
604	[BUG]  [BUGGY]  os  =  new  OutputStream(out,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  new  OutputStream(out,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  new  OutputStream(out,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
605	[BUG]  [BUGGY]  os  =  new  OutputStream(TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  new  OutputStream(TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  new  OutputStream(TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
606	[BUG]  [BUGGY]  os  =  new  OutputStream(TarBuffer.DEFAULT_ROOT,  TarBuffer.DEFAULT_ROOT);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  new  OutputStream(TarBuffer.DEFAULT_ROOT,  TarBuffer.DEFAULT_ROOT);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  new  OutputStream(TarBuffer.DEFAULT_ROOT,  TarBuffer.DEFAULT_ROOT);	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
607	[BUG]  [BUGGY]  os  =  new  FileOutputStream(TarBuffer.DEFAULT_ROOT,  TarBuffer.DEFAULT_ROOT);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  new  FileOutputStream(TarBuffer.DEFAULT_ROOT,  TarBuffer.DEFAULT_ROOT);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  new  FileOutputStream(TarBuffer.DEFAULT_ROOT,  TarBuffer.DEFAULT_ROOT);	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
608	[BUG]  [BUGGY]  os  =  new  OutputStream(TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  new  OutputStream(TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  new  OutputStream(TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
609	[BUG]  [BUGGY]  this.assemLen  =  os.readDecodeBase64Characters();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readDecodeBase64Characters();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readDecodeBase64Characters();	  this.assemLen    =    os.readCharacters();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
610	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFullyPaxHeader();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFullyPaxHeader();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readFullyPaxHeader();	  this.addPaxHeadersForNonAsciiNames    =    os.readOnlyPaxHeader();    	non-compiled	[CE]  <identifier>  expected	123	None	replace
611	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readWithoutPaxHeader();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readWithoutPaxHeader();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readWithoutPaxHeader();	  this.addPaxHeadersForNonAsciiNames    =    os.readOnlyPaxHeader();    	non-compiled	[CE]  <identifier>  expected	123	None	replace
612	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFromPaxHeader();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFromPaxHeader();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readFromPaxHeader();	  this.addPaxHeadersForNonAsciiNames    =    os.readOnlyPaxHeader();    	non-compiled	[CE]  <identifier>  expected	123	None	replace
613	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  osForNonAsciiNames);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  osForNonAsciiNames);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  osForNonAsciiNames);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
614	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSI  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSI  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSI	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
615	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(tarBuffer,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
616	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  4);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  4);	  System.arraycopy(tarBuffer,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
617	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
618	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
619	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINS);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINS);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINS);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BIGINTS);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
620	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIDENTS,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIDENTS,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIDENTS,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BIGINTS);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
621	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINTS,  TarBuffer.DEFAULT_RCDIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINTS,  TarBuffer.DEFAULT_RCDIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINTS,  TarBuffer.DEFAULT_RCDIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BIGINTS);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
622	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getInputPaxHeaders();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getInputPaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getInputPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getOutputPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	152	None	replace
623	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getDebugPaxHeaders();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getDebugPaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getDebugPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getOutputPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	152	None	replace
624	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getOutputPaxHeaders(true);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getOutputPaxHeaders(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getOutputPaxHeaders(true);	  this.addPaxHeadersForNonAsciiNames    =    os.getOutputPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	152	None	replace
625	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen  -  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen  -  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen    -    1);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
626	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen  +  2);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen  +  2);	  System.arraycopy(assemBuf,    0,    recordBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
627	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFileHeader(true);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFileHeader(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readFileHeader(true);	  this.addPaxHeadersForNonAsciiNames    =    os.readFileHeader();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
628	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFileHeader(recordBuf);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFileHeader(recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readFileHeader(recordBuf);	  this.addPaxHeadersForNonAsciiNames    =    os.readFileHeader();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
629	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
630	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(this.assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
631	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;	  System.arraycopy(this.assemBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
632	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os  +  1;	  this.addPaxHeadersForNonAsciiNames    =    os;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
633	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LONGFILE_POSIZE);    	non-compiled	[CE]  <identifier>  expected	155	None	replace
634	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LONGFILE_POSIZE);    	non-compiled	[CE]  <identifier>  expected	155	None	replace
635	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_TRUNCATE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_TRUNCATE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_TRUNCATE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LONGFILE_POSIZE);    	non-compiled	[CE]  <identifier>  expected	155	None	replace
636	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LONGFILE_POSIZE);    	non-compiled	[CE]  <identifier>  expected	155	None	replace
637	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
638	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
639	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
640	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);	  System.arraycopy(assemBuf,    0,    buffer,    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
641	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_GLOBAL);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_GLOBAL);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_GLOBAL);	  System.arraycopy(assemBuf,    0,    buffer,    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
642	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_BACKSLASH);	  System.arraycopy(assemBuf,    0,    buffer,    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
643	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readObject();  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readObject();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readObject();	  this.addPaxHeadersForNonAsciiNames    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	124	None	replace
644	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readUnsignedInt();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readUnsignedInt();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readUnsignedInt();	  this.addPaxHeadersForNonAsciiNames    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	124	None	replace
645	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readDouble();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readDouble();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readDouble();	  this.addPaxHeadersForNonAsciiNames    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	124	None	replace
646	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_LBKSIZE);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_LBKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_LBKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LBKSIZE);    	non-compiled	[CE]  <identifier>  expected	154	None	replace
647	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LBKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LBKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LBKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LBKSIZE);    	non-compiled	[CE]  <identifier>  expected	154	None	replace
648	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LBKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LBKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LBKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LBKSIZE);    	non-compiled	[CE]  <identifier>  expected	154	None	replace
649	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
650	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_RCDIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_RCDIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_RCDIZE);	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
651	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_RCSDIZE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_RCSDIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_RCSDIZE);	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
652	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  2);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  2);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
653	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
654	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemLen,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemLen,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  assemLen,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
655	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_LBRACKETS);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_LBRACKETS);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_LBRACKETS);	  System.arraycopy(assemBuf,    0,    buffer,    assemLen,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
656	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);	  System.arraycopy(assemBuf,    0,    buffer,    assemLen,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
657	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_LBRACKET);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_LBRACKET);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_LBRACKET);	  System.arraycopy(assemBuf,    0,    buffer,    assemLen,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
658	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  this.assemBuf.length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  this.assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  this.assemBuf.length);	  System.arraycopy(assemBuf,    0,    os,    0,    this.assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	149	None	replace
659	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  this.assemBuf.length);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  this.assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  this.assemBuf.length);	  System.arraycopy(assemBuf,    0,    os,    0,    this.assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	149	None	replace
660	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray()  ||  recordBuf.toByteArray();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray()  ||  recordBuf.toByteArray();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray()  ||  recordBuf.toByteArray();	  this.assemBuf    =    os.toByteArray()    ||    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
661	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray()  ||  out.toByteArray();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray()  ||  out.toByteArray();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray()  ||  out.toByteArray();	  this.assemBuf    =    os.toByteArray()    ||    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
662	[BUG]  [BUGGY]  this.assemBuf  =  recordBuf.toByteArray(),  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  recordBuf.toByteArray(),  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  recordBuf.toByteArray(),  TarBuffer.DEFAULT_RCDSIZE);	  this.assemBuf    =    recordBuf.toByteArray();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
663	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordBuf.toByteArray()  +  1];  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[recordBuf.toByteArray()  +  1];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[recordBuf.toByteArray()  +  1];	  this.assemBuf    =    recordBuf.toByteArray();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
664	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU.length];  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU.length];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[LONGFILE_GNU.length];	  this.assemBuf    =    recordBuf.toByteArray();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
665	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
666	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
667	[BUG]  [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  os    =    buffer.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
668	[BUG]  [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  4);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  4);	  os    =    buffer.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
669	[BUG]  [BUGGY]  this.assemLen  =  os.readBytes(TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readBytes(TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readBytes(TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.readBytes();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
670	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  -  2;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  -  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  -  2;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    -    1;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
671	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(tarBuf);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(tarBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(tarBuf);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordBytes();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
672	[BUG]  [BUGGY]  System.arraycopy(file,  0,  out,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(file,  0,  out,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(file,  0,  out,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(file,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
673	[BUG]  [BUGGY]  System.arraycopy(files,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(files,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(files,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(file,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
674	[BUG]  [BUGGY]  this.assemLen  =  os.readFully(TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readFully(TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readFully(TarBuffer.DEFAULT_BLKSIZE);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
675	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  out.length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  out.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  out.length);	  System.arraycopy(os,    0,    this.assemBuf,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
676	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getImplicitReturn();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getImplicitReturn();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getImplicitReturn();	  this.addPaxHeadersForNonAsciiNames    =    os.getAllPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	151	None	replace
677	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getTarHeaders();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getTarHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getTarHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getAllPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	151	None	replace
678	[BUG]  [BUGGY]  this.assemLen  =  os.readRoot(TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readRoot(TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readRoot(TarBuffer.DEFAULT_BLKSIZE);	  this.assemLen    =    os.readRoot();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
679	[BUG]  [BUGGY]  this.assemLen  =  os.readRoot(true);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readRoot(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readRoot(true);	  this.assemLen    =    os.readRoot();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
680	[BUG]  [BUGGY]  this.assemLen  =  os.readRoot(TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readRoot(TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readRoot(TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.readRoot();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
681	[BUG]  [BUGGY]  this.assemLen  =  os.readRootBytes();  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readRootBytes();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readRootBytes();	  this.assemLen    =    os.readRoot();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
682	[BUG]  [BUGGY]  this.assemLen  =  os.readRoot()  +  1;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readRoot()  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readRoot()  +  1;	  this.assemLen    =    os.readRoot();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
683	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames(TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames(TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames(TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordByNames();    	non-compiled	[CE]  <identifier>  expected	102	None	replace
684	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLAST_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLAST_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLAST_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_LAST_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
685	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLCSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLCSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLCSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_LAST_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
686	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
687	[BUG]  [BUGGY]  System.arraycopy(ttarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(ttarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(ttarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(ttarBuffer,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	143	None	replace
688	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
689	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
690	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  /  1,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  /  1,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  /  1,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
691	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readBytes(TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readBytes(TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readBytes(TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.readBytes();    	non-compiled	[CE]  <identifier>  expected	136	None	replace
692	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFileHeaders(recordBuf);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFileHeaders(recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readFileHeaders(recordBuf);	  this.addPaxHeadersForNonAsciiNames    =    os.readFileHeaders();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
693	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(assemBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
694	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_RCDIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_RCDIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_RCDIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_ARGSIZE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
695	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_CRDSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_CRDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_CRDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_ARGSIZE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
696	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_RCDS);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_RCDS);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_RCDS);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BACKSLASH);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
697	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufferHeaders(recordBuf);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufferHeaders(recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufferHeaders(recordBuf);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordBufferHeaders();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
698	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getAllRecordBufferHeaders();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getAllRecordBufferHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getAllRecordBufferHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordBufferHeaders();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
699	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  assemLen,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  assemLen,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  assemLen,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemLen,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
700	[BUG]  [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_LBKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_LBKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(ByteBuffer.DEFAULT_LBKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(ByteBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
701	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_RCDSIZE.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  this.assemLen    =    os.read(ByteBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
702	[BUG]  [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_ARRAY,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_ARRAY,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(ByteBuffer.DEFAULT_ARRAY,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(ByteBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
703	[BUG]  [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_TRUNCATE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_TRUNCATE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(ByteBuffer.DEFAULT_TRUNCATE,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(ByteBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
704	[BUG]  [BUGGY]  this.addPaxHeadersForNonceAsciiNames  =  os.readPaxHeaders();  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonceAsciiNames  =  os.readPaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonceAsciiNames  =  os.readPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders()    +    1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
705	[BUG]  [BUGGY]  System.arraycopy(osBuf,  0,  this.assemBuf,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(osBuf,  0,  this.assemBuf,  0,  os.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(osBuf,  0,  this.assemBuf,  0,  os.length  +  1);	  System.arraycopy(osBuf,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
706	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  os.length,  this.assemBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  os.length,  this.assemBuf,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  os.length,  this.assemBuf,  0,  os.length);	  System.arraycopy(osBuf,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
707	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
708	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  os.length  -  2);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  os.length  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  buffer,  0,  os.length  -  2);	  System.arraycopy(os,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
709	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(tarBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
710	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);	  System.arraycopy(tarBuf,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
711	[BUG]  [BUGGY]  System.arraycopy(os,  0,  recordBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  recordBuf,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  recordBuf,  0,  os.length);	  System.arraycopy(os,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
712	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
713	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(tarBuf);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(tarBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes(tarBuf);	  this.addPaxHeadersForNonAsciiNames    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
714	[BUG]  [BUGGY]  This.assemBuf  =  os.toByteArray();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  This.assemBuf  =  os.toByteArray();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	This.assemBuf  =  os.toByteArray();	  this.assemBuf    =    os.toByteArray()    +    1;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
715	[BUG]  [BUGGY]  this.assemLen  =  os.readUnsignedInt();  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readUnsignedInt();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readUnsignedInt();	  this.assemLen    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	158	None	replace
716	[BUG]  [BUGGY]  this.assemLen  =  os.readFloat();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readFloat();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readFloat();	  this.assemLen    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	158	None	replace
717	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(null);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(null);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(out);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
718	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(tr);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(tr);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(tr);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(out);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
719	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.read(TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.read(TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.read(TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.read();    	non-compiled	[CE]  <identifier>  expected	87	None	replace
720	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.read(buffer);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.read(buffer);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.read(buffer);	  this.addPaxHeadersForNonAsciiNames    =    os.read();    	non-compiled	[CE]  <identifier>  expected	87	None	replace
721	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.read(ByteBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.read(ByteBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.read(ByteBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.read();    	non-compiled	[CE]  <identifier>  expected	87	None	replace
722	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  os  =  buffer;	  System.arraycopy(os,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	121	None	replace
723	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  os  =  buffer;	  System.arraycopy(os,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	121	None	replace
724	[BUG]  [BUGGY]  assemBuf  =  recordBuf.toByteArray();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  assemBuf  =  recordBuf.toByteArray();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	assemBuf  =  recordBuf.toByteArray();	  assemBuf    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
725	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen  +  4);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen  +  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen  +  4);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen    +    4);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
726	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readString()  ||  os.readPaxHeaders();  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readString()  ||  os.readPaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readString()  ||  os.readPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders()    ||    os.readPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	137	None	replace
727	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  buffer,  0,  assemBuf.length);	  System.arraycopy(assemBuf,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
728	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  os.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  1,  os.length);	  System.arraycopy(assemBuf,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
729	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separator  +  8;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separator  +  8;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separator  +  8;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    File.separator;    	non-compiled	[CE]  <identifier>  expected	109	None	replace
730	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separator  +  2;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separator  +  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separator  +  2;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    File.separator;    	non-compiled	[CE]  <identifier>  expected	109	None	replace
731	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separator  +  4;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separator  +  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separator  +  4;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    File.separator;    	non-compiled	[CE]  <identifier>  expected	109	None	replace
732	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  File.separator  +  TarBuffer.DEFAULT_RCDSIZE;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  File.separator  +  TarBuffer.DEFAULT_RCDSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  File.separator  +  TarBuffer.DEFAULT_RCDSIZE;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    File.separator;    	non-compiled	[CE]  <identifier>  expected	109	None	replace
733	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.toString();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.toString();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.toString();	  this.addPaxHeadersForNonAsciiNames    =    os.getAllPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	151	None	replace
734	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  os.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  os.length);	  System.arraycopy(assemBuf,    0,    buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
735	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  out;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  out;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  out;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    out;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
736	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  out;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  out;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  out;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    out;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
737	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  this.assemBuf.length);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  this.assemBuf.length);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  this.assemBuf.length);  os  =  buffer;	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
738	[BUG]  [BUGGY]  this.setPaxHeadersForNonAsciiNames(addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.setPaxHeadersForNonAsciiNames(addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.setPaxHeadersForNonAsciiNames(addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
739	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  _addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  _addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  _addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
740	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_CRDSIZE);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
741	[BUG]  [BUGGY]  this.assemLen  -=  os.readLine();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  -=  os.readLine();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  -=  os.readLine();	  this.assemLen    =    os.readLine()    +    2;    	non-compiled	[CE]  <identifier>  expected	105	None	replace
742	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!openPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!openPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =!openPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
743	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!resetPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!resetPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =!resetPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
744	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!getPaxHeadersForNonAsciiNames();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!getPaxHeadersForNonAsciiNames();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =!getPaxHeadersForNonAsciiNames();	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
745	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARRAY);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARRAY);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARRAY);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_RANGE);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
746	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  os.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  os.length  +  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    os.length    +    1);    	non-compiled	[CE]  <identifier>  expected	150	None	replace
747	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  os.length  -  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  os.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  os.length  -  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    os.length);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
748	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getReadPaxHeaders();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getReadPaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getReadPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getOutputPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	152	None	replace
749	[BUG]  [BUGGY]  System.arraycopy(arguments,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(arguments,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(arguments,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(os,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
750	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  |=  true;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  |=  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  |=  true;	  this.addPaxHeadersForNonAsciiNames    =    true;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
751	[BUG]  [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_LBKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_LBKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(TarBuffer.DEFAULT_LBKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
752	[BUG]  [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_TRUNCATE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_TRUNCATE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(TarBuffer.DEFAULT_TRUNCATE,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
753	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_TRUNCATE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_TRUNCATE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_TRUNCATE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_ARGSIZE);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
754	[BUG]  [BUGGY]  this.assemLen  =  os.readBytes(truncated);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readBytes(truncated);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readBytes(truncated);	  this.assemLen    =    os.readBytes();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
755	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordLongFileHeaders();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordLongFileHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordLongFileHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordFileHeaders();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
756	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordLeaseHeaders();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordLeaseHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordLeaseHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordFileHeaders();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
757	[BUG]  [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE)+  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE)+  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE)+  1;	  this.assemLen    =    os.read(ByteBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
758	[BUG]  [BUGGY]  this.assemLen  =  os.read(BarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(BarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(BarBuffer.DEFAULT_BLKSIZE);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
759	[BUG]  [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(TarBuffer.DEFAULT_ARGSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  this.assemLen    =    os.read(TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
760	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getOutputBufferHeaders();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getOutputBufferHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getOutputBufferHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordBufferHeaders();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
761	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getInputBufferHeaders();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getInputBufferHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getInputBufferHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordBufferHeaders();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
762	[BUG]  [BUGGY]  this.assemLen  =  os.readDouble();  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readDouble();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readDouble();	  this.assemLen    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	158	None	replace
763	[BUG]  [BUGGY]  this.assemLen  =  os.readLineBytes(truncated);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readLineBytes(truncated);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLineBytes(truncated);	  this.assemLen    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	106	None	replace
764	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  /  2,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  /  2,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  /  2,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
765	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  *  2);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  *  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  *  2);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE    +    1);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
766	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readMessage();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readMessage();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readMessage();	  this.addPaxHeadersForNonAsciiNames    =    os.readFile();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
767	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  4;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  *  4;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    4;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
768	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  /  4;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  /  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  /  4;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    4;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
769	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
770	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_GLOBAL);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_GLOBAL);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_GLOBAL);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
771	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
772	[BUG]  [BUGGY]  this.assemLen  =  os.readLineno();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readLineno();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLineno();	  this.assemLen    =    os.readCharacters();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
773	[BUG]  [BUGGY]  System.arraycopy(ttarBuffer,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(ttarBuffer,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(ttarBuffer,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(ttarBuffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
774	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readUTF(true);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readUTF(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readUTF(true);	  this.addPaxHeadersForNonAsciiNames    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
775	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getBytes();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getBytes();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getBytes();	  this.addPaxHeadersForNonAsciiNames    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
776	[BUG]  [BUGGY]  System.arraycopy(os,  0,  assemBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(os,  0,  assemBuf,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  assemBuf,  0,  os.length);	  System.arraycopy(os,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
777	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_LBKSIZE);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_LBKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_LBKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LBKSIZE);    	non-compiled	[CE]  <identifier>  expected	154	None	replace
778	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
779	[BUG]  [BUGGY]  this.assemLen  =  os.readValue();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readValue();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readValue();	  this.assemLen    =    os.readRoot();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
780	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(buffer,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(buffer,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
781	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  File.separator;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  File.separator;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  File.separator;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    File.separator;    	non-compiled	[CE]  <identifier>  expected	109	None	replace
782	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.pathSeparator;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.pathSeparator;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.pathSeparator;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    File.separator;    	non-compiled	[CE]  <identifier>  expected	109	None	replace
783	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  os,  2,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuf,  0,  os,  2,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuf,  0,  os,  2,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(tarBuf,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
784	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  -  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  -  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  -  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE    +    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
785	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  /  2,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  /  2,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  /  2,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE    +    1,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
786	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  this.assemLen);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  this.assemLen);	  System.arraycopy(os,    0,    this.assemBuf,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
787	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  |=  os.readPax();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  |=  os.readPax();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  |=  os.readPax();	  this.addPaxHeadersForNonAsciiNames    =    os.readPax()    +    1;    	non-compiled	[CE]  <identifier>  expected	90	None	replace
788	[BUG]  [BUGGY]  this.addPaxHeadersForNonceAsciiNames  =  os.readPax();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonceAsciiNames  =  os.readPax();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonceAsciiNames  =  os.readPax();	  this.addPaxHeadersForNonAsciiNames    =    os.readPax()    +    1;    	non-compiled	[CE]  <identifier>  expected	90	None	replace
789	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  this.assemBuf.length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  this.assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  this.assemBuf.length);	  System.arraycopy(assemBuf,    0,    os,    0,    this.assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	149	None	replace
790	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemBuf.length);	  System.arraycopy(assemBuf,    0,    os,    0,    this.assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	149	None	replace
791	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[RecordBuf.toByteArray()];  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  new  byte[RecordBuf.toByteArray()];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[RecordBuf.toByteArray()];	  this.assemBuf    =    recordBuf.toByteArray();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
792	[BUG]  [BUGGY]  os  =  new  OutputStreamReader(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  new  OutputStreamReader(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  new  OutputStreamReader(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
793	[BUG]  [BUGGY]  os  =  new  OutputStreamReader(os,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  new  OutputStreamReader(os,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  new  OutputStreamReader(os,  TarBuffer.DEFAULT_RCDSIZE);	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
794	[BUG]  [BUGGY]  os  =  new  OutputStreamReader(os,  TarBuffer.DEFAULT_GLOBAL_BUFFER,  TarBuffer.DEFAULT_GLOBAL_BUFFER);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  new  OutputStreamReader(os,  TarBuffer.DEFAULT_GLOBAL_BUFFER,  TarBuffer.DEFAULT_GLOBAL_BUFFER);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  new  OutputStreamReader(os,  TarBuffer.DEFAULT_GLOBAL_BUFFER,  TarBuffer.DEFAULT_GLOBAL_BUFFER);	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
795	[BUG]  [BUGGY]  os  =  new  OutputStreamReader(os,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  new  OutputStreamReader(os,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  new  OutputStreamReader(os,  TarBuffer.DEFAULT_BLKSIZE);	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
796	[BUG]  [BUGGY]  os  =  new  OutputStreamReader(os,  TarBuffer.DEFAULT_BIGINSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  new  OutputStreamReader(os,  TarBuffer.DEFAULT_BIGINSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  new  OutputStreamReader(os,  TarBuffer.DEFAULT_BIGINSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
797	[BUG]  [BUGGY]  os  =  new  OutputStreamReader(os.readLine());  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  os  =  new  OutputStreamReader(os.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  new  OutputStreamReader(os.readLine());	  os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
798	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getPaxHeaders()  ||  os.readPaxHeaders();  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getPaxHeaders()  ||  os.readPaxHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getPaxHeaders()  ||  os.readPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders()    ||    os.readPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	137	None	replace
799	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
800	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
801	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  Collections.emptyList();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  Collections.emptyList();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  Collections.emptyList();	  this.addPaxHeadersForNonAsciiNames    =    0;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
802	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    encoding;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
803	[BUG]  [BUGGY]  this.assemBuf  =  buffer.toByteArray(),  TarBuffer.DEFAULT_TRUNCATE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  buffer.toByteArray(),  TarBuffer.DEFAULT_TRUNCATE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  buffer.toByteArray(),  TarBuffer.DEFAULT_TRUNCATE);	  this.assemBuf    =    buffer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
804	[BUG]  [BUGGY]  this.assemBuf  =  buffer.toByteArray(LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  buffer.toByteArray(LONGFILE_GNU);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  buffer.toByteArray(LONGFILE_GNU);	  this.assemBuf    =    buffer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
805	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray(RawBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray(RawBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray(RawBuffer.DEFAULT_BLKSIZE);	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
806	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_LONGFILE_POSIX);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_LONGFILE_POSIX);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_LONGFILE_POSIX);	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
807	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufferHeaders(),  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufferHeaders(),  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufferHeaders(),  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(),    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
808	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordByName(),  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordByName(),  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordByName(),  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(),    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
809	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordTarBytes(),  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordTarBytes(),  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordTarBytes(),  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders(),    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
810	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getMessage();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getMessage();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getMessage();	  this.addPaxHeadersForNonAsciiNames    =    os;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
811	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);	  System.arraycopy(tarBuffer,    0,    buffer,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
812	[BUG]  [BUGGY]  this.assemLen  =  os.readLine());  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLine());	  this.assemLen    =    os.readLine()    +    1;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
813	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readAndFixHeader();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readAndFixHeader();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readAndFixHeader();	  this.addPaxHeadersForNonAsciiNames    =    os.readOnlyPaxHeader();    	non-compiled	[CE]  <identifier>  expected	123	None	replace
814	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray(RandomBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemBuf  =  os.toByteArray(RandomBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray(RandomBuffer.DEFAULT_BLKSIZE);	  this.assemBuf    =    os.toByteArray(TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
815	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(trName);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(trName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes(trName);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordBytes();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
816	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  4,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  4,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  4,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
817	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDIZE;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDIZE;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    /    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
818	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBinaryHeaders();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBinaryHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBinaryHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordTarHeaders();    	non-compiled	[CE]  <identifier>  expected	101	None	replace
819	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordLabelHeaders();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordLabelHeaders();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordLabelHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordTarHeaders();    	non-compiled	[CE]  <identifier>  expected	101	None	replace
820	[BUG]  [BUGGY]  this.assemLen  =  os.read(tarBuf,  out);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(tarBuf,  out);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(tarBuf,  out);	  this.assemLen    =    os.read(tarBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
821	[BUG]  [BUGGY]  this.assemLen  =  os.read(tarBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.read(tarBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(tarBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read(tarBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
822	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_TARGET_PATH_SIZE;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_TARGET_PATH_SIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_TARGET_PATH_SIZE;	  this.addPaxHeadersForNonAsciiNames    =    TarBuffer.DEFAULT_ADD_PATH_SIZE;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
823	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_GET_PATH_SIZE;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_GET_PATH_SIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_GET_PATH_SIZE;	  this.addPaxHeadersForNonAsciiNames    =    TarBuffer.DEFAULT_ADD_PATH_SIZE;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
824	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINTS,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINTS,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINTS,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BIGINTS);    	non-compiled	[CE]  <identifier>  expected	135	None	replace
825	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  -  4);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  -  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  -  4);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen    +    4);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
826	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_ROOT);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_ROOT);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_ROOT);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_ROOT);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	139	None	replace
827	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_ROOT);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_ROOT);  os  =  buffer;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_ROOT);  os  =  buffer;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_ROOT);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	139	None	replace
828	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAUL  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAUL  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAUL	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BLKSIZE,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
829	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  false,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    false;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
830	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false,  TarBuffer.DEFAULT_TRUNCATE);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false,  TarBuffer.DEFAULT_TRUNCATE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  false,  TarBuffer.DEFAULT_TRUNCATE);	  this.addPaxHeadersForNonAsciiNames    =    false;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
831	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false,  os.toByteArray());  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false,  os.toByteArray());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  false,  os.toByteArray());	  this.addPaxHeadersForNonAsciiNames    =    false;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
832	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_RCDIZE);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
833	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine()  ||  os.readLine();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine()  ||  os.readLine();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLine()  ||  os.readLine();	  this.addPaxHeadersForNonAsciiNames    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
834	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine()  ||  os.readLine()  >  0;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine()  ||  os.readLine()  >  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLine()  ||  os.readLine()  >  0;	  this.addPaxHeadersForNonAsciiNames    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
835	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine()  *  2;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine()  *  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLine()  *  2;	  this.addPaxHeadersForNonAsciiNames    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
836	[BUG]  [BUGGY]  System.arraycopy(files,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(files,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(files,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(file,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
837	[BUG]  [BUGGY]  System.arraycopy(files,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(files,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(files,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(file,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
838	[BUG]  [BUGGY]  System.arraycopy(files,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(files,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(files,  0,  os,  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(file,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
839	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(out);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
840	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  _addPaxHeadersForNonAsciiNames(out);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  _addPaxHeadersForNonAsciiNames(out);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  _addPaxHeadersForNonAsciiNames(out);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(out);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
841	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_RC  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_RC  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_RC	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_BACKSLASH);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
842	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_BLKSIZE,  TarBuffer.DEFAULT_RCDS  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_BLKSIZE,  TarBuffer.DEFAULT_RCDS  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_BLKSIZE,  TarBuffer.DEFAULT_RCDS	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_LAST_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
843	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    TarBuffer.DEFAULT_LAST_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
844	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  os,  2,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  os,  2,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  os,  2,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(tarBuffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
845	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  out,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(tarBuffer,  0,  out,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  out,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(tarBuffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
846	[BUG]  [BUGGY]  this.assemLen  =  os.readUTF()  +  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  os.readUTF()  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readUTF()  +  1;	  this.assemLen    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
847	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(false,  true);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(false,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(false,  true);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(true);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
848	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(false,  false);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(false,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(false,  false);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders(true);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
849	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  ||  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  ||  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  ||  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	66	None	replace
850	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_GNU  +  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_BLKSIZE;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_GNU  +  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_BLKSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_GNU  +  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_BLKSIZE;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    TarBuffer.DEFAULT_GNU;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
851	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_GNU  +  TarBuffer.DEFAULT_BLKSIZE;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_GNU  +  TarBuffer.DEFAULT_BLKSIZE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_GNU  +  TarBuffer.DEFAULT_BLKSIZE;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE    +    TarBuffer.DEFAULT_GNU;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
852	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_LONGFILE_POSIZE);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_LONGFILE_POSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_LONGFILE_POSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_LONGFILE_POSIZE);    	non-compiled	[CE]  <identifier>  expected	155	None	replace
853	[BUG]  [BUGGY]  assemBuf  =  os.toByteArray()  ||  os.toByteArray();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  assemBuf  =  os.toByteArray()  ||  os.toByteArray();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	assemBuf  =  os.toByteArray()  ||  os.toByteArray();	  assemBuf    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
854	[BUG]  [BUGGY]  assemBuf  =  os.toByteArray(ByteBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  assemBuf  =  os.toByteArray(ByteBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	assemBuf  =  os.toByteArray(ByteBuffer.DEFAULT_RCDSIZE);	  assemBuf    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
855	[BUG]  [BUGGY]  assemBuf  =  os.toByteArray(ByteBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);      [BUGGY]  assemBuf  =  os.toByteArray(ByteBuffer.DEFAULT_BLKSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	assemBuf  =  os.toByteArray(ByteBuffer.DEFAULT_BLKSIZE);	  assemBuf    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
