bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  1);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  2);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  2);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  2);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  4);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  4);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  4);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  3);  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  3);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  3);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  -  1);  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  -  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false;  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  false;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
8	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true;  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  true;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
9	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
10	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os;  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
11	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0;  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  0;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
12	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding;  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
13	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
14	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
15	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RANGE);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RANGE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RANGE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
16	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BACKSLASH);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
17	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE);  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_ARGSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
18	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(out);  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(out);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(out);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemLen,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemLen,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  assemLen,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
24	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemLen,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
25	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemLen,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemLen,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  assemLen,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemLen,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
26	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemLen,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
27	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    assemLen,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
28	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemLen,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemLen,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
30	[BUG]  [BUGGY]  this.assemLen  =  os.readFully();  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  os.readFully();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readFully();	  this.assemLen    =    os.read();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
31	[BUG]  [BUGGY]  this.assemLen  =  os.readUTF();  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  os.readUTF();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readUTF();	  this.assemLen    =    os.read();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
32	[BUG]  [BUGGY]  this.assemLen  =  os.readRoot();  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  os.readRoot();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readRoot();	  this.assemLen    =    os.read();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
33	[BUG]  [BUGGY]  this.assemLen  =  os.readBytes();  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  os.readBytes();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readBytes();	  this.assemLen    =    os.read();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
34	[BUG]  [BUGGY]  this.assemLen  =  os.read(tarBuf);  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  os.read(tarBuf);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(tarBuf);	  this.assemLen    =    os.read();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE  +  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_CRDSIZE);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_CRDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_CRDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
39	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
40	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
41	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(this.assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  2);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  2);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  -  2);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  buffer,  0,  os.length);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(this.assemBuf,  0,  buffer,  0,  os.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  buffer,  0,  os.length);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  os.length);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  os.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  os.length);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
49	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  os.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  os.length);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
50	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  buffer.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  buffer.length);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
51	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  os.length);  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  os.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  os.length);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
52	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufferHeaders();  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufferHeaders();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBufferHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
53	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes();  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordBytes();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
54	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine();  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLine();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLine();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
55	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordFileHeaders();  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordFileHeaders();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordFileHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
56	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders()  +  1;  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders()  +  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders()  +  1;	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
57	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(true);  [CE]  <identifier>  expected  [FE]                            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(true);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(true);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
58	[BUG]  [BUGGY]  this.assemBuf  =  buffer.toByteArray();  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemBuf  =  buffer.toByteArray();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  buffer.toByteArray();	  this.assemBuf    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
59	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray()  +  1;  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemBuf  =  os.toByteArray()  +  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray()  +  1;	  this.assemBuf    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
60	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_BLKSIZE);	  this.assemBuf    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
61	[BUG]  [BUGGY]  assemBuf  =  os.toByteArray();  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  assemBuf  =  os.toByteArray();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	assemBuf  =  os.toByteArray();	  this.assemBuf    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray(TarBuffer.DEFAULT_RCDSIZE);	  this.assemBuf    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
63	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
64	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames;	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
65	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
66	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
67	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames);  [CE]  <identifier>  expected  [FE]                            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
68	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true);  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(true);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
69	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFully();  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFully();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readFully();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
70	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  +  1;  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  +  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  +  1;	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
71	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders(recordBuf);	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
72	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFileHeaders();  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFileHeaders();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readFileHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
73	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
74	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(buffer,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(buffer,  0,  os,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
75	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(tarBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
76	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(tarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(tarBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(file,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(file,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(file,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
79	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  +  1;  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  os.readLine()  +  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLine()  +  1;	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
80	[BUG]  [BUGGY]  this.assemLen  =  os.readCharacters();  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  os.readCharacters();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readCharacters();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
81	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  1;  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  1;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
82	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE;  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  *  TarBuffer.DEFAULT_RCDSIZE;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
83	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  2;  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  2;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  2;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
84	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  4;  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  4;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  4;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
85	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE;  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  /  TarBuffer.DEFAULT_RCDSIZE;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
86	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  8;  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  8;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  8;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
87	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.read();  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.read();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.read();	  this.addPaxHeadersForNonAsciiNames    =    os.readPax();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
88	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFile();  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFile();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readFile();	  this.addPaxHeadersForNonAsciiNames    =    os.readPax();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
89	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readUTF();  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readUTF();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readUTF();	  this.addPaxHeadersForNonAsciiNames    =    os.readPax();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
90	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPax()  +  1;  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPax()  +  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPax()  +  1;	  this.addPaxHeadersForNonAsciiNames    =    os.readPax();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
91	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFileHeader();  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readFileHeader();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readFileHeader();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeader();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
92	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  os  =  buffer;	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
93	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
94	[BUG]  [BUGGY]  os  =  buffer;  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  os  =  buffer;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer;	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
95	[BUG]  [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	os  =  buffer.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
96	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  out;  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  out;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  out;	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
98	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(this.assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
99	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemLen,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemLen,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  assemLen,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemLen,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
100	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE  -  1);	  System.arraycopy(assemBuf,    0,    buffer,    assemLen,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
101	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordTarHeaders();  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordTarHeaders();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordTarHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
102	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames();  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordByNames();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
103	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE;  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  TarBuffer.DEFAULT_ADD_PATH_SIZE;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
104	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  +  4;  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  os.readLine()  +  4;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLine()  +  4;	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
105	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  +  2;  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  os.readLine()  +  2;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLine()  +  2;	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
106	[BUG]  [BUGGY]  this.assemLen  =  os.readLineBytes();  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  os.readLineBytes();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readLineBytes();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
107	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_GNU;  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_GNU;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  TarBuffer.DEFAULT_GNU;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
108	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  -  1;  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  -  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  -  1;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
109	[BUG]  [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separator;  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separator;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  TarBuffer.DEFAULT_BLKSIZE  +  TarBuffer.DEFAULT_RCDSIZE  +  File.separator;	  this.assemLen    =    TarBuffer.DEFAULT_BLKSIZE    +    TarBuffer.DEFAULT_RCDSIZE;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
110	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes();  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readLineBytes();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  os.length);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  os.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  buffer,  0,  os.length);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(osBuf,  0,  this.assemBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(osBuf,  0,  this.assemBuf,  0,  os.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(osBuf,  0,  this.assemBuf,  0,  os.length);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
113	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(buffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(buffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
114	[BUG]  [BUGGY]  System.arraycopy(ttarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(ttarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(ttarBuffer,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
115	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
116	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
117	[BUG]  [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(ByteBuffer.DEFAULT_BLKSIZE);	  this.assemLen    =    os.read();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
118	[BUG]  [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(TarBuffer.DEFAULT_BLKSIZE);	  this.assemLen    =    os.read();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
119	[BUG]  [BUGGY]  this.assemBuf  =  recordBuf.toByteArray();  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemBuf  =  recordBuf.toByteArray();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  recordBuf.toByteArray();	  this.assemBuf    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
120	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
121	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
122	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(this.assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
123	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readOnlyPaxHeader();  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readOnlyPaxHeader();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readOnlyPaxHeader();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeader();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
124	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readInt();  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readInt();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readInt();	  this.addPaxHeadersForNonAsciiNames    =    os.readPax();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
125	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  4);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  4);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  4);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
126	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
127	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
128	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
129	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
130	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    buffer,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
131	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_BLKSIZE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
132	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDIZE);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_RCDIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
133	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_RCDSIZE);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_LAST_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
134	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_SNAPSHOT);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
135	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINTS);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINTS);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  TarBuffer.DEFAULT_BIGINTS);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
136	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readBytes();  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readBytes();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readBytes();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeader();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
137	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  ||  os.readPaxHeaders();  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  ||  os.readPaxHeaders();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.readPaxHeaders()  ||  os.readPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.readPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
138	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
139	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT);  os  =  buffer;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_ROOT);  os  =  buffer;	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
140	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
141	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  TarBuffer.DEFAULT_RCDSIZE);  os  =  buffer;	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    os    =    buffer;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
142	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(tarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
143	[BUG]  [BUGGY]  System.arraycopy(ttarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(ttarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(ttarBuffer,  0,  buffer,  0,  TarBuffer.DEFAULT_RCDSIZE);	  System.arraycopy(buffer,    0,    os,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
144	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  TarBuffer.DEFAULT_RCDSIZE  +  1,  TarBuffer.DEFAULT_BLKSIZE);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
145	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
146	[BUG]  [BUGGY]  this.assemBuf  =  os.toByteArray()  ||  os.toByteArray();  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemBuf  =  os.toByteArray()  ||  os.toByteArray();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  os.toByteArray()  ||  os.toByteArray();	  this.assemBuf    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
147	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray().length];  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemBuf  =  new  byte[os.toByteArray().length];  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemBuf  =  new  byte[os.toByteArray().length];	  this.assemBuf    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
148	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemLen);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemLen);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemLen);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
149	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  this.assemBuf.length);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  this.assemBuf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  this.assemBuf.length);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
150	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  os.length  +  1);	  System.arraycopy(buffer,    0,    this.assemBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
151	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getAllPaxHeaders();  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getAllPaxHeaders();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getAllPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
152	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getOutputPaxHeaders();  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getOutputPaxHeaders();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getOutputPaxHeaders();	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
153	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(),  TarBuffer.DEFAULT_BLKSIZE);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(),  TarBuffer.DEFAULT_BLKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getRecordPaxHeaders(),  TarBuffer.DEFAULT_BLKSIZE);	  this.addPaxHeadersForNonAsciiNames    =    os.getRecordPaxHeaders();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
154	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LBKSIZE);  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LBKSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LBKSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
155	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  TarBuffer.DEFAULT_LONGFILE_POSIZE);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
156	[BUG]  [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  os.read(TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
157	[BUG]  [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  os.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.read(ByteBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);	  this.assemLen    =    os.read();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
158	[BUG]  [BUGGY]  this.assemLen  =  os.readInt();  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os)  {  this(os,  TarBuffer.DEFAULT_BLKSIZE,  TarBuffer.DEFAULT_RCDSIZE);    [BUGGY]  this.assemLen  =  os.readInt();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream)  OutputStream  os  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  longFileMode  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	95	95	1	replace	this.assemLen  =  os.readInt();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
