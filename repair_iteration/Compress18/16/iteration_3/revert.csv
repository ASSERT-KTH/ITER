projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.ALLOW_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.PREFIX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.WRITE_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NAMELEN);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.TAG_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LEFT_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FIRST_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FT_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.ALLOW_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.ALLOW_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LP_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FLUSH_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FOR);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.PREFIX);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.SECOND);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LONG_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.NON_ASCII);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,true);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,false);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LP_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FOR_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.F_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.PREFIX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HARD_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entryName=headers.entrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.TAG_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.TAG_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.WRITE_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.WRITE_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.WRITE_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NAMELEN,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.PREFIX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DECIMAL);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PREFIX);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.CLIENT_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append(name);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Stringkey:headers.keySet()){name=name.substring(0,name.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LT_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.CLOSE_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.CLIENT_SEPARATOR);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,header);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,w);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){writePaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entry=headers.entrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LP_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.LP_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FT_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.CLIENT_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.CLIENT_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.CLIENT_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,line);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,cache);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462for(Stringkey:headers.keySet()){name=name.substring(0,name.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Stringname=name.substring(0,name.length()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Namename=headers.keySet().substring(0,name.length()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Namename=name.substring(0,name.length()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Namename=headers.substring(0,name.length()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462for(Stringkey:headers.keySet()){name=name.substring(0,name.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.SECOND);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.SECOND,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.BIGINT);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.SECOND,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,0);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name!=null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name==null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name!=null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append('N');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name!=null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append("null");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name!=null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append("n");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FOR_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.PREFIX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FIRST_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FT_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LONG_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HARD_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.HARD_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HARD_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC,headers,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC,headers,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC,headers,line);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII,headers,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.NON_ASCII,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII,headers,line);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII,headers,false);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII,headers,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII,headers,true);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LT_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LT_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DL_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462name=entry.substring(0,entry.length()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Namename=entry.substring(0,entry.length()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Stringname=entry.substring(0,entry.length()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entry=headers.entrySet().iterator().next();name=entry.substring(0,entry.length()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Stringline=name.substring(0,name.length()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entry=headers.keySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entry=headers.get(name).iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entry=headers.entrySet().iterator();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entry=headers.entrySet().iterator().next(),name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entry=headers.get(0).iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entry=headers.iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name.length()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name-2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name-4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,entryName,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()==TarConstants.FOR_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()==TarConstants.FOR_EXTENDED_HEADER_LC){if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.LF_PAX_EXTENDED_HEADER_LC,header);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,header+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LP_PAX_EXTENDED_HEADER_LC,header);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FOR_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.FOR_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,buffer,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,buffer,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,buffer,line);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.FOR);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FOR,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FOR,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FOR_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DECEMBER);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.DEFAULT);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_KEY);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name!=null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append(name);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append(name);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name==null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append(name);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name!=null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append('/');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append(",");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append("/PaxHeaders.X/");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.NAMELEN,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NAMELEN,headers,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.PREFIX,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(path,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(path,TarConstants.NON_ASCII);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.NON_ASCII);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(headers,TarConstants.NON_ASCII);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.NON_ASCII,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.LP_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC,buffer,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC,buffer,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC,paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.FT_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(path,TarConstants.WRITE_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(TarConstants.WRITE_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.ALLOW_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LLOW_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FLUSH_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII,name,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII,name+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LONG_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII,name-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII,line);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LEFT_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LFT_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LEFT_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FLOAT_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII/1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII+1,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.PREFIX);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.PREFIX,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.PREFIX+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name!=null){for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name==null){for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name!=null){for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getValue());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getValue());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getValue());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC,name+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FLUSH_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.CLUSH_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.LONG_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entryName!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Namename=entryName.substring(0,entry.length()-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entryName!=null){for(Map.Entry<String,String>header:headers.entrySet()){name=entryName.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entryName!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(1,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entry=headers.entrySet();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.F_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.F_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.F_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FIRST_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.FIRST_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.ALLOW_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LLOW_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name!=null){for(Map.Entry<String,String>entry:headers.entrySet()){writePaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462for(Map.Entry<String,String>entry:headers.entrySet()){writePaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(addPaxHeadersForNonAsciiNames){for(Map.Entry<String,String>entry:headers.entrySet()){writePaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(addPaxHeadersForNonAsciiNames){if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){writePaxHeadersForNonAsciiNames
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(addPaxHeadersForNonAsciiNames||headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){writePaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(addPaxHeadersForNonAsciiNames){if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){writePaxHeadersForNonAsci
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(addPaxHeadersForNonAsciiNames){if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){writePaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.CLOSE_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.CLOSE_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.WRITE_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.TAG_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FLAG_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.TAG_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FOR_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.DECIMAL);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DECIMAL,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.SECIMAL);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DECIMAL,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.DEFAULT_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PAX_EXTENDED_HEADER_LC,name+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,true);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name,false);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,entryName,false);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,buffer,false);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,this.headers,false);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Preconditions.checkState(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Preconditions.checkState(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Preconditions.checkState(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC||name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Preconditions.checkState(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC);for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Preconditions.checkState(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC||name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(1,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.keySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,false);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name,true);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,0,false);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,this.headers,true);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,equals,true);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(path,TarConstants.PREFIX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.CLIENT_SEPARATOR,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.CLIENT_SEPARATOR,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.CLIENT_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PREFIX,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PREFIX,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PREFIX+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.DEFAULT_PREFIX);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.WRITE_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.WRITE_PAX_EXTENDED_HEADER_LC,headers,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entryName.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entryName.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entryName.length()==TarConstants.FOR_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entryName.length()==TarConstants.FUNCTION){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entryName.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entryName!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getKey();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getKey();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.keySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entryName=headers.get(name).iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entryName=headers.get(0).iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entryName=headers.entrySet().iterator().next(),name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entryName=headers.keySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entryName=headers.iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entryName=headers.size().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PAX_EXTENDED_HEADER_LC,headers,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(entryName,TarConstants.DEFAULT_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PAX_EXTENDED_HEADER_LC,headers,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(TarConstants.PREFIX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){if(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValu
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){if(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValue
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){if(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getVal
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){if(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LAST_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers==null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append(name);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append('/');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append("n");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC*1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers==null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PREFIX+name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name.length-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.ALLOW_PAX_EXTENDED_HEADER_LC,name-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LP_PAX_EXTENDED_HEADER_LC,name-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.FOR_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers==null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length()+1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(1,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.keySet()){name=entryName.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,0,true);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Stringname:headers.keySet()){name=name.substring(0,name.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Stringkey:headers.keySet()){name=name.substring(1,name.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Stringkey:headers.values()){name=name.substring(0,name.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Stringkey:headers.keySet()){name=name.substring(0,name.length()+1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(TarConstants.LF_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(headers,TarConstants.LF_PAX_EXTENDED_HEADER_LC,entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(length,TarConstants.NON_ASCII);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(TarConstants.NON_ASCII,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.ALLOW_PAX_EXTENDED_HEADER_LC,header);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PAX_EXTENDED_HEADER_LC,header);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,header-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.ALLOW_PAX_EXTENDED_HEADER_LC,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){if(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){if(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){if(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){if(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers.length>0){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){if(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entryName=headers.entrySet().iterator();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entryName=headers.entrySet().iterator().first();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entryName=headers.values().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.SECOND+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LONG);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.SOURCE);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.WRITE_PAX_EXTENDED_HEADER_LC,name-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.ALLOW_PAX_EXTENDED_HEADER_LC,headers,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LP_PAX_EXTENDED_HEADER_LC,headers,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.WRITE_PAX_EXTENDED_HEADER_LC,headers,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC,name-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers==null){for(Map.Entry<String,String>entry:headers.entrySet()){writePaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.keySet()){writePaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){writePaxHeadersForNonAsciiNames(name);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462finalMap.Entry<String,String>headers=headers.entrySet();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){writePaxHeaderForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.ALLOW_PAX_EXTENDED_HEADER_LC,name,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NAMELEN,name,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.ALLOW_PAX_EXTENDED_HEADER_LC,name+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entry=headers.values().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entry=headers.entrySet().iterator().first();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entry=headers.size().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers==null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()+1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(1,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.keySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.TAG_PAX_EXTENDED_HEADER_LC,headers,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.TAG_PAX_EXTENDED_HEADER_LC,headers,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DECIMAL_KEY);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DECIMAL+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers==null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers==null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getKey();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.values()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,w+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers==null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.keySet()){name=entryName.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(1,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NONAsciiNames,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PADDING_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NAMELEN,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){if(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){if(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.CLIENT_SEPARATOR+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers==null){for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name!=null){for(Map.Entry<String,String>header:headers.entrySet()){buffer.append(entry.getKey());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FOR_DEFAULT);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII)+1;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII+4);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.WRITE_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PAX_EXTENDED_HEADER_LC,name-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,wBuffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LP_PAX_EXTENDED_HEADER_LC,headers,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.ALLOW_PAX_EXTENDED_HEADER_LC,headers,false);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LP_PAX_EXTENDED_HEADER_LC,headers,false);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FT_PAX_EXTENDED_HEADER_LC,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC,headers-1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FIELD_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.DEFAULT_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII,headers,encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.FIRST_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FIRST_PAX_EXTENDED_HEADER_LC,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers==null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Preconditions.checkState(headers!=null);for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>pex:headers.keySet()){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append('N');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entryName=headers.sentrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>entryName=headers.entrySet().iterator().next():name;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DL_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PREFIX,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,this);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.TAG_PAX_EXTENDED_HEADER_LC,header);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name.length());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name.charAt(0));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PADDING);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_SPACE);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DEFAULT_PLAIN);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entryName.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC||name.charAt(name.length()-1)!='/'){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Preconditions.checkState(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC);name=entry.substring(0,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC||name.charAt(name.length()-1)!='/'){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValu
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HeADER_LC,headers,false);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FT_PAX_EXTENDED_HEADER_LC,headers,true);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entryName!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,w,w);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462finalMap<String,String>headers=headers.entrySet();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>headers=headers.entrySet();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()>=TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()>=TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length()-1
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length()-1
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC,header);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers,this.headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII,headers,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name!=null){for(Map.Entry<String,String>entry:headers.entrySet()){buffer.append(entry.getName());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(title,TarConstants.WRITE_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name==null){for(Map.Entry<String,String>entry:headers.entrySet()){writePaxHeadersForNonAsciiNames(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462DeserializationPlugin.writePaxHeadersForNonAsciiNames(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DL_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.PREFIX_ENTRY);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462headers!=null&&headers.entrySet().containsKey(name)){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.getValue();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,TarConstants.NAMELEN-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FT_PAX_EXTENDED_HEADER_LC,headers,false);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.LF_PAX_EXTENDED_HeADER_LC,headers,true);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FOR_DELAYED);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.CLIENT);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.FIRST);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462headers!=null&&headers.entrySet().containsKey(entryName)){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(Name,TarConstants.LF_PAX_EXTENDED_HEADER_LC,header);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NEW_ASCII);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()>=TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()>=TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length()
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entryName.substring(0,entry.length()
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.CLONG_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.PREFIX_EXTENDED_HEADER_LC,headers,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DECIMAL_CLOSE);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.HALF_PAX_EXTENDED_HEADER_LC,headers,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers.size()>0){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers.containsKey(name)){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entry.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length()-1
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Stringkey:headers.keySet()){name=name.substring(0,name.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462Entry<String,String>headers=headers.entrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Stringkey:headers.getKeySet()){name=name.substring(0,name.length()-1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(name.length()>=TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers.size()>0){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(entryName.length()==TarConstants.LF_PAX_EXTENDED_HEADER_LC){for(Map.Entry<String,String>entry:headers.entrySet()){name=entry.substring(0,entry.length();}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.NON_ASCII+1,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.TAG_PAX_EXTENDED_HEADER_LC,headers,w);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462if(headers!=null){for(Map.Entry<String,String>pex:headers.entrySet()){buffer.append("/PaxHeaders.X/"+stripTo7Bits(entryName);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.RP_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.PREFIX_ED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java462TarArchiveEntrypex=newTarArchiveEntry(name,TarConstants.DL_PAX_EXTENDED_HEADER_LC,header);
