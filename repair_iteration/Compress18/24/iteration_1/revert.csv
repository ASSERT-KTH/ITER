projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len!=actualLength){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>=len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength!=len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>actualLength){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>=actualLength){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength>len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharsetNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharsetNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharacterNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharsetNames.UTF_8).length;if(actualLength>0){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.keySet()){line=key.substring(actualLength+value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharsetNames.UTF_8).length;if(actualLength>MAX_VALUE){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.keySet()){line=key.substring(actualLength,value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength!=len&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>=len&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength>=len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&line.getBytes(CharsetNames.UTF_8)!=null){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength<len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&line.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>actualLength-1){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.write(value);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.keySet()){buffer.append(key);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(inti=0;i<len;i++){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(inti=0;i<len;i++){buffer.append(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(inti=0;i<len;i++){w.write(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key!=null&&value.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.write(key);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length;w.write(len);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=key.length()+value.length()+3/*blank,equalsandnewline*/;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length;w.write(line);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key.length()>0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key!=null&&value.charAt(actualLength-1)=='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(LONGFILE_TRUNCATE>=len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>LONGFILE_TRUNCATE){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<=actualLength){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>actualLength&&key!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>actualLength&&key.charAt(actualLength-1)!='n'){
