projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len!=actualLength){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>=len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength!=len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>actualLength){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>=actualLength){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength>len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharsetNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharsetNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharacterNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharsetNames.UTF_8).length;if(actualLength>0){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.keySet()){line=key.substring(actualLength+value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharsetNames.UTF_8).length;if(actualLength>MAX_VALUE){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.keySet()){line=key.substring(actualLength,value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength!=len&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>=len&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength>=len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&line.getBytes(CharsetNames.UTF_8)!=null){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength<len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&line.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>actualLength-1){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.write(value);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.keySet()){buffer.append(key);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(inti=0;i<len;i++){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(inti=0;i<len;i++){buffer.append(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(inti=0;i<len;i++){w.write(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key!=null&&value.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.write(key);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length;w.write(len);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=key.length()+value.length()+3/*blank,equalsandnewline*/;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length;w.write(line);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key.length()>0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key!=null&&value.charAt(actualLength-1)=='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(LONGFILE_TRUNCATE>=len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>LONGFILE_TRUNCATE){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<=actualLength){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>actualLength&&key!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>actualLength&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>actualLength&&value!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>0&&key!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&value!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>=actualLength&&value!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>0&&value!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<len&&key!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(value!=null&&len<actualLength&&key!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(value<actualLength&&len!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(value!=null&&len<actualLength&&value!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(offset<actualLength&&key!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharacterNames.UTF_8).length+1;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=h.getBytes(CharacterNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=w.getBytes(CharacterNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharacterNames.UTF_8).length+2;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharacterNames.UTF_8).length+3;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharacterNames.UTF_8).length+4;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength!=0){for(inti=0;i<len;i++){w.write(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength==0){for(inti=0;i<len;i++){w.write(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>=0){for(inti=0;i<len;i++){w.write(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength<=0){for(inti=0;i<len;i++){w.write(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(inti=0;i<len;i++){w.write(key);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.write(line);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length;w.write(value);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474Integerlen=line.getBytes(CharacterNames.UTF_8).length;w.write(value);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=w.getBytes(CharacterNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474Integerlen=w.getBytes(CharacterNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>MAX_VALUE_LENGTH){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>len-1){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength-1){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>=actualLength-1){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength>len-1){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>actualLength+1){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>actualLength-2){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength>0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<=0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.write(value,actualLength);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.write(key,actualLength);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.verifyValueWrite("writekey:"+key);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.verifyValueWrite("writekeyvaluen");
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.verifyValueWrite("writekeyvalue");
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.verifyValueWrite("writekeyn");
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value!=null){if(actualLength>0){for(inti=0;i<len;i++){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value==null){if(actualLength>0){for(inti=0;i<len;i++){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength!=0){for(inti=0;i<len;i++){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength==0){for(inti=0;i<len;i++){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(len>0){for(inti=0;i<len;i++){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength<=0){for(inti=0;i<len;i++){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<len&&line.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(offset<actualLength&&line.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength<actualLength&&line.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&line.charAt(actualLength-1)=='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength<len&&line.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value!=null){if(actualLength>0){for(inti=0;i<len;i++){buffer.append(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength!=0){for(inti=0;i<len;i++){buffer.append(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength==0){for(inti=0;i<len;i++){buffer.append(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>=0){for(inti=0;i<len;i++){buffer.append(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength<=0){for(inti=0;i<len;i++){buffer.append(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(len>0){for(inti=0;i<len;i++){buffer.append(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value!=null){intactualLength=line.getBytes(CharsetNames.UTF_8).length;if(actualLength>0){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474IntegeractualLength=line.getBytes(CharsetNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474IntegeractualLength=line.getBytes(CharsetNames.UTF_8).length;if(actualLength>0){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharsetNames.UTF_8).length+1;if(actualLength>0){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharsetNames.UTF_8).length;if(actualLength>=0){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<=len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<len&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<len&&line.getBytes(CharsetNames.UTF_8)!=null){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<len&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value!=null){intactualLength=line.getBytes(CharsetNames.UTF_8).length;if(actualLength>MAX_VALUE){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474IntegeractualLength=line.getBytes(CharsetNames.UTF_8).length;if(actualLength>MAX_VALUE){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharsetNames.UTF_8).length;if(actualLength==MAX_VALUE){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value.length()>0){for(Stringkey:headers.keySet()){line=key.substring(actualLength,value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(len>0){for(Stringkey:headers.keySet()){line=key.substring(actualLength,value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.keySet()){line=key.substring(actualLength,value.length()+1);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.keySet()){line=key.substring(actualLength,value.length()+3);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=key.length()+value.length()/*blank,equalsandnewline*/;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=key.length()+value.length()/*blank,equalsandactualLength*/;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=key.length()+value.length()/*blank,equalsandnewline*/
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=value.length()+value.length()/*blank,equalsandnewline*/;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=key.length()+value.length()/*blank,equalsandrealLength*/;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=value.length()+key.length()/*blank,equalsandnewline*/;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>0&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>=actualLength&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len==actualLength&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>len&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<len&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key.charAt(actualLength-1)=='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength<len&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key.charAt(actualLength-2)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength<=len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&actualLength<=LONGFILE_TRUNCATE){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&actualLength<=0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(offset<=actualLength){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength<actualLength){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<len&&actualLength<=LONGFILE_TRUNCATE){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>=0){for(Stringkey:headers.keySet()){buffer.append(key);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength==0){for(Stringkey:headers.keySet()){buffer.append(key);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength!=0){for(Stringkey:headers.keySet()){buffer.append(key);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.keySet()){buffer.append(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(len>0){for(Stringkey:headers.keySet()){buffer.append(key);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength<=0){for(Stringkey:headers.keySet()){buffer.append(key);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.write(key,value);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.write('n');
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.write(key+"n");
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharsetNames.UTF_8).length+1;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=h.getBytes(CharsetNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharsetNames.UTF_8).length+2;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharsetNames.UTF_8).length+3;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharsetNames.UTF_8).length+4;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharsetNames.UTF_8).length-1;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<len&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(offset<actualLength&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&value.charAt(actualLength-1)=='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&value.charAt(actualLength-2)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>=actualLength&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>len&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.write(len);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length;w.write(len+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474Integerlen=line.getBytes(CharacterNames.UTF_8).length;w.write(len);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length;w.write(len+2);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(offset<actualLength&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(line<actualLength&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&line.charAt(actualLength-1)=='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength<len&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&value!=null&&value.charAt(actualLength-1)=='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<len&&key!=null&&value.charAt(actualLength-1)=='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength>actualLength){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=h.getBytes(CharsetNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharsetNames.UTF_8).length+1;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=w.getBytes(CharsetNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharsetNames.UTF_8).length+2;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharsetNames.UTF_8).length+3;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharsetNames.UTF_8).length+4;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len!=actualLength&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<=LONGFILE_TRUNCATE){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<LONGFILE_TRUNCATE){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>=LONGFILE_TRUNCATE){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength!=LONGFILE_TRUNCATE){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<LONGFILE_GNU){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&line.getBytes(CharsetNames.UTF_8)==null){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength<len&&line.getBytes(CharsetNames.UTF_8)!=null){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<0&&line.getBytes(CharsetNames.UTF_8)!=null){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length+1;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length+2;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=h.getBytes(CharacterNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length+3;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length+4;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length-1;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>=LONGFILE_GNU){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<len||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<0&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength<len&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&value!=null&&value.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<len&&key!=null&&value.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(value!=null&&len<actualLength&&key!=null&&value.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(value<actualLength&&len!=null&&value.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(value!=null&&len<actualLength&&value!=null&&value.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(offset<actualLength&&key!=null&&value.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value.length()>0){for(Stringkey:headers.keySet()){line=key.substring(actualLength+value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(len>0){for(Stringkey:headers.keySet()){line=key.substring(actualLength+value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value!=null){if(actualLength>0){for(Stringkey:headers.keySet()){line=key.substring(actualLength+value.length());}}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value!=null){if(actualLength>0){for(Stringkey:headers.keySet()){line=key.substring(actualLength+value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<len&&key.length()>0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&value.length()>0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(currentLength<len&&key.length()>0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key.length()>0||line.getBytes(CharsetNames.UTF_8)!=null){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key.length()>0||line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(inti=0;i<len;i++){buffer.append(key);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value!=null){intlen=line.getBytes(CharacterNames.UTF_8).length;w.write(line);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length;w.write(key);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length+1;w.write(line);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<=len&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(value!=null&&len<actualLength&&key!=null&&value.charAt(actualLength-1)=='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(valueLen<actualLength&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(value<actualLength&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value==null){intactualLength=line.getBytes(CharsetNames.UTF_8).length;if(actualLength>0){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(Keys.UTF_8).length;if(actualLength>0){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value!=null){for(Stringkey:headers.keySet()){line=key.substring(actualLength,value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.keySet()){line=key.substring(actualLength+1,value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>=LONGFILE_GNU){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key!=null&&value.charAt(actualLength-1)=='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(value.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(Keys.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(key,CharacterNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=key.length()+value.length()/*blank,equalsandnewlines*/;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474Integerlen=key.length()+value.length()/*blank,equalsandnewline*/;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=key.length()+value.length()/*empty,equalsandnewline*/;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(line<actualLength&&line.getBytes(CharsetNames.UTF_8)!=null){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key.length()>9){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>actualLength&&line.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>0&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>5&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value!=null){intlen=line.getBytes(CharacterNames.UTF_8).length;w.write(len);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length+1;w.write(len);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(value.length);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(Keys.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(key,CharacterNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len!=len&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len!=0&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>LONGFILE_TRUNCATE-1){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>LONGFILE_GNU-1){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>LONGFILE_TRUNCATE){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>1){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.keySet()){buffer.append(key,actualLength);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.keySet()){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<2||actualLength<len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>9){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value==null){intactualLength=line.getBytes(CharsetNames.UTF_8).length;if(actualLength>MAX_VALUE){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharsetNames.UTF_8).length+1;if(actualLength>MAX_VALUE){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(Keys.UTF_8).length;if(actualLength>MAX_VALUE){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>=0){for(inti=0;i<len;i++){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(len>actualLength){for(inti=0;i<len;i++){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value!=null){for(inti=0;i<len;i++){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>=len&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.write(value,len);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.write(value+"n");
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>LONGFILE_GNU){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>0&&key!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>=actualLength&&key!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value!=null){for(Stringkey:headers.keySet()){line=key.substring(actualLength+value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.keySet()){line=key.substring(currentLength+value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.valueSet()){line=key.substring(actualLength+value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.keySet()){line=key.substring(actualLength+values.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength<0){for(inti=0;i<len;i++){w.write(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(len>actualLength){for(inti=0;i<len;i++){buffer.append(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(len<actualLength){for(inti=0;i<len;i++){buffer.append(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value!=null){for(inti=0;i<len;i++){buffer.append(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(KeyCharacterNames.UTF_8).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.US_ASCII).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<=MAX_VALUE&&line.getBytes(CharsetNames.UTF_8)!=null){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<=len&&line.getBytes(CharsetNames.UTF_8)!=null){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>0&&line.getBytes(CharsetNames.UTF_8)!=null){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>=4&&key!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>=2&&key!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<=actualLength&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&value!=null&&key.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(value<actualLength&&key!=null&&value.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key!=null&&value.charAt(0)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharsetNames.UTF_8).length-1;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<=actualLength&&line.charAt(actualLength-1)!='/'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.write(value,h.getValue());
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.write(key+"="+value+"n");
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharacterNames.US_ASCII).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intactualLength=line.getBytes(CharacterNames.UTF_8).length-1;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<2||actualLength<2){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.keySet()){buffer.append(key,value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value!=null){for(Stringkey:headers.keySet()){buffer.append(key);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&key.length()>1){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474Integerlen=line.getBytes(CharacterNames.UTF_8).length;w.write(key);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(value==null){for(inti=0;i<len;i++){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(len>0){for(inti=0;i<actualLength;i++){buffer.append('n');}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>actualLength&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<=actualLength&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:headers.keySet()){line=key.substring(0,value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength<=0){for(Stringkey:headers.keySet()){line=key.substring(actualLength,value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=key.length()+value.length()/*blank,equalsANDnewline*/;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=key.length()+value.length()*3/*blank,equalsandnewline*/;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<=LONGFILE_TRUNCATE&&key!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<actualLength&&value!=null&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(value<actualLength&&key!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474w.write(key,newline);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len!=4&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len!=2&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<100){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>actualLength&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<=LONGFILE_TRUNCATE&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<=actualLength&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>0&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>8){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>=0){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength>100){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>currentLength){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(CharacterNames.UTF_8).length;w.write(len+3);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(line!=null){intactualLength=line.getBytes(CharsetNames.UTF_8).length;if(actualLength>MAX_VALUE){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(line==null){intactualLength=line.getBytes(CharsetNames.UTF_8).length;if(actualLength>MAX_VALUE){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>20&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>1&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>4&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>2&&key.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<=actualLength&&line.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(actualLength<2||actualLength>LONGFILE_TRUNCATE){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len>=LONGFILE_TRUNCATE){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<=LONGFILE_TRUNCATE){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(LONGFILE_TRUNCATE>len){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(len>0){for(inti=0;i<len;i++){w.write(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(len>0){for(inti=0;i<actualLength;i++){w.write(value);}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474while(len<=actualLength&&key!=null&&value.charAt(actualLength-1)!='n'){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(line!=null){intactualLength=line.getBytes(CharsetNames.UTF_8).length;if(actualLength>0){thrownewIllegalArgumentException("");}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474intlen=line.getBytes(key.length()).length;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength<=0){for(Stringkey:headers.keySet()){line=key.substring(actualLength+value.length());}
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java474if(actualLength>0){for(Stringkey:values.keySet()){line=key.substring(actualLength+value.length());}
