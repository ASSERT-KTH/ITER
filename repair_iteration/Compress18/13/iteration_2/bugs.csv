bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.assemLen  =  os.readFully();  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  os.readFully();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readFully();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
2	[BUG]  [BUGGY]  this.assemLen  =  os.readUTF();  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  os.readUTF();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readUTF();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
3	[BUG]  [BUGGY]  this.assemLen  =  os.readFile();  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  os.readFile();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readFile();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
4	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  +  1;  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  os.readLine()  +  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine()  +  1;	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
5	[BUG]  [BUGGY]  this.assemLen  =  os.readShort();  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  os.readShort();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readShort();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
6	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  +  recordSize;  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  os.readLine()  +  recordSize;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine()  +  recordSize;	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
7	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  recordSize;  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  recordSize;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
9	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
10	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
11	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  true  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
12	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
13	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  0  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  buffer.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  buffer.length);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
15	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  bufferSize,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  bufferSize);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  bufferSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  bufferSize);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  0,  buffer.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  0,  buffer.length);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  buffer.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  buffer.length);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
21	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  recordSize);	  this.buffer    =    new    TarBuffer(os.readLine());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
22	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  blockSize);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  blockSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  blockSize);	  this.buffer    =    new    TarBuffer(os.readLine());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
23	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.readLine());  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.readLine());  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize.readLine());	  this.buffer    =    new    TarBuffer(os.readLine());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
24	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readUTF());  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.readUTF());  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readUTF());	  this.buffer    =    new    TarBuffer(os.readLine());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
25	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  out.readLine());  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  out.readLine());  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  out.readLine());	  this.buffer    =    new    TarBuffer(os.readLine());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
26	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  +  recordSize);  [CE]  <identifier>  expected  [FE]                            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  +  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine()  +  recordSize);	  this.buffer    =    new    TarBuffer(os.readLine());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
27	[BUG]  [BUGGY]  this.recordSize  =  recordSize  +  1;  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.recordSize  =  recordSize  +  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize  +  1;	  this.recordSize    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
28	[BUG]  [BUGGY]  this.recordSize  =  recordSize  -  1;  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.recordSize  =  recordSize  -  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize  -  1;	  this.recordSize    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
29	[BUG]  [BUGGY]  this.recordSize  =  blockSize;  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.recordSize  =  blockSize;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  blockSize;	  this.recordSize    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
30	[BUG]  [BUGGY]  this.recordSize  =  0;  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.recordSize  =  0;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  0;	  this.recordSize    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
31	[BUG]  [BUGGY]  this.recordSize  =  recordSize  +  2;  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.recordSize  =  recordSize  +  2;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize  +  2;	  this.recordSize    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
32	[BUG]  [BUGGY]  this.recordSize  =  recordSize  +  4;  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.recordSize  =  recordSize  +  4;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize  +  4;	  this.recordSize    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
33	[BUG]  [BUGGY]  this.encoding  =  buffer.getEncoding();  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.encoding  =  buffer.getEncoding();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  buffer.getEncoding();	  this.encoding    =    os.getEncoding();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
34	[BUG]  [BUGGY]  this.encoding  =  os.getCharacterEncoding();  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.encoding  =  os.getCharacterEncoding();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCharacterEncoding();	  this.encoding    =    os.getEncoding();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
35	[BUG]  [BUGGY]  this.encoding  =  zipEncoding.getEncoding();  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.encoding  =  zipEncoding.getEncoding();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  zipEncoding.getEncoding();	  this.encoding    =    os.getEncoding();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
36	[BUG]  [BUGGY]  this.encoding  =  os.getName();  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.encoding  =  os.getName();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getName();	  this.encoding    =    os.getEncoding();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
37	[BUG]  [BUGGY]  this.encoding  =  os.getRawEncoding();  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.encoding  =  os.getRawEncoding();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getRawEncoding();	  this.encoding    =    os.getEncoding();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
38	[BUG]  [BUGGY]  this.encoding  =  os.getRecordSize();  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.encoding  =  os.getRecordSize();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getRecordSize();	  this.encoding    =    os.getEncoding();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
39	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false;  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
40	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true;  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  true;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
41	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
43	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,String>();  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,String>();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,String>();	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
44	[BUG]  [BUGGY]  this.assemLen  =  blockSize;  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  blockSize;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  blockSize;	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
45	[BUG]  [BUGGY]  this.assemLen  =  recordSize  +  1;  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  recordSize  +  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize  +  1;	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
46	[BUG]  [BUGGY]  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  0;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  0;	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
47	[BUG]  [BUGGY]  this.assemLen  =  recordSize  -  1;  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  recordSize  -  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize  -  1;	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
48	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(blockSize,  recordSize);	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
49	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(recordSize);  [CE]  <identifier>  expected  [FE]                            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  new  BigNumberMode(recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(recordSize);	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
50	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  buffer.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  buffer.length);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
51	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  bufferSize);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  bufferSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  bufferSize);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
52	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  blockSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
53	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  buffer.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  buffer.length);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
54	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  buffer.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  buffer.length);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
56	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames();  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
57	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  null);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  null);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  null);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
58	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
59	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  true);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  true);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  true);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
60	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
61	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  encoding);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  encoding);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  encoding);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
62	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
63	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;  }  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;  }	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
64	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
67	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize);	  this.buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
68	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(true);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(true);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(true);	  this.buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
69	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(64);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(64);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(64);	  this.buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
70	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(0);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(0);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(0);	  this.buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
71	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize));  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize));	  this.buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
72	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER);	  this.buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
73	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames);  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
74	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemLen);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemLen);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemLen);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
75	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  false);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  false);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
76	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  null);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  null);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  null);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
77	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
78	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  true);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  true);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  true);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
79	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
80	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(recordSize);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
81	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
82	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(blockSize);  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(blockSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(blockSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
83	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  encoding);  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  encoding);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  encoding);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
84	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(out);  [CE]  <identifier>  expected  [FE]                            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(out);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(out);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
86	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
87	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
88	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
89	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
90	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	5	None	replace
91	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  ||  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  ||  addPaxHeadersForNonAsciiNames  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false  ||  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	5	None	replace
92	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  ||  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  ||  addPaxHeadersForNonAsciiNames  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  true  ||  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	5	None	replace
93	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  ||  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  ||  addPaxHeadersForNonAsciiNames  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding  ||  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	5	None	replace
94	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0  ||  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0  ||  addPaxHeadersForNonAsciiNames  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  0  ||  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	5	None	replace
95	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  recordSize  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  recordSize  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  recordSize	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	5	None	replace
96	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize);	  this.buffer    =    new    TarBuffer(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
97	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize));  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize));  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize));	  this.buffer    =    new    TarBuffer(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
98	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  blockSize);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  blockSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(),  blockSize);	  this.buffer    =    new    TarBuffer(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
99	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.toByteArray());  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.toByteArray());  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.toByteArray());	  this.buffer    =    new    TarBuffer(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
100	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 "));  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 "));  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 "));	  this.buffer    =    new    TarBuffer(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
101	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
102	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
103	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  addPaxHeadersForNonAsciiNames(blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  addPaxHeadersForNonAsciiNames(blockSize,  recordSize));  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os?  null  :  addPaxHeadersForNonAsciiNames(blockSize,  recordSize));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
104	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
105	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
106	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  recordSize);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
107	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  recordSize.length);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  recordSize.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  recordSize.length);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  assemBuf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  buffer,  recordSize,  0,  assemBuf.length);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
109	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  os.length  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  os.length  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  os.length  -  1);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  os.length  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  os.length  -  1);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
111	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  addPaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
112	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  addPaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os?  null  :  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
113	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames  +  1;  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames  +  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames  +  1;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
114	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true?  null  :  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true?  null  :  addPaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  true?  null  :  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
115	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  recordSize;  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  recordSize;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
116	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
117	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  getPaxHeadersForNonAsciiNames();  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  getPaxHeadersForNonAsciiNames();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  getPaxHeadersForNonAsciiNames();	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
118	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  recordSize;  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  recordSize;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
119	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os;  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
120	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  *  recordSize;  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  os.readLine()  *  recordSize;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine()  *  recordSize;	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
121	[BUG]  [BUGGY]  this.assemLen  =  os.readLineBytes();  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  os.readLineBytes();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLineBytes();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
122	[BUG]  [BUGGY]  this.assemLen  =  os.readLine(recordSize);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  os.readLine(recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine(recordSize);	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
123	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||!addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||!addPaxHeadersForNonAsciiNames  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||!addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	5	None	replace
124	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  ||  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  ||  addPaxHeadersForNonAsciiNames  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os  ||  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	5	None	replace
125	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  os.length);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  os.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  buffer,  recordSize,  0,  os.length);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
126	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
127	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  buffer,  recordSize,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
128	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  buffer.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  buffer.length);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
129	[BUG]  [BUGGY]  this.assemLen  =  recordSize  +  2;  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  recordSize  +  2;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize  +  2;	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
130	[BUG]  [BUGGY]  this.assemLen  =  recordSize  +  4;  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  recordSize  +  4;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize  +  4;	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
131	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  1);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
132	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
133	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
134	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  1;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
135	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize));  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize));  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize));	  this.buffer    =    new    TarBuffer(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
136	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize);	  this.buffer    =    new    TarBuffer(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
137	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(currName));  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(currName));  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(currName));	  this.buffer    =    new    TarBuffer(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
138	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
139	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
140	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  -  1);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine()  -  1);	  this.buffer    =    new    TarBuffer(os.readLine());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
141	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  +  1);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine()  +  1);	  this.buffer    =    new    TarBuffer(os.readLine());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
142	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(blockSize);	  this.buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
143	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(512);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(512);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(512);	  this.buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
144	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(256);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(256);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(256);	  this.buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
145	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  2);  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  2);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
146	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  os;  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  os;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  os;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
147	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[blockSize];  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[blockSize];	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
148	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[recordSize];  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[recordSize];  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[recordSize];	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
149	[BUG]  [BUGGY]  this.encoding  =  os.getZipEncoding();  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.encoding  =  os.getZipEncoding();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getZipEncoding();	  this.encoding    =    os.getEncoding();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
150	[BUG]  [BUGGY]  this.encoding  =  os.getCharset();  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.encoding  =  os.getCharset();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCharset();	  this.encoding    =    os.getEncoding();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
151	[BUG]  [BUGGY]  this.encoding  =  os.getTarEncoding();  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.encoding  =  os.getTarEncoding();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getTarEncoding();	  this.encoding    =    os.getEncoding();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
152	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
153	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordSize,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  recordSize,  0,  assemBuf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordSize,  0,  assemBuf.length);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
154	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
155	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(null);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(null);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(null);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
156	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(true);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(true);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(true);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
157	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
158	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
159	[BUG]  [BUGGY]  this.assemLen  =  os.readInt();  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  os.readInt();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readInt();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
160	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
161	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
162	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
163	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os);	  this.buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
164	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize);	  this.buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
165	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  recordSize);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  recordSize);	  this.buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
166	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  buffer  =  os;  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  buffer  =  os;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  buffer  =  os;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
167	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  BigNumberMode);  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  BigNumberMode);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  BigNumberMode);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
168	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  blockSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
169	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
170	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemSize);  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
171	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
172	[BUG]  [BUGGY]  this.recordSize  =  os.getRecordSize();  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.recordSize  =  os.getRecordSize();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  os.getRecordSize();	  this.recordSize    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
173	[BUG]  [BUGGY]  this.recordSize  -=  recordSize;  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.recordSize  -=  recordSize;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  -=  recordSize;	  this.recordSize    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
174	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
175	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(recordSize);  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(recordSize);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
176	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames();  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
177	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
178	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
179	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  assemLen);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
180	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  buffer.length  +  1);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  buffer.length  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  buffer.length  +  1);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
181	[BUG]  [BUGGY]  this.encoding  =  os.toString();  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.encoding  =  os.toString();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.toString();	  this.encoding    =    os.getEncoding();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
182	[BUG]  [BUGGY]  this.encoding  =  os.getCharacters();  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.encoding  =  os.getCharacters();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCharacters();	  this.encoding    =    os.getEncoding();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
183	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getCharacterEncoding());  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getCharacterEncoding());  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getCharacterEncoding());	  this.buffer    =    new    TarBuffer(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
184	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getCharacterMode());  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getCharacterMode());  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getCharacterMode());	  this.buffer    =    new    TarBuffer(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
185	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getVersion());  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getVersion());  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getVersion());	  this.buffer    =    new    TarBuffer(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
186	[BUG]  [BUGGY]  this.assemLen  =  currBytes;  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.assemLen  =  currBytes;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  currBytes;	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
187	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,Object>();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,Object>();	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
188	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  os.length);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  os.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  os.length);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
189	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
190	[BUG]  [BUGGY]  System.arraycopy(os,  0,  assemBuf,  recordSize,  0,  os.length);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(os,  0,  assemBuf,  recordSize,  0,  os.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  assemBuf,  recordSize,  0,  os.length);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
191	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  buffer,  recordSize,  0,  os.length);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  System.arraycopy(assemBuf,  0,  os,  buffer,  recordSize,  0,  os.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  buffer,  recordSize,  0,  os.length);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
192	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine());  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine());  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine());	  this.buffer    =    new    TarBuffer(os.readLine());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
193	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  osForNonAsciiNames;  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);    [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  osForNonAsciiNames;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  osForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
