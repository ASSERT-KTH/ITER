bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  os;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  os;	  this.addPaxHeadersForNonAsciiNames    =    os    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	158	None	replace
2	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  blockSize;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  blockSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  blockSize;	  this.addPaxHeadersForNonAsciiNames    =    os    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	158	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemBuf.length);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize.length);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize.length);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  0,  assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  0,  assemBuf.length);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
6	[BUG]  [BUGGY]  if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemBuf.length);  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemBuf.length);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemBuf.length);  }	  System.arraycopy(assemBuf,    0,    recordSize,    0,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
7	[BUG]  [BUGGY]  if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemBuf.length);  }  else  {  buffer.write(assemBuf,  0,  assemBuf.length);  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemBuf.length);  }  else  {  buffer.write(assemBuf,  0,  assemBuf.length);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemBuf.length);  }  else  {  buffer.write(assemBuf,  0,  assemBuf.length);  }	  System.arraycopy(assemBuf,    0,    recordSize,    0,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
8	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(false);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(false);	  this.buffer    =    new    TarBuffer(true);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
9	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(false,  false);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(false,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(false,  false);	  this.buffer    =    new    TarBuffer(true);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
10	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(false,  true);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(false,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(false,  true);	  this.buffer    =    new    TarBuffer(true);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
11	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(true,  false);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(true,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(true,  false);	  this.buffer    =    new    TarBuffer(true);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
12	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(true,  true);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(true,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(true,  true);	  this.buffer    =    new    TarBuffer(true);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
13	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(true,  0);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(true,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(true,  0);	  this.buffer    =    new    TarBuffer(true);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
14	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
15	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsci  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsci  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsci	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
16	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsci  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsci  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsci	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
17	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  &&  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  &&  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false  &&  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
18	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  &&  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  &&  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  true  &&  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
19	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize?  null  :  recordSize;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize?  null  :  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize?  null  :  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  /  1);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  /  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  /  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize  -  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize  -  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
23	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  os.getCharacterMode());  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  os.getCharacterMode());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  os.getCharacterMode());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterMode());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
24	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize.getCharacterMode());  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize.getCharacterMode());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize.getCharacterMode());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterMode());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
25	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  recordSize,  os.getCharacterMode());  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  recordSize,  os.getCharacterMode());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  recordSize,  os.getCharacterMode());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterMode());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
26	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  blockSize,  os.getCharacterMode());  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  blockSize,  os.getCharacterMode());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  blockSize,  os.getCharacterMode());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterMode());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
27	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  blockSize.getCharacterMode());  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  blockSize.getCharacterMode());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  blockSize.getCharacterMode());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterMode());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
28	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(length),  os.getCharacterMode());  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(length),  os.getCharacterMode());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(length),  os.getCharacterMode());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterMode());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
29	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.toByteArray(),  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.toByteArray(),  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.toByteArray(),  recordSize);	  this.buffer    =    new    TarBuffer(os.toByteArray());    	non-compiled	[CE]  <identifier>  expected	99	None	replace
30	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.toByteArray(),  blockSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.toByteArray(),  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.toByteArray(),  blockSize);	  this.buffer    =    new    TarBuffer(os.toByteArray());    	non-compiled	[CE]  <identifier>  expected	99	None	replace
31	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.toByteArray(),  bufferSize);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.toByteArray(),  bufferSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.toByteArray(),  bufferSize);	  this.buffer    =    new    TarBuffer(os.toByteArray());    	non-compiled	[CE]  <identifier>  expected	99	None	replace
32	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.toByteArray(),  false);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.toByteArray(),  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.toByteArray(),  false);	  this.buffer    =    new    TarBuffer(os.toByteArray());    	non-compiled	[CE]  <identifier>  expected	99	None	replace
33	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.toByteArray()  +  1);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.toByteArray()  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.toByteArray()  +  1);	  this.buffer    =    new    TarBuffer(os.toByteArray());    	non-compiled	[CE]  <identifier>  expected	99	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length    -    1);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  blockSize  -  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  blockSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  blockSize  -  1);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length    -    1);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length    -    1);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  buffer.length  -  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  buffer.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  buffer.length  -  1);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length    -    1);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  os.length  -  1);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  os.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  os.length  -  1);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length    -    1);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
39	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  os.length  -  1);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  os.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  os.length  -  1);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length    -    1);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
40	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  0);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  0);	  this.buffer    =    new    TarBuffer(os.getBytes(blockSize),    recordSize);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
41	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  assemLen);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  assemLen);	  this.buffer    =    new    TarBuffer(os.getBytes(blockSize),    recordSize);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
42	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  currBytes);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  currBytes);	  this.buffer    =    new    TarBuffer(os.getBytes(blockSize),    recordSize);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
43	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(os.getBytes(blockSize),    recordSize);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
44	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  false);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  false);	  this.buffer    =    new    TarBuffer(os.getBytes(blockSize),    recordSize);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
45	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  blockSize);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  blockSize);	  this.buffer    =    new    TarBuffer(os.getBytes(blockSize),    recordSize);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
46	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames(os);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames(os);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames(os);	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	177	None	replace
47	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames();	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	177	None	replace
48	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.addPaxHeadersForNonAsciiNames(encoding);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.addPaxHeadersForNonAsciiNames(encoding);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.addPaxHeadersForNonAsciiNames(encoding);	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	177	None	replace
49	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  buffer.addPaxHeadersForNonAsciiNames(os);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  buffer.addPaxHeadersForNonAsciiNames(os);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  buffer.addPaxHeadersForNonAsciiNames(os);	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	177	None	replace
50	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.addPaxHeadersForNonAsciiNames();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.addPaxHeadersForNonAsciiNames();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.addPaxHeadersForNonAsciiNames();	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	177	None	replace
51	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames(null);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames(null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames(null);	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	177	None	replace
52	[BUG]  [BUGGY]  this.encoding  =  buffer.getRawEncoding();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  buffer.getRawEncoding();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  buffer.getRawEncoding();	  this.encoding    =    os.getRawEncoding();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
53	[BUG]  [BUGGY]  this.encoding  =  os.getRawName();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getRawName();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getRawName();	  this.encoding    =    os.getRawEncoding();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
54	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  encoding);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  encoding);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  encoding);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    encoding);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
55	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  currName);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  currName);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    encoding);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
56	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  fileSize);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  fileSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  fileSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    encoding);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
57	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(blockSize,  encoding);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(blockSize,  encoding);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(blockSize,  encoding);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    encoding);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
58	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize  -  encoding);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize  -  encoding);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize  -  encoding);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    encoding);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
59	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  &&  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  &&  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false  &&  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
60	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  &&  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  &&  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  true  &&  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
61	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
62	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
63	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0  &&  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0  &&  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  0  &&  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
64	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  blockSize;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  blockSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  blockSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
65	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  }	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
66	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  }  else  {  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  }  else  {  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  }  else  {  addPaxHeadersForNonAsciiNames	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
67	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
68	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  }  else  {  buffer  =  null;  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  }  else  {  buffer  =  null;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  }  else  {  buffer  =  null;  }	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
69	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    bufferSize,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
70	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    bufferSize,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
71	[BUG]  [BUGGY]  this.encoding  =  buffer.getCharacters();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  buffer.getCharacters();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  buffer.getCharacters();	  this.encoding    =    os.getCharacters();    	non-compiled	[CE]  <identifier>  expected	182	None	replace
72	[BUG]  [BUGGY]  this.encoding  =  os.getCharacters(recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getCharacters(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCharacters(recordSize);	  this.encoding    =    os.getCharacters();    	non-compiled	[CE]  <identifier>  expected	182	None	replace
73	[BUG]  [BUGGY]  this.encoding  =  os.getCharacters(blockSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getCharacters(blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCharacters(blockSize);	  this.encoding    =    os.getCharacters();    	non-compiled	[CE]  <identifier>  expected	182	None	replace
74	[BUG]  [BUGGY]  this.encoding  =  os.getCharacters()  +  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getCharacters()  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCharacters()  +  1;	  this.encoding    =    os.getCharacters();    	non-compiled	[CE]  <identifier>  expected	182	None	replace
75	[BUG]  [BUGGY]  this.encoding  =  os.getDecodedCharacters();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getDecodedCharacters();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getDecodedCharacters();	  this.encoding    =    os.getCharacters();    	non-compiled	[CE]  <identifier>  expected	182	None	replace
76	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  os.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  os.length);	  System.arraycopy(assemBuf,    0,    os,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	191	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  buffer,  blockSize,  0,  os.length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  buffer,  blockSize,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  buffer,  blockSize,  0,  os.length);	  System.arraycopy(assemBuf,    0,    os,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	191	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  buffer,  recordSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  buffer,  recordSize,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  buffer,  recordSize,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    os,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	191	None	replace
79	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  buffer,  blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  buffer,  blockSize,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  buffer,  blockSize,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    os,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	191	None	replace
80	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  recordSize,  0,  os.length);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  recordSize,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  1,  recordSize,  0,  os.length);	  System.arraycopy(assemBuf,    0,    os,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	191	None	replace
81	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  osForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  osForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  osForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    osForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	193	None	replace
82	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  ||  osForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  ||  osForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false  ||  osForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    osForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	193	None	replace
83	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  osForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  osForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  osForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    osForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	193	None	replace
84	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  ||  osForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  ||  osForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  true  ||  osForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    osForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	193	None	replace
85	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  osForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  osForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  osForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    osForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	193	None	replace
86	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    +    1));    	non-compiled	[CE]  <identifier>  expected	105	None	replace
87	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    +    1));    	non-compiled	[CE]  <identifier>  expected	105	None	replace
88	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    +    1));    	non-compiled	[CE]  <identifier>  expected	105	None	replace
89	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  false  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  false  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  false  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    +    1));    	non-compiled	[CE]  <identifier>  expected	105	None	replace
90	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    +    1));    	non-compiled	[CE]  <identifier>  expected	105	None	replace
91	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(out);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(out);	  this.buffer    =    new    TarBuffer(os);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
92	[BUG]  [BUGGY]  this.recordSize  =  recordSize  /  2;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  recordSize  /  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize  /  2;	  this.recordSize    =    recordSize    +    2;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
93	[BUG]  [BUGGY]  this.recordSize  =  recordSize  *  2;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  recordSize  *  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize  *  2;	  this.recordSize    =    recordSize    +    2;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
94	[BUG]  [BUGGY]  this.recordSize  =  recordSize  +  3;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  recordSize  +  3;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize  +  3;	  this.recordSize    =    recordSize    +    2;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
95	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  2);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
96	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
97	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
98	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  3);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  3);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  3);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
99	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  4);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  4);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
100	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    super.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	178	None	replace
101	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  blockSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  blockSize);	  this.addPaxHeadersForNonAsciiNames    =    super.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	178	None	replace
102	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(recordSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(recordSize);	  this.addPaxHeadersForNonAsciiNames    =    super.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	178	None	replace
103	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(blockSize);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(blockSize);	  this.addPaxHeadersForNonAsciiNames    =    super.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	178	None	replace
104	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  encoding);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  encoding);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  encoding);	  this.addPaxHeadersForNonAsciiNames    =    super.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	178	None	replace
105	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames  +  1;	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
106	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  recordSize;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  recordSize;	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
107	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  removePaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  removePaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  removePaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
108	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
109	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  encoding));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  encoding));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  encoding));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
110	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
111	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  true));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  true));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  true));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
112	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  System.currentTimeMillis();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  System.currentTimeMillis();	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
113	[BUG]  [BUGGY]  this.assemLen  =  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  1;	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
114	[BUG]  [BUGGY]  this.assemLen  =  2;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  2;	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
115	[BUG]  [BUGGY]  this.assemLen  =  BigNumberMode.ZERO;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  BigNumberMode.ZERO;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  BigNumberMode.ZERO;	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
116	[BUG]  [BUGGY]  this.recordSize  =  recordSize  /  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  recordSize  /  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize  /  1;	  this.recordSize    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
117	[BUG]  [BUGGY]  this.recordSize  =  recordSize  -  2;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  recordSize  -  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize  -  2;	  this.recordSize    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
118	[BUG]  [BUGGY]  this.recordSize  =  recordSize  -  1L;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  recordSize  -  1L;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize  -  1L;	  this.recordSize    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
119	[BUG]  [BUGGY]  this.recordSize  =  recordSize  -  4;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  recordSize  -  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize  -  4;	  this.recordSize    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
120	[BUG]  [BUGGY]  this.recordSize  =  blockSize  -  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  blockSize  -  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  blockSize  -  1;	  this.recordSize    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
121	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  bufferSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  bufferSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  bufferSize);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    bufferSize);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
122	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    bufferSize);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
123	[BUG]  [BUGGY]  this.assemLen  =  recordSize  /  2;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  recordSize  /  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize  /  2;	  this.assemLen    =    recordSize    +    2;    	non-compiled	[CE]  <identifier>  expected	129	None	replace
124	[BUG]  [BUGGY]  this.assemLen  =  blockSize  +  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  blockSize  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  blockSize  +  1;	  this.assemLen    =    recordSize    +    2;    	non-compiled	[CE]  <identifier>  expected	129	None	replace
125	[BUG]  [BUGGY]  this.assemLen  =  blockSize  +  2;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  blockSize  +  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  blockSize  +  2;	  this.assemLen    =    recordSize    +    2;    	non-compiled	[CE]  <identifier>  expected	129	None	replace
126	[BUG]  [BUGGY]  this.assemLen  =  recordSize  *  2;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  recordSize  *  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize  *  2;	  this.assemLen    =    recordSize    +    2;    	non-compiled	[CE]  <identifier>  expected	129	None	replace
127	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(Os.readLine());  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(Os.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(Os.readLine());	  this.buffer    =    new    TarBuffer(os.readLine()    -    1);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
128	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize  -  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize  -  1);	  this.buffer    =    new    TarBuffer(os.readLine()    -    1);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
129	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(buffered.readLine());  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(buffered.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(buffered.readLine());	  this.buffer    =    new    TarBuffer(os.readLine()    -    1);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
130	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize  -  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(blockSize  -  1);	  this.buffer    =    new    TarBuffer(os.readLine()    -    1);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
131	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  /  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  /  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine()  /  1);	  this.buffer    =    new    TarBuffer(os.readLine()    +    1);    	non-compiled	[CE]  <identifier>  expected	141	None	replace
132	[BUG]  [BUGGY]  this.encoding  =  buffer.getCharacterEncoding();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  buffer.getCharacterEncoding();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  buffer.getCharacterEncoding();	  this.encoding    =    buffer.getEncoding();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
133	[BUG]  [BUGGY]  this.encoding  =  buffer.getEncoding(recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  buffer.getEncoding(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  buffer.getEncoding(recordSize);	  this.encoding    =    buffer.getEncoding();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
134	[BUG]  [BUGGY]  this.encoding  =  TarBuffer.getEncoding(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  TarBuffer.getEncoding(os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  TarBuffer.getEncoding(os,  blockSize,  recordSize);	  this.encoding    =    buffer.getEncoding();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
135	[BUG]  [BUGGY]  this.encoding  =  TarBuffer.getEncoding(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  TarBuffer.getEncoding(blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  TarBuffer.getEncoding(blockSize,  recordSize);	  this.encoding    =    buffer.getEncoding();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
136	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(blockSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(blockSize);	  this.addPaxHeadersForNonAsciiNames    =    removePaxHeadersForNonAsciiNames(recordSize);    	non-compiled	[CE]  <identifier>  expected	175	None	replace
137	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    removePaxHeadersForNonAsciiNames(recordSize);    	non-compiled	[CE]  <identifier>  expected	175	None	replace
138	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    removePaxHeadersForNonAsciiNames(recordSize);    	non-compiled	[CE]  <identifier>  expected	175	None	replace
139	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
140	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
141	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  bufferSize,  assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    bufferSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
142	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    bufferSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
143	[BUG]  [BUGGY]  os.write(assemBuf,  0,  assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  os.write(assemBuf,  0,  assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	os.write(assemBuf,  0,  assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    bufferSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
144	[BUG]  [BUGGY]  this.recordSize  =  recordSize  /  4;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  recordSize  /  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize  /  4;	  this.recordSize    =    recordSize    +    4;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
145	[BUG]  [BUGGY]  this.recordSize  =  recordSize  *  4;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  recordSize  *  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize  *  4;	  this.recordSize    =    recordSize    +    4;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
146	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemSize  +  1);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemSize  +  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
147	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  bufferSize,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    bufferSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
148	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  bufferSize,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    bufferSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
149	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  bufferSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  bufferSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  bufferSize);	  System.arraycopy(assemBuf,    0,    bufferSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
150	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  os.length);	  System.arraycopy(os,    0,    assemBuf,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	190	None	replace
151	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  os.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  os.length);	  System.arraycopy(os,    0,    assemBuf,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	190	None	replace
152	[BUG]  [BUGGY]  System.arraycopy(os,  0,  assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  assemBuf,  0,  recordSize);	  System.arraycopy(os,    0,    assemBuf,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	190	None	replace
153	[BUG]  [BUGGY]  System.arraycopy(os,  0,  assemBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  assemBuf,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  assemBuf,  0,  os.length);	  System.arraycopy(os,    0,    assemBuf,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	190	None	replace
154	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    true);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
155	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  BlockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  BlockSize,  recordSize,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  BlockSize,  recordSize,  false);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    true);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
156	[BUG]  [BUGGY]  This.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  This.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	This.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    true);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
157	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  +  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
158	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  *  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  *  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  *  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
159	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
160	[BUG]  [BUGGY]  this.assemLen  =  os.readLineBytes(recordSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLineBytes(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLineBytes(recordSize);	  this.assemLen    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
161	[BUG]  [BUGGY]  this.assemLen  =  os.readLineBytes(blockSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLineBytes(blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLineBytes(blockSize);	  this.assemLen    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
162	[BUG]  [BUGGY]  this.assemLen  =  os.readFileBytes();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readFileBytes();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readFileBytes();	  this.assemLen    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
163	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames();	  this.addPaxHeadersForNonAsciiNames    =    removePaxHeadersForNonAsciiNames();    	non-compiled	[CE]  <identifier>  expected	176	None	replace
164	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(true);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(true);	  this.addPaxHeadersForNonAsciiNames    =    removePaxHeadersForNonAsciiNames();    	non-compiled	[CE]  <identifier>  expected	176	None	replace
165	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readUTF(),  recordSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readUTF(),  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readUTF(),  recordSize);	  this.buffer    =    new    TarBuffer(os.readUTF());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
166	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readUTF(),  blockSize);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readUTF(),  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readUTF(),  blockSize);	  this.buffer    =    new    TarBuffer(os.readUTF());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
167	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readFully());  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readFully());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readFully());	  this.buffer    =    new    TarBuffer(os.readUTF());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
168	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.readUTF());  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.readUTF());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize.readUTF());	  this.buffer    =    new    TarBuffer(os.readUTF());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
169	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readBytes());  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readBytes());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readBytes());	  this.buffer    =    new    TarBuffer(os.readUTF());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
170	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  os.length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  os.length);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	188	None	replace
171	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  os.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  os.length  +  1);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	188	None	replace
172	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(out,  recordSize);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(out,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(out,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(out);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
173	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false?  null  :  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false?  null  :  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false?  null  :  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    true?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
174	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false?  true  :  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false?  true  :  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false?  true  :  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    true?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
175	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true?  false  :  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true?  false  :  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  true?  false  :  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    true?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
176	[BUG]  [BUGGY]  this.assemLen  =  os.readFile(recordSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readFile(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readFile(recordSize);	  this.assemLen    =    os.readFile();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
177	[BUG]  [BUGGY]  this.assemLen  =  os.readFileInfo();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readFileInfo();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readFileInfo();	  this.assemLen    =    os.readFile();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
178	[BUG]  [BUGGY]  this.encoding  =  buffer.toString();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  buffer.toString();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  buffer.toString();	  this.encoding    =    os.toString();    	non-compiled	[CE]  <identifier>  expected	181	None	replace
179	[BUG]  [BUGGY]  this.encoding  =  zipEncoding.toString();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  zipEncoding.toString();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  zipEncoding.toString();	  this.encoding    =    os.toString();    	non-compiled	[CE]  <identifier>  expected	181	None	replace
180	[BUG]  [BUGGY]  this.encoding  =  currName.toString();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  currName.toString();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  currName.toString();	  this.encoding    =    os.toString();    	non-compiled	[CE]  <identifier>  expected	181	None	replace
181	[BUG]  [BUGGY]  this.encoding  =  os.toUpperCase();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.toUpperCase();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.toUpperCase();	  this.encoding    =    os.toString();    	non-compiled	[CE]  <identifier>  expected	181	None	replace
182	[BUG]  [BUGGY]  this.encoding  =  os.toByteArray();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.toByteArray();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.toByteArray();	  this.encoding    =    os.toString();    	non-compiled	[CE]  <identifier>  expected	181	None	replace
183	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  insertPaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  insertPaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  insertPaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    insertPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	161	None	replace
184	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  insertPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  insertPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  insertPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    insertPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	161	None	replace
185	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  insertPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  insertPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os?  null  :  insertPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    insertPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	161	None	replace
186	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  /  2);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  /  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  /  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    2);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
187	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  4);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  4);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    2);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
188	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  os  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  os  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  os	  this.addPaxHeadersForNonAsciiNames    =    os    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	124	None	replace
189	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    os    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	124	None	replace
190	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  os;  }  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  os;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  os;  }	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    1);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	146	None	replace
191	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  os;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  os;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    1);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	146	None	replace
192	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  os;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  os;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    1);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	146	None	replace
193	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  1  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  1  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  1  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    0    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	102	None	replace
194	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  2  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  2  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  2  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    0    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	102	None	replace
195	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    0    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	102	None	replace
196	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  +  blockSize;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLine()  +  blockSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine()  +  blockSize;	  this.assemLen    =    os.readLine()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
197	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  /  recordSize;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLine()  /  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine()  /  recordSize;	  this.assemLen    =    os.readLine()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
198	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  -  recordSize;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLine()  -  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine()  -  recordSize;	  this.assemLen    =    os.readLine()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
199	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    buffer,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
200	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
201	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    buffer,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
202	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine()  +  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine()  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine()  +  1);	  this.buffer    =    new    TarBuffer(os.readLine(),    os.readLine());    	non-compiled	[CE]  <identifier>  expected	192	None	replace
203	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine(),  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine(),  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine(),  recordSize);	  this.buffer    =    new    TarBuffer(os.readLine(),    os.readLine());    	non-compiled	[CE]  <identifier>  expected	192	None	replace
204	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  os.readColumn());  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  os.readColumn());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  os.readColumn());	  this.buffer    =    new    TarBuffer(os.readLine(),    os.readLine());    	non-compiled	[CE]  <identifier>  expected	192	None	replace
205	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine()  +  recordSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine()  +  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine()  +  recordSize);	  this.buffer    =    new    TarBuffer(os.readLine(),    os.readLine());    	non-compiled	[CE]  <identifier>  expected	192	None	replace
206	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  currName  ||  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  currName  ||  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  currName  ||  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    encoding    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	93	None	replace
207	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  encoding  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  encoding  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  encoding	  this.addPaxHeadersForNonAsciiNames    =    encoding    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	93	None	replace
208	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  &&  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  &&  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding  &&  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    encoding    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	93	None	replace
209	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  os.getCharacterEncoding());  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  os.getCharacterEncoding());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  os.getCharacterEncoding());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterEncoding());    	non-compiled	[CE]  <identifier>  expected	183	None	replace
210	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize.getCharacterEncoding());  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize.getCharacterEncoding());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize.getCharacterEncoding());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterEncoding());    	non-compiled	[CE]  <identifier>  expected	183	None	replace
211	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  blockSize,  os.getCharacterEncoding());  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  blockSize,  os.getCharacterEncoding());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  blockSize,  os.getCharacterEncoding());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterEncoding());    	non-compiled	[CE]  <identifier>  expected	183	None	replace
212	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  recordSize,  os.getCharacterEncoding());  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  recordSize,  os.getCharacterEncoding());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  recordSize,  os.getCharacterEncoding());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterEncoding());    	non-compiled	[CE]  <identifier>  expected	183	None	replace
213	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(lockSize),  os.getCharacterEncoding());  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(lockSize),  os.getCharacterEncoding());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(lockSize),  os.getCharacterEncoding());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterEncoding());    	non-compiled	[CE]  <identifier>  expected	183	None	replace
214	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(blockSize,  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(blockSize,  recordSize));	  this.addPaxHeadersForNonAsciiNames    =    os?    null    :    addPaxHeadersForNonAsciiNames(blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	103	None	replace
215	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false?  null  :  addPaxHeadersForNonAsciiNames(blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false?  null  :  addPaxHeadersForNonAsciiNames(blockSize,  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false?  null  :  addPaxHeadersForNonAsciiNames(blockSize,  recordSize));	  this.addPaxHeadersForNonAsciiNames    =    os?    null    :    addPaxHeadersForNonAsciiNames(blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	103	None	replace
216	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true?  null  :  addPaxHeadersForNonAsciiNames(blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true?  null  :  addPaxHeadersForNonAsciiNames(blockSize,  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  true?  null  :  addPaxHeadersForNonAsciiNames(blockSize,  recordSize));	  this.addPaxHeadersForNonAsciiNames    =    os?    null    :    addPaxHeadersForNonAsciiNames(blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	103	None	replace
217	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  addPaxHeadersForNonAsciiNames(blockSize,  recordSize  +  1));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  addPaxHeadersForNonAsciiNames(blockSize,  recordSize  +  1));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os?  null  :  addPaxHeadersForNonAsciiNames(blockSize,  recordSize  +  1));	  this.addPaxHeadersForNonAsciiNames    =    os?    null    :    addPaxHeadersForNonAsciiNames(blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	103	None	replace
218	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  bufferSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  bufferSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  bufferSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
219	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  addPaxHeadersForNonAsciiNames  +  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  addPaxHeadersForNonAsciiNames  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  addPaxHeadersForNonAsciiNames  +  1;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames    +    1;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
220	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames  +  2;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames  +  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames  +  2;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames    +    1;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
221	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  false  :  addPaxHeadersForNonAsciiNames  +  1;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  false  :  addPaxHeadersForNonAsciiNames  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  false  :  addPaxHeadersForNonAsciiNames  +  1;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames    +    1;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
222	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  buffer.length  +  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  buffer.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  buffer.length  +  1);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
223	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  buffer.length  -  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  buffer.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  buffer.length  -  1);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
224	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  buffer.length  +  2);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  buffer.length  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  buffer.length  +  2);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
225	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  buffer.length  *  2);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  buffer.length  *  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  buffer.length  *  2);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
226	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  1);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	164	None	replace
227	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  0);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  0);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	164	None	replace
228	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  assemLen);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  assemLen);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	164	None	replace
229	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  false);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	164	None	replace
230	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  null);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  null);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	164	None	replace
231	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  true);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  true);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	164	None	replace
232	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  recordSize;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    recordSize;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
233	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  blockSize;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  blockSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  blockSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    recordSize;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
234	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  blockSize  :  recordSize;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  blockSize  :  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  blockSize  :  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    recordSize;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
235	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  false  :  recordSize;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  false  :  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  false  :  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    recordSize;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
236	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  true  :  recordSize;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  true  :  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  true  :  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    recordSize;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
237	[BUG]  [BUGGY]  this.recordSize  =  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  System.currentTimeMillis();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  System.currentTimeMillis();	  this.recordSize    =    0;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
238	[BUG]  [BUGGY]  this.recordSize  =  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  1;	  this.recordSize    =    0;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
239	[BUG]  [BUGGY]  this.recordSize  =  0L;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  0L;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  0L;	  this.recordSize    =    0;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
240	[BUG]  [BUGGY]  this.recordSize  =  RecordSize.MIN_VALUE;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  RecordSize.MIN_VALUE;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  RecordSize.MIN_VALUE;	  this.recordSize    =    0;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
241	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  recordSize.length  +  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  recordSize.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  recordSize.length  +  1);	  System.arraycopy(assemBuf,    0,    os,    0,    recordSize.length);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
242	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  blockSize.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  blockSize.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  blockSize.length);	  System.arraycopy(assemBuf,    0,    os,    0,    recordSize.length);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
243	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  recordSize.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  recordSize.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  1,  recordSize.length);	  System.arraycopy(assemBuf,    0,    os,    0,    recordSize.length);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
244	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize.length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize.length);	  System.arraycopy(assemBuf,    0,    os,    0,    recordSize.length);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
245	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  recordSize.length  -  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  recordSize.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  recordSize.length  -  1);	  System.arraycopy(assemBuf,    0,    os,    0,    recordSize.length);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
246	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  recordSize.length  +  2);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  recordSize.length  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  recordSize.length  +  2);	  System.arraycopy(assemBuf,    0,    os,    0,    recordSize.length);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
247	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  os.getVersion());  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  os.getVersion());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  os.getVersion());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getVersion());    	non-compiled	[CE]  <identifier>  expected	185	None	replace
248	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize.getVersion());  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize.getVersion());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize.getVersion());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getVersion());    	non-compiled	[CE]  <identifier>  expected	185	None	replace
249	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  blockSize.getVersion());  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  blockSize.getVersion());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  blockSize.getVersion());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getVersion());    	non-compiled	[CE]  <identifier>  expected	185	None	replace
250	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getVersion(),  blockSize);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getVersion(),  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getVersion(),  blockSize);	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getVersion());    	non-compiled	[CE]  <identifier>  expected	185	None	replace
251	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getVersion()  +  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getVersion()  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getVersion()  +  1);	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getVersion());    	non-compiled	[CE]  <identifier>  expected	185	None	replace
252	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  assemLen,  false);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  assemLen,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  assemLen,  false);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    false);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
253	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize,  false);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    false);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
254	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  BlockSize,  recordSize,  true);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  BlockSize,  recordSize,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  BlockSize,  recordSize,  true);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    false);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
255	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(32);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(32);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(32);	  this.buffer    =    new    TarBuffer(512);    	non-compiled	[CE]  <identifier>  expected	143	None	replace
256	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(128);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(128);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(128);	  this.buffer    =    new    TarBuffer(512);    	non-compiled	[CE]  <identifier>  expected	143	None	replace
257	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(60);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(60);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(60);	  this.buffer    =    new    TarBuffer(512);    	non-compiled	[CE]  <identifier>  expected	143	None	replace
258	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(512L);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(512L);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(512L);	  this.buffer    =    new    TarBuffer(512);    	non-compiled	[CE]  <identifier>  expected	143	None	replace
259	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  blockSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  1,  blockSize);	  System.arraycopy(assemBuf,    0,    os,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	189	None	replace
260	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  recordSize,  addPaxHeadersForNonAsciiNames);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  recordSize,  addPaxHeadersForNonAsciiNames);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  1,  recordSize,  addPaxHeadersForNonAsciiNames);	  System.arraycopy(assemBuf,    0,    os,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	189	None	replace
261	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  1,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    os,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	189	None	replace
262	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  2,  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  2,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  2,  recordSize);	  System.arraycopy(assemBuf,    0,    os,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	189	None	replace
263	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  1  ||  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  1  ||  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  1  ||  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    0    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	94	None	replace
264	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  0;	  this.addPaxHeadersForNonAsciiNames    =    0    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	94	None	replace
265	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0;  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0;  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  0;  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    0    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	94	None	replace
266	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0,  null);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0,  null);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    null);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
267	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  buffer);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  buffer);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  buffer);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    null);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
268	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemBuf,  null);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemBuf,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemBuf,  null);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    null);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
269	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;  }  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;  }	  if(addPaxHeadersForNonAsciiNames)    {    System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
270	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  null;  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  null;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  null;  }	  if(addPaxHeadersForNonAsciiNames)    {    System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
271	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  null;  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  null;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  null;  }	  if(addPaxHeadersForNonAsciiNames)    {    System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
272	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  buffer,  0,  recordSize);  buffer  =  os;  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  buffer,  0,  recordSize);  buffer  =  os;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  buffer,  0,  recordSize);  buffer  =  os;  }	  if(addPaxHeadersForNonAsciiNames)    {    System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
273	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  OutputStream(os,  blockSize,  recordSize,  null);  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  OutputStream(os,  blockSize,  recordSize,  null);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  OutputStream(os,  blockSize,  recordSize,  null);  }	  if(addPaxHeadersForNonAsciiNames)    {    System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
274	[BUG]  [BUGGY]  this.encoding  =  buffer.getRecordSize();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  buffer.getRecordSize();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  buffer.getRecordSize();	  this.encoding    =    os.getRecordSize();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
275	[BUG]  [BUGGY]  this.encoding  =  os.getRecordSize()  +  1;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getRecordSize()  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getRecordSize()  +  1;	  this.encoding    =    os.getRecordSize();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
276	[BUG]  [BUGGY]  this.encoding  =  os.getCurrentSize();  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getCurrentSize();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCurrentSize();	  this.encoding    =    os.getRecordSize();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
277	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    buffer.length    +    1);    	non-compiled	[CE]  <identifier>  expected	180	None	replace
278	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  buffer.length  +  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  buffer.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  buffer.length  +  1);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    buffer.length    +    1);    	non-compiled	[CE]  <identifier>  expected	180	None	replace
279	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  blockSize  +  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  blockSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  blockSize  +  1);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    buffer.length    +    1);    	non-compiled	[CE]  <identifier>  expected	180	None	replace
280	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  bufferSize  +  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  bufferSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  bufferSize  +  1);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    buffer.length    +    1);    	non-compiled	[CE]  <identifier>  expected	180	None	replace
281	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  LinkedHashMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  LinkedHashMap  <  String,Object>();	  this.addPaxHeadersForNonAsciiNames    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	187	None	replace
282	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  TreeMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  TreeMap  <  String,Object>();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  TreeMap  <  String,Object>();	  this.addPaxHeadersForNonAsciiNames    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	187	None	replace
283	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,Object>(recordSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,Object>(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,Object>(recordSize);	  this.addPaxHeadersForNonAsciiNames    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	187	None	replace
284	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  ArrayList  <  String,Object>();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  ArrayList  <  String,Object>();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  ArrayList  <  String,Object>();	  this.addPaxHeadersForNonAsciiNames    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	187	None	replace
285	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  ConcurrentHashMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  ConcurrentHashMap  <  String,Object>();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  ConcurrentHashMap  <  String,Object>();	  this.addPaxHeadersForNonAsciiNames    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	187	None	replace
286	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  ArrayHashMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  ArrayHashMap  <  String,Object>();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  ArrayHashMap  <  String,Object>();	  this.addPaxHeadersForNonAsciiNames    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	187	None	replace
287	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length    +    1);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
288	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  blockSize  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  blockSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  blockSize  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length    +    1);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
289	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  os.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  os.length  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length    +    1);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
290	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  os.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  os.length  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length    +    1);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
291	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(false);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(false);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(true);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
292	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(true,  false);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(true,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(true,  false);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(true);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
293	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(true,  true);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(true,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(true,  true);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(true);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
294	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(false,  true);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(false,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(false,  true);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(true);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
295	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(false,  false);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(false,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(false,  false);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(true);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
296	[BUG]  [BUGGY]  if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	169	None	replace
297	[BUG]  [BUGGY]  if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  else  {  buffer.write(assemBuf,  0,  assemLen);  }  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  else  {  buffer.write(assemBuf,  0,  assemLen);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  else  {  buffer.write(assemBuf,  0,  assemLen);  }	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	169	None	replace
298	[BUG]  [BUGGY]  if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	169	None	replace
299	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	169	None	replace
300	[BUG]  [BUGGY]  if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  else  {  buffer.close();  }	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	169	None	replace
301	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize  -  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize  -  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize  -  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
302	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  blockSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  blockSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
303	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
304	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  LinkedHashMap  <  String,String>();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  LinkedHashMap  <  String,String>();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  LinkedHashMap  <  String,String>();	  this.addPaxHeadersForNonAsciiNames    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
305	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,String>(recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,String>(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,String>(recordSize);	  this.addPaxHeadersForNonAsciiNames    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
306	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  TreeMap  <  String,String>();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  TreeMap  <  String,String>();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  TreeMap  <  String,String>();	  this.addPaxHeadersForNonAsciiNames    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
307	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  ArrayList  <  String,String>();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  ArrayList  <  String,String>();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  ArrayList  <  String,String>();	  this.addPaxHeadersForNonAsciiNames    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
308	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,Integer>();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,Integer>();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,Integer>();	  this.addPaxHeadersForNonAsciiNames    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
309	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  ConcurrentHashMap  <  String,String>();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  ConcurrentHashMap  <  String,String>();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  ConcurrentHashMap  <  String,String>();	  this.addPaxHeadersForNonAsciiNames    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
310	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(blockSize);	  this.assemLen    =    new    BigNumberMode(recordSize);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
311	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(recordSize  +  1);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(recordSize  +  1);	  this.assemLen    =    new    BigNumberMode(recordSize);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
312	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(recordSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(recordSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(recordSize,  recordSize);	  this.assemLen    =    new    BigNumberMode(recordSize);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
313	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(recordSize,  0);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(recordSize,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(recordSize,  0);	  this.assemLen    =    new    BigNumberMode(recordSize);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
314	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(recordSize  -  1);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(recordSize  -  1);	  this.assemLen    =    new    BigNumberMode(recordSize);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
315	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(recordSize  +  2);  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(recordSize  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(recordSize  +  2);	  this.assemLen    =    new    BigNumberMode(recordSize);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
316	[BUG]  [BUGGY]  this.recordSize  =  os.getRecordSize()  +  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  os.getRecordSize()  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  os.getRecordSize()  +  1;	  this.recordSize    =    os.getRecordSize();    	non-compiled	[CE]  <identifier>  expected	172	None	replace
317	[BUG]  [BUGGY]  this.recordSize  =  os.getRecordSize()  +  recordSize;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  os.getRecordSize()  +  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  os.getRecordSize()  +  recordSize;	  this.recordSize    =    os.getRecordSize();    	non-compiled	[CE]  <identifier>  expected	172	None	replace
318	[BUG]  [BUGGY]  this.recordSize  =  recordSize.getRecordSize();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  recordSize.getRecordSize();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize.getRecordSize();	  this.recordSize    =    os.getRecordSize();    	non-compiled	[CE]  <identifier>  expected	172	None	replace
319	[BUG]  [BUGGY]  this.recordSize  =  os.getRecordSize(recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  os.getRecordSize(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  os.getRecordSize(recordSize);	  this.recordSize    =    os.getRecordSize();    	non-compiled	[CE]  <identifier>  expected	172	None	replace
320	[BUG]  [BUGGY]  this.recordSize  =  os.getRecordSize()  +  blockSize;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  os.getRecordSize()  +  blockSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  os.getRecordSize()  +  blockSize;	  this.recordSize    =    os.getRecordSize();    	non-compiled	[CE]  <identifier>  expected	172	None	replace
321	[BUG]  [BUGGY]  this.recordSize  =  os.readLine();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  os.readLine();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  os.readLine();	  this.recordSize    =    os.getRecordSize();    	non-compiled	[CE]  <identifier>  expected	172	None	replace
322	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!super.addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!super.addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!super.addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    super.addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
323	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  ||  recordSize;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  ||  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  ||  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    super.addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
324	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(true);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(true);	  this.addPaxHeadersForNonAsciiNames    =    super.addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
325	[BUG]  [BUGGY]  this.assemLen  =  recordSize  /  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  recordSize  /  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize  /  1;	  this.assemLen    =    recordSize    +    1;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
326	[BUG]  [BUGGY]  this.assemLen  =  recordSize  *  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  recordSize  *  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize  *  1;	  this.assemLen    =    recordSize    +    1;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
327	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  +  blockSize);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  +  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine()  +  blockSize);	  this.buffer    =    new    TarBuffer(os.readLine()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
328	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  /  recordSize);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  /  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine()  /  recordSize);	  this.buffer    =    new    TarBuffer(os.readLine()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
329	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  blockSize  +  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  blockSize  +  recordSize);	  this.buffer    =    new    TarBuffer(os.readLine()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
330	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  *  recordSize);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  *  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine()  *  recordSize);	  this.buffer    =    new    TarBuffer(os.readLine()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
331	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  +  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  +  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine()  +  blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(os.readLine()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
332	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  -  recordSize);  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  -  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine()  -  recordSize);	  this.buffer    =    new    TarBuffer(os.readLine()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
333	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  1  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  1  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  1  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    0    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
334	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  buffer,  blockSize,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  buffer,  blockSize,  0,  recordSize);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
335	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  os,  recordSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(tarBuffer,  0,  os,  recordSize,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(tarBuffer,  0,  os,  recordSize,  0,  recordSize);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
336	[BUG]  [BUGGY]  System.arraycopy(blockSize,  0,  buffer,  recordSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(blockSize,  0,  buffer,  recordSize,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(blockSize,  0,  buffer,  recordSize,  0,  recordSize);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
337	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  buffer,  recordSize,  0,  blockSize);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
338	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  buffer,  0,  blockSize);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
339	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  buffer,  recordSize,  0,  recordSize  +  1);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
340	[BUG]  [BUGGY]  This.assemLen  =  os.readLine();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  This.assemLen  =  os.readLine();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	This.assemLen  =  os.readLine();	  this.assemLen    =    os.readLine()    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
341	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  *  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLine()  *  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine()  *  1;	  this.assemLen    =    os.readLine()    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
342	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    os;    	non-compiled	[CE]  <identifier>  expected	119	None	replace
343	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  2;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  2;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	134	None	replace
344	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)/  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)/  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)/  1;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	134	None	replace
345	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  4;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  4;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	134	None	replace
346	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  0;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  0;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	134	None	replace
347	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  3;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  3;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  3;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	134	None	replace
348	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  1L;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  1L;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  1L;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	134	None	replace
349	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out.readLine(),  os.readLine());  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(out.readLine(),  os.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(out.readLine(),  os.readLine());	  this.buffer    =    new    TarBuffer(os.readLine(),    out.readLine());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
350	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out.readLine(),  out.readLine());  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(out.readLine(),  out.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(out.readLine(),  out.readLine());	  this.buffer    =    new    TarBuffer(os.readLine(),    out.readLine());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
351	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  blockSize.readLine());  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  blockSize.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  blockSize.readLine());	  this.buffer    =    new    TarBuffer(os.readLine(),    out.readLine());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
352	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  out.readLine(),  recordSize);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  out.readLine(),  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  out.readLine(),  recordSize);	  this.buffer    =    new    TarBuffer(os.readLine(),    out.readLine());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
353	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.readLine(),  out.readLine());  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.readLine(),  out.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize.readLine(),  out.readLine());	  this.buffer    =    new    TarBuffer(os.readLine(),    out.readLine());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
354	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  false);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  false);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    addPaxHeadersForNonAsciiNames);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
355	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  true);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  true);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    addPaxHeadersForNonAsciiNames);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
356	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  encoding);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  encoding);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  encoding);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    addPaxHeadersForNonAsciiNames);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
357	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  null);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  null);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    addPaxHeadersForNonAsciiNames);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
358	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  removePaxHeadersForNonAsciiNames);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  removePaxHeadersForNonAsciiNames);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  removePaxHeadersForNonAsciiNames);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    addPaxHeadersForNonAsciiNames);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
359	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemBuf,  addPaxHeadersForNonAsciiNames);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemBuf,  addPaxHeadersForNonAsciiNames);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemBuf,  addPaxHeadersForNonAsciiNames);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    addPaxHeadersForNonAsciiNames);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
360	[BUG]  [BUGGY]  this.encoding  =  buffer.getZipEncoding();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  buffer.getZipEncoding();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  buffer.getZipEncoding();	  this.encoding    =    os.getZipEncoding();    	non-compiled	[CE]  <identifier>  expected	149	None	replace
361	[BUG]  [BUGGY]  this.encoding  =  os.getZipEncoding()  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getZipEncoding()  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getZipEncoding()  +  1;	  this.encoding    =    os.getZipEncoding();    	non-compiled	[CE]  <identifier>  expected	149	None	replace
362	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  }	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
363	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
364	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  }  else  {  buffer  =  new  TarBuffer();  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  }  else  {  buffer  =  new  TarBuffer();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  }  else  {  buffer  =  new  TarBuffer();  }	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
365	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
366	[BUG]  [BUGGY]  this.assemLen  =  blockSize  -  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  blockSize  -  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  blockSize  -  1;	  this.assemLen    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
367	[BUG]  [BUGGY]  this.assemLen  =  recordSize  -  2;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  recordSize  -  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize  -  2;	  this.assemLen    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
368	[BUG]  [BUGGY]  this.assemLen  =  recordSize  -  4;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  recordSize  -  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize  -  4;	  this.assemLen    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
369	[BUG]  [BUGGY]  this.assemLen  =  recordSize  -  1L;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  recordSize  -  1L;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize  -  1L;	  this.assemLen    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
370	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  recordSize  +  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  recordSize  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  recordSize  +  1;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    recordSize;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
371	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames  ||  recordSize;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames  ||  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames  ||  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    recordSize;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
372	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  null;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  null;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  null;	  this.addPaxHeadersForNonAsciiNames    =    true;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
373	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  |=  false;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  |=  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  |=  false;	  this.addPaxHeadersForNonAsciiNames    =    true;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
374	[BUG]  [BUGGY]  This.addPaxHeadersForNonAsciiNames  =  false;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  This.addPaxHeadersForNonAsciiNames  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	This.addPaxHeadersForNonAsciiNames  =  false;	  this.addPaxHeadersForNonAsciiNames    =    true;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
375	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  = " ";  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  = " ";  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  = " ";	  this.addPaxHeadersForNonAsciiNames    =    true;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
376	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    recordSize    	non-compiled	[CE]  <identifier>  expected	95	None	replace
377	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  recordSize  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  recordSize  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||  recordSize	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    recordSize    	non-compiled	[CE]  <identifier>  expected	95	None	replace
378	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  blockSize  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  blockSize  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  blockSize	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    recordSize    	non-compiled	[CE]  <identifier>  expected	95	None	replace
379	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  ||  recordSize  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  ||  recordSize  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  ||  recordSize	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    recordSize    	non-compiled	[CE]  <identifier>  expected	95	None	replace
380	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames  ||  recordSize  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames  ||  recordSize  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames  ||  recordSize	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    recordSize    	non-compiled	[CE]  <identifier>  expected	95	None	replace
381	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  ||  recordSize  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  ||  recordSize  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os  ||  recordSize	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    recordSize    	non-compiled	[CE]  <identifier>  expected	95	None	replace
382	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  recordSize);	  this.buffer    =    new    TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
383	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  0);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  0);	  this.buffer    =    new    TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
384	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  blockSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  blockSize);	  this.buffer    =    new    TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
385	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  bufferSize);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  bufferSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  bufferSize);	  this.buffer    =    new    TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
386	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  os);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  os);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  os);	  this.buffer    =    new    TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
387	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  true);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  true);	  this.buffer    =    new    TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
388	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  false);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  false);	  this.buffer    =    new    TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
389	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(currBytes);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(currBytes);	  this.assemLen    =    currBytes;    	non-compiled	[CE]  <identifier>  expected	186	None	replace
390	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(currBytes,  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(currBytes,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(currBytes,  recordSize);	  this.assemLen    =    currBytes;    	non-compiled	[CE]  <identifier>  expected	186	None	replace
391	[BUG]  [BUGGY]  this.assemLen  =  currBytes  +  recordSize;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  currBytes  +  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  currBytes  +  recordSize;	  this.assemLen    =    currBytes;    	non-compiled	[CE]  <identifier>  expected	186	None	replace
392	[BUG]  [BUGGY]  this.assemLen  =  currBytes  +  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  currBytes  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  currBytes  +  1;	  this.assemLen    =    currBytes;    	non-compiled	[CE]  <identifier>  expected	186	None	replace
393	[BUG]  [BUGGY]  this.assemLen  =  os.readUnsignedBytes();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readUnsignedBytes();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readUnsignedBytes();	  this.assemLen    =    os.readShort();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
394	[BUG]  [BUGGY]  this.assemLen  =  os.readUnsignedInt();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readUnsignedInt();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readUnsignedInt();	  this.assemLen    =    os.readShort();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
395	[BUG]  [BUGGY]  this.assemLen  =  os.readUnsignedByte();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readUnsignedByte();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readUnsignedByte();	  this.assemLen    =    os.readShort();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
396	[BUG]  [BUGGY]  this.assemLen  =  os.readUnsignedString();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readUnsignedString();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readUnsignedString();	  this.assemLen    =    os.readShort();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
397	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    removePaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	174	None	replace
398	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  fileSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  fileSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  fileSize);	  this.addPaxHeadersForNonAsciiNames    =    removePaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	174	None	replace
399	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(256,  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(256,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(256,  recordSize);	  this.buffer    =    new    TarBuffer(256);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
400	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(256L);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(256L);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(256L);	  this.buffer    =    new    TarBuffer(256);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
401	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(255);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(255);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(255);	  this.buffer    =    new    TarBuffer(256);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
402	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  blockSize);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  blockSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	171	None	replace
403	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	171	None	replace
404	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	171	None	replace
405	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordSize,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordSize,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordSize,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    blockSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	152	None	replace
406	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    blockSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	152	None	replace
407	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    blockSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	152	None	replace
408	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  &&  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  &&  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  true  &&  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    false    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	91	None	replace
409	[BUG]  [BUGGY]  This.addPaxHeadersForNonAsciiNames  =  false  ||  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  This.addPaxHeadersForNonAsciiNames  =  false  ||  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	This.addPaxHeadersForNonAsciiNames  =  false  ||  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    false    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	91	None	replace
410	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  ||!addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  ||!addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  true  ||!addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    false    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	91	None	replace
411	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  os);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  os);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  os);	  this.buffer    =    new    TarBuffer(new    FileOutputStream(blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
412	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  0);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  0);	  this.buffer    =    new    TarBuffer(new    FileOutputStream(blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
413	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  assemBuf);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  assemBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  assemBuf);	  this.buffer    =    new    TarBuffer(new    FileOutputStream(blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
414	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize  +  1));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize  +  1));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize  +  1));	  this.buffer    =    new    TarBuffer(new    FileOutputStream(blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
415	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  buffer);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  buffer);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  buffer);	  this.buffer    =    new    TarBuffer(new    FileOutputStream(blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
416	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  false);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  false);	  this.buffer    =    new    TarBuffer(new    FileOutputStream(blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
417	[BUG]  [BUGGY]  if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  }  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  }	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	168	None	replace
418	[BUG]  [BUGGY]  if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  }  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  }	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	168	None	replace
419	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	168	None	replace
420	[BUG]  [BUGGY]  this.assemLen  =  os.readBytes(recordSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readBytes(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readBytes(recordSize);	  this.assemLen    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
421	[BUG]  [BUGGY]  this.assemLen  =  os.readFully(recordSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readFully(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readFully(recordSize);	  this.assemLen    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
422	[BUG]  [BUGGY]  this.assemLen  =  os.readBytes();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readBytes();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readBytes();	  this.assemLen    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
423	[BUG]  [BUGGY]  this.assemLen  =  recordSize.readUTF();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  recordSize.readUTF();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize.readUTF();	  this.assemLen    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
424	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  1,  buffer.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  1,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  1,  buffer.length);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
425	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||!addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||!addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  ||!addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||!addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	123	None	replace
426	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  ||!addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  ||!addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false  ||!addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||!addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	123	None	replace
427	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&!addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&!addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&!addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||!addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	123	None	replace
428	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0  ||!addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  0  ||!addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  0  ||!addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||!addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	123	None	replace
429	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  ||!addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  ||!addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os  ||!addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||!addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	123	None	replace
430	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(null,  blockSize,  recordSize,  true);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(null,  blockSize,  recordSize,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(null,  blockSize,  recordSize,  true);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    true);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
431	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  BlockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  BlockSize,  recordSize,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  BlockSize,  recordSize,  false);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    true);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
432	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize  +  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(blockSize  +  recordSize);	  this.buffer    =    new    TarBuffer(blockSize);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
433	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize  -  recordSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize  -  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(blockSize  -  recordSize);	  this.buffer    =    new    TarBuffer(blockSize);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
434	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize  +  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(blockSize  +  1);	  this.buffer    =    new    TarBuffer(blockSize);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
435	[BUG]  [BUGGY]  this.encoding  =  os.getCharacterEncoding(recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getCharacterEncoding(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCharacterEncoding(recordSize);	  this.encoding    =    os.getCharacterEncoding();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
436	[BUG]  [BUGGY]  this.encoding  =  os.getCharacterEncoding(blockSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getCharacterEncoding(blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCharacterEncoding(blockSize);	  this.encoding    =    os.getCharacterEncoding();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
437	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
438	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  1,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
439	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  1);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  1);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
440	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  null);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  null);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
441	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  false);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
442	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	154	None	replace
443	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  addPaxHeadersForNonAsciiNames(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  addPaxHeadersForNonAsciiNames(blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os?  null  :  addPaxHeadersForNonAsciiNames(blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	154	None	replace
444	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  false  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  false  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  false  :  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	154	None	replace
445	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0,  null);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0,  null);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    null);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
446	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  null,  encoding);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  null,  encoding);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  null,  encoding);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    null);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
447	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
448	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
449	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
450	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  buffer.length  -  1);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  buffer.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  buffer.length  -  1);	  System.arraycopy(assemBuf,    0,    blockSize,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
451	[BUG]  [BUGGY]  this.encoding  =  currName.getEncoding();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  currName.getEncoding();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  currName.getEncoding();	  this.encoding    =    zipEncoding.getEncoding();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
452	[BUG]  [BUGGY]  this.encoding  =  os.getCurrentName();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getCurrentName();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCurrentName();	  this.encoding    =    zipEncoding.getEncoding();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
453	[BUG]  [BUGGY]  this.assemLen  =  os.readLine(blockSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLine(blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine(blockSize);	  this.assemLen    =    os.readLine(recordSize);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
454	[BUG]  [BUGGY]  this.assemLen  =  os.readLine(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLine(blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine(blockSize,  recordSize);	  this.assemLen    =    os.readLine(recordSize);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
455	[BUG]  [BUGGY]  this.assemLen  =  os.readLine(recordSize,  blockSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLine(recordSize,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine(recordSize,  blockSize);	  this.assemLen    =    os.readLine(recordSize);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
456	[BUG]  [BUGGY]  this.assemLen  =  os.readFully(blockSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readFully(blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readFully(blockSize);	  this.assemLen    =    os.readLine(recordSize);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
457	[BUG]  [BUGGY]  this.assemLen  =  recordSize  /  4;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  recordSize  /  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize  /  4;	  this.assemLen    =    recordSize    +    4;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
458	[BUG]  [BUGGY]  this.assemLen  =  recordSize  +  3;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  recordSize  +  3;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize  +  3;	  this.assemLen    =    recordSize    +    4;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
459	[BUG]  [BUGGY]  this.assemLen  =  recordSize  *  4;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  recordSize  *  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize  *  4;	  this.assemLen    =    recordSize    +    4;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
460	[BUG]  [BUGGY]  this.assemLen  =  recordSize  +  5;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  recordSize  +  5;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize  +  5;	  this.assemLen    =    recordSize    +    4;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
461	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  encoding);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  encoding);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  encoding);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
462	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT)+  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT)+  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT)+  1;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
463	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  null);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  null);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
464	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
465	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(blockSize,  recordSize  +  1);	  this.assemLen    =    new    BigNumberMode(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
466	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize,  0);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(blockSize,  recordSize,  0);	  this.assemLen    =    new    BigNumberMode(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
467	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize,  true);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(blockSize,  recordSize,  true);	  this.assemLen    =    new    BigNumberMode(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
468	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize,  null);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(blockSize,  recordSize,  null);	  this.assemLen    =    new    BigNumberMode(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
469	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(blockSize,  recordSize  -  1);	  this.assemLen    =    new    BigNumberMode(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
470	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(blockSize,  recordSize,  false);	  this.assemLen    =    new    BigNumberMode(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
471	[BUG]  [BUGGY]  This.addPaxHeadersForNonAsciiNames  =  true;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  This.addPaxHeadersForNonAsciiNames  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	This.addPaxHeadersForNonAsciiNames  =  true;	  this.addPaxHeadersForNonAsciiNames    =    false;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
472	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(recordSize,  blockSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(recordSize,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(recordSize,  blockSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(recordSize);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
473	[BUG]  [BUGGY]  this.recordSize  -=  blockSize;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  -=  blockSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  -=  blockSize;	  this.recordSize    -=    recordSize;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
474	[BUG]  [BUGGY]  this.recordSize  -=  recordSize  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  -=  recordSize  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  -=  recordSize  +  1;	  this.recordSize    -=    recordSize;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
475	[BUG]  [BUGGY]  this.recordSize  -=  recordSize  +  2;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  -=  recordSize  +  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  -=  recordSize  +  2;	  this.recordSize    -=    recordSize;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
476	[BUG]  [BUGGY]  this.recordSize  -=  blockSize  +  recordSize;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  -=  blockSize  +  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  -=  blockSize  +  recordSize;	  this.recordSize    -=    recordSize;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
477	[BUG]  [BUGGY]  this.recordSize  -=  recordSize  +  4;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  -=  recordSize  +  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  -=  recordSize  +  4;	  this.recordSize    -=    recordSize;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
478	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
479	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames;	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
480	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  this.addPaxHeadersForNonAsciiNames  =  true;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  this.addPaxHeadersForNonAsciiNames  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  this.addPaxHeadersForNonAsciiNames  =  true;	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
481	[BUG]  [BUGGY]  if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  }  else  {  buffer.close();  }	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
482	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize,  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize,  recordSize));	  this.buffer    =    new    TarBuffer(os.getBytes(blockSize));    	non-compiled	[CE]  <identifier>  expected	135	None	replace
483	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize  +  1));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize  +  1));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize  +  1));	  this.buffer    =    new    TarBuffer(os.getBytes(blockSize));    	non-compiled	[CE]  <identifier>  expected	135	None	replace
484	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize)+  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize)+  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize)+  1);	  this.buffer    =    new    TarBuffer(os.getBytes(blockSize));    	non-compiled	[CE]  <identifier>  expected	135	None	replace
485	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  blockSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  blockSize);	  this.buffer    =    new    TarBuffer(os.getBytes(blockSize));    	non-compiled	[CE]  <identifier>  expected	135	None	replace
486	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	179	None	replace
487	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	179	None	replace
488	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemLen);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemLen);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	179	None	replace
489	[BUG]  [BUGGY]  this.encoding  =  buffer.getTarEncoding();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  buffer.getTarEncoding();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  buffer.getTarEncoding();	  this.encoding    =    os.getTarEncoding();    	non-compiled	[CE]  <identifier>  expected	151	None	replace
490	[BUG]  [BUGGY]  this.encoding  =  os.getCurrentEncoding();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getCurrentEncoding();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCurrentEncoding();	  this.encoding    =    os.getTarEncoding();    	non-compiled	[CE]  <identifier>  expected	151	None	replace
491	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  os.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  buffer,  recordSize,  0,  os.length  +  1);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
492	[BUG]  [BUGGY]  System.arraycopy(os,  0,  os,  0,  recordSize.length);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  os,  0,  recordSize.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  os,  0,  recordSize.length);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
493	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  blockSize.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  blockSize.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  buffer,  recordSize,  0,  blockSize.length);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
494	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  blockSize,  0,  os.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  buffer,  blockSize,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  buffer,  blockSize,  0,  os.length);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
495	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  os.length  -  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  os.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  buffer,  recordSize,  0,  os.length  -  1);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
496	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.buffer,  recordSize,  0,  os.length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  this.buffer,  recordSize,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  this.buffer,  recordSize,  0,  os.length);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
497	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
498	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
499	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(blockSize);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(blockSize);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
500	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getRecordPaxHeadersForNonAsciiNames(os);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getRecordPaxHeadersForNonAsciiNames(os);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getRecordPaxHeadersForNonAsciiNames(os);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
501	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  fileSize);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  fileSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  fileSize);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
502	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  encoding);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  encoding);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  encoding);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
503	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 "),  recordSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 "),  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 "),  recordSize);	  this.buffer    =    new    TarBuffer(os.getBytes(   "UTF-8   "));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
504	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 ")+  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 ")+  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 ")+  1);	  this.buffer    =    new    TarBuffer(os.getBytes(   "UTF-8   "));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
505	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 "),  0);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 "),  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 "),  0);	  this.buffer    =    new    TarBuffer(os.getBytes(   "UTF-8   "));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
506	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize  +  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize  +  1);	  this.buffer    =    new    TarBuffer(0);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
507	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  assemBuf.length);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
508	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  assemBuf.length);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
509	[BUG]  [BUGGY]  os.copyCurrentStructure(assemBuf,  0,  buffer,  recordSize,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  os.copyCurrentStructure(assemBuf,  0,  buffer,  recordSize,  0,  assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	os.copyCurrentStructure(assemBuf,  0,  buffer,  recordSize,  0,  assemBuf.length);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
510	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  assemLen);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
511	[BUG]  [BUGGY]  this.assemLen  =  os.read();  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.read();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.read();	  this.assemLen    =    os.readFully();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
512	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(os.readLine(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
513	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  blockSize  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  blockSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  blockSize  +  1);	  this.buffer    =    new    TarBuffer(os.readLine(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
514	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  blockSize,  RecordSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  blockSize,  RecordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  blockSize,  RecordSize);	  this.buffer    =    new    TarBuffer(os.readLine(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
515	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    true    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
516	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  ||  removePaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  ||  removePaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false  ||  removePaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    true    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
517	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  BigIntegerMode);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  BigIntegerMode);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  BigIntegerMode);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    BigNumberMode);    	non-compiled	[CE]  <identifier>  expected	167	None	replace
518	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0,  BigNumberMode);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0,  BigNumberMode);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0,  BigNumberMode);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    BigNumberMode);    	non-compiled	[CE]  <identifier>  expected	167	None	replace
519	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  Null);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  Null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  Null);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    BigNumberMode);    	non-compiled	[CE]  <identifier>  expected	167	None	replace
520	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    false);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
521	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  BlockSize,  recordSize,  true);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  BlockSize,  recordSize,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  BlockSize,  recordSize,  true);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    false);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
522	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  blockSize;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  blockSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  blockSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    0    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	111	None	replace
523	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true?  0  :  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true?  0  :  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  true?  0  :  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    0    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	111	None	replace
524	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  1  :  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  1  :  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  1  :  1;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    0    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	111	None	replace
525	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false?  0  :  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false?  0  :  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false?  0  :  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    0    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	111	None	replace
526	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  1  :  0;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  1  :  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  1  :  0;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    0    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	111	None	replace
527	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  buffer  =  os;  }  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  buffer  =  os;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  buffer  =  os;  }	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    assemLen);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	166	None	replace
528	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;  }  else  {  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;  }  else  {  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;  }  else  {  addPaxHeadersForNonAsciiNames	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    assemLen);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	166	None	replace
529	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(),  blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(os.getBytes(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
530	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  blockSize  +  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(),  blockSize  +  recordSize);	  this.buffer    =    new    TarBuffer(os.getBytes(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
531	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  fileSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  fileSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(),  fileSize);	  this.buffer    =    new    TarBuffer(os.getBytes(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
532	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  2);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
533	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  4);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  4);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
534	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  3);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  3);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  3);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
535	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  5);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  5);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  5);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
536	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  /  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  /  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  /  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
537	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  recordSize  +  1);	  this.buffer    =    new    TarBuffer(os.readLine(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
538	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  false);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  false);	  this.buffer    =    new    TarBuffer(os.readLine(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
539	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  blockSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  blockSize);	  this.buffer    =    new    TarBuffer(os.readLine(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
540	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  true);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  true);	  this.buffer    =    new    TarBuffer(os.readLine(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
541	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  out.readLine());  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  out.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  out.readLine());	  this.buffer    =    new    TarBuffer(os.readLine(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
542	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
543	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  buffer.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  buffer.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  buffer.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
544	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.recordPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.recordPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.recordPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
545	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.findPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.findPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.findPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
546	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  null);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  null);	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
547	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  2);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  2);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
548	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  4);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  4);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
549	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  /  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  /  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  /  1);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
550	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  3);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  3);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  3);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
551	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames();	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    getPaxHeadersForNonAsciiNames();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
552	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  getPaxHeadersForNonAsciiNames()  :  null;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  getPaxHeadersForNonAsciiNames()  :  null;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  getPaxHeadersForNonAsciiNames()  :  null;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    getPaxHeadersForNonAsciiNames();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
553	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames?  null  :  getPaxHeadersForNonAsciiNames();  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames?  null  :  getPaxHeadersForNonAsciiNames();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames?  null  :  getPaxHeadersForNonAsciiNames();	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    getPaxHeadersForNonAsciiNames();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
554	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames?  null  :  getPaxHeadersForNonAsciiNames();  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames?  null  :  getPaxHeadersForNonAsciiNames();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames?  null  :  getPaxHeadersForNonAsciiNames();	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    getPaxHeadersForNonAsciiNames();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
555	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()?  null  :  getPaxHeadersForNonAsciiNames();  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()?  null  :  getPaxHeadersForNonAsciiNames();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()?  null  :  getPaxHeadersForNonAsciiNames();	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    getPaxHeadersForNonAsciiNames();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
556	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;  }	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
557	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize);  buffer  =  os;	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
558	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  ||  removePaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  ||  removePaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  true  ||  removePaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    false    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
559	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  ||!addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true  ||!addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  true  ||!addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    false    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
560	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  2);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  2);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
561	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  4);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  4);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
562	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  3);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  3);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  3);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
563	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  1L);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  1L);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  1L);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
564	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  blockSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(os,  blockSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
565	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  null);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  null);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
566	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0,  assemLen);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0,  assemLen);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
567	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemLen  +  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemLen  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemLen  +  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
568	[BUG]  [BUGGY]  this.assemLen  =  blockSize  +  recordSize;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  blockSize  +  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  blockSize  +  recordSize;	  this.assemLen    =    blockSize;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
569	[BUG]  [BUGGY]  this.assemLen  -=  recordSize;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  -=  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  -=  recordSize;	  this.assemLen    =    blockSize;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
570	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize,  recordSize);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize,  recordSize);	  this.buffer    =    new    TarBuffer(recordSize);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
571	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize,  0);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize,  0);	  this.buffer    =    new    TarBuffer(recordSize);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
572	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize  +  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize  +  recordSize);	  this.buffer    =    new    TarBuffer(recordSize);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
573	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  currName);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  currName);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    encoding);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
574	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  NON_ASCII);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  NON_ASCII);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  NON_ASCII);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    encoding);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
575	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  buffer);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  buffer);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  buffer);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    encoding);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
576	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  &&  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  &&  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false  &&  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	90	None	replace
577	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	90	None	replace
578	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	90	None	replace
579	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize);	  this.buffer    =    new    TarBuffer(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	165	None	replace
580	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize  -  recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize  -  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize  -  recordSize);	  this.buffer    =    new    TarBuffer(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	165	None	replace
581	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize  +  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize  +  recordSize);	  this.buffer    =    new    TarBuffer(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	165	None	replace
582	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize  /  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize  /  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize  /  recordSize);	  this.buffer    =    new    TarBuffer(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	165	None	replace
583	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen  +  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen  +  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
584	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  }  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  }	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
585	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  }	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
586	[BUG]  [BUGGY]  this.recordSize  =  new  int[recordSize];  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  new  int[recordSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  new  int[recordSize];	  this.recordSize    =    blockSize;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
587	[BUG]  [BUGGY]  this.encoding  =  buffer.getCharset();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  buffer.getCharset();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  buffer.getCharset();	  this.encoding    =    os.getCharset();    	non-compiled	[CE]  <identifier>  expected	150	None	replace
588	[BUG]  [BUGGY]  this.encoding  =  os.getCharset()  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getCharset()  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCharset()  +  1;	  this.encoding    =    os.getCharset();    	non-compiled	[CE]  <identifier>  expected	150	None	replace
589	[BUG]  [BUGGY]  this.encoding  =  os.getCharset(recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getCharset(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCharset(recordSize);	  this.encoding    =    os.getCharset();    	non-compiled	[CE]  <identifier>  expected	150	None	replace
590	[BUG]  [BUGGY]  this.assemLen  =  os.readBigNumber();  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readBigNumber();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readBigNumber();	  this.assemLen    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	159	None	replace
591	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize  +  recordSize));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize  +  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize  +  recordSize));	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize));    	non-compiled	[CE]  <identifier>  expected	97	None	replace
592	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize  -  recordSize));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize  -  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize  -  recordSize));	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize));    	non-compiled	[CE]  <identifier>  expected	97	None	replace
593	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.getBytes(os));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.getBytes(os));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize.getBytes(os));	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize));    	non-compiled	[CE]  <identifier>  expected	97	None	replace
594	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  1);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    0);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
595	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0,  false);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0,  false);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    0);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
596	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    removePaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	116	None	replace
597	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    removePaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	116	None	replace
598	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  removePaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  removePaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os?  null  :  removePaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    removePaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	116	None	replace
599	[BUG]  [BUGGY]  this.encoding  =  buffer.getName();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  buffer.getName();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  buffer.getName();	  this.encoding    =    os.getName();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
600	[BUG]  [BUGGY]  this.encoding  =  os.getCurrName();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getCurrName();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCurrName();	  this.encoding    =    os.getName();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
601	[BUG]  [BUGGY]  this.encoding  =  os.getRecordName();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getRecordName();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getRecordName();	  this.encoding    =    os.getName();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
602	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  fileSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  fileSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  fileSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
603	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  *  recordSize  +  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLine()  *  recordSize  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine()  *  recordSize  +  1;	  this.assemLen    =    os.readLine()    *    recordSize;    	non-compiled	[CE]  <identifier>  expected	120	None	replace
604	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  *  blockSize;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLine()  *  blockSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine()  *  blockSize;	  this.assemLen    =    os.readLine()    *    recordSize;    	non-compiled	[CE]  <identifier>  expected	120	None	replace
605	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0L);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0L);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0L);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    0);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
606	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    0);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
607	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0,  0);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0,  0);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    0);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
608	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  ArrayList  <  TarAsciiName>();  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  ArrayList  <  TarAsciiName>();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  ArrayList  <  TarAsciiName>();	  this.addPaxHeadersForNonAsciiNames    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	118	None	replace
609	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(currName),  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(currName),  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(currName),  recordSize);	  this.buffer    =    new    TarBuffer(os.getBytes(currName));    	non-compiled	[CE]  <identifier>  expected	137	None	replace
610	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(encoding));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(encoding));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(encoding));	  this.buffer    =    new    TarBuffer(os.getBytes(currName));    	non-compiled	[CE]  <identifier>  expected	137	None	replace
611	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(currName,  recordSize));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(currName,  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(currName,  recordSize));	  this.buffer    =    new    TarBuffer(os.getBytes(currName));    	non-compiled	[CE]  <identifier>  expected	137	None	replace
612	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(currSize));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(currSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(currSize));	  this.buffer    =    new    TarBuffer(os.getBytes(currName));    	non-compiled	[CE]  <identifier>  expected	137	None	replace
613	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  blockSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  blockSize);	  this.buffer    =    new    TarBuffer(os.getBytes(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
614	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  currBytes);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  currBytes);	  this.buffer    =    new    TarBuffer(os.getBytes(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
615	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  false);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  false);	  this.buffer    =    new    TarBuffer(os.getBytes(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
616	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize  +  1);	  this.buffer    =    new    TarBuffer(os.getBytes(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
617	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  true);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  true);	  this.buffer    =    new    TarBuffer(os.getBytes(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
618	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  assemLen);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  assemLen);	  this.buffer    =    new    TarBuffer(os.getBytes(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
619	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.readLine(),  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.readLine(),  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize.readLine(),  recordSize);	  this.buffer    =    new    TarBuffer(recordSize.readLine());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
620	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize.readLine());  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(blockSize.readLine());	  this.buffer    =    new    TarBuffer(recordSize.readLine());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
621	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.read());  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.read());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize.read());	  this.buffer    =    new    TarBuffer(recordSize.readLine());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
622	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.readLine()  +  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.readLine()  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize.readLine()  +  1);	  this.buffer    =    new    TarBuffer(recordSize.readLine());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
623	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  null);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  null);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
624	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  addPaxHeaders);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  addPaxHeaders);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  addPaxHeaders);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
625	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
626	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  true);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  true);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
627	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
628	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  encoding);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  encoding);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  encoding);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
629	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    os,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
630	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  currName  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  currName  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  currName  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    encoding    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
631	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  encoding;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  encoding;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  encoding;	  this.addPaxHeadersForNonAsciiNames    =    encoding    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
632	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  ||  removePaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  ||  removePaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding  ||  removePaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    encoding    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
633	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!this.addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!this.addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!this.addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
634	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  +  1;	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
635	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames(recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames(recordSize);	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
636	[BUG]  [BUGGY]  this.recordSize  =  recordSize  +  1L;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  recordSize  +  1L;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize  +  1L;	  this.recordSize    =    recordSize    +    1;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
637	[BUG]  [BUGGY]  this.recordSize  =  blockSize  +  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  blockSize  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  blockSize  +  1;	  this.recordSize    =    recordSize    +    1;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
638	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames();	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
639	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[recordSize];  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[recordSize];  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[recordSize];  }	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	148	None	replace
640	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[blockSize];  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[blockSize];  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[blockSize];  }	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	148	None	replace
641	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  new  byte[blockSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  new  byte[blockSize];	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	148	None	replace
642	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[0];  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[0];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[0];	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	148	None	replace
643	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  buffer  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  buffer  =  new  byte[blockSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  buffer  =  new  byte[blockSize];	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	147	None	replace
644	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  buffer  =  new  byte[recordSize];  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  buffer  =  new  byte[recordSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  buffer  =  new  byte[recordSize];	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	147	None	replace
645	[BUG]  [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  buffer  =  new  byte[blockSize];  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  buffer  =  new  byte[blockSize];  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(addPaxHeadersForNonAsciiNames)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  buffer  =  new  byte[blockSize];  }	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	147	None	replace
646	[BUG]  [BUGGY]  this.assemLen  =  os.readLineBytes(currSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLineBytes(currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLineBytes(currSize);	  this.assemLen    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
647	[BUG]  [BUGGY]  this.assemLen  =  os.readLine(recordSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLine(recordSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine(recordSize,  recordSize);	  this.assemLen    =    os.readLine(recordSize);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
648	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  blockSize;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  blockSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  blockSize;	  this.addPaxHeadersForNonAsciiNames    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	118	None	replace
649	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  recordSize  +  2);	  this.buffer    =    new    TarBuffer(os.readLine(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
650	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  0);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  0);	  this.buffer    =    new    TarBuffer(os.readLine(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
651	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os  +  recordSize);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os  +  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os  +  recordSize);	  this.buffer    =    new    TarBuffer(os);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
652	[BUG]  [BUGGY]  os.copyCurrentStructure(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  os.copyCurrentStructure(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	os.copyCurrentStructure(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
653	[BUG]  [BUGGY]  System.arraycopy(os,  0,  assemBuf,  0,  recordSize);  buffer  =  assemLen;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  assemBuf,  0,  recordSize);  buffer  =  assemLen;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  assemBuf,  0,  recordSize);  buffer  =  assemLen;	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
654	[BUG]  [BUGGY]  os.copyCurrentStructure(assemBuf,  0,  recordSize);  buffer  =  os;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  os.copyCurrentStructure(assemBuf,  0,  recordSize);  buffer  =  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	os.copyCurrentStructure(assemBuf,  0,  recordSize);  buffer  =  os;	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
655	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  1,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
656	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	179	None	replace
657	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  currName);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  currName);	  this.buffer    =    new    TarBuffer(os.getBytes(blockSize),    recordSize);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
658	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  null);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  null);	  this.buffer    =    new    TarBuffer(os.getBytes(blockSize),    recordSize);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
659	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize  +  1);	  this.buffer    =    new    TarBuffer(os.getBytes(blockSize),    recordSize);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
660	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  1));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  1));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  1));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
661	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  new  TarBuffer();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  new  TarBuffer();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  new  TarBuffer();	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
662	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
663	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,String>(8);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,String>(8);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,String>(8);	  this.addPaxHeadersForNonAsciiNames    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
664	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  ||  osForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  ||  osForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  ||  osForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    osForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	193	None	replace
665	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames  +  recordSize;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames  +  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames  +  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames    +    1;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
666	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames  +  1L;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames  +  1L;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames  +  1L;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames    +    1;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
667	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  recordSize  +  1;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  recordSize  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  recordSize  +  1;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames    +    1;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
668	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  recordSize);	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
669	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize);	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
670	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize,  true);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize,  true);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    true);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
671	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  blockSize,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  blockSize,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
672	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  os.length);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
673	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  blockSize,  recordSize);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
674	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER  +  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER  +  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER  +  recordSize);	  this.buffer    =    new    TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
675	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_BUFFER,  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_BUFFER,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_BUFFER,  recordSize);	  this.buffer    =    new    TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
676	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
677	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  -  1);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
678	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
679	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  1;	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
680	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getRecordPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getRecordPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getRecordPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
681	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    blockSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	152	None	replace
682	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  buffer.length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  buffer.length);	  System.arraycopy(assemBuf,    0,    blockSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	152	None	replace
683	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  +  BlockSize;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLine()  +  BlockSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine()  +  BlockSize;	  this.assemLen    =    os.readLine()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
684	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
685	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  os.length  +  2);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  os.length  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  buffer,  recordSize,  0,  os.length  +  2);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
686	[BUG]  [BUGGY]  System.arraycopy(os,  0,  os,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  os,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  os,  0,  recordSize);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
687	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  insertPaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  insertPaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  insertPaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    insertPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	161	None	replace
688	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  insertPaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames  +  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  insertPaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  insertPaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames  +  1;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    insertPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	161	None	replace
689	[BUG]  [BUGGY]  System.arraycopy(tarBuffer,  0,  buffer,  recordSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(tarBuffer,  0,  buffer,  recordSize,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(tarBuffer,  0,  buffer,  recordSize,  0,  recordSize);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
690	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  buffer,  recordSize,  0,  recordSize  -  1);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
691	[BUG]  [BUGGY]  this.recordSize  =  recordSize  +  0;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  recordSize  +  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize  +  0;	  this.recordSize    =    recordSize    +    2;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
692	[BUG]  [BUGGY]  this.recordSize  -=  recordSize  +  8;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  -=  recordSize  +  8;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  -=  recordSize  +  8;	  this.recordSize    -=    recordSize;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
693	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  &&  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  &&  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding  &&  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    encoding    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
694	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding;	  this.addPaxHeadersForNonAsciiNames    =    encoding    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
695	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  ||  buffer.addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  ||  buffer.addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding  ||  buffer.addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    encoding    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
696	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  new  byte[recordSize];  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  new  byte[recordSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  new  byte[recordSize];	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	148	None	replace
697	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[recordSize];  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[recordSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[recordSize];	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	148	None	replace
698	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[blockSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[blockSize];	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	148	None	replace
699	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode();	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
700	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  System.currentTimeMillis()  -  recordSize;	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
701	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffers,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffers,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffers,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    blockSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
702	[BUG]  [BUGGY]  this.encoding  =  os.getRecordSize()  +  recordSize;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getRecordSize()  +  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getRecordSize()  +  recordSize;	  this.encoding    =    os.getRecordSize();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
703	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    0    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	102	None	replace
704	[BUG]  [BUGGY]  this.assemLen  =  os.readNull();  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readNull();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readNull();	  this.assemLen    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	159	None	replace
705	[BUG]  [BUGGY]  this.assemLen  =  os.readFloat();  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readFloat();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readFloat();	  this.assemLen    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	159	None	replace
706	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(true,  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(true,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(true,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(true);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
707	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!recordSize;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!recordSize;	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
708	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!updatePaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!updatePaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!updatePaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
709	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(blockSize  +  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(blockSize  +  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(blockSize);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
710	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  *  recordSize  -  1);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  *  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  *  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
711	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize.length);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize.length);	  System.arraycopy(assemBuf,    0,    os,    0,    recordSize.length);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
712	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  recordSize.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  recordSize.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  recordSize.length);	  System.arraycopy(assemBuf,    0,    os,    0,    recordSize.length);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
713	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  recordSize.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  recordSize.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  recordSize.length);	  System.arraycopy(assemBuf,    0,    os,    0,    recordSize.length);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
714	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemBuf);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemBuf);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    null);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
715	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length    +    1);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
716	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  encoding,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  encoding,  TarBuffer.DEFAULT);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  encoding,  TarBuffer.DEFAULT);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    encoding);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
717	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  recordSize,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  recordSize,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  recordSize,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
718	[BUG]  [BUGGY]  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
719	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNon  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNon  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  ||  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNon	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
720	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine()  -  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine()  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine()  -  1);	  this.buffer    =    new    TarBuffer(os.readLine(),    os.readLine());    	non-compiled	[CE]  <identifier>  expected	192	None	replace
721	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true,  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true,  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  true,  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    false    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	91	None	replace
722	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize);  buffer  =  assemLen;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize);  buffer  =  assemLen;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize);  buffer  =  assemLen;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    assemLen);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	166	None	replace
723	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  buffer  =  os;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  buffer  =  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  buffer  =  os;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    assemLen);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	166	None	replace
724	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  0);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  0);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
725	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  1,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	171	None	replace
726	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  recordSize,  recordSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  recordSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  recordSize,  recordSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	171	None	replace
727	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.removePaxHeadersForNonAsciiNames(os);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.removePaxHeadersForNonAsciiNames(os);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.removePaxHeadersForNonAsciiNames(os);	  this.addPaxHeadersForNonAsciiNames    =    removePaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	174	None	replace
728	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  recalculatePaxHeadersForNonAsciiNames(os);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  recalculatePaxHeadersForNonAsciiNames(os);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  recalculatePaxHeadersForNonAsciiNames(os);	  this.addPaxHeadersForNonAsciiNames    =    removePaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	174	None	replace
729	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  +  recordSize;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  +  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  +  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    super.addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
730	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	154	None	replace
731	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	154	None	replace
732	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(recordSize,  blockSize);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(recordSize,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(recordSize,  blockSize);	  this.assemLen    =    new    BigNumberMode(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
733	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(blockSize,  recordSize  +  2);	  this.assemLen    =    new    BigNumberMode(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
734	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize)+  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(blockSize,  recordSize)+  1;	  this.assemLen    =    new    BigNumberMode(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
735	[BUG]  [BUGGY]  this.recordSize  =  os.getRecordSize()  *  recordSize;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  os.getRecordSize()  *  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  os.getRecordSize()  *  recordSize;	  this.recordSize    =    os.getRecordSize();    	non-compiled	[CE]  <identifier>  expected	172	None	replace
736	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    bufferSize,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
737	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  assemBuf.length);	  System.arraycopy(assemBuf,    0,    bufferSize,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
738	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordSize,  0,  bufferSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordSize,  0,  bufferSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordSize,  0,  bufferSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    bufferSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
739	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  bufferSize,  recordSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    bufferSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
740	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getUpperBound());  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getUpperBound());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getUpperBound());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getVersion());    	non-compiled	[CE]  <identifier>  expected	185	None	replace
741	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getVersion(),  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getVersion(),  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getVersion(),  recordSize);	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getVersion());    	non-compiled	[CE]  <identifier>  expected	185	None	replace
742	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getAbsolutePax());  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getAbsolutePax());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getAbsolutePax());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getVersion());    	non-compiled	[CE]  <identifier>  expected	185	None	replace
743	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(length),  os.getCharacterEncoding());  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(length),  os.getCharacterEncoding());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(length),  os.getCharacterEncoding());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterEncoding());    	non-compiled	[CE]  <identifier>  expected	183	None	replace
744	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(currName),  os.getCharacterEncoding());  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(currName),  os.getCharacterEncoding());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(currName),  os.getCharacterEncoding());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterEncoding());    	non-compiled	[CE]  <identifier>  expected	183	None	replace
745	[BUG]  [BUGGY]  this.encoding  =  os.getCharacters(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getCharacters(blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCharacters(blockSize,  recordSize);	  this.encoding    =    os.getCharacters();    	non-compiled	[CE]  <identifier>  expected	182	None	replace
746	[BUG]  [BUGGY]  System.arraycopy(assemBuffer,  0,  buffer,  recordSize,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuffer,  0,  buffer,  recordSize,  0,  assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuffer,  0,  buffer,  recordSize,  0,  assemBuf.length);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
747	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  this.assemBuf.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  this.assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  recordSize,  0,  this.assemBuf.length);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
748	[BUG]  [BUGGY]  System.arraycopy(os,  0,  recordSize,  buffer,  recordSize,  0,  os.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  recordSize,  buffer,  recordSize,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  recordSize,  buffer,  recordSize,  0,  os.length);	  System.arraycopy(assemBuf,    0,    os,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	191	None	replace
749	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemSize);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  assemSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
750	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemSize);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  assemSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
751	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,Object>(8);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,Object>(8);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  HashMap  <  String,Object>(8);	  this.addPaxHeadersForNonAsciiNames    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	187	None	replace
752	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  ||  recordSize;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  ||  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os  ||  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    recordSize;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
753	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  buffer,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  buffer,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(this.assemBuf,  0,  buffer,  0,  recordSize);	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
754	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  os,  0,  recordSize);  buffer  =  os;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(this.assemBuf,  0,  os,  0,  recordSize);  buffer  =  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(this.assemBuf,  0,  os,  0,  recordSize);  buffer  =  os;	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
755	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  *  recordSize  -  1);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  *  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  *  recordSize  -  1);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
756	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(recordSize);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
757	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(null);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(null);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
758	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames(os,  recordSize,  blockSize  +  1));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames(os,  recordSize,  blockSize  +  1));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  addPaxHeadersForNonAsciiNames(os,  recordSize,  blockSize  +  1));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    +    1));    	non-compiled	[CE]  <identifier>  expected	105	None	replace
759	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    +    1));    	non-compiled	[CE]  <identifier>  expected	105	None	replace
760	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	169	None	replace
761	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordSize,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordSize,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordSize,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	169	None	replace
762	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  assemBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  assemBuf,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  assemBuf,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	169	None	replace
763	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(buff.readLine());  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(buff.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(buff.readLine());	  this.buffer    =    new    TarBuffer(os.readLine()    -    1);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
764	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize,  os);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize,  os);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize,  os);	  this.buffer    =    new    TarBuffer(recordSize);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
765	[BUG]  [BUGGY]  this.recordSize  =  recordSize  *  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  recordSize  *  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  recordSize  *  1;	  this.recordSize    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
766	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames()  &&  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames()  &&  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames()  &&  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
767	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize  >  0?  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize):  null;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize  >  0?  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize):  null;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize  >  0?  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize):  null;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
768	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize  >  0  &&  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize  >  0  &&  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize  >  0  &&  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
769	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(null,  blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(null,  blockSize,  recordSize,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(null,  blockSize,  recordSize,  false);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    false);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
770	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize  -  1);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	164	None	replace
771	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize,  blockSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize,  blockSize);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	164	None	replace
772	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  bufferSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  bufferSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  bufferSize);	  this.buffer    =    new    TarBuffer(os.readLine(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
773	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.readLine(),  blockSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.readLine(),  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize.readLine(),  blockSize);	  this.buffer    =    new    TarBuffer(os.readLine(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
774	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  bufferSize,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    bufferSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
775	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  1,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  bufferSize,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    bufferSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
776	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.removePaxHeadersForNonAsciiNames();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.removePaxHeadersForNonAsciiNames();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.removePaxHeadersForNonAsciiNames();	  this.addPaxHeadersForNonAsciiNames    =    removePaxHeadersForNonAsciiNames();    	non-compiled	[CE]  <identifier>  expected	176	None	replace
777	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  _removePaxHeadersForNonAsciiNames();  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  _removePaxHeadersForNonAsciiNames();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  _removePaxHeadersForNonAsciiNames();	  this.addPaxHeadersForNonAsciiNames    =    removePaxHeadersForNonAsciiNames();    	non-compiled	[CE]  <identifier>  expected	176	None	replace
778	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.readFully());  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.readFully());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize.readFully());	  this.buffer    =    new    TarBuffer(recordSize.readLine());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
779	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.toByteArray());  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.toByteArray());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize.toByteArray());	  this.buffer    =    new    TarBuffer(recordSize.readLine());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
780	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.prependPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.prependPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.prependPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
781	[BUG]  [BUGGY]  this.recordSize  =  RecordSize.DEFAULT;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  RecordSize.DEFAULT;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  RecordSize.DEFAULT;	  this.recordSize    =    0;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
782	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  4);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  4);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
783	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  currName);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  currName);	  this.buffer    =    new    TarBuffer(os.getBytes(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
784	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  0);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  0);	  this.buffer    =    new    TarBuffer(os.getBytes(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
785	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.UTF8);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.UTF8);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.UTF8);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    encoding);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
786	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	90	None	replace
787	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  isEnabled  &&  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  isEnabled  &&  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  isEnabled  &&  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	90	None	replace
788	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(4);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(4);	  this.buffer    =    new    TarBuffer(0);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
789	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(1);	  this.buffer    =    new    TarBuffer(0);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
790	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  &&  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
791	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
792	[BUG]  [BUGGY]  System.arraycopy(os,  0,  blockSize,  recordSize,  0,  os.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  blockSize,  recordSize,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  blockSize,  recordSize,  0,  os.length);	  System.arraycopy(os,    0,    assemBuf,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	190	None	replace
793	[BUG]  [BUGGY]  System.arraycopy(os,  0,  assemBuf,  recordSize,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  assemBuf,  recordSize,  0,  os.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  assemBuf,  recordSize,  0,  os.length  +  1);	  System.arraycopy(os,    0,    assemBuf,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	190	None	replace
794	[BUG]  [BUGGY]  this.encoding  =  os.getZeroEncoding();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getZeroEncoding();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getZeroEncoding();	  this.encoding    =    os.getTarEncoding();    	non-compiled	[CE]  <identifier>  expected	151	None	replace
795	[BUG]  [BUGGY]  this.encoding  =  os.getTarEncoding(blockSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getTarEncoding(blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getTarEncoding(blockSize);	  this.encoding    =    os.getTarEncoding();    	non-compiled	[CE]  <identifier>  expected	151	None	replace
796	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(recordSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(recordSize  +  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(recordSize  +  recordSize);	  this.assemLen    =    new    BigNumberMode(recordSize);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
797	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out.read(),  os.readLine());  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(out.read(),  os.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(out.read(),  os.readLine());	  this.buffer    =    new    TarBuffer(os.readLine(),    out.readLine());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
798	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  *  recordSize  +  recordSize;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLine()  *  recordSize  +  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine()  *  recordSize  +  recordSize;	  this.assemLen    =    os.readLine()    *    recordSize;    	non-compiled	[CE]  <identifier>  expected	120	None	replace
799	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removedPaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removedPaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removedPaxHeadersForNonAsciiNames?  null  :  removePaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    removePaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	116	None	replace
800	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  replacePaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  replacePaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  replacePaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    removePaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	116	None	replace
801	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.removePaxHeadersForNonAsciiNames(recordSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.removePaxHeadersForNonAsciiNames(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.removePaxHeadersForNonAsciiNames(recordSize);	  this.addPaxHeadersForNonAsciiNames    =    removePaxHeadersForNonAsciiNames(recordSize);    	non-compiled	[CE]  <identifier>  expected	175	None	replace
802	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(recordSize,  os);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(recordSize,  os);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(recordSize,  os);	  this.addPaxHeadersForNonAsciiNames    =    removePaxHeadersForNonAsciiNames(recordSize);    	non-compiled	[CE]  <identifier>  expected	175	None	replace
803	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames(true);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames(true);	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	177	None	replace
804	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(recordSize);	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	177	None	replace
805	[BUG]  [BUGGY]  this.assemLen  =  os.readFileFromBuffer();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readFileFromBuffer();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readFileFromBuffer();	  this.assemLen    =    os.readFile();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
806	[BUG]  [BUGGY]  System.arraycopy(os,  0,  recordBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  recordBuf,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  recordBuf,  0,  os.length);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	188	None	replace
807	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  buffer.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  buffer.length);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
808	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  0,  os.length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  bufferSize,  0,  os.length);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
809	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  blockSize,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  bufferSize,  blockSize,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
810	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  ||!addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  ||!addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false  ||!addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    true    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
811	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  recordSize);	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterMode());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
812	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(currSize),  os.getCharacterMode());  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(currSize),  os.getCharacterMode());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(currSize),  os.getCharacterMode());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterMode());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
813	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getDelimiterMode());  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getDelimiterMode());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getDelimiterMode());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterMode());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
814	[BUG]  [BUGGY]  this.encoding  =  os.getTarName();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getTarName();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getTarName();	  this.encoding    =    os.getName();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
815	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  recordSize  ||  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  recordSize  ||  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  recordSize  ||  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    recordSize    	non-compiled	[CE]  <identifier>  expected	95	None	replace
816	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  ||  recordSize  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  ||  recordSize  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  ||  recordSize	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    recordSize    	non-compiled	[CE]  <identifier>  expected	95	None	replace
817	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  &&  recordSize  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  &&  recordSize  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  &&  recordSize	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    recordSize    	non-compiled	[CE]  <identifier>  expected	95	None	replace
818	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordSize,  blockSize,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordSize,  blockSize,  0,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordSize,  blockSize,  0,  buffer.length);	  System.arraycopy(assemBuf,    0,    blockSize,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
819	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 ")+  recordSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 ")+  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 ")+  recordSize);	  this.buffer    =    new    TarBuffer(os.getBytes(   "UTF-8   "));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
820	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 ")),  recordSize);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 ")),  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 ")),  recordSize);	  this.buffer    =    new    TarBuffer(os.getBytes(   "UTF-8   "));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
821	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 ")+  File.separatorChar  +  recordSize);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 ")+  File.separatorChar  +  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes( "UTF-8 ")+  File.separatorChar  +  recordSize);	  this.buffer    =    new    TarBuffer(os.getBytes(   "UTF-8   "));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
822	[BUG]  [BUGGY]  this.assemLen  =  os.ReadLine();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.ReadLine();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.ReadLine();	  this.assemLen    =    os.readLine()    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
823	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT  +  1);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT  +  1);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
824	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_COLLECTION);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_COLLECTION);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_COLLECTION);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
825	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  out);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  out);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize),  out);	  this.buffer    =    new    TarBuffer(new    FileOutputStream(blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
826	[BUG]  [BUGGY]  this.assemLen  =  new  longFileMode(currBytes);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  longFileMode(currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  longFileMode(currBytes);	  this.assemLen    =    currBytes;    	non-compiled	[CE]  <identifier>  expected	186	None	replace
827	[BUG]  [BUGGY]  this.assemLen  =  new  longFileMode;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  longFileMode;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  longFileMode;	  this.assemLen    =    currBytes;    	non-compiled	[CE]  <identifier>  expected	186	None	replace
828	[BUG]  [BUGGY]  this.assemLen  =  currSize;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  currSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  currSize;	  this.assemLen    =    currBytes;    	non-compiled	[CE]  <identifier>  expected	186	None	replace
829	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(recordSize,  os);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(recordSize,  os);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(recordSize,  os);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(recordSize);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
830	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  os.length);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  bufferSize,  recordSize,  0,  os.length);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
831	[BUG]  [BUGGY]  this.encoding  =  os.toUTC();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.toUTC();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.toUTC();	  this.encoding    =    os.toString();    	non-compiled	[CE]  <identifier>  expected	181	None	replace
832	[BUG]  [BUGGY]  this.encoding  =  os.toURI();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.toURI();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.toURI();	  this.encoding    =    os.toString();    	non-compiled	[CE]  <identifier>  expected	181	None	replace
833	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(null,  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(null,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(null,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(null);    	non-compiled	[CE]  <identifier>  expected	155	None	replace
834	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  buffer.length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  buffer.length);	  System.arraycopy(assemBuf,    0,    os,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
835	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  getPaxHeadersForNonAsciiNames();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  getPaxHeadersForNonAsciiNames();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os?  null  :  getPaxHeadersForNonAsciiNames();	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    getPaxHeadersForNonAsciiNames();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
836	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  getRecordPaxHeadersForNonAsciiNames();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  getRecordPaxHeadersForNonAsciiNames();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  getRecordPaxHeadersForNonAsciiNames();	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    getPaxHeadersForNonAsciiNames();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
837	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  +  assemBuf);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  +  assemBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine()  +  assemBuf);	  this.buffer    =    new    TarBuffer(os.readLine()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
838	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length    -    1);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
839	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  os.length  -  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  os.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  os.length  -  1);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length    -    1);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
840	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  0);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  0);	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize));    	non-compiled	[CE]  <identifier>  expected	97	None	replace
841	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false,  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false,  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false,  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    true?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
842	[BUG]  [BUGGY]  this.assemLen  =  os.readUTF(recordSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readUTF(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readUTF(recordSize);	  this.assemLen    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
843	[BUG]  [BUGGY]  this.assemLen  =  recordSize  +  0;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  recordSize  +  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  recordSize  +  0;	  this.assemLen    =    recordSize    +    1;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
844	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.toByteArray()  +  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.toByteArray()  +  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.toByteArray()  +  recordSize);	  this.buffer    =    new    TarBuffer(os.toByteArray());    	non-compiled	[CE]  <identifier>  expected	99	None	replace
845	[BUG]  [BUGGY]  this.encoding  =  os.getCurrentSiblingEncoding();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getCurrentSiblingEncoding();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCurrentSiblingEncoding();	  this.encoding    =    os.getZipEncoding();    	non-compiled	[CE]  <identifier>  expected	149	None	replace
846	[BUG]  [BUGGY]  this.encoding  =  os.getCurrentSegment();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getCurrentSegment();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCurrentSegment();	  this.encoding    =    os.getZipEncoding();    	non-compiled	[CE]  <identifier>  expected	149	None	replace
847	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  buffer.length  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  buffer.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  buffer.length  +  1);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    buffer.length    +    1);    	non-compiled	[CE]  <identifier>  expected	180	None	replace
848	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffers,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffers,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffers,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    buffer.length    +    1);    	non-compiled	[CE]  <identifier>  expected	180	None	replace
849	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  ||!addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding  ||!addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding  ||!addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||!addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	123	None	replace
850	[BUG]  [BUGGY]  this.encoding  =  buffer.getChars(0,  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  buffer.getChars(0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  buffer.getChars(0,  recordSize);	  this.encoding    =    buffer.getEncoding();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
851	[BUG]  [BUGGY]  this.encoding  =  os.getSurrogate();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getSurrogate();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getSurrogate();	  this.encoding    =    buffer.getEncoding();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
852	[BUG]  [BUGGY]  this.encoding  =  buffer.getEncoding(currName);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  buffer.getEncoding(currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  buffer.getEncoding(currName);	  this.encoding    =    buffer.getEncoding();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
853	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  5);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  5);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  5);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
854	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  recordSize,  0);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  recordSize,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  recordSize,  0);	  this.buffer    =    new    TarBuffer(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	165	None	replace
855	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  recordSize,  assemBuf);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  recordSize,  assemBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  recordSize,  assemBuf);	  this.buffer    =    new    TarBuffer(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	165	None	replace
856	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  recordSize  +  1);	  this.buffer    =    new    TarBuffer(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	165	None	replace
857	[BUG]  [BUGGY]  this.encoding  =  os.getSurrogate().getEncoding();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getSurrogate().getEncoding();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getSurrogate().getEncoding();	  this.encoding    =    zipEncoding.getEncoding();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
858	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  1,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    os,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	189	None	replace
859	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  &&  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  &&  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os  &&  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    os    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	124	None	replace
860	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  blockSize  ||  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  blockSize  ||  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  blockSize  ||  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    os    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	124	None	replace
861	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(true,  recordSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(true,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(true,  recordSize);	  this.buffer    =    new    TarBuffer(true);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
862	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(null);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(null);	  this.buffer    =    new    TarBuffer(true);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
863	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(512,  recordSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(512,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(512,  recordSize);	  this.buffer    =    new    TarBuffer(512);    	non-compiled	[CE]  <identifier>  expected	143	None	replace
864	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  new  byte[blockSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  buffer  =  new  byte[blockSize];	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	147	None	replace
865	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(null,  blockSize,  recordSize,  true);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(null,  blockSize,  recordSize,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(null,  blockSize,  recordSize,  true);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    true);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
866	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  &&  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  &&  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os  &&  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    os    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	158	None	replace
867	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  blockSize  ||  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  blockSize  ||  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  blockSize  ||  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    os    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	158	None	replace
868	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  0,  assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  buffer,  0,  assemBuf.length);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
869	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemBuf.length);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
870	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(null);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(null);	  this.addPaxHeadersForNonAsciiNames    =    super.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	178	None	replace
871	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    super.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	178	None	replace
872	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  recordSize;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os?  null  :  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    recordSize;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
873	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames?  null  :  recordSize;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames?  null  :  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames?  null  :  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    recordSize;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
874	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  recordSize;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  recordSize;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    recordSize;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
875	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  buffer.length);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
876	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  buffer.length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  buffer.length);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
877	[BUG]  [BUGGY]  this.addPaxHeadersForNonceAsciiNames  =  false;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonceAsciiNames  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonceAsciiNames  =  false;	  this.addPaxHeadersForNonAsciiNames    =    true;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
878	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  1;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    0    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	111	None	replace
879	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0L);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0L);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  0L);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    0);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
880	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemSize);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	179	None	replace
881	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  +  1));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    +    1));    	non-compiled	[CE]  <identifier>  expected	105	None	replace
882	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine(),  os.readLine());  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine(),  os.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine(),  os.readLine());	  this.buffer    =    new    TarBuffer(os.readLine(),    os.readLine());    	non-compiled	[CE]  <identifier>  expected	192	None	replace
883	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine()  ||  os.readLine());  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine()  ||  os.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  os.readLine()  ||  os.readLine());	  this.buffer    =    new    TarBuffer(os.readLine(),    os.readLine());    	non-compiled	[CE]  <identifier>  expected	192	None	replace
884	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  1,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  1,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    os,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	189	None	replace
885	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  os.toString();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  os.toString();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  os.toString();	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    recordSize;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
886	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  os.toByteArray();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  os.toByteArray();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  os.toByteArray();	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    recordSize;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
887	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  os.getIntValue();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  os.getIntValue();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  os.getIntValue();	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    recordSize;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
888	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  os.readLine();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  os.readLine();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  os.readLine();	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    recordSize;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
889	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  os;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  os;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    recordSize;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
890	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  recordSize.length);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  recordSize.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  recordSize.length);	  System.arraycopy(assemBuf,    0,    os,    0,    recordSize.length);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
891	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize.length);	  System.arraycopy(assemBuf,    0,    os,    0,    recordSize.length);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
892	[BUG]  [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize,  bigNumberMode);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  BigNumberMode(blockSize,  recordSize,  bigNumberMode);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  BigNumberMode(blockSize,  recordSize,  bigNumberMode);	  this.assemLen    =    new    BigNumberMode(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
893	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  os.length  -  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  os.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  0,  os.length  -  1);	  System.arraycopy(assemBuf,    0,    buffer,    recordSize,    0,    os.length    -    1);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
894	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  +  unitSize;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLine()  +  unitSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine()  +  unitSize;	  this.assemLen    =    os.readLine()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
895	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(512,  512);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(512,  512);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(512,  512);	  this.buffer    =    new    TarBuffer(512);    	non-compiled	[CE]  <identifier>  expected	143	None	replace
896	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  1,  os.length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  recordSize,  1,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  recordSize,  1,  os.length);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	188	None	replace
897	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  recordSize);	  System.arraycopy(assemBuf,    0,    bufferSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
898	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  false,  null);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  false,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  false,  null);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    false);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
899	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  false,  true);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  false,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  false,  true);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    false);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
900	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  false,  0);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  false,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  false,  0);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    false);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
901	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  os.getBytes(),  blockSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  os.getBytes(),  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  os.getBytes(),  blockSize);	  this.buffer    =    new    TarBuffer(os.getBytes(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
902	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.toBytes(),  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.toBytes(),  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.toBytes(),  recordSize);	  this.buffer    =    new    TarBuffer(os.getBytes(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
903	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  recordSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  recordSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  recordSize,  recordSize);	  this.buffer    =    new    TarBuffer(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	165	None	replace
904	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  BlockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  BlockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  BlockSize,  recordSize);	  this.buffer    =    new    TarBuffer(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	165	None	replace
905	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  *  recordSize  +  2;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLine()  *  recordSize  +  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine()  *  recordSize  +  2;	  this.assemLen    =    os.readLine()    *    recordSize;    	non-compiled	[CE]  <identifier>  expected	120	None	replace
906	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  fileSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  fileSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  fileSize);	  this.addPaxHeadersForNonAsciiNames    =    super.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	178	None	replace
907	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  null);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(),  recordSize,  null);	  this.buffer    =    new    TarBuffer(os.getBytes(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
908	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  bufferSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  bufferSize,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  bufferSize,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
909	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getCharacterEncoding(),  os.getCharacterEncoding());  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getCharacterEncoding(),  os.getCharacterEncoding());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getCharacterEncoding(),  os.getCharacterEncoding());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterEncoding());    	non-compiled	[CE]  <identifier>  expected	183	None	replace
910	[BUG]  [BUGGY]  this.recordSize  =  RecordSize.INVALID;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  RecordSize.INVALID;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  RecordSize.INVALID;	  this.recordSize    =    0;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
911	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(16);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(16);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(16);	  this.buffer    =    new    TarBuffer(64);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
912	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  assemLen);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  assemLen);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	171	None	replace
913	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  2,  recordSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  2,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  2,  recordSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	171	None	replace
914	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  buffer,  recordSize,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  buffer,  recordSize,  0,  os.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  buffer,  recordSize,  0,  os.length  +  1);	  System.arraycopy(assemBuf,    0,    os,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	191	None	replace
915	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[blockSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  this.assemBuf,  0,  recordSize);  buffer  =  new  byte[blockSize];	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	147	None	replace
916	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  addPaxHeadersForNonAsciiNames,  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os?  null  :  addPaxHeadersForNonAsciiNames,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os?  null  :  addPaxHeadersForNonAsciiNames,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    os?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	112	None	replace
917	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  assemBuf.length);	  System.arraycopy(assemBuf,    0,    recordSize,    0,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
918	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  null,  0);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  null,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  null,  0);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    null);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
919	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  null,  true);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  null,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  null,  true);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    null);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
920	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(0,  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(0,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(recordSize);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
921	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  *  recordSize  -  1);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  *  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  *  recordSize  -  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
922	[BUG]  [BUGGY]  this.encoding  =  os.getDecodedCharacterEncoding();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getDecodedCharacterEncoding();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getDecodedCharacterEncoding();	  this.encoding    =    os.getCharacterEncoding();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
923	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(false, " ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(false, " ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(false, " ");	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(true);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
924	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(false,  recordSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(false,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(false,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(true);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
925	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  bigNumberMode);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  bigNumberMode);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  bigNumberMode);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
926	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize  +   "UTF-8 "));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize  +   "UTF-8 "));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize  +   "UTF-8 "));	  this.buffer    =    new    TarBuffer(os.getBytes(   "UTF-8   "));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
927	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize  +   "));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize  +   "));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize  +   "));	  this.buffer    =    new    TarBuffer(os.getBytes(   "UTF-8   "));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
928	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  2);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  2);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    0);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
929	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  true);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  true);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    true);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
930	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  true);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  true);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    true);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
931	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false,  null);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false,  null);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    false);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
932	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  false);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    false);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
933	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  -  2);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  -  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    2);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
934	[BUG]  [BUGGY]  this.recordSize  -=  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  -=  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  -=  1;	  this.recordSize    -=    recordSize;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
935	[BUG]  [BUGGY]  this.recordSize  -=  super.recordSize;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  -=  super.recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  -=  super.recordSize;	  this.recordSize    -=    recordSize;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
936	[BUG]  [BUGGY]  this.recordSize  -=  recordSize  *  2;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  -=  recordSize  *  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  -=  recordSize  *  2;	  this.recordSize    -=    recordSize;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
937	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(bufferedSize),  os.getCharacterMode());  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(bufferedSize),  os.getCharacterMode());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(bufferedSize),  os.getCharacterMode());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterMode());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
938	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getCharacterMode()  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getCharacterMode()  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getCharacterMode()  +  1);	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getCharacterMode());    	non-compiled	[CE]  <identifier>  expected	184	None	replace
939	[BUG]  [BUGGY]  this.assemLen  =  os.readFilePointer();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readFilePointer();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readFilePointer();	  this.assemLen    =    os.readFile();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
940	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  bufferSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  bufferSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  bufferSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    bufferSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
941	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  createPaxHeadersForNonAsciiNames(os);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  createPaxHeadersForNonAsciiNames(os);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  createPaxHeadersForNonAsciiNames(os);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
942	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getPaxHeadersForNonAsciiNames  ||  recordSize  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getPaxHeadersForNonAsciiNames  ||  recordSize  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getPaxHeadersForNonAsciiNames  ||  recordSize	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    recordSize    	non-compiled	[CE]  <identifier>  expected	95	None	replace
943	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getPaxHeadersForNonAsciiNames()  ||  recordSize  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os.getPaxHeadersForNonAsciiNames()  ||  recordSize  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os.getPaxHeadersForNonAsciiNames()  ||  recordSize	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    recordSize    	non-compiled	[CE]  <identifier>  expected	95	None	replace
944	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames  &&  recordSize  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames  &&  recordSize  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames  &&  recordSize	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    recordSize    	non-compiled	[CE]  <identifier>  expected	95	None	replace
945	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  new  byte[recordSize];  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  new  byte[recordSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  new  byte[recordSize];	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	148	None	replace
946	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  os);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  os);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  os);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	164	None	replace
947	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(256,  256);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(256,  256);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(256,  256);	  this.buffer    =    new    TarBuffer(256);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
948	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  TreeMap  <  String,String>(recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  TreeMap  <  String,String>(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  TreeMap  <  String,String>(recordSize);	  this.addPaxHeadersForNonAsciiNames    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
949	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(os,  blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(os,  blockSize,  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(new  FileOutputStream(os,  blockSize,  recordSize));	  this.buffer    =    new    TarBuffer(new    FileOutputStream(blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
950	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(recordSize,  blockSize));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(recordSize,  blockSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(new  FileOutputStream(recordSize,  blockSize));	  this.buffer    =    new    TarBuffer(new    FileOutputStream(blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
951	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize  -  1));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize  -  1));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(new  FileOutputStream(blockSize,  recordSize  -  1));	  this.buffer    =    new    TarBuffer(new    FileOutputStream(blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
952	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  ||  removePaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  ||  removePaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os  ||  removePaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    os    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	158	None	replace
953	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  ||  addPaxHeadersForNonAsciiNames,  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  ||  addPaxHeadersForNonAsciiNames,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os  ||  addPaxHeadersForNonAsciiNames,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    os    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	158	None	replace
954	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  ||  addPaxHeadersForNonAsciiNames(recordSize);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os  ||  addPaxHeadersForNonAsciiNames(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os  ||  addPaxHeadersForNonAsciiNames(recordSize);	  this.addPaxHeadersForNonAsciiNames    =    os    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	158	None	replace
955	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordSize,  this.assemBuf,  0,  assemSize);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordSize,  this.assemBuf,  0,  assemSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordSize,  this.assemBuf,  0,  assemSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
956	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||!addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	123	None	replace
957	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames,  recordSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    super.addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
958	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  ||  os;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  ||  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  super.addPaxHeadersForNonAsciiNames  ||  os;	  this.addPaxHeadersForNonAsciiNames    =    super.addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
959	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  buffer  =  new  TarBuffer();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  buffer  =  new  TarBuffer();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  buffer  =  new  TarBuffer();	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
960	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  buffer  =  new  TarBuffer();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  buffer  =  new  TarBuffer();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  buffer  =  new  TarBuffer();	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    new    TarBuffer();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
961	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  &&  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  &&  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  &&  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	90	None	replace
962	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  getPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  getPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  getPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	90	None	replace
963	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  *  1);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  *  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  *  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
964	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  1,  os.length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  buffer,  recordSize,  1,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  buffer,  recordSize,  1,  os.length);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
965	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  1,  recordSize,  0,  os.length);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  buffer,  1,  recordSize,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  buffer,  1,  recordSize,  0,  os.length);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
966	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  currName);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  currName);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    addPaxHeadersForNonAsciiNames);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
967	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  buffer);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  buffer);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  addPaxHeadersForNonAsciiNames,  buffer);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    addPaxHeadersForNonAsciiNames);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
968	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  :  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false  :  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false  :  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    true?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
969	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  null,  0);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  null,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  null,  0);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    null);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
970	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.findPaxHeadersForNonAsciiNames(recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.findPaxHeadersForNonAsciiNames(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.findPaxHeadersForNonAsciiNames(recordSize);	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	177	None	replace
971	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames(recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.getPaxHeadersForNonAsciiNames(recordSize);	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os);    	non-compiled	[CE]  <identifier>  expected	177	None	replace
972	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
973	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);	  this.addPaxHeadersForNonAsciiNames    =    getPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
974	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  super.addPaxHeadersForNonAsciiNames  :  addPaxHeadersForNonAsciiNames  +  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  super.addPaxHeadersForNonAsciiNames  :  addPaxHeadersForNonAsciiNames  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  super.addPaxHeadersForNonAsciiNames  :  addPaxHeadersForNonAsciiNames  +  1;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames    +    1;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
975	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames  +  1;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames  +  1;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames    +    1;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
976	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  new  HashMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  new  HashMap  <  String,Object>();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  null  :  new  HashMap  <  String,Object>();	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames    +    1;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
977	[BUG]  [BUGGY]  this.assemLen  =  new  int[recordSize];  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  int[recordSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  int[recordSize];	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
978	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  ||  osForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  ||  osForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  getPaxHeadersForNonAsciiNames()  ||  osForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    ||    osForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	193	None	replace
979	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  +  recordSize,  os.readLine());  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  +  recordSize,  os.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine()  +  recordSize,  os.readLine());	  this.buffer    =    new    TarBuffer(os.readLine()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
980	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  +  assemLen);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine()  +  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine()  +  assemLen);	  this.buffer    =    new    TarBuffer(os.readLine()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
981	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  insertPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    removePaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	116	None	replace
982	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  new  HashMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  new  HashMap  <  String,Object>();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames?  null  :  new  HashMap  <  String,Object>();	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    removePaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	116	None	replace
983	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  os.readLine(),  blockSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  os.readLine(),  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  os.readLine(),  blockSize);	  this.buffer    =    new    TarBuffer(os.readLine(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
984	[BUG]  [BUGGY]  this.assemLen  =  os.readLineBytes(currBytes);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLineBytes(currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLineBytes(currBytes);	  this.assemLen    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
985	[BUG]  [BUGGY]  this.assemLen  =  os.readLineAsString();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLineAsString();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLineAsString();	  this.assemLen    =    os.readLineBytes();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
986	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
987	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  this.buffer.length);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  this.buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  recordSize,  0,  this.buffer.length);	  System.arraycopy(assemBuf,    0,    os,    blockSize,    recordSize,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
988	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.encodePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.encodePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.encodePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
989	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.arrayAddPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.arrayAddPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.arrayAddPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize);	  this.addPaxHeadersForNonAsciiNames    =    encoding.addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
990	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  buffer);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  buffer);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  buffer);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
991	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  true);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  true);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
992	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  0);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  0);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
993	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TOKEN);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TOKEN);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TOKEN);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
994	[BUG]  [BUGGY]  this.recordSize  +=  recordSize;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  +=  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  +=  recordSize;	  this.recordSize    =    blockSize;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
995	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)+  1);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
996	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  null);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  null);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(null);    	non-compiled	[CE]  <identifier>  expected	155	None	replace
997	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  currName);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  currName);	  this.buffer    =    new    TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
998	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  fileSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  fileSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER,  fileSize);	  this.buffer    =    new    TarBuffer(ByteBuffer.DEFAULT_TAR_BUFFER);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
999	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  -  1);  buffer  =  os;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  -  1);  buffer  =  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  -  1);  buffer  =  os;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    1);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	146	None	replace
1000	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  -  1);  buffer  =  os;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  -  1);  buffer  =  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  -  1);  buffer  =  os;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    1);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	146	None	replace
1001	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!recordPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =!recordPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =!recordPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =!addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
1002	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize,    encoding);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
1003	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  2);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  2);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    0);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1004	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames?  0  :  removePaxHeadersForNonAsciiNames(os,  blockSize,  recordSize));	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    0    :    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize));    	non-compiled	[CE]  <identifier>  expected	102	None	replace
1005	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(recordSize  +  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(recordSize  +  1);	  this.addPaxHeadersForNonAsciiNames    =    removePaxHeadersForNonAsciiNames(recordSize);    	non-compiled	[CE]  <identifier>  expected	175	None	replace
1006	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(null);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  removePaxHeadersForNonAsciiNames(null);	  this.addPaxHeadersForNonAsciiNames    =    removePaxHeadersForNonAsciiNames(recordSize);    	non-compiled	[CE]  <identifier>  expected	175	None	replace
1007	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  0);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  0);	  this.buffer    =    new    TarBuffer(os.readLine(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1008	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  os.readLine());  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  os.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  recordSize,  os.readLine());	  this.buffer    =    new    TarBuffer(os.readLine(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1009	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  1,  bufferSize);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  blockSize,  1,  bufferSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  blockSize,  1,  bufferSize);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    bufferSize);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
1010	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize);	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
1011	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getCharacterIndex());  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getCharacterIndex());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getCharacterIndex());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getVersion());    	non-compiled	[CE]  <identifier>  expected	185	None	replace
1012	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getEncoding());  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getEncoding());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(recordSize),  os.getEncoding());	  this.buffer    =    new    TarBuffer(os.getBytes(recordSize),    os.getVersion());    	non-compiled	[CE]  <identifier>  expected	185	None	replace
1013	[BUG]  [BUGGY]  this.assemLen  -=  blockSize;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  -=  blockSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  -=  blockSize;	  this.assemLen    =    blockSize;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1014	[BUG]  [BUGGY]  this.assemLen  =  os.getLongFileMode();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.getLongFileMode();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.getLongFileMode();	  this.assemLen    =    blockSize;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1015	[BUG]  [BUGGY]  this.assemLen  =  os.getLength();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.getLength();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.getLength();	  this.assemLen    =    blockSize;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1016	[BUG]  [BUGGY]  this.assemLen  =  os.getLongValue();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.getLongValue();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.getLongValue();	  this.assemLen    =    blockSize;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1017	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true,  addPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  true,  addPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  true,  addPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    false    ||    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
1018	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readUTF()  +  recordSize);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readUTF()  +  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readUTF()  +  recordSize);	  this.buffer    =    new    TarBuffer(os.readUTF());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
1019	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getLine());  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getLine());	  this.buffer    =    new    TarBuffer(os.readLine()    -    1);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
1020	[BUG]  [BUGGY]  if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  os;  }	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1021	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  recordSize);  buffer  =  os;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  recordSize);  buffer  =  os;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  recordSize);  buffer  =  os;	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1022	[BUG]  [BUGGY]  if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(assemBuf!=  null)  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize);  buffer  =  new  TarBuffer();  }	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1023	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  assemBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  recordSize,  0,  assemBuf.length);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
1024	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false;  if(addPaxHeadersForNonAsciiNames!=  null)  {  this.addPaxHeadersForNonAsciiNames  =  true;  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false;  if(addPaxHeadersForNonAsciiNames!=  null)  {  this.addPaxHeadersForNonAsciiNames  =  true;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false;  if(addPaxHeadersForNonAsciiNames!=  null)  {  this.addPaxHeadersForNonAsciiNames  =  true;  }	  this.addPaxHeadersForNonAsciiNames    =    true    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	92	None	replace
1025	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false;  if(addPaxHeadersForNonAsciiNames!=  null)  {  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false;  if(addPaxHeadersForNonAsciiNames!=  null)  {  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false;  if(addPaxHeadersForNonAsciiNames!=  null)  {  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    true    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	92	None	replace
1026	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false;  if(addPaxHeadersForNonAsciiNames  ==  false)  {  this.addPaxHeadersForNonAsciiNames  =  true;  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  false;  if(addPaxHeadersForNonAsciiNames  ==  false)  {  this.addPaxHeadersForNonAsciiNames  =  true;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  false;  if(addPaxHeadersForNonAsciiNames  ==  false)  {  this.addPaxHeadersForNonAsciiNames  =  true;  }	  this.addPaxHeadersForNonAsciiNames    =    true    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	92	None	replace
1027	[BUG]  [BUGGY]  this.assemLen  =  os.readLine());  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  os.readLine());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  os.readLine());	  this.assemLen    =    os.readLine()    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
1028	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  |=  true;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  |=  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  |=  true;	  this.addPaxHeadersForNonAsciiNames    =    true;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
1029	[BUG]  [BUGGY]  this.encoding  =  os.getString();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getString();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getString();	  this.encoding    =    buffer.getEncoding();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
1030	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  true);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize),  recordSize,  true);	  this.buffer    =    new    TarBuffer(os.getBytes(blockSize),    recordSize);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
1031	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.getBytes(blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.getBytes(blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(os.getBytes(blockSize),    recordSize);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
1032	[BUG]  [BUGGY]  if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  buffer  =  os;  }  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  buffer  =  os;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  buffer  =  os;  }	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    assemLen);    buffer    =    os;    	non-compiled	[CE]  <identifier>  expected	166	None	replace
1033	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  TreeMap  <  String,Object>(recordSize);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  new  TreeMap  <  String,Object>(recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  new  TreeMap  <  String,Object>(recordSize);	  this.addPaxHeadersForNonAsciiNames    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	187	None	replace
1034	[BUG]  [BUGGY]  this.encoding  =  os.toUTF8();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.toUTF8();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.toUTF8();	  this.encoding    =    os.toString();    	non-compiled	[CE]  <identifier>  expected	181	None	replace
1035	[BUG]  [BUGGY]  this.encoding  =  os.toPax();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.toPax();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.toPax();	  this.encoding    =    os.toString();    	non-compiled	[CE]  <identifier>  expected	181	None	replace
1036	[BUG]  [BUGGY]  this.encoding  =  os.toURL();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.toURL();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.toURL();	  this.encoding    =    os.toString();    	non-compiled	[CE]  <identifier>  expected	181	None	replace
1037	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  os,  bufferSize,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  os,  bufferSize,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  os,  bufferSize,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    os,    recordSize,    0,    buffer.length    +    1);    	non-compiled	[CE]  <identifier>  expected	180	None	replace
1038	[BUG]  [BUGGY]  this.encoding  =  os.getCode();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.encoding  =  os.getCode();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.encoding  =  os.getCode();	  this.encoding    =    os.getCharset();    	non-compiled	[CE]  <identifier>  expected	150	None	replace
1039	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(out);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(out);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  encoding.addPaxHeadersForNonAsciiNames(out);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(out);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
1040	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  insertPaxHeadersForNonAsciiNames?  0  :  insertPaxHeadersForNonAsciiNames;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  insertPaxHeadersForNonAsciiNames?  0  :  insertPaxHeadersForNonAsciiNames;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  insertPaxHeadersForNonAsciiNames?  0  :  insertPaxHeadersForNonAsciiNames;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames?    null    :    insertPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	161	None	replace
1041	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  *  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  *  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize  *  1);	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
1042	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.getBytes());  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(recordSize.getBytes());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(recordSize.getBytes());	  this.buffer    =    new    TarBuffer(recordSize.readLine());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1043	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize  >  0?  addPaxHeadersForNonAsciiNames  :  null;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize  >  0?  addPaxHeadersForNonAsciiNames  :  null;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames  &&  recordSize  >  0?  addPaxHeadersForNonAsciiNames  :  null;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames    &&    addPaxHeadersForNonAsciiNames?    null    :    addPaxHeadersForNonAsciiNames;    	non-compiled	[CE]  <identifier>  expected	160	None	replace
1044	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  out.readLine()  +  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  out.readLine()  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  out.readLine()  +  1);	  this.buffer    =    new    TarBuffer(os.readLine(),    out.readLine());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
1045	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  out.readLine()  +  recordSize);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.buffer  =  new  TarBuffer(os.readLine(),  out.readLine()  +  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.buffer  =  new  TarBuffer(os.readLine(),  out.readLine()  +  recordSize);	  this.buffer    =    new    TarBuffer(os.readLine(),    out.readLine());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
1046	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os,  addPaxHeadersForNonAsciiNames  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  os,  addPaxHeadersForNonAsciiNames  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  os,  addPaxHeadersForNonAsciiNames	  this.addPaxHeadersForNonAsciiNames    =    os    ||    addPaxHeadersForNonAsciiNames    	non-compiled	[CE]  <identifier>  expected	124	None	replace
1047	[BUG]  [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(os,  0,  buffer,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(os,  0,  buffer,  0,  recordSize);	  System.arraycopy(os,    0,    buffer,    recordSize,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
1048	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemSize  -  1);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemSize  -  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
1049	[BUG]  [BUGGY]  this.recordSize  =  os.toByteArray();  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.recordSize  =  os.toByteArray();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.recordSize  =  os.toByteArray();	  this.recordSize    =    os.getRecordSize();    	non-compiled	[CE]  <identifier>  expected	172	None	replace
1050	[BUG]  [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)-  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)-  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.addPaxHeadersForNonAsciiNames  =  addPaxHeadersForNonAsciiNames(os,  blockSize,  recordSize)-  1;	  this.addPaxHeadersForNonAsciiNames    =    addPaxHeadersForNonAsciiNames(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	134	None	replace
1051	[BUG]  [BUGGY]  this.assemLen  =  new  long(currBytes);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  long(currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  long(currBytes);	  this.assemLen    =    currBytes;    	non-compiled	[CE]  <identifier>  expected	186	None	replace
1052	[BUG]  [BUGGY]  this.assemLen  =  new  Long(currBytes);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  =  new  Long(currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  =  new  Long(currBytes);	  this.assemLen    =    currBytes;    	non-compiled	[CE]  <identifier>  expected	186	None	replace
1053	[BUG]  [BUGGY]  this.assemLen  -=  currBytes;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  this.assemLen  -=  currBytes;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	this.assemLen  -=  currBytes;	  this.assemLen    =    currBytes;    	non-compiled	[CE]  <identifier>  expected	186	None	replace
1054	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordSize,  this.assemBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  recordSize,  this.assemBuf,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  recordSize,  this.assemBuf,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
1055	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  this(os,  blockSize,  recordSize,  null);      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  this.assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  addPaxHeadersForNonAsciiNames  closed  finished  haveUnclosedEntry  ZipEncoding  ASCII  encoding  OutputStream  os  out  TarBuffer  buffer  String  currName  encoding  int  BIGNUMBER_ERROR  BIGNUMBER_POSIX  BIGNUMBER_STAR  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_POSIX  LONGFILE_TRUNCATE  assemLen  bigNumberMode  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	0.31622776601683794	136	136	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  this.assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
