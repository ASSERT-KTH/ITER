projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:this.headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h:headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:headers.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:headers.values()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entryh:headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.values()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:this.headers.values()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:this.headers.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Entry<String,String>h:pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:paxHeaders.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h:pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.getKey()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>entry:headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h:this.headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h:headers.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.headers()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:newHashMap<String,String>(this.headers.entrySet())){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:newHashMap<String,String>(this.headers.size())){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:this.headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers.values()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entry<K,V>entry=pex.entrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Writerw=newWriter(w,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.append(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.append(entryName).append('n');
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.append('n');
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');name=pex.substring(0,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');writePaxHeadersForNonAsciiNames(pax);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');writePaxHeadersForNonAsciiNames(pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');writePaxHeadersForNonAsciiNames(headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');writePaxHeadersForNonAsciiNames(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:names.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:headers.entries()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h:headers.values()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>key:headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:name.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.entries()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers.getEntrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entryh=pex.getEntry(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Integerh=pex.getIntValue();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers).entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>pex:pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:this.pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>entryh:headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entryh:this.headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:entryNames.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pexHeaders.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:this.paxHeaders.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pexHeaders.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Entry<String,String>h:pexHeaders.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:mapHeaders.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.entryNames()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.entryCount()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:entries.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:this.entryNames.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:map.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');writePaxHeadersForNonAsciiNames(entryName,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write("n");writePaxHeadersForNonAsciiNames(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');writePaxHeadersForNonAsciiNames(name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:newHashMap<String,String>(this.headers.keySet())){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:newHashMap<String,String>(this.headers.values())){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:newHashMap<String,String>(this.headers.get(0))){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:newHashMap<String,String>(headers.entrySet())){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>pex:paxHeaders.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>pex:this.paxHeaders.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>pex:this.pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>pex:map.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>pex:pex.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>pex:newHashMap<String,String>(pax.entrySet())){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Entry<String,String>h:pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h:paxHeaders.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h:pex.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h:pex.getKey()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>w:pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write("n");
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('/');
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('#');
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('N');
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:this.headers.entries()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:entryNames.entries()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h:pex.values()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h:this.headers.values()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');writePaxHeadersForNonAsciiNames(pax,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write("n");writePaxHeadersForNonAsciiNames(pax);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.keys()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Integerh=pex.getLongValue();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Integerh=pex.getIntValue()+1;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Integerh=name.getIntValue();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Integerh=pex.getIntValue()*2;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Integerh=pex.getIntValue()*4;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Integerh=pex.getIntValue()+2;
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:newHashMap<String,String>(this.headers.entrySet())){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:newHashMap<String,String>(this.headers.size())){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:newHashMap<String,String>(this.headers.keySet())){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>entry:this.headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>entry:headers.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>entry:headers.values()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>entry:pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:this.names.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:names.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h:names.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:names.values()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:newHashMap<String,String>(this.pex.entrySet())){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:entryName.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers.getEntryNames()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers.getEntryCount()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers.getEntryList()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Entry<String,String>h:pex.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Entry<String,String>h:pex.getKey()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Entry<String,String>h:paxHeaders.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Entry<String,String>h:pex.getValues()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:this.headers.values()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:pex.values()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h:pex.headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h:this.headers.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:this.headers).entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.append(entryName).append('N');
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.append(entryName).append("n");
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.append('n').append(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.append(entryName).append('/');
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write(stripTo7Bits(entryName));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write(stripTo7Bits(entryName),TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write(name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write(stripTo7Bits(entryName),TarConstants.DEFAULT_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write(stripTo7Bits(entryName),TarConstants.NON_AsciiNames);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');name=name.substring(0,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');name=pex.substring(0,TarConstants.LF_PAX_EXTENDED_HEADER_LC+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write("n");name=pex.substring(0,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('#');name=pex.substring(0,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('/');name=pex.substring(0,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('[');name=pex.substring(0,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');writePaxHeadersForNonAsciiNames(plugin);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Writerw=newWriter(w,TarConstants.LF_PAX_EXTENDED_HEADER_LC,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Writerw=newWriter(name,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Writerw=newWriter(w,TarConstants.LF_PAX_EXTENDED_HEADER_LC,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Writerw=newWriter(w,TarConstants.LF_PAX_EXTENDED_HEADER_LC,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Writerw=newWriter(pex,TarConstants.LF_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Writerw=newWriter(w,TarConstants.LP_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entryh=pex.getEntry(entryName,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entryh=pex.getEntry(name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entryh=pex.getEntry(entryName,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entryh=pex.getEntry(entryName,false);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entryh=pex.getEntry(entryName+1);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entryh=pex.getEntry(entryName,true);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:pex.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:newHashMap<String,String>(pex.entrySet())){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:newHashMap<String,String>(pax.entrySet())){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:newHashMap<String,String>(pex.keySet())){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.headers.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>key:this.headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>key:pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>key:headers.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.entries(),w){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Entry<String,String>h:pex.entries()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.getValues()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.getValue()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>entryName:headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.append("n");
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.append('N');
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.append('/');
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');writePaxHeadersForNonAsciiNames(paxHeaders);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write("n");writePaxHeadersForNonAsciiNames(headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Entry<String,String>h:pex.getValue()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:newHashMap<String,String>(this.headers.size()-1)){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:newHashMap<String,String>(this.headers.size()+1)){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:newHashMap<String,String>(this.headers.size()-2)){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:newHashMap<String,String>(headers.size()-1)){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers.entrySet()).keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.getHeaders()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.keys.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entry<K,V>entry=pex.getValue().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entry<K,V>entry=pex.getEntrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entry<K,V>entry=w.entrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entry<K,V>entry=pex.getEntry().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entry<K,V>entry=pex.entrySet().iterator();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.elements()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');writePaxHeadersForNonAsciiNames(headers,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Writerw=newWriter(w,TarConstants.WRITE_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Writerw=newWriter(w,name);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Writerw=newWriter(w,TarConstants.STRING_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:headers.getEntryNames()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:names.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.headers){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:newHashMap<String,String>(this.headers.getKey())){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Entry<String,String>h:name.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(finalEntry<String,String>h:pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entry<K,V>entry=headers.entrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entry<K,V>entry=pex.sentrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.getEntryNames()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.getEntryCount()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Integerh=pex.getImplicitReturnValue();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>pex:headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>pex:name.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.getEntry()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entryh=pex.getEntry("/PaxHeaders");
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entryh=pex.getEntry(entryName,buffer);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:this.pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers).keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers).values()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>entry:headers).entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers).entries()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers).getEntryCount()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');addPaxHeadersForNonAsciiNames(pax);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers.entries()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers.elements()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.append(name).append('n');
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h:name.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h:pex.entries()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.append("/PaxHeadersn");
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>key:headers.values()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.append('[');
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.append('#');
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>entry:headers.getEntry(entryName)){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:peer.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:name.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:this.headers.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write("n");writePaxHeadersForNonAsciiNames(pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write(stripTo7Bits(entryName),TarConstants.ALLOW_PAX_EXTENDED_HEADER_LC);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:name.keySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:name.getKey()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers.entrySet()).entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers.values()).entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:headers){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:paxHeaders.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:this.paxHeaders.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h:this.pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>pex:pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>h=pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entryh=pex.getEntryByName(entryName);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entryh=pex.getEntry(encoding);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Integerh=pex.nextInt();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Integerh=pex.getHexString();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Integerh=pex.getHeaderLength();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Entry<String,String>h:headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Entry<String,String>h:entryNames.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:pex.headers()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write(entryName,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write(stripTo7Bits(entryName),pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.sentrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:pex.entryArray()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:newHashMap<String,String>()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Writerw=newWriter(w,pex);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>entryh:headers.values()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466For(Map.Entry<String,String>entryhe:headers.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.append(stripTo7Bits(entryName));
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');writePaxHeadersForNonAsciiNames(pex,headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('[');writePaxHeadersForNonAsciiNames(headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.write('n');addPaxHeadersForNonAsciiNames(headers);
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466w.append(entryName).append(':');
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>pex:newHashMap<String,String>()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entry:pex.entries()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entry<K,V>entry=this.pex.entrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466Entry<K,V>entry=names.entrySet().iterator().next();
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entryh:names.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>entryh:pex.entrySet()){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:newTreeMap<String,String>(this.headers.entrySet())){
projects/Compress18/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java466for(Map.Entry<String,String>h:newMap<String,String>(this.headers.entrySet())){
