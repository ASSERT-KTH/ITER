projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89finalRealPointValuePaircontracted=evaluateNewSimplex(original,gamma,comparator);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89finalRealPointValuePaircontracted=evaluateNewSimplex(original,expanded,comparator);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89finalRealPointValuePaircontracted=evaluateNewSimplex(simplex,original,comparator);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89finalRealPointValuePaircontracted=evaluateNewSimplex(comparator,gamma,original);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89finalRealPointValuePaircontracted=evaluateNewSimplex(original,reflected,comparator);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89if(simplex!=null){if(comparator.compare(expanded,best)<0){return;}
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89if(simplex!=null){if(comparator.compare(expanded,best)<=0){return;}
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89if(simplex!=null){if(comparator.compare(expansed,best)<0){return;}
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89if(simplex!=null){if(comparator.compare(original,expanded)<0){return;}
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89Comparatorcomparator=comparator.compare(simplex,expanded);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89if(simplex!=null){doublegamma=reflectedSimplex.doubleValue();if(comparator.compare(gamma,best)<0){return;}
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89if(simplex!=null){doublegamma=reflectedSimplex.doubleValue();if(comparator.compare(gamma,expanded)<0){return;}
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89doublegamma=reflectedSimplex.doubleValue();
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89finalRealPointValuePaircontracted=evaluateNewSimplex(original,simplex,comparator);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89finalRealPointValuePaircontracted=evaluateNewSimplex(simplex,gamma,comparator);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89finalRealPointValuePaircontracted=evaluateNewSimplex(locale,original,comparator);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89RealPointValuePairbest=comparator.compare(simplex,expanded);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89doublegamma=comparator.compare(simplex,best);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89doublegamma=comparator.compare(simplex,best)<0;
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89Comparatorcomparator=comparator.compare(simplex,best);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java89doublegamma=comparator.compare(simplex);
