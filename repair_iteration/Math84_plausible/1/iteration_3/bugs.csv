bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super(2.0,  1.0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(2.0,  1.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(2.0,  1.0);	  super(0.0,    1.0);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
2	[BUG]  [BUGGY]  super(0.0,  5.0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(0.0,  5.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(0.0,  5.0);	  super(0.0,    1.0);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
3	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble( "4.0 ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.parseDouble( "4.0 ");  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble( "4.0 ");	  this.khi    =    Double.parseDouble(   "2.0   ");    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
4	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
5	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.NaN;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.NaN;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.NaN;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
6	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.PER_INFINITY;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.PER_INFINITY;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.PER_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
7	[BUG]  [BUGGY]  this(new  double[]  {  y,  x  }  );  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(new  double[]  {  y,  x  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  double[]  {  y,  x  }  );	  public    MultiDirectional(double    y,    double    x)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
8	[BUG]  [BUGGY]  public  MultiDirectional(double  y,  double  h)  {  [CE]  constructor  MultiDirectional(double,double)  is  already  defined  in  class  MultiDirectional  [FE]              AssertionError      [CONTEXT]        [BUGGY]  public  MultiDirectional(double  y,  double  h)  {  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  y,  double  h)  {	  public    MultiDirectional(double    y,    double    x)    {    	non-compiled	[CE]  constructor  MultiDirectional(double,double)  is  already  defined  in  class  MultiDirectional	67	None	replace
9	[BUG]  [BUGGY]  this(0.0,  0.0);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(0.0,  0.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(0.0,  0.0);	  this(0.5,    0.5);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
10	[BUG]  [BUGGY]  this.x  =  0.5;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.x  =  0.5;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.x  =  0.5;	  this.x    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
11	[BUG]  [BUGGY]  this.x  =  0.0;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.x  =  0.0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.x  =  0.0;	  this.x    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
12	[BUG]  [BUGGY]  this.x  =  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.x  =  1;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.x  =  1;	  this.x    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
13	[BUG]  [BUGGY]  super(new  double[]  {  x,  y  }  );  [CE]  illegal  start  of  type  [FE]        [CONTEXT]        [BUGGY]  super(new  double[]  {  x,  y  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(new  double[]  {  x,  y  }  );	  public    MultiDirectional(double[]    x,    double[]    y)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
14	[BUG]  [BUGGY]  this(new  double[]  {  0  },  new  double[]  {  1  }  );  [CE]  illegal  start  of  type  [FE]          [CONTEXT]        [BUGGY]  this(new  double[]  {  0  },  new  double[]  {  1  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  double[]  {  0  },  new  double[]  {  1  }  );	  public    MultiDirectional(double[]    x,    double[]    y)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
15	[BUG]  [BUGGY]  Math.rint(getError());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Math.rint(getError());  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.rint(getError());	  Math.sqrt(getError());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
16	[BUG]  [BUGGY]  Math.sqrt(this.getError());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(this.getError());  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(this.getError());	  Math.sqrt(getError());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
17	[BUG]  [BUGGY]  Math.sqrt(getError()  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(getError()  +  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(getError()  +  1);	  Math.sqrt(getError());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
18	[BUG]  [BUGGY]  Math.log(getError());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        [BUGGY]  Math.log(getError());  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.log(getError());	  Math.sqrt(getError());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
19	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
20	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.NaN;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.NaN;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.NaN;	  this.khi    =    Double.POSITIVE_INFINITY?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
21	[BUG]  [BUGGY]  super();  this.gamma  =  0.5;  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  super();  this.gamma  =  0.5;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super();  this.gamma  =  0.5;	  public    MultiDirectional(double    gamma)    {    super();    this.gamma    =    0.5;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
22	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  super();  this.gamma  =  0.5;  }  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  public  MultiDirectional(double  gamma)  {  super();  this.gamma  =  0.5;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  gamma)  {  super();  this.gamma  =  0.5;  }	  public    MultiDirectional(double    gamma)    {    super();    this.gamma    =    0.5;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
23	[BUG]  [BUGGY]  super();  this.khi  =  0.5;  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  super();  this.khi  =  0.5;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super();  this.khi  =  0.5;	  public    MultiDirectional(double    gamma)    {    super();    this.gamma    =    0.5;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
24	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  super();  this.gamma  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                    [CONTEXT]        [BUGGY]  public  MultiDirectional(double  gamma)  {  super();  this.gamma  =  0.0;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  gamma)  {  super();  this.gamma  =  0.0;  }	  public    MultiDirectional(double    gamma)    {    super();    this.gamma    =    0.5;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
25	[BUG]  [BUGGY]  this.num  =  Double.doubleToLongBits(num);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  this.num  =  Double.doubleToLongBits(num);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.num  =  Double.doubleToLongBits(num);	  public    MultiDirectional(double    num)    {    this.num    =    Double.doubleToLongBits(num);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  this.num  =  Double.doubleToLongBits(num).doubleValue();  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  this.num  =  Double.doubleToLongBits(num).doubleValue();  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.num  =  Double.doubleToLongBits(num).doubleValue();	  public    MultiDirectional(double    num)    {    this.num    =    Double.doubleToLongBits(num);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
27	[BUG]  [BUGGY]  super();  this.num  =  Double.doubleToLongBits(num);  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  super();  this.num  =  Double.doubleToLongBits(num);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super();  this.num  =  Double.doubleToLongBits(num);	  public    MultiDirectional(double    num)    {    this.num    =    Double.doubleToLongBits(num);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
28	[BUG]  [BUGGY]  super();  this.gamma  =  1.0;  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  super();  this.gamma  =  1.0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super();  this.gamma  =  1.0;	  public    MultiDirectional(double    gamma)    {    super();    this.gamma    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
29	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  super();  this.gamma  =  1.0;  }  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  public  MultiDirectional(double  gamma)  {  super();  this.gamma  =  1.0;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  gamma)  {  super();  this.gamma  =  1.0;  }	  public    MultiDirectional(double    gamma)    {    super();    this.gamma    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
30	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble(1.0d);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.parseDouble(1.0d);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble(1.0d);	  this.khi    =    Double.parseDouble(1.0f);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
31	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble(1.0)+  Double.parseDouble(1.0f);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.parseDouble(1.0)+  Double.parseDouble(1.0f);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble(1.0)+  Double.parseDouble(1.0f);	  this.khi    =    Double.parseDouble(1.0f);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
32	[BUG]  [BUGGY]  Double  gamma  =  Double.parseDouble( "0 ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Double  gamma  =  Double.parseDouble( "0 ");  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Double  gamma  =  Double.parseDouble( "0 ");	  double    gamma    =    Double.parseDouble(   "0   ");    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
33	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble( "10.0 ");  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.parseDouble( "10.0 ");  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble( "10.0 ");	  double    gamma    =    Double.parseDouble(   "0   ");    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
34	[BUG]  [BUGGY]  this(2.0,  0.0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(2.0,  0.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(2.0,  0.0);	  this(1.0,    0.0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  this(num,  null,  false);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  this(num,  null,  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(num,  null,  false);	  this(num,    null);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
36	[BUG]  [BUGGY]  this(this.num,  null);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  this(this.num,  null);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(this.num,  null);	  this(num,    null);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
37	[BUG]  [BUGGY]  this(num,  null,  1.0);  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  this(num,  null,  1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(num,  null,  1.0);	  this(num,    null);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
38	[BUG]  [BUGGY]  this(double  gamma,  Double.NaN,  2.0);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  this(double  gamma,  Double.NaN,  2.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(double  gamma,  Double.NaN,  2.0);	  this(double    gamma,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
39	[BUG]  [BUGGY]  this(Double.NaN,  double  gamma);  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  this(Double.NaN,  double  gamma);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(Double.NaN,  double  gamma);	  this(double    gamma,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
40	[BUG]  [BUGGY]  this(0.0,  Double.NaN);  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  this(0.0,  Double.NaN);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(0.0,  Double.NaN);	  this(double    gamma,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
41	[BUG]  [BUGGY]  this(Double.NaN,  Double.NaN);  [CE]  illegal  start  of  type  [FE]                    [CONTEXT]        [BUGGY]  this(Double.NaN,  Double.NaN);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(Double.NaN,  Double.NaN);	  this(double    gamma,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
42	[BUG]  [BUGGY]  this.num  =  Double.NaN;  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  this.num  =  Double.NaN;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.num  =  Double.NaN;	  public    MultiDirectional(double    num)    {    this.num    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
43	[BUG]  [BUGGY]  this.num  =  num;  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  this.num  =  num;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.num  =  num;	  public    MultiDirectional(double    num)    {    this.num    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
44	[BUG]  [BUGGY]  super(this.num);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  super(this.num);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(this.num);	  super(num);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
45	[BUG]  [BUGGY]  super(this.khi);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  super(this.khi);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(this.khi);	  super(num);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
46	[BUG]  [BUGGY]  super(double  num);  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  super(double  num);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(double  num);	  super(num);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
47	[BUG]  [BUGGY]  super(new  Double(this.khi));  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  super(new  Double(this.khi));  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(new  Double(this.khi));	  super(new    Double(gamma));    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
48	[BUG]  [BUGGY]  super(new  Double(this.gamma));  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  super(new  Double(this.gamma));  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(new  Double(this.gamma));	  super(new    Double(gamma));    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
49	[BUG]  [BUGGY]  super(new  Double(Math.PI  /  2.0));  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  super(new  Double(Math.PI  /  2.0));  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(new  Double(Math.PI  /  2.0));	  super(new    Double(gamma));    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
50	[BUG]  [BUGGY]  super(new  Double(Math.PI));  [CE]  illegal  start  of  type  [FE]                    [CONTEXT]        [BUGGY]  super(new  Double(Math.PI));  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(new  Double(Math.PI));	  super(new    Double(gamma));    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
51	[BUG]  [BUGGY]  this.num  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  this.num  =  Double.POSITIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.num  =  Double.POSITIVE_INFINITY;	  public    MultiDirectional(double    num)    {    this.num    =    num;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  this.num  =  Double.parseDouble(num);  [CE]  illegal  start  of  type  [FE]                    [CONTEXT]        [BUGGY]  this.num  =  Double.parseDouble(num);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.num  =  Double.parseDouble(num);	  public    MultiDirectional(double    num)    {    this.num    =    num;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
53	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(0.0f);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.id  =  Double.doubleToLongBits(0.0f);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.id  =  Double.doubleToLongBits(0.0f);	  this.id    =    Double.doubleToLongBits(0.0);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
54	[BUG]  [BUGGY]  this(new  double[]  {  1.0,  1.0  }  );  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  double[]  {  1.0,  1.0  }  );  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  double[]  {  1.0,  1.0  }  );	  this(null,    1.0);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
55	[BUG]  [BUGGY]  this(null,  0.0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(null,  0.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  0.0);	  this(null,    1.0);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
56	[BUG]  [BUGGY]  this(null,  0.5);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(null,  0.5);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  0.5);	  this(null,    1.0);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
57	[BUG]  [BUGGY]  this(true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(true);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(true);	  this(false);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
58	[BUG]  [BUGGY]  this(false,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(false,  true);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(false,  true);	  this(false);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
59	[BUG]  [BUGGY]  this(false,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this(false,  false);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(false,  false);	  this(false);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
60	[BUG]  [BUGGY]  Math.log(Math.random()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Math.log(Math.random()  -  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.log(Math.random()  -  1);	  Math.sqrt(Math.random()    -    1);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
61	[BUG]  [BUGGY]  Double.parseDouble(this.gamma);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Double.parseDouble(this.gamma);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Double.parseDouble(this.gamma);	  Double.parseDouble(this.khi);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
62	[BUG]  [BUGGY]  Double.parseDouble(this.khi  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Double.parseDouble(this.khi  +  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Double.parseDouble(this.khi  +  1);	  Double.parseDouble(this.khi);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
63	[BUG]  [BUGGY]  Double.parseDouble(this.khi  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Double.parseDouble(this.khi  -  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Double.parseDouble(this.khi  -  1);	  Double.parseDouble(this.khi);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
64	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(1.0e);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.id  =  Double.doubleToLongBits(1.0e);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.id  =  Double.doubleToLongBits(1.0e);	  this.id    =    Double.doubleToLongBits(1.0f);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
65	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(1.0d);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.id  =  Double.doubleToLongBits(1.0d);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.id  =  Double.doubleToLongBits(1.0d);	  this.id    =    Double.doubleToLongBits(1.0f);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
66	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble(0.5);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.parseDouble(0.5);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble(0.5);	  this.khi    =    Double.parseDouble(0);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
67	[BUG]  [BUGGY]  this(null,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(null,  true);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  true);	  this(null,    false);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
68	[BUG]  [BUGGY]  this(null,  false,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(null,  false,  null);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  false,  null);	  this(null,    false);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
69	[BUG]  [BUGGY]  this(null,  false,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(null,  false,  true);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  false,  true);	  this(null,    false);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
70	[BUG]  [BUGGY]  this.gri  =  1.0;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.gri  =  1.0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.gri  =  1.0;	  public    MultiDirectional(double    x,    double    y)    {    this.khi    =    1.0;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
71	[BUG]  [BUGGY]  this(new  Double(this.x),  new  double(y));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(new  Double(this.x),  new  double(y));  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  Double(this.x),  new  double(y));	  this(new    Double(x),    new    double(y));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
72	[BUG]  [BUGGY]  this(new  Double(Math.PI  /  2.0),  new  double(y));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  Double(Math.PI  /  2.0),  new  double(y));  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  Double(Math.PI  /  2.0),  new  double(y));	  this(new    Double(x),    new    double(y));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
73	[BUG]  [BUGGY]  this(new  Double(1.0),  new  double(y));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(new  Double(1.0),  new  double(y));  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  Double(1.0),  new  double(y));	  this(new    Double(x),    new    double(y));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
74	[BUG]  [BUGGY]  this(new  Double(2.0),  new  double(y));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(new  Double(2.0),  new  double(y));  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  Double(2.0),  new  double(y));	  this(new    Double(x),    new    double(y));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
75	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  this(new  double[]  {  x,  y  }  );  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  this(new  double[]  {  x,  y  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double    y)    {    this(new  double[]  {  x,  y  }  );	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
76	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  super();  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  super();  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double    y)    {    super();	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
77	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  super(new  double[]  {  x,  y  }  );  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  super(new  double[]  {  x,  y  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double    y)    {    super(new  double[]  {  x,  y  }  );	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
78	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  this(x,  y,  null);  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  this(x,  y,  null);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double    y)    {    this(x,  y,  null);	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
79	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  this(new  double[]  {  x,  y  },  null);  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  this(new  double[]  {  x,  y  },  null);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double    y)    {    this(new  double[]  {  x,  y  },  null);	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
80	[BUG]  [BUGGY]  this(false,  null,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(false,  null,  true);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(false,  null,  true);	  this(null,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
81	[BUG]  [BUGGY]  this(this.null,  null,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(this.null,  null,  true);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(this.null,  null,  true);	  this(null,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
82	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble( "1.0 ");  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.parseDouble( "1.0 ");  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble( "1.0 ");	  double    gamma    =    Double.parseDouble(   "0.0   ");    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
83	[BUG]  [BUGGY]  Double  gamma  =  Double.parseDouble( "0.0 ");  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  Double  gamma  =  Double.parseDouble( "0.0 ");  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Double  gamma  =  Double.parseDouble( "0.0 ");	  double    gamma    =    Double.parseDouble(   "0.0   ");    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
84	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble( ".0.0 ");  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.parseDouble( ".0.0 ");  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble( ".0.0 ");	  double    gamma    =    Double.parseDouble(   "0.0   ");    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
85	[BUG]  [BUGGY]  Math.rint(Math.rint(this.khi));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Math.rint(Math.rint(this.khi));  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.rint(Math.rint(this.khi));	  Math.rint(Math.random());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
86	[BUG]  [BUGGY]  Math.rint(Math.random()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Math.rint(Math.random()  +  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.rint(Math.random()  +  1);	  Math.rint(Math.random());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
87	[BUG]  [BUGGY]  Math.rint(Math.random()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Math.rint(Math.random()  -  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.rint(Math.random()  -  1);	  Math.rint(Math.random());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
88	[BUG]  [BUGGY]  super(1.0,  0.0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(1.0,  0.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(1.0,  0.0);	  super(0.0,    0.0);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
89	[BUG]  [BUGGY]  super(0.0,  0.0,  1.0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  super(0.0,  0.0,  1.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(0.0,  0.0,  1.0);	  super(0.0,    0.0);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
90	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble(this.khi  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.parseDouble(this.khi  +  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble(this.khi  +  1);	  double    gamma    =    Double.parseDouble(this.khi);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
91	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble(this.grid);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.parseDouble(this.grid);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble(this.grid);	  double    gamma    =    Double.parseDouble(this.khi);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
92	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble(this.khi  +  2);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.parseDouble(this.khi  +  2);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble(this.khi  +  2);	  double    gamma    =    Double.parseDouble(this.khi);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
93	[BUG]  [BUGGY]  Math.rint(this.getMask());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Math.rint(this.getMask());  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.rint(this.getMask());	  Math.sqrt(this.getMask());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
94	[BUG]  [BUGGY]  Math.sqrt(this.getMask()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(this.getMask()  +  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(this.getMask()  +  1);	  Math.sqrt(this.getMask());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
95	[BUG]  [BUGGY]  Math.sqrt(this.getMask()  /  2);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(this.getMask()  /  2);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(this.getMask()  /  2);	  Math.sqrt(this.getMask());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
96	[BUG]  [BUGGY]  Math.log(this.getMask());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  Math.log(this.getMask());  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.log(this.getMask());	  Math.sqrt(this.getMask());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
97	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.POSITIVE;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE;	  this.khi    =    Double.NEGATIVE;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
98	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  1;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  1;	  this.khi    =    Double.POSITIVE_INFINITY    -    1;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
99	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  -  2;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  -  2;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY  -  2;	  this.khi    =    Double.POSITIVE_INFINITY    -    1;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
100	[BUG]  [BUGGY]  this(new  double[]  {  0,  0,  0  }  );  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(new  double[]  {  0,  0,  0  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  double[]  {  0,  0,  0  }  );	  this(new    double[]    {    x,    y    }    );    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
101	[BUG]  [BUGGY]  this(new  double[]  {  0,  0  }  );  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(new  double[]  {  0,  0  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  double[]  {  0,  0  }  );	  this(new    double[]    {    x,    y    }    );    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
102	[BUG]  [BUGGY]  this(new  double[]  {  0,  0,  y  }  );  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(new  double[]  {  0,  0,  y  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  double[]  {  0,  0,  y  }  );	  this(new    double[]    {    x,    y    }    );    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
103	[BUG]  [BUGGY]  this(new  double[]  {  x,  y  },  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  double[]  {  x,  y  },  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  double[]  {  x,  y  },  false);	  this(new    double[]    {    x,    y    }    );    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
104	[BUG]  [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  super();  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  super();  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    num,    int    delta)    {    super();	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
105	[BUG]  [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  super();  this.num  =  num;  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  super();  this.num  =  num;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    num,    int    delta)    {    super();  this.num  =  num;	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
106	[BUG]  [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  this.num  =  num;  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  this.num  =  num;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    num,    int    delta)    {    this.num  =  num;	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
107	[BUG]  [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  this(num,  delta);  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  this(num,  delta);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    num,    int    delta)    {    this(num,  delta);	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
108	[BUG]  [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  this(num,  delta,  false);  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  this(num,  delta,  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    num,    int    delta)    {    this(num,  delta,  false);	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
109	[BUG]  [BUGGY]  this(null,  null,  false,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  false,  null);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  null,  false,  null);	  this(null,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
110	[BUG]  [BUGGY]  this(null,  null,  false,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  false,  true);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  null,  false,  true);	  this(null,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
111	[BUG]  [BUGGY]  this(new  double[]  {  0,  0,  0,  0,  0  }  );  [CE]  illegal  start  of  type  [FE]        [CONTEXT]        [BUGGY]  this(new  double[]  {  0,  0,  0,  0,  0  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  double[]  {  0,  0,  0,  0,  0  }  );	  public    MultiDirectional(double[]    x,    double    y)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
112	[BUG]  [BUGGY]  super(this.x,  y);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  super(this.x,  y);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(this.x,  y);	  super(x,    y);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
113	[BUG]  [BUGGY]  super(x,  y  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(x,  y  +  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(x,  y  +  1);	  super(x,    y);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
114	[BUG]  [BUGGY]  super(x,  y,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(x,  y,  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(x,  y,  false);	  super(x,    y);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
115	[BUG]  [BUGGY]  super(x,  y,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(x,  y,  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(x,  y,  1);	  super(x,    y);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
116	[BUG]  [BUGGY]  this(2.0,  2.0);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(2.0,  2.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(2.0,  2.0);	  this(2.0,    1.0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
117	[BUG]  [BUGGY]  Math.sqrt(Math.random()  *  2.0);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(Math.random()  *  2.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(Math.random()  *  2.0);	  Math.sqrt(Math.random()    /    2.0);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
118	[BUG]  [BUGGY]  Math.sqrt(Math.random()  +  2.0);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(Math.random()  +  2.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(Math.random()  +  2.0);	  Math.sqrt(Math.random()    /    2.0);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
119	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  super();  this.num  =  num;  }  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num)  {  super();  this.num  =  num;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  num)  {  super();  this.num  =  num;  }	  public    MultiDirectional(double    num)    {    super();    this.num    =    num;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
120	[BUG]  [BUGGY]  super();  this.num  =  num;  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  super();  this.num  =  num;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super();  this.num  =  num;	  public    MultiDirectional(double    num)    {    super();    this.num    =    num;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
121	[BUG]  [BUGGY]  super();  this.num  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  super();  this.num  =  Double.POSITIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super();  this.num  =  Double.POSITIVE_INFINITY;	  public    MultiDirectional(double    num)    {    super();    this.num    =    num;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
122	[BUG]  [BUGGY]  super();  this.num  =  0;  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  super();  this.num  =  0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super();  this.num  =  0;	  public    MultiDirectional(double    num)    {    super();    this.num    =    num;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
123	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  super(new  double[]  {  gamma  }  );  }  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  public  MultiDirectional(double  gamma)  {  super(new  double[]  {  gamma  }  );  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  gamma)  {  super(new  double[]  {  gamma  }  );  }	  public    MultiDirectional(double    gamma)    {    super(new    double[]    {    gamma    }    );    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
124	[BUG]  [BUGGY]  this(new  double[]  {  gamma  }  );  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  this(new  double[]  {  gamma  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  double[]  {  gamma  }  );	  public    MultiDirectional(double    gamma)    {    super(new    double[]    {    gamma    }    );    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
125	[BUG]  [BUGGY]  Math.rint(getMask()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Math.rint(getMask()  -  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.rint(getMask()  -  1);	  Math.rint(getMask());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
126	[BUG]  [BUGGY]  Math.rint(getMask()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Math.rint(getMask()  +  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.rint(getMask()  +  1);	  Math.rint(getMask());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
127	[BUG]  [BUGGY]  Math.rint(Math.log(this.khi));  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  Math.rint(Math.log(this.khi));  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.rint(Math.log(this.khi));	  Math.sqrt(Math.log(this.khi));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
128	[BUG]  [BUGGY]  Math.sqrt(Math.exp(this.khi));  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(Math.exp(this.khi));  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(Math.exp(this.khi));	  Math.sqrt(Math.log(this.khi));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
129	[BUG]  [BUGGY]  Math.sqrt(Math.log(this.khi)+  1);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(this.khi)+  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(Math.log(this.khi)+  1);	  Math.sqrt(Math.log(this.khi));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
130	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  super();  }  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  public  MultiDirectional(double  gamma)  {  super();  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  gamma)  {  super();  }	  public    MultiDirectional(double    gamma)    {    super();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
131	[BUG]  [BUGGY]  public  MultiDirectional(double  khi)  {  super();  }  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  public  MultiDirectional(double  khi)  {  super();  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  khi)  {  super();  }	  public    MultiDirectional(double    gamma)    {    super();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
132	[BUG]  [BUGGY]  this(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  this(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY);	  this(double    gamma,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
133	[BUG]  [BUGGY]  this(double  gamma,  Double.POSITIVE_INFINITY,  2.0);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  this(double  gamma,  Double.POSITIVE_INFINITY,  2.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(double  gamma,  Double.POSITIVE_INFINITY,  2.0);	  this(double    gamma,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
134	[BUG]  [BUGGY]  this(double  gamma,  Double.POSITIVE_INFINITY,  1);  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  this(double  gamma,  Double.POSITIVE_INFINITY,  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(double  gamma,  Double.POSITIVE_INFINITY,  1);	  this(double    gamma,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
135	[BUG]  [BUGGY]  this(double  gamma,  Double.POSITIVE_INFINITY,  false);  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  this(double  gamma,  Double.POSITIVE_INFINITY,  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(double  gamma,  Double.POSITIVE_INFINITY,  false);	  this(double    gamma,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
136	[BUG]  [BUGGY]  this(new  double[]  {  xx,  y  }  );  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(new  double[]  {  xx,  y  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  double[]  {  xx,  y  }  );	  public    MultiDirectional(double    xx,    double    y)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
137	[BUG]  [BUGGY]  public  MultiDirectional(double  y,  double  xx)  {  [CE]  constructor  MultiDirectional(double,double)  is  already  defined  in  class  MultiDirectional  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  public  MultiDirectional(double  y,  double  xx)  {  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  y,  double  xx)  {	  public    MultiDirectional(double    xx,    double    y)    {    	non-compiled	[CE]  constructor  MultiDirectional(double,double)  is  already  defined  in  class  MultiDirectional	70	None	replace
138	[BUG]  [BUGGY]  Math.min(getMask(),  getMask()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Math.min(getMask(),  getMask()  -  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.min(getMask(),  getMask()  -  1);	  Math.sqrt(getMask()    -    1);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
139	[BUG]  [BUGGY]  Math.log(getMask());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Math.log(getMask());  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.log(getMask());	  Math.sqrt(getMask()    -    1);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
140	[BUG]  [BUGGY]  Math.min(getMask(),  getMask());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Math.min(getMask(),  getMask());  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.min(getMask(),  getMask());	  Math.sqrt(getMask()    +    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
141	[BUG]  [BUGGY]  Math.sqrt(getMask()  /  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(getMask()  /  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(getMask()  /  1);	  Math.sqrt(getMask()    +    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
142	[BUG]  [BUGGY]  double  gamma  =  Double.doubleToLongBits(0.0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.doubleToLongBits(0.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.doubleToLongBits(0.0);	  double    gamma    =    Double.doubleToLongBits(2.0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
143	[BUG]  [BUGGY]  double  gamma  =  Double.doubleToLongBits(2.0f);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.doubleToLongBits(2.0f);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.doubleToLongBits(2.0f);	  double    gamma    =    Double.doubleToLongBits(2.0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
144	[BUG]  [BUGGY]  this(1.0,  1.0,  2.0,  2.0);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(1.0,  1.0,  2.0,  2.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(1.0,  1.0,  2.0,  2.0);	  this(1.0,    1.0,    2.0);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
145	[BUG]  [BUGGY]  this(2.0,  1.0,  2.0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(2.0,  1.0,  2.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(2.0,  1.0,  2.0);	  this(1.0,    1.0,    2.0);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
146	[BUG]  [BUGGY]  this(0.0,  1.0,  2.0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(0.0,  1.0,  2.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(0.0,  1.0,  2.0);	  this(1.0,    1.0,    2.0);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
147	[BUG]  [BUGGY]  Double.parseDouble(this.getMask()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Double.parseDouble(this.getMask()  +  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Double.parseDouble(this.getMask()  +  1);	  Double.parseDouble(this.getMask());    	non-compiled	[CE]  <identifier>  expected	86	None	replace
148	[BUG]  [BUGGY]  Double.parseDouble(this.getMask()  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Double.parseDouble(this.getMask()  -  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Double.parseDouble(this.getMask()  -  1);	  Double.parseDouble(this.getMask());    	non-compiled	[CE]  <identifier>  expected	86	None	replace
149	[BUG]  [BUGGY]  Double.parseDouble(this.getMask()  /  2);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Double.parseDouble(this.getMask()  /  2);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Double.parseDouble(this.getMask()  /  2);	  Double.parseDouble(this.getMask());    	non-compiled	[CE]  <identifier>  expected	86	None	replace
150	[BUG]  [BUGGY]  Math.log(Math.random());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Math.log(Math.random());  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.log(Math.random());	  Math.sqrt(Math.random()    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
151	[BUG]  [BUGGY]  Math.sqrt(Math.random()  /  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(Math.random()  /  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(Math.random()  /  1);	  Math.sqrt(Math.random()    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
152	[BUG]  [BUGGY]  double  gamma  =  Double.doubleToLongBits(getBase()  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.doubleToLongBits(getBase()  +  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.doubleToLongBits(getBase()  +  1);	  double    gamma    =    Double.doubleToLongBits(getBase());    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
153	[BUG]  [BUGGY]  double  gamma  =  Double.doubleToLongBits(getBase(),  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.doubleToLongBits(getBase(),  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.doubleToLongBits(getBase(),  1);	  double    gamma    =    Double.doubleToLongBits(getBase());    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
154	[BUG]  [BUGGY]  double  gamma  =  Double.doubleToLongBits(getBase(),  2.0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.doubleToLongBits(getBase(),  2.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.doubleToLongBits(getBase(),  2.0);	  double    gamma    =    Double.doubleToLongBits(getBase());    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
155	[BUG]  [BUGGY]  super();  this.gamma  =  0.0;  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  super();  this.gamma  =  0.0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super();  this.gamma  =  0.0;	  public    MultiDirectional(double    gamma)    {    super();    this.gamma    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
156	[BUG]  [BUGGY]  this.gamma  =  0.0;  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  this.gamma  =  0.0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.gamma  =  0.0;	  public    MultiDirectional(double    gamma)    {    super();    this.gamma    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
157	[BUG]  [BUGGY]  this(1.0,  1.0,  1.0,  2.0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(1.0,  1.0,  1.0,  2.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(1.0,  1.0,  1.0,  2.0);	  this(1.0,    1.0,    1.0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
158	[BUG]  [BUGGY]  this(1.0,  1.0,  1.0,  1.0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(1.0,  1.0,  1.0,  1.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(1.0,  1.0,  1.0,  1.0);	  this(1.0,    1.0,    1.0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
159	[BUG]  [BUGGY]  this(2.0,  1.0,  1.0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(2.0,  1.0,  1.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(2.0,  1.0,  1.0);	  this(1.0,    1.0,    1.0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
160	[BUG]  [BUGGY]  Math.min(0,  getMask()));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Math.min(0,  getMask()));  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.min(0,  getMask()));	  Math.min(2,    getMask()));    	non-compiled	[CE]  <identifier>  expected	88	None	replace
161	[BUG]  [BUGGY]  Math.min(1,  getMask()));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Math.min(1,  getMask()));  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.min(1,  getMask()));	  Math.min(2,    getMask()));    	non-compiled	[CE]  <identifier>  expected	88	None	replace
162	[BUG]  [BUGGY]  Math.min(2,  getMask()  -  1));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Math.min(2,  getMask()  -  1));  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.min(2,  getMask()  -  1));	  Math.min(2,    getMask()));    	non-compiled	[CE]  <identifier>  expected	88	None	replace
163	[BUG]  [BUGGY]  this(Double.NaN,  num);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  this(Double.NaN,  num);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(Double.NaN,  num);	  this(num,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
164	[BUG]  [BUGGY]  this(null,  Double.NaN);  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  this(null,  Double.NaN);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  Double.NaN);	  this(num,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
165	[BUG]  [BUGGY]  this(num,  Double.NaN,  2.0);  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  this(num,  Double.NaN,  2.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(num,  Double.NaN,  2.0);	  this(num,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
166	[BUG]  [BUGGY]  this(Double.NaN,  0);  [CE]  illegal  start  of  type  [FE]                    [CONTEXT]        [BUGGY]  this(Double.NaN,  0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(Double.NaN,  0);	  this(num,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
167	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(1.0  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.id  =  Double.doubleToLongBits(1.0  -  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.id  =  Double.doubleToLongBits(1.0  -  1);	  this.id    =    Double.doubleToLongBits(2.0    -    1);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
168	[BUG]  [BUGGY]  this(num,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]        [CONTEXT]        [BUGGY]  this(num,  Double.POSITIVE_INFINITY);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(num,  Double.POSITIVE_INFINITY);	  public    MultiDirectional(double    num,    int    delta)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
169	[BUG]  [BUGGY]  this(num,  0);  [CE]  illegal  start  of  type  [FE]          [CONTEXT]        [BUGGY]  this(num,  0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(num,  0);	  public    MultiDirectional(double    num,    int    delta)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
170	[BUG]  [BUGGY]  super(num,  delta);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  super(num,  delta);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(num,  delta);	  public    MultiDirectional(double    num,    int    delta)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
171	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble( "1.0 ".doubleValue());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.parseDouble( "1.0 ".doubleValue());  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble( "1.0 ".doubleValue());	  this.khi    =    Double.parseDouble(   "1.0   ");    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
172	[BUG]  [BUGGY]  if(this.khi  ==  Double.POSITIVE_INFINITY  ||  this.khi  ==  Double.POSITIVE_INFINITY)  {  super();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  if(this.khi  ==  Double.POSITIVE_INFINITY  ||  this.khi  ==  Double.POSITIVE_INFINITY)  {  super();  }  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	if(this.khi  ==  Double.POSITIVE_INFINITY  ||  this.khi  ==  Double.POSITIVE_INFINITY)  {  super();  }	  if(this.khi    ==    Double.POSITIVE_INFINITY)    {    super();    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
173	[BUG]  [BUGGY]  this(null,  null,  0,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  0,  0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  null,  0,  0);	  this(null,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
174	[BUG]  [BUGGY]  this(null,  null,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  null,  1);	  this(null,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
175	[BUG]  [BUGGY]  this(null,  null,  0,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  0,  null);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  null,  0,  null);	  this(null,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
176	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble(2.0f);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.parseDouble(2.0f);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble(2.0f);	  this.khi    =    Double.parseDouble(2.0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
177	[BUG]  [BUGGY]  this.khi  =  null;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  null;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  null;	  if(this.khi    ==    null)    {    super();    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
178	[BUG]  [BUGGY]  this.khi  =  new  double[this.gamma.length];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  new  double[this.gamma.length];  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  new  double[this.gamma.length];	  if(this.khi    ==    null)    {    super();    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
179	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  this(new  double[]  {  x,  y  }  );  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  this(new  double[]  {  x,  y  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double[]    y)    {    this(new  double[]  {  x,  y  }  );	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
180	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  super();  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  super();  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double[]    y)    {    super();	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
181	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  super(new  double[]  {  x,  y  }  );  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  super(new  double[]  {  x,  y  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double[]    y)    {    super(new  double[]  {  x,  y  }  );	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
182	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  this(x,  y,  null);  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  this(x,  y,  null);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double[]    y)    {    this(x,  y,  null);	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
183	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  this(x,  y,  null,  null);  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  this(x,  y,  null,  null);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double[]    y)    {    this(x,  y,  null,  null);	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
184	[BUG]  [BUGGY]  this(null,  null,  null,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  null,  null);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  null,  null,  null);	  this(null,    null,    null);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
185	[BUG]  [BUGGY]  this(null,  null,  null,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  null,  false);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  null,  null,  false);	  this(null,    null,    null);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
186	[BUG]  [BUGGY]  this(null,  null,  null,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  null,  0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  null,  null,  0);	  this(null,    null,    null);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
187	[BUG]  [BUGGY]  this.num  =  Double.parseDouble(num).doubleValue();  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  this.num  =  Double.parseDouble(num).doubleValue();  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.num  =  Double.parseDouble(num).doubleValue();	  public    MultiDirectional(double    num)    {    this.num    =    Double.parseDouble(num);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
188	[BUG]  [BUGGY]  super();  this.num  =  Double.parseDouble(num);  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  super();  this.num  =  Double.parseDouble(num);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super();  this.num  =  Double.parseDouble(num);	  public    MultiDirectional(double    num)    {    this.num    =    Double.parseDouble(num);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
189	[BUG]  [BUGGY]  double  gamma  =  Double.doubleToLongBits(1.0f);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.doubleToLongBits(1.0f);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.doubleToLongBits(1.0f);	  double    gamma    =    Double.doubleToLongBits(1.0);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
190	[BUG]  [BUGGY]  super(new  double[]  {  this.gamma  }  );  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  super(new  double[]  {  this.gamma  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(new  double[]  {  this.gamma  }  );	  super(new    double[]    {    gamma    }    );    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
191	[BUG]  [BUGGY]  super(new  double[]  {  khi  }  );  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  super(new  double[]  {  khi  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(new  double[]  {  khi  }  );	  super(new    double[]    {    gamma    }    );    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
192	[BUG]  [BUGGY]  super(new  double[]  {  0,  0  }  );  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  super(new  double[]  {  0,  0  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(new  double[]  {  0,  0  }  );	  super(new    double[]    {    gamma    }    );    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
193	[BUG]  [BUGGY]  super(new  double[]  {  0  }  );  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  super(new  double[]  {  0  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(new  double[]  {  0  }  );	  super(new    double[]    {    gamma    }    );    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
194	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble( "0.0,  1.0 ");  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.parseDouble( "0.0,  1.0 ");  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble( "0.0,  1.0 ");	  this.khi    =    Double.parseDouble(   "0.0,   ");    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
195	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble( "0.0,  0.0);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.parseDouble( "0.0,  0.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble( "0.0,  0.0);	  this.khi    =    Double.parseDouble(   "0.0,   ");    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
196	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble( "0.0,  0 ");  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.parseDouble( "0.0,  0 ");  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble( "0.0,  0 ");	  this.khi    =    Double.parseDouble(   "0.0,   ");    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
197	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble( "0.0,  0.0 ");  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.parseDouble( "0.0,  0.0 ");  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble( "0.0,  0.0 ");	  this.khi    =    Double.parseDouble(   "0.0,   ");    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
198	[BUG]  [BUGGY]  this.khi  =  2.0;  this.gamma  =  1.0;  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  this.khi  =  2.0;  this.gamma  =  1.0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  2.0;  this.gamma  =  1.0;	  public    MultiDirectional(double    gamma)    {    this.khi    =    2.0;    this.gamma    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
199	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  &  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  &  Double.POSITIVE_INFINITY;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY  &  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    |    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
200	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  super();  }  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num)  {  super();  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  num)  {  super();  }	  public    MultiDirectional(double    num)    {    super();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
201	[BUG]  [BUGGY]  public  MultiDirectional()  {  super();  }  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  public  MultiDirectional()  {  super();  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional()  {  super();  }	  public    MultiDirectional(double    num)    {    super();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
202	[BUG]  [BUGGY]  this(x,  y,  true);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(x,  y,  true);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(x,  y,  true);	  this(x,    y,    false);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
203	[BUG]  [BUGGY]  this(null,  y,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(null,  y,  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  y,  false);	  this(x,    y,    false);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
204	[BUG]  [BUGGY]  this(this.x,  y,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(this.x,  y,  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(this.x,  y,  false);	  this(x,    y,    false);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
205	[BUG]  [BUGGY]  this(0.0,  0.0,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(0.0,  0.0,  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(0.0,  0.0,  false);	  this(x,    y,    false);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
206	[BUG]  [BUGGY]  Double.parseDouble(this.getMask(),  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Double.parseDouble(this.getMask(),  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Double.parseDouble(this.getMask(),  1);	  Double.parseDouble(this.getMask());    	non-compiled	[CE]  <identifier>  expected	86	None	replace
207	[BUG]  [BUGGY]  Math.rint(getMask()  /  2.0);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Math.rint(getMask()  /  2.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.rint(getMask()  /  2.0);	  Math.rint(getMask());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
208	[BUG]  [BUGGY]  Math.min(Math.sqrt(Math.random()));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Math.min(Math.sqrt(Math.random()));  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.min(Math.sqrt(Math.random()));	  Math.sqrt(Math.random()    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
209	[BUG]  [BUGGY]  if(Double.isInfinite(this.khi))  {  super();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  if(Double.isInfinite(this.khi))  {  super();  }  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	if(Double.isInfinite(this.khi))  {  super();  }	  if(this.khi    ==    Double.POSITIVE_INFINITY)    {    super();    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
210	[BUG]  [BUGGY]  public  MultiDirectional(double  num,  double  delta)  {  [CE]  constructor  MultiDirectional(double,double)  is  already  defined  in  class  MultiDirectional  [FE]        [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num,  double  delta)  {  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  num,  double  delta)  {	  public    MultiDirectional(double    num,    int    delta)    {    	non-compiled	[CE]  constructor  MultiDirectional(double,double)  is  already  defined  in  class  MultiDirectional	57	None	replace
211	[BUG]  [BUGGY]  this(1.0,  0.0,  2.0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(1.0,  0.0,  2.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(1.0,  0.0,  2.0);	  this(1.0,    0.0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
212	[BUG]  [BUGGY]  this(Double.NaN,  Double.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  this(Double.NaN,  Double.MIN_VALUE);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(Double.NaN,  Double.MIN_VALUE);	  this(num,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
213	[BUG]  [BUGGY]  this(Double.NaN,  1.0);  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  this(Double.NaN,  1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(Double.NaN,  1.0);	  this(num,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
214	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  -  1L;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  -  1L;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY  -  1L;	  this.khi    =    Double.POSITIVE_INFINITY    -    1;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
215	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  num;  }  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  num;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  num)  {  this.num  =  num;  }	  public    MultiDirectional(double    num)    {    this.num    =    num;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
216	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  super(new  double[]  {  x  },  y  }  );  [CE]  ')'  expected  [FE]        [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  super(new  double[]  {  x  },  y  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double    y)    {    super(new  double[]  {  x  },  y  }  );	  	non-compiled	[CE]  ')'  expected	94	None	add
217	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  super(x,  y);  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  super(x,  y);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double    y)    {    super(x,  y);	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
218	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble( "0 ",  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.parseDouble( "0 ",  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble( "0 ",  1);	  double    gamma    =    Double.parseDouble(   "0   ");    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
219	[BUG]  [BUGGY]  Math.min(getMask(),  getMask()));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Math.min(getMask(),  getMask()));  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.min(getMask(),  getMask()));	  Math.sqrt(getMask()    -    1);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
220	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  Double.parseDouble(num);  }  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  Double.parseDouble(num);  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  num)  {  this.num  =  Double.parseDouble(num);  }	  public    MultiDirectional(double    num)    {    this.num    =    Double.parseDouble(num);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
221	[BUG]  [BUGGY]  public  MultiDirectional()  {  this.num  =  Double.parseDouble(num);  }  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  public  MultiDirectional()  {  this.num  =  Double.parseDouble(num);  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional()  {  this.num  =  Double.parseDouble(num);  }	  public    MultiDirectional(double    num)    {    this.num    =    Double.parseDouble(num);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
222	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY  +  1;	  this.khi    =    Double.POSITIVE_INFINITY?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
223	[BUG]  [BUGGY]  this(1.0,  Double.NaN);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  this(1.0,  Double.NaN);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(1.0,  Double.NaN);	  this(double    gamma,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
224	[BUG]  [BUGGY]  this(Double.POSITIVE_INFINITY,  Double.NaN);  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  this(Double.POSITIVE_INFINITY,  Double.NaN);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(Double.POSITIVE_INFINITY,  Double.NaN);	  this(double    gamma,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
225	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble( "2.0 ");  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.parseDouble( "2.0 ");  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble( "2.0 ");	  double    gamma    =    Double.parseDouble(   "0.0   ");    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
226	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  gamma)  {  this.khi  =  2.0;  this.gamma  =  0.5;  }	  public    MultiDirectional(double    gamma)    {    this.khi    =    2.0;    this.gamma    =    0.5;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
227	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  1.0;  this.gamma  =  1.0;  }  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  1.0;  this.gamma  =  1.0;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  gamma)  {  this.khi  =  1.0;  this.gamma  =  1.0;  }	  public    MultiDirectional(double    gamma)    {    this.khi    =    2.0;    this.gamma    =    0.5;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
228	[BUG]  [BUGGY]  public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }	  public    MultiDirectional(double    gamma)    {    this.khi    =    2.0;    this.gamma    =    0.5;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
229	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  -  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  -  Double.POSITIVE_INFINITY;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY  -  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    |    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
230	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  0.5;  }  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  0.5;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  gamma)  {  this.khi  =  0.5;  }	  public    MultiDirectional(double    gamma)    {    this.khi    =    2.0;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
231	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  1.0;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  gamma)  {  this.khi  =  1.0;  }	  public    MultiDirectional(double    gamma)    {    this.khi    =    2.0;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
232	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  0.5;  [CE]  variable  khi  might  already  have  been  assigned  [FE]                    [CONTEXT]        [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  0.5;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  gamma)  {  this.khi  =  0.5;	  public    MultiDirectional(double    gamma)    {    this.khi    =    2.0;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	44	None	replace
233	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  1.0;  [CE]  variable  khi  might  already  have  been  assigned  [FE]                      [CONTEXT]        [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  1.0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  gamma)  {  this.khi  =  1.0;	  public    MultiDirectional(double    gamma)    {    this.khi    =    2.0;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	44	None	replace
234	[BUG]  [BUGGY]  double  gamma  =  Double.doubleToLongBits(getBaseValue());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.doubleToLongBits(getBaseValue());  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.doubleToLongBits(getBaseValue());	  double    gamma    =    Double.doubleToLongBits(getBase());    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
235	[BUG]  [BUGGY]  double  gamma  =  Double.doubleToLongBits(getBase()  /  2.0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.doubleToLongBits(getBase()  /  2.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.doubleToLongBits(getBase()  /  2.0);	  double    gamma    =    Double.doubleToLongBits(getBase());    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
236	[BUG]  [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  super(num,  delta);  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  super(num,  delta);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    num,    int    delta)    {    super(num,  delta);	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
237	[BUG]  [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  super(num);  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  super(num);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    num,    int    delta)    {    super(num);	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
238	[BUG]  [BUGGY]  super(new  double[]  {  this  }  );  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  super(new  double[]  {  this  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(new  double[]  {  this  }  );	  super(new    double[]    {    gamma    }    );    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
239	[BUG]  [BUGGY]  Math.min(3,  getMask()));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Math.min(3,  getMask()));  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.min(3,  getMask()));	  Math.min(2,    getMask()));    	non-compiled	[CE]  <identifier>  expected	88	None	replace
240	[BUG]  [BUGGY]  [FE]    [FE]        [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  y,  double  x)  {  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	add	public  MultiDirectional(double[]  y,  double  x)  {	  public    MultiDirectional(double[]    x,    double    y)    {    	compilable	  [FE]    	95	4	replace
241	[BUG]  [BUGGY]  public  MultiDirectional(double[]  y,  double  x)  {  [FE]    [FE]        [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  y,  double  x)  {  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double[]  y,  double  x)  {	  public    MultiDirectional(double[]    x,    double    y)    {    	compilable	  [FE]    	95	4	replace
242	[BUG]  [BUGGY]  this(null,  num);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  this(null,  num);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  num);	  this(num,    null);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
243	[BUG]  [BUGGY]  this(false,  null);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  this(false,  null);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(false,  null);	  this(num,    null);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
244	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
245	[BUG]  [BUGGY]  this(null,  null,  0,  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  0,  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  null,  0,  1);	  this(null,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
246	[BUG]  [BUGGY]  public  MultiDirectional()  {  super();  this.gamma  =  0.5;  }  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  public  MultiDirectional()  {  super();  this.gamma  =  0.5;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional()  {  super();  this.gamma  =  0.5;  }	  public    MultiDirectional(double    gamma)    {    super();    this.gamma    =    0.5;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
247	[BUG]  [BUGGY]  this(null,  1.0,  1.0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(null,  1.0,  1.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  1.0,  1.0);	  this(null,    1.0);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
248	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(0.0  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.id  =  Double.doubleToLongBits(0.0  -  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.id  =  Double.doubleToLongBits(0.0  -  1);	  this.id    =    Double.doubleToLongBits(2.0    -    1);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
249	[BUG]  [BUGGY]  [FE]    [FE]        [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  y,  double[]  x)  {  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	add	public  MultiDirectional(double[]  y,  double[]  x)  {	  public    MultiDirectional(double[]    x,    double[]    y)    {    	compilable	  [FE]    	69	4	replace
250	[BUG]  [BUGGY]  public  MultiDirectional(double[]  y,  double[]  x)  {  [FE]    [FE]        [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  y,  double[]  x)  {  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double[]  y,  double[]  x)  {	  public    MultiDirectional(double[]    x,    double[]    y)    {    	compilable	  [FE]    	69	4	replace
251	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  super(new  double[]  {  x  },  y  }  );  [CE]  ')'  expected  [FE]        [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  super(new  double[]  {  x  },  y  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double[]    y)    {    super(new  double[]  {  x  },  y  }  );	  	non-compiled	[CE]  ')'  expected	68	None	add
252	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  super(x,  y);  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  super(x,  y);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double[]    y)    {    super(x,  y);	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
253	[BUG]  [BUGGY]  this(false,  null,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(false,  null,  false);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(false,  null,  false);	  this(null,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
254	[BUG]  [BUGGY]  this(false,  y,  false);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(false,  y,  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(false,  y,  false);	  this(x,    y,    false);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
255	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  this.khi  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                    [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num)  {  this.khi  =  1.0;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  num)  {  this.khi  =  1.0;  }	  public    MultiDirectional(double    num)    {    this.khi    =    2.0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
256	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  this.khi  =  1.0;  [CE]  variable  khi  might  already  have  been  assigned  [FE]                      [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num)  {  this.khi  =  1.0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  num)  {  this.khi  =  1.0;	  public    MultiDirectional(double    num)    {    this.khi    =    2.0;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	9	None	replace
257	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  this.khi  =  0.5;  }  [CE]  illegal  start  of  type  [FE]                        [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num)  {  this.khi  =  0.5;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  num)  {  this.khi  =  0.5;  }	  public    MultiDirectional(double    num)    {    this.khi    =    2.0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
258	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  this.khi  =  2.0;  }  [CE]  illegal  start  of  type  [FE]                          [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num)  {  this.khi  =  2.0;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  num)  {  this.khi  =  2.0;  }	  public    MultiDirectional(double    num)    {    this.khi    =    2.0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
259	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  Double.NaN;  }  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  Double.NaN;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  num)  {  this.num  =  Double.NaN;  }	  public    MultiDirectional(double    num)    {    this.num    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
260	[BUG]  [BUGGY]  public  MultiDirectional()  {  super();  this.gamma  =  1.0;  }  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  public  MultiDirectional()  {  super();  this.gamma  =  1.0;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional()  {  super();  this.gamma  =  1.0;  }	  public    MultiDirectional(double    gamma)    {    super();    this.gamma    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
261	[BUG]  [BUGGY]  this.khi  =  Double.NEGATIVE_INFINITY  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.NEGATIVE_INFINITY  -  1;	  this.khi    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
262	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  2.0;  this.gamma  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  2.0;  this.gamma  =  1.0;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  gamma)  {  this.khi  =  2.0;  this.gamma  =  1.0;  }	  public    MultiDirectional(double    gamma)    {    this.khi    =    2.0;    this.gamma    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
263	[BUG]  [BUGGY]  public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                    [CONTEXT]        [BUGGY]  public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  1.0;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  1.0;  }	  public    MultiDirectional(double    gamma)    {    this.khi    =    2.0;    this.gamma    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
264	[BUG]  [BUGGY]  public  MultiDirectional(double  y,  double  x)  {  this.khi  =  1.0;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  public  MultiDirectional(double  y,  double  x)  {  this.khi  =  1.0;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  y,  double  x)  {  this.khi  =  1.0;  }	  public    MultiDirectional(double    x,    double    y)    {    this.khi    =    1.0;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
265	[BUG]  [BUGGY]  Math.sqrt(Math.log(this.khi  /  2.0));  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(this.khi  /  2.0));  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(Math.log(this.khi  /  2.0));	  Math.sqrt(Math.log(this.khi));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
266	[BUG]  [BUGGY]  this.khi  =  0.5;  this.gamma  =  0.5;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  0.5;  this.gamma  =  0.5;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  0.5;  this.gamma  =  0.5;	  this.khi    =    1.0;    this.gamma    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
267	[BUG]  [BUGGY]  this.khi  =  0.0;  this.gamma  =  1.0;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  0.0;  this.gamma  =  1.0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  0.0;  this.gamma  =  1.0;	  this.khi    =    1.0;    this.gamma    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
268	[BUG]  [BUGGY]  [FE]    [FE]                AssertionError      [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  xx,  double  y)  {  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	add	public  MultiDirectional(double[]  xx,  double  y)  {	  public    MultiDirectional(double    xx,    double    y)    {    	compilable	  [FE]    	70	4	replace
269	[BUG]  [BUGGY]  public  MultiDirectional(double[]  xx,  double  y)  {  [FE]    [FE]                AssertionError      [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  xx,  double  y)  {  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double[]  xx,  double  y)  {	  public    MultiDirectional(double    xx,    double    y)    {    	compilable	  [FE]    	70	4	replace
270	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble(-1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.parseDouble(-1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble(-1);	  this.khi    =    Double.parseDouble(0);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
271	[BUG]  [BUGGY]  Double.parseDouble(this.global);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Double.parseDouble(this.global);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Double.parseDouble(this.global);	  Double.parseDouble(this.khi);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
272	[BUG]  [BUGGY]  Double.parseDouble(this.id);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Double.parseDouble(this.id);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Double.parseDouble(this.id);	  Double.parseDouble(this.khi);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
273	[BUG]  [BUGGY]  this(null,  null,  null,  1.0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  null,  1.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  null,  null,  1.0);	  this(null,    null,    null);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
274	[BUG]  [BUGGY]  private  MultiDirectional(double  gamma)  {  super();  }  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  private  MultiDirectional(double  gamma)  {  super();  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	private  MultiDirectional(double  gamma)  {  super();  }	  public    MultiDirectional(double    gamma)    {    super();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
275	[BUG]  [BUGGY]  if(this.khi!=  null)  {  super();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  if(this.khi!=  null)  {  super();  }  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	if(this.khi!=  null)  {  super();  }	  if(this.khi    ==    null)    {    super();    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
276	[BUG]  [BUGGY]  if(this.gamma  ==  null)  {  super();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  if(this.gamma  ==  null)  {  super();  }  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	if(this.gamma  ==  null)  {  super();  }	  if(this.khi    ==    null)    {    super();    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
277	[BUG]  [BUGGY]  this(0.0,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  this(0.0,  Double.POSITIVE_INFINITY);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(0.0,  Double.POSITIVE_INFINITY);	  this(double    gamma,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
278	[BUG]  [BUGGY]  this(1.0,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  this(1.0,  Double.POSITIVE_INFINITY);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(1.0,  Double.POSITIVE_INFINITY);	  this(double    gamma,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
279	[BUG]  [BUGGY]  this(double  gamma,  Double.POSITIVE_INFINITY,  1.0);  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  this(double  gamma,  Double.POSITIVE_INFINITY,  1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(double  gamma,  Double.POSITIVE_INFINITY,  1.0);	  this(double    gamma,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
280	[BUG]  [BUGGY]  Math.sqrt(Math.random()  *  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(Math.random()  *  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(Math.random()  *  1);	  Math.sqrt(Math.random()    -    1);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
281	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble(this.global);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.parseDouble(this.global);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble(this.global);	  double    gamma    =    Double.parseDouble(this.khi);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
282	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble(this.translation);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.parseDouble(this.translation);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble(this.translation);	  double    gamma    =    Double.parseDouble(this.khi);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
283	[BUG]  [BUGGY]  super(new  Double(this.gi));  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  super(new  Double(this.gi));  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(new  Double(this.gi));	  super(new    Double(gamma));    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
284	[BUG]  [BUGGY]  super(double);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  super(double);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(double);	  super(num);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
285	[BUG]  [BUGGY]  super(1.0);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  super(1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(1.0);	  super(num);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
286	[BUG]  [BUGGY]  Math.sqrt(this.getMask()  /  2.0);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(this.getMask()  /  2.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(this.getMask()  /  2.0);	  Math.sqrt(this.getMask());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
287	[BUG]  [BUGGY]  Math.sqrt(this.getMask()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(this.getMask()  -  1);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(this.getMask()  -  1);	  Math.sqrt(this.getMask());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
288	[BUG]  [BUGGY]  Math.rint(Math.random()  /  2.0);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Math.rint(Math.random()  /  2.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.rint(Math.random()  /  2.0);	  Math.rint(Math.random());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
289	[BUG]  [BUGGY]  public  MultiDirectional(double[]  gamma)  {  super(new  double[]  {  gamma  }  );  [CE]  incompatible  types  [FE]            [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  gamma)  {  super(new  double[]  {  gamma  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double[]  gamma)  {  super(new  double[]  {  gamma  }  );	  public    MultiDirectional(double    gamma)    {    super(new    double[]    {    gamma    }    );    	non-compiled	[CE]  incompatible  types	89	None	replace
290	[BUG]  [BUGGY]  public  MultiDirectional()  {  super(new  double[]  {  gamma  }  );  [CE]  cannot  reference  gamma  before  supertype  constructor  has  been  called  [FE]              [CONTEXT]        [BUGGY]  public  MultiDirectional()  {  super(new  double[]  {  gamma  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional()  {  super(new  double[]  {  gamma  }  );	  public    MultiDirectional(double    gamma)    {    super(new    double[]    {    gamma    }    );    	non-compiled	[CE]  cannot  reference  gamma  before  supertype  constructor  has  been  called	89	None	replace
291	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(1.0  -  1.0);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.id  =  Double.doubleToLongBits(1.0  -  1.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.id  =  Double.doubleToLongBits(1.0  -  1.0);	  this.id    =    Double.doubleToLongBits(1.0f);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
292	[BUG]  [BUGGY]  this(new  Double(0.0),  new  double(y));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(new  Double(0.0),  new  double(y));  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  Double(0.0),  new  double(y));	  this(new    Double(x),    new    double(y));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
293	[BUG]  [BUGGY]  private  MultiDirectional(double  num)  {  super();  }  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  private  MultiDirectional(double  num)  {  super();  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	private  MultiDirectional(double  num)  {  super();  }	  public    MultiDirectional(double    num)    {    super();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
294	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  Double.doubleToLongBits(num);  }  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  Double.doubleToLongBits(num);  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  num)  {  this.num  =  Double.doubleToLongBits(num);  }	  public    MultiDirectional(double    num)    {    this.num    =    Double.doubleToLongBits(num);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
295	[BUG]  [BUGGY]  public  MultiDirectional()  {  this.num  =  Double.doubleToLongBits(num);  }  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  public  MultiDirectional()  {  this.num  =  Double.doubleToLongBits(num);  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional()  {  this.num  =  Double.doubleToLongBits(num);  }	  public    MultiDirectional(double    num)    {    this.num    =    Double.doubleToLongBits(num);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
296	[BUG]  [BUGGY]  public  MultiDirectional()  {  super();  this.num  =  0;  }  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  public  MultiDirectional()  {  super();  this.num  =  0;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional()  {  super();  this.num  =  0;  }	  public    MultiDirectional(double    num)    {    super();    this.num    =    num;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
297	[BUG]  [BUGGY]  public  MultiDirectional()  {  super();  this.num  =  num;  }  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  public  MultiDirectional()  {  super();  this.num  =  num;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional()  {  super();  this.num  =  num;  }	  public    MultiDirectional(double    num)    {    super();    this.num    =    num;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
298	[BUG]  [BUGGY]  super(0.5,  1.0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(0.5,  1.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(0.5,  1.0);	  super(0.0,    1.0);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
299	[BUG]  [BUGGY]  public  MultiDirectional()  {  super();  this.gamma  =  0.0;  }  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  public  MultiDirectional()  {  super();  this.gamma  =  0.0;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional()  {  super();  this.gamma  =  0.0;  }	  public    MultiDirectional(double    gamma)    {    super();    this.gamma    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
300	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  this.x  =  1.0;  this.y  =  1.0;  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  this.x  =  1.0;  this.y  =  1.0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double[]    y)    {    this.x  =  1.0;  this.y  =  1.0;	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
301	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  super();  this.x  =  1.0;  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  super();  this.x  =  1.0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double[]    y)    {    super();  this.x  =  1.0;	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
302	[BUG]  [BUGGY]  this.gamma  =  0.5;  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  this.gamma  =  0.5;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.gamma  =  0.5;	  public    MultiDirectional(double    gamma)    {    this.khi    =    2.0;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
303	[BUG]  [BUGGY]  this(num,  new  Double(delta));  [CE]  illegal  start  of  type  [FE]        [CONTEXT]        [BUGGY]  this(num,  new  Double(delta));  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(num,  new  Double(delta));	  public    MultiDirectional(double    num,    int    delta)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
304	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  this.x  =  1.0;  this.y  =  1.0;  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  this.x  =  1.0;  this.y  =  1.0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double    y)    {    this.x  =  1.0;  this.y  =  1.0;	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
305	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  super();  this.x  =  1.0;  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  super();  this.x  =  1.0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double[]    x,    double    y)    {    super();  this.x  =  1.0;	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
306	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  super();  this.num  =  0;  }  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num)  {  super();  this.num  =  0;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  num)  {  super();  this.num  =  0;  }	  public    MultiDirectional(double    num)    {    super();    this.num    =    num;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
307	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble(doubleValue());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.parseDouble(doubleValue());  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble(doubleValue());	  double    gamma    =    Double.parseDouble(this.khi);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
308	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble(doubleValue);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.parseDouble(doubleValue);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble(doubleValue);	  double    gamma    =    Double.parseDouble(this.khi);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
309	[BUG]  [BUGGY]  Math.min(0.0,  this.getMask());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Math.min(0.0,  this.getMask());  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.min(0.0,  this.getMask());	  Math.sqrt(this.getMask());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
310	[BUG]  [BUGGY]  super(2.0);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  super(2.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(2.0);	  super(num);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
311	[BUG]  [BUGGY]  Math.exp(Math.random());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Math.exp(Math.random());  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.exp(Math.random());	  Math.sqrt(Math.random()    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
312	[BUG]  [BUGGY]  Math.abs(Math.random());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Math.abs(Math.random());  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.abs(Math.random());	  Math.sqrt(Math.random()    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
313	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  this.base  =  Double.POSITIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.base  =  Double.POSITIVE_INFINITY;	  public    MultiDirectional(double    gamma)    {    this.khi    =    2.0;    this.gamma    =    0.5;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
314	[BUG]  [BUGGY]  this.base  =  new  Double(2.0);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  this.base  =  new  Double(2.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.base  =  new  Double(2.0);	  public    MultiDirectional(double    gamma)    {    this.khi    =    2.0;    this.gamma    =    0.5;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
315	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble( "1 ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.parseDouble( "1 ");  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble( "1 ");	  double    gamma    =    Double.parseDouble(   "0   ");    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
316	[BUG]  [BUGGY]  this(null,  null,  true,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  true,  false);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  null,  true,  false);	  this(null,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
317	[BUG]  [BUGGY]  this.y  =  1.0;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.y  =  1.0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.y  =  1.0;	  public    MultiDirectional(double    x,    double    y)    {    this.khi    =    1.0;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
318	[BUG]  [BUGGY]  this(0.0,  1.0,  1.0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(0.0,  1.0,  1.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(0.0,  1.0,  1.0);	  this(1.0,    1.0,    1.0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
319	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INT;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INT;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INT;	  this.khi    =    Double.POSITIVE_INFINITY?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
320	[BUG]  [BUGGY]  public  MultiDirectional(double[]  num)  {  super();  }  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  public  MultiDirectional(double[]  num)  {  super();  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double[]  num)  {  super();  }	  public    MultiDirectional(double    num)    {    super();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
321	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  this.gamma  =  0.5;  }  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  public  MultiDirectional(double  gamma)  {  this.gamma  =  0.5;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  gamma)  {  this.gamma  =  0.5;  }	  public    MultiDirectional(double    gamma)    {    super();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
322	[BUG]  [BUGGY]  Math.min(0.0,  getError());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Math.min(0.0,  getError());  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.min(0.0,  getError());	  Math.sqrt(getError());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
323	[BUG]  [BUGGY]  this(false,  null,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(false,  null,  0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(false,  null,  0);	  this(null,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
324	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  Double.parseDouble(num);  }  else  {  this.num  =  Double.parseDouble(num);  }  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  Double.parseDouble(num);  }  else  {  this.num  =  Double.parseDouble(num);  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  num)  {  this.num  =  Double.parseDouble(num);  }  else  {  this.num  =  Double.parseDouble(num);  }	  public    MultiDirectional(double    num)    {    this.num    =    Double.parseDouble(num);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
325	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  super(new  double[]  {  gamma  },  false);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]            [CONTEXT]        [BUGGY]  public  MultiDirectional(double  gamma)  {  super(new  double[]  {  gamma  },  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  gamma)  {  super(new  double[]  {  gamma  },  false);	  public    MultiDirectional(double    gamma)    {    super(new    double[]    {    gamma    }    );    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	89	None	replace
326	[BUG]  [BUGGY]  this(Double.NaN,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  this(Double.NaN,  Double.POSITIVE_INFINITY);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(Double.NaN,  Double.POSITIVE_INFINITY);	  this(num,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
327	[BUG]  [BUGGY]  this(Double.NaN,  Double.NEGATIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]                [CONTEXT]        [BUGGY]  this(Double.NaN,  Double.NEGATIVE_INFINITY);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(Double.NaN,  Double.NEGATIVE_INFINITY);	  this(num,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
328	[BUG]  [BUGGY]  this(0,  Double.NaN);  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  this(0,  Double.NaN);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(0,  Double.NaN);	  this(num,    Double.NaN);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
329	[BUG]  [BUGGY]  this.num  =  1.0;  [CE]  illegal  start  of  type  [FE]                    [CONTEXT]        [BUGGY]  this.num  =  1.0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.num  =  1.0;	  public    MultiDirectional(double    num)    {    this.khi    =    2.0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
330	[BUG]  [BUGGY]  this.num  =  0;  [CE]  illegal  start  of  type  [FE]                      [CONTEXT]        [BUGGY]  this.num  =  0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.num  =  0;	  public    MultiDirectional(double    num)    {    this.khi    =    2.0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
331	[BUG]  [BUGGY]  this.num  =  0.5;  [CE]  illegal  start  of  type  [FE]                        [CONTEXT]        [BUGGY]  this.num  =  0.5;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.num  =  0.5;	  public    MultiDirectional(double    num)    {    this.khi    =    2.0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
332	[BUG]  [BUGGY]  if(Double.isNaN(this.khi)||  Double.POSITIVE_INFINITY)  {  super();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  if(Double.isNaN(this.khi)||  Double.POSITIVE_INFINITY)  {  super();  }  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	if(Double.isNaN(this.khi)||  Double.POSITIVE_INFINITY)  {  super();  }	  if(this.khi    ==    Double.POSITIVE_INFINITY)    {    super();    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
333	[BUG]  [BUGGY]  if(Double.isInfinite(this.khi)||  Double.isInfinite(this.khi))  {  super();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  if(Double.isInfinite(this.khi)||  Double.isInfinite(this.khi))  {  super();  }  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	if(Double.isInfinite(this.khi)||  Double.isInfinite(this.khi))  {  super();  }	  if(this.khi    ==    Double.POSITIVE_INFINITY)    {    super();    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
334	[BUG]  [BUGGY]  this(1.0,  1.0,  false);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(1.0,  1.0,  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(1.0,  1.0,  false);	  this(x,    y,    false);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
335	[BUG]  [BUGGY]  this(0.0,  1.0,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(0.0,  1.0,  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(0.0,  1.0,  false);	  this(x,    y,    false);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
336	[BUG]  [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  this.num  =  Double.NaN;  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  this.num  =  Double.NaN;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    num,    int    delta)    {    this.num  =  Double.NaN;	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
337	[BUG]  [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  this.num  =  Math.max(num,  delta);  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  this.num  =  Math.max(num,  delta);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    num,    int    delta)    {    this.num  =  Math.max(num,  delta);	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
338	[BUG]  [BUGGY]  this.gamma  =  1.0;  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  this.gamma  =  1.0;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.gamma  =  1.0;	  public    MultiDirectional(double    gamma)    {    this.khi    =    2.0;    this.gamma    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
339	[BUG]  [BUGGY]  this.base  =  new  Double(1.0);  [CE]  illegal  start  of  type  [FE]                    [CONTEXT]        [BUGGY]  this.base  =  new  Double(1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.base  =  new  Double(1.0);	  public    MultiDirectional(double    gamma)    {    this.khi    =    2.0;    this.gamma    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
340	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble(1.0  -  1.0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.parseDouble(1.0  -  1.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble(1.0  -  1.0);	  this.khi    =    Double.parseDouble(1.0f);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
341	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble( "0.0 ",  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.parseDouble( "0.0 ",  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble( "0.0 ",  1);	  double    gamma    =    Double.parseDouble(   "0.0   ");    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
342	[BUG]  [BUGGY]  this(false,  1.0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(false,  1.0);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(false,  1.0);	  this(null,    1.0);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
343	[BUG]  [BUGGY]  Math.sqrt(Math.random()  *  Math.log(this.khi));  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(Math.random()  *  Math.log(this.khi));  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(Math.random()  *  Math.log(this.khi));	  Math.sqrt(Math.log(this.khi));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
344	[BUG]  [BUGGY]  Math.sqrt(Math.log(this.khi),  this.gamma);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(this.khi),  this.gamma);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(Math.log(this.khi),  this.gamma);	  Math.sqrt(Math.log(this.khi));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
345	[BUG]  [BUGGY]  this(double  gamma,  Double.POSITIVE_INFINITY,  0.5);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  this(double  gamma,  Double.POSITIVE_INFINITY,  0.5);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(double  gamma,  Double.POSITIVE_INFINITY,  0.5);	  this(double    gamma,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
346	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble(10);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.parseDouble(10);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble(10);	  this.khi    =    Double.parseDouble(0);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
347	[BUG]  [BUGGY]  this(num,  null,  0.5);  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  this(num,  null,  0.5);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(num,  null,  0.5);	  this(num,    null);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
348	[BUG]  [BUGGY]  super(new  double[]  {  1  }  );  [CE]  illegal  start  of  type  [FE]            [CONTEXT]        [BUGGY]  super(new  double[]  {  1  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(new  double[]  {  1  }  );	  super(new    double[]    {    gamma    }    );    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
349	[BUG]  [BUGGY]  this(new  double[]  {  0,  y  }  );  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(new  double[]  {  0,  y  }  );  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  double[]  {  0,  y  }  );	  this(new    double[]    {    x,    y    }    );    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
350	[BUG]  [BUGGY]  double  gamma  =  Double.doubleToLongBits(getBase()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  double  gamma  =  Double.doubleToLongBits(getBase()  -  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.doubleToLongBits(getBase()  -  1);	  double    gamma    =    Double.doubleToLongBits(getBase());    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
351	[BUG]  [BUGGY]  Math.max(getMask(),  getMask());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Math.max(getMask(),  getMask());  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.max(getMask(),  getMask());	  Math.sqrt(getMask()    -    1);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
352	[BUG]  [BUGGY]  Math.sqrt(Math.abs(this.random()));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(this.random()));  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(Math.abs(this.random()));	  Math.sqrt(Math.random()    -    1);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
353	[BUG]  [BUGGY]  Math.sqrt(Math.log(1L));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(1L));  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(Math.log(1L));	  Math.sqrt(Math.random()    -    1);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
354	[BUG]  [BUGGY]  Math.sqrt(Math.log(this.log));  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(this.log));  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(Math.log(this.log));	  Math.sqrt(Math.random()    -    1);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
355	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  Double.doubleToLongBits(num  +  1);  }  [CE]  illegal  start  of  type  [FE]              [CONTEXT]        [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  Double.doubleToLongBits(num  +  1);  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  num)  {  this.num  =  Double.doubleToLongBits(num  +  1);  }	  public    MultiDirectional(double    num)    {    this.num    =    Double.doubleToLongBits(num);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
356	[BUG]  [BUGGY]  super(0.5,  0.5);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(0.5,  0.5);  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(0.5,  0.5);	  super(1.0,    1.0);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
357	[BUG]  [BUGGY]  this.num  =  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                  [CONTEXT]        [BUGGY]  this.num  =  Double.NEGATIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.num  =  Double.NEGATIVE_INFINITY;	  public    MultiDirectional(double    num)    {    this.num    =    num;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
358	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
359	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT_INFINITY;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT_INFINITY;  [BUGGY]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
