bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Math.rint(getMask());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  Math.rint(getMask());  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.rint(getMask());	      Math.sqrt(getMask());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
2	[BUG]  [BUGGY]  Math.sqrt(getMask()  +  1);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Math.sqrt(getMask()  +  1);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(getMask()  +  1);	      Math.sqrt(getMask());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
3	[BUG]  [BUGGY]  Math.sqrt(this.getMask());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  Math.sqrt(this.getMask());  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(this.getMask());	      Math.sqrt(getMask());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
4	[BUG]  [BUGGY]  Math.sqrt(getError());  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  Math.sqrt(getError());  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(getError());	      Math.sqrt(getMask());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
5	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  super();  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]      [BUGGY]  public  MultiDirectional(double  num)  {  super();  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    num)    {    super();	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
6	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  Double.doubleToLongBits(num);  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]      [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  Double.doubleToLongBits(num);  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    num)    {    this.num  =  Double.doubleToLongBits(num);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
7	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  Double.parseDouble(num);  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]      [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  Double.parseDouble(num);  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    num)    {    this.num  =  Double.parseDouble(num);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
8	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  num;  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  num;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    num)    {    this.num  =  num;	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
9	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  this.khi  =  2.0;  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      [BUGGY]  public  MultiDirectional(double  num)  {  this.khi  =  2.0;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    num)    {    this.khi  =  2.0;	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
10	[BUG]  [BUGGY]  this(2.0,  1.0);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  this(2.0,  1.0);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(2.0,  1.0);	      this(1.0,    1.0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
11	[BUG]  [BUGGY]  this(1.0,  0.0);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this(1.0,  0.0);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(1.0,  0.0);	      this(1.0,    1.0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
12	[BUG]  [BUGGY]  this(double  gamma,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]        [CONTEXT]      [BUGGY]  this(double  gamma,  Double.POSITIVE_INFINITY);  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(double  gamma,  Double.POSITIVE_INFINITY);	  public    MultiDirectional(double    gamma)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  this(double  gamma,  Double.NaN);  [CE]  illegal  start  of  type  [FE]          [CONTEXT]      [BUGGY]  this(double  gamma,  Double.NaN);  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(double  gamma,  Double.NaN);	  public    MultiDirectional(double    gamma)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  Math.rint(Math.random());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Math.rint(Math.random());  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.rint(Math.random());	      Math.sqrt(Math.random());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
15	[BUG]  [BUGGY]  Math.sqrt(Math.random()  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  Math.sqrt(Math.random()  +  1);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(Math.random()  +  1);	      Math.sqrt(Math.random());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
16	[BUG]  [BUGGY]  Math.sqrt(Math.random()  /  2.0);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  Math.sqrt(Math.random()  /  2.0);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(Math.random()  /  2.0);	      Math.sqrt(Math.random());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
17	[BUG]  [BUGGY]  Math.sqrt(Math.log(this.khi));  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  Math.sqrt(Math.log(this.khi));  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(Math.log(this.khi));	      Math.sqrt(Math.random());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
18	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble(2.0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  Double.parseDouble(2.0);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble(2.0);	      this.khi    =    Double.parseDouble(1.0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble(0.0);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  Double.parseDouble(0.0);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble(0.0);	      this.khi    =    Double.parseDouble(1.0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble(1.0f);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  Double.parseDouble(1.0f);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble(1.0f);	      this.khi    =    Double.parseDouble(1.0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  this(new  double[]  {  x,  y  }  );  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  this(new  double[]  {  x,  y  }  );  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  double[]  {  x,  y  }  );	  public    MultiDirectional(double    x,    double    y)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
22	[BUG]  [BUGGY]  this(x,  y,  false);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this(x,  y,  false);  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(x,  y,  false);	  public    MultiDirectional(double    x,    double    y)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
23	[BUG]  [BUGGY]  this(new  Double(x),  new  double(y));  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this(new  Double(x),  new  double(y));  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(new  Double(x),  new  double(y));	  public    MultiDirectional(double    x,    double    y)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
24	[BUG]  [BUGGY]  this(null,  false);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this(null,  false);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  false);	      this(null);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
25	[BUG]  [BUGGY]  this(false);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  this(false);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(false);	      this(null);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
26	[BUG]  [BUGGY]  this.khi  =  0.5;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  0.5;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  0.5;	  this.khi    =    2.0;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  this.khi  =  1.0;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  1.0;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  1.0;	  this.khi    =    2.0;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  this.khi  =  0.0;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  0.0;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  0.0;	  this.khi    =    2.0;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
29	[BUG]  [BUGGY]  this(null,  null,  null);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this(null,  null,  null);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  null,  null);	      this(null,    null);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  this(null,  null,  false);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this(null,  null,  false);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  null,  false);	      this(null,    null);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
31	[BUG]  [BUGGY]  this(null,  null,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  this(null,  null,  true);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  null,  true);	      this(null,    null);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
32	[BUG]  [BUGGY]  if(this.khi  ==  Double.POSITIVE_INFINITY)  {  super();  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  if(this.khi  ==  Double.POSITIVE_INFINITY)  {  super();  }  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	if(this.khi  ==  Double.POSITIVE_INFINITY)  {  super();  }	      super();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
33	[BUG]  [BUGGY]  if(this.khi  ==  null)  {  super();  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  if(this.khi  ==  null)  {  super();  }  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	if(this.khi  ==  null)  {  super();  }	      super();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
34	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(0.0);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.id  =  Double.doubleToLongBits(0.0);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.id  =  Double.doubleToLongBits(0.0);	      this.id    =    Double.doubleToLongBits(2.0);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
35	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(0.5);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this.id  =  Double.doubleToLongBits(0.5);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.id  =  Double.doubleToLongBits(0.5);	      this.id    =    Double.doubleToLongBits(2.0);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
36	[BUG]  [BUGGY]  super(x,  y);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  super(x,  y);  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(x,  y);	  public    MultiDirectional(double    x,    double    y)    {    this.khi    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
37	[BUG]  [BUGGY]  this(num,  null);  [CE]  illegal  start  of  type  [FE]        [CONTEXT]      [BUGGY]  this(num,  null);  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(num,  null);	  public    MultiDirectional(double    num)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
38	[BUG]  [BUGGY]  this(num,  Double.NaN);  [CE]  illegal  start  of  type  [FE]          [CONTEXT]      [BUGGY]  this(num,  Double.NaN);  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(num,  Double.NaN);	  public    MultiDirectional(double    num)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
39	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble( ".0.0 ");  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  Double.parseDouble( ".0.0 ");  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble( ".0.0 ");	      this.khi    =    Double.parseDouble(   "0.0   ");    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
40	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble( "1.0 ");  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  Double.parseDouble( "1.0 ");  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble( "1.0 ");	      this.khi    =    Double.parseDouble(   "0.0   ");    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
41	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble( "0.0, ");  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  Double.parseDouble( "0.0, ");  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble( "0.0, ");	      this.khi    =    Double.parseDouble(   "0.0   ");    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
42	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  2.0;  this.gamma  =  0.5;  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]      [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  2.0;  this.gamma  =  0.5;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    gamma)    {    this.khi  =  2.0;  this.gamma  =  0.5;	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
43	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  super();  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]      [BUGGY]  public  MultiDirectional(double  gamma)  {  super();  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    gamma)    {    super();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
44	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  2.0;  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]      [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  2.0;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    gamma)    {    this.khi  =  2.0;	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
45	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  2.0;  this.gamma  =  1.0;  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      [BUGGY]  public  MultiDirectional(double  gamma)  {  this.khi  =  2.0;  this.gamma  =  1.0;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    gamma)    {    this.khi  =  2.0;  this.gamma  =  1.0;	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
46	[BUG]  [BUGGY]  Double.parseDouble(this.khi);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Double.parseDouble(this.khi);  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Double.parseDouble(this.khi);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
47	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble( "0 ");  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  double  gamma  =  Double.parseDouble( "0 ");  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble( "0 ");	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
48	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble(this.khi);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  double  gamma  =  Double.parseDouble(this.khi);  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble(this.khi);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  double  gamma  =  Double.parseDouble( "0.0 ");  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  double  gamma  =  Double.parseDouble( "0.0 ");  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.parseDouble( "0.0 ");	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(1.0f);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  this.id  =  Double.doubleToLongBits(1.0f);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.id  =  Double.doubleToLongBits(1.0f);	      this.id    =    Double.doubleToLongBits(1.0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
51	[BUG]  [BUGGY]  this.khi  =  1.0;  this.gamma  =  0.5;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  1.0;  this.gamma  =  0.5;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  1.0;  this.gamma  =  0.5;	  this.khi    =    2.0;    this.gamma    =    0.5;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
52	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;	      this.khi    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
53	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;	      this.khi    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
54	[BUG]  [BUGGY]  this.khi  =  Double.NEGATIVE;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  Double.NEGATIVE;  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.NEGATIVE;	      this.khi    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
55	[BUG]  [BUGGY]  this.khi  =  Double.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  Double.MIN_VALUE;  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.MIN_VALUE;	      this.khi    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
56	[BUG]  [BUGGY]  [FE]    [FE]        [CONTEXT]      [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	add	public  MultiDirectional(double  num,  int  delta)  {	  public    MultiDirectional(double    num)    {    	compilable	  [FE]    	13	4	replace
57	[BUG]  [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  [FE]    [FE]        [CONTEXT]      [BUGGY]  public  MultiDirectional(double  num,  int  delta)  {  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  num,  int  delta)  {	  public    MultiDirectional(double    num)    {    	compilable	  [FE]    	13	4	replace
58	[BUG]  [BUGGY]  this(null,  1.0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this(null,  1.0);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  1.0);	      this(null);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
59	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  -  1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY  -  1;	      this.khi    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
60	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble( "2.0 ");  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  Double.parseDouble( "2.0 ");  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble( "2.0 ");	      this.khi    =    Double.parseDouble(   "0.0   ");    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
61	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble(0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  Double.parseDouble(0);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.parseDouble(0);	      this.khi    =    Double.parseDouble(1.0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
62	[BUG]  [BUGGY]  this(1.0,  1.0,  2.0);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  this(1.0,  1.0,  2.0);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(1.0,  1.0,  2.0);	      this(1.0,    1.0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
63	[BUG]  [BUGGY]  public  MultiDirectional(double  x,  double  y)  {  this.khi  =  1.0;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  MultiDirectional(double  x,  double  y)  {  this.khi  =  1.0;  }  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  x,  double  y)  {  this.khi  =  1.0;  }	  public    MultiDirectional(double    x,    double    y)    {    this.khi    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
64	[BUG]  [BUGGY]  this.x  =  1.0;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.x  =  1.0;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.x  =  1.0;	  public    MultiDirectional(double    x,    double    y)    {    this.khi    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
65	[BUG]  [BUGGY]  super(new  double[]  {  gamma  }  );  [CE]  illegal  start  of  type  [FE]        [CONTEXT]      [BUGGY]  super(new  double[]  {  gamma  }  );  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(new  double[]  {  gamma  }  );	  public    MultiDirectional(double    gamma)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
66	[BUG]  [BUGGY]  super(new  Double(gamma));  [CE]  illegal  start  of  type  [FE]          [CONTEXT]      [BUGGY]  super(new  Double(gamma));  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(new  Double(gamma));	  public    MultiDirectional(double    gamma)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
67	[BUG]  [BUGGY]  public  MultiDirectional(double  y,  double  x)  {  [CE]  constructor  MultiDirectional(double,double)  is  already  defined  in  class  MultiDirectional  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  MultiDirectional(double  y,  double  x)  {  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  y,  double  x)  {	  public    MultiDirectional(double    x,    double    y)    {    	non-compiled	[CE]  constructor  MultiDirectional(double,double)  is  already  defined  in  class  MultiDirectional	11	None	replace
68	[BUG]  [BUGGY]  [FE]    [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	add	public  MultiDirectional(double[]  x,  double[]  y)  {	  public    MultiDirectional(double    x,    double    y)    {    	compilable	  [FE]    	11	4	replace
69	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  [FE]    [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  MultiDirectional(double[]  x,  double[]  y)  {  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double[]  x,  double[]  y)  {	  public    MultiDirectional(double    x,    double    y)    {    	compilable	  [FE]    	11	4	replace
70	[BUG]  [BUGGY]  public  MultiDirectional(double  xx,  double  y)  {  [CE]  constructor  MultiDirectional(double,double)  is  already  defined  in  class  MultiDirectional  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  MultiDirectional(double  xx,  double  y)  {  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  xx,  double  y)  {	  public    MultiDirectional(double    x,    double    y)    {    	non-compiled	[CE]  constructor  MultiDirectional(double,double)  is  already  defined  in  class  MultiDirectional	11	None	replace
71	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  super();  this.gamma  =  1.0;  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]      [BUGGY]  public  MultiDirectional(double  gamma)  {  super();  this.gamma  =  1.0;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    gamma)    {    super();  this.gamma  =  1.0;	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
72	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  super();  this.gamma  =  0.5;  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]      [BUGGY]  public  MultiDirectional(double  gamma)  {  super();  this.gamma  =  0.5;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    gamma)    {    super();  this.gamma  =  0.5;	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
73	[BUG]  [BUGGY]  this.khi  =  1.0;  this.gamma  =  1.0;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  1.0;  this.gamma  =  1.0;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  1.0;  this.gamma  =  1.0;	  this.khi    =    2.0;    this.gamma    =    0.5;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
74	[BUG]  [BUGGY]  double  gamma  =  Double.doubleToLongBits(1.0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  double  gamma  =  Double.doubleToLongBits(1.0);  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.doubleToLongBits(1.0);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
75	[BUG]  [BUGGY]  double  gamma  =  Double.doubleToLongBits(2.0);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  double  gamma  =  Double.doubleToLongBits(2.0);  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.doubleToLongBits(2.0);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
76	[BUG]  [BUGGY]  this(1.0,  1.0,  1.0);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this(1.0,  1.0,  1.0);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(1.0,  1.0,  1.0);	      super();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
77	[BUG]  [BUGGY]  this.khi  =  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  Double.NEGATIVE_INFINITY;  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.NEGATIVE_INFINITY;	      this.khi    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
78	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  super();  this.num  =  num;  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]      [BUGGY]  public  MultiDirectional(double  num)  {  super();  this.num  =  num;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    num)    {    super();  this.num  =  num;	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
79	[BUG]  [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  Double.NaN;  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]      [BUGGY]  public  MultiDirectional(double  num)  {  this.num  =  Double.NaN;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    num)    {    this.num  =  Double.NaN;	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
80	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(2.0  -  1);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.id  =  Double.doubleToLongBits(2.0  -  1);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.id  =  Double.doubleToLongBits(2.0  -  1);	      this.id    =    Double.doubleToLongBits(2.0);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
81	[BUG]  [BUGGY]  Math.sqrt(Math.random()  -  1);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Math.sqrt(Math.random()  -  1);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(Math.random()  -  1);	      Math.sqrt(Math.random());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
82	[BUG]  [BUGGY]  Math.sqrt(getMask()  -  1);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  Math.sqrt(getMask()  -  1);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.sqrt(getMask()  -  1);	      Math.sqrt(getMask());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
83	[BUG]  [BUGGY]  this(null,  null,  0);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this(null,  null,  0);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(null,  null,  0);	      this(null,    null);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
84	[BUG]  [BUGGY]  this(0.5,  0.5);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  this(0.5,  0.5);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(0.5,  0.5);	      this(1.0,    1.0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
85	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;	      this.khi    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
86	[BUG]  [BUGGY]  Double.parseDouble(this.getMask());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Double.parseDouble(this.getMask());  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Double.parseDouble(this.getMask());	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
87	[BUG]  [BUGGY]  double  gamma  =  Double.doubleToLongBits(getBase());  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  double  gamma  =  Double.doubleToLongBits(getBase());  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	double  gamma  =  Double.doubleToLongBits(getBase());	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
88	[BUG]  [BUGGY]  Math.min(2,  getMask()));  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  Math.min(2,  getMask()));  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	Math.min(2,  getMask()));	      Math.sqrt(getMask());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
89	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  super(new  double[]  {  gamma  }  );  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]      [BUGGY]  public  MultiDirectional(double  gamma)  {  super(new  double[]  {  gamma  }  );  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    gamma)    {    super(new  double[]  {  gamma  }  );	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
90	[BUG]  [BUGGY]  public  MultiDirectional(double  gamma)  {  super();  this.gamma  =  0.0;  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]      [BUGGY]  public  MultiDirectional(double  gamma)  {  super();  this.gamma  =  0.0;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public    MultiDirectional(double    gamma)    {    super();  this.gamma  =  0.0;	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
91	[BUG]  [BUGGY]  super(1.0,  1.0);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  super(1.0,  1.0);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(1.0,  1.0);	      super();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
92	[BUG]  [BUGGY]  super(0.0,  1.0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  super(0.0,  1.0);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(0.0,  1.0);	      super();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
93	[BUG]  [BUGGY]  super(0.0,  0.0);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  super(0.0,  0.0);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(0.0,  0.0);	      super();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
94	[BUG]  [BUGGY]  [FE]    [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	add	public  MultiDirectional(double[]  x,  double  y)  {	  public    MultiDirectional(double    x,    double    y)    {    	compilable	  [FE]    	11	4	replace
95	[BUG]  [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  [FE]    [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  MultiDirectional(double[]  x,  double  y)  {  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double[]  x,  double  y)  {	  public    MultiDirectional(double    x,    double    y)    {    	compilable	  [FE]    	11	4	replace
96	[BUG]  [BUGGY]  public  MultiDirectional(double  y,  double  x)  {  this.khi  =  1.0;  [CE]  constructor  MultiDirectional(double,double)  is  already  defined  in  class  MultiDirectional  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  MultiDirectional(double  y,  double  x)  {  this.khi  =  1.0;  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	public  MultiDirectional(double  y,  double  x)  {  this.khi  =  1.0;	  public    MultiDirectional(double    x,    double    y)    {    this.khi    =    1.0;    	non-compiled	[CE]  constructor  MultiDirectional(double,double)  is  already  defined  in  class  MultiDirectional	18	None	replace
97	[BUG]  [BUGGY]  super(num);  [CE]  illegal  start  of  type  [FE]        [CONTEXT]      [BUGGY]  super(num);  [BUGGY]    this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	super(num);	  public    MultiDirectional(double    num)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
98	[BUG]  [BUGGY]  this(0.5,  1.0);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this(0.5,  1.0);  [BUGGY]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	45	45	2	replace	this(0.5,  1.0);	      this(0.0,    1.0);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
