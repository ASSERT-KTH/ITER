bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	add	return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;	return  ArrayUtils.EMPTY_INT_ARRAY;  	compilable	  [FE]  AssertionFailedError  	3	1	replace
2	[BUG]  [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;	return  ArrayUtils.EMPTY_INT_ARRAY;  	compilable	  [FE]  AssertionFailedError  	3	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]  if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  [BUGGY]  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	add	if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }	return  ArrayUtils.EMPTY_INT_ARRAY;  	compilable	  [FE]  AssertionFailedError  	3	1	replace
4	[BUG]  [BUGGY]  if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]  if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  [BUGGY]  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }	return  ArrayUtils.EMPTY_INT_ARRAY;  	compilable	  [FE]  AssertionFailedError  	3	1	replace
5	[BUG]  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  +  1;  [BUGGY]  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  ArrayUtils.EMPTY_INT_ARRAY  +  1;	return  ArrayUtils.EMPTY_INT_ARRAY;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	3	None	replace
6	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]    [BUGGY]  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	add	  	return  ArrayUtils.EMPTY_INT_ARRAY;  	compilable	  [FE]  NullPointerException  	3	2	replace
7	[BUG]  [BUGGY]    [FE]  NullPointerException  [FE]          AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]    [BUGGY]  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	  	return  ArrayUtils.EMPTY_INT_ARRAY;  	compilable	  [FE]  NullPointerException  	3	2	replace
8	[BUG]  [BUGGY]    ArrayUtils.EMPTY_INT_ARRAY  =  Pattern.compile( "[!=  d] ").split(version);  [CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY  [FE]    AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]    ArrayUtils.EMPTY_INT_ARRAY  =  Pattern.compile( "[!=  d] ").split(version);  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	    ArrayUtils.EMPTY_INT_ARRAY  =  Pattern.compile( "[!=  d] ").split(version);		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY	4	None	add
9	[BUG]  [BUGGY]    ArrayUtils.EMPTY_INT_ARRAY  =  Pattern.compile( "[  >>  d] ").split(version);  [CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY  [FE]      AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]    ArrayUtils.EMPTY_INT_ARRAY  =  Pattern.compile( "[  >>  d] ").split(version);  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	    ArrayUtils.EMPTY_INT_ARRAY  =  Pattern.compile( "[  >>  d] ").split(version);		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY	4	None	add
10	[BUG]  [BUGGY]    ArrayUtils.EMPTY_INT_ARRAY  =  Pattern.compile( "[  ==  d] ").split(version);  [CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY  [FE]        AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]    ArrayUtils.EMPTY_INT_ARRAY  =  Pattern.compile( "[  ==  d] ").split(version);  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	    ArrayUtils.EMPTY_INT_ARRAY  =  Pattern.compile( "[  ==  d] ").split(version);		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY	4	None	add
11	[BUG]  [BUGGY]    ArrayUtils.EMPTY_INT_ARRAY  =  Pattern.compile( "[  >=  d] ").split(version);  [CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY  [FE]          AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]    ArrayUtils.EMPTY_INT_ARRAY  =  Pattern.compile( "[  >=  d] ").split(version);  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	    ArrayUtils.EMPTY_INT_ARRAY  =  Pattern.compile( "[  >=  d] ").split(version);		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY	4	None	add
12	[BUG]  [BUGGY]    ArrayUtils.EMPTY_INT_ARRAY  =  new  ArrayUtils();  [CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY  [FE]            AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]    ArrayUtils.EMPTY_INT_ARRAY  =  new  ArrayUtils();  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	    ArrayUtils.EMPTY_INT_ARRAY  =  new  ArrayUtils();		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY	4	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	add	return(int[])ArrayUtils.EMPTY_INT_ARRAY;	return  ArrayUtils.EMPTY_INT_ARRAY;  	compilable	  [FE]  AssertionFailedError  	3	1	replace
14	[BUG]  [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(int[])ArrayUtils.EMPTY_INT_ARRAY;	return  ArrayUtils.EMPTY_INT_ARRAY;  	compilable	  [FE]  AssertionFailedError  	3	1	replace
15	[BUG]  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  +  limit;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  +  limit;  [BUGGY]  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  ArrayUtils.EMPTY_INT_ARRAY  +  limit;	return  ArrayUtils.EMPTY_INT_ARRAY;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	3	None	replace
16	[BUG]  [BUGGY]    System.arraycopy(version,  0,  ints,  0,  limit);  [CE]  cannot  find  symbol  ints  [FE]    AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]    System.arraycopy(version,  0,  ints,  0,  limit);  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	    System.arraycopy(version,  0,  ints,  0,  limit);		non-compiled	[CE]  cannot  find  symbol  ints	4	None	add
17	[BUG]  [BUGGY]    int[]  ints  =  new  int[Math.min(limit,  version.length)];  [CE]  cannot  find  symbol  length  [FE]      AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]    int[]  ints  =  new  int[Math.min(limit,  version.length)];  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	    int[]  ints  =  new  int[Math.min(limit,  version.length)];		non-compiled	[CE]  cannot  find  symbol  length	4	None	add
18	[BUG]  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [0];  [CE]  incompatible  types  [FE]    AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [0];  [BUGGY]  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  ArrayUtils.EMPTY_INT_ARRAY  [0];	return  ArrayUtils.EMPTY_INT_ARRAY;  	non-compiled	[CE]  incompatible  types	3	None	replace
19	[BUG]  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [version.length()  ];  [CE]  incompatible  types  [FE]      AssertionFailedError  [CONTEXT]  private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [version.length()  ];  [BUGGY]  }  String[]  strings  =  Pattern.compile( "[^\\d] ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  ArrayUtils.EMPTY_INT_ARRAY  [version.length()  ];	return  ArrayUtils.EMPTY_INT_ARRAY;  	non-compiled	[CE]  incompatible  types	3	None	replace
